Issue ID,Issue Link,Git URL,Summary,Summary Relevance,Description,Comments
HBASE-505,https://issues.apache.org/jira/browse/HBASE-505,https://github.com/apache/hbase/blob/0.1.1/src/java/org/apache/hadoop/hbase/HStore.java,Region assignments should never time out so long as the region server reports that it is processing the open request,NO,"Currently, when the master assigns a region to a region server, it extends the reassignment timeout when the region server reports that it is processing the open. This only happens once, and so if the region takes a long time to come on line due to a large set of transactions in the redo log or because the initial compaction takes a long time, the master will assign the region to another server when the reassignment timeout occurs.

Assigning a region to multiple region servers can easily corrupt the region. For example:

region server 1 is processing the redo log creating a new mapfile. It takes more than one interval to do so so the master assigns the region to region server 2. region server 2 starts processing the redo log creating essentially the same mapFile as region server 1, but with a different name. 

region server 2 can fail to open the region if region server 1 deletes the old log file or if it tries to open the new mapFile that region server 1 is creating.

region server 1 can fail to open the region if it tries to open the mapFile that region server 2 is creating.

Often region server 1 eventually succeeds and reports to the master that it has finished opening the region, but the master tells it to close that region because it has assigned it to another server. Region server 2 often fails to open the region, because the old log file has been deleted, or it fails to process the new map file created by region server 1.

Proposed solution:

During the open process the region server should send a MSG_PROCESS_OPEN with each heartbeat until the region is opened (when it sends MSG_REGION_OPEN). The master will extend the reassignment timeout with each MSG_PROCESS_OPEN it receives and will not assign the region to another server so long as it continues to receive heart beat messages from the region server processing the open.","** Comment 1 **
Sounds fine as long as the regionserver doesn't just robotically send MSG_PROCESS_OPEN while a region is being opened.  If regionserver gets stuck replaying edits or is hung as we've been seeing from time to time, etc., it shouldn't send MSG_PROCESS_OPEN

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Just came across an instance of this.  Here is where we are doing the open:
2008-03-25 19:16:43,720 INFO org.apache.hadoop.hbase.HRegionServer: MSG_REGION_OPEN : enwiki_080103,iLStZ0yTnfVUziYcNVVxWV==,1205393076482
Here is where we failed the open because region was allocated elsewhere even though this is the server that replayed the edits:
2008-03-25 19:19:56,472 ERROR org.apache.hadoop.hbase.HRegionServer: error opening region enwiki_080103,iLStZ0yTnfVUziYcNVVxWV==,1205393076482
It took 3 minutes to replay 60k edits.
RegionServer should send a ping back to the master every 10K edits applied.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]
"
HBASE-709,https://issues.apache.org/jira/browse/HBASE-709,https://github.com/apache/hbase/blob/0.1.3/src/java/org/apache/hadoop/hbase/HLog.java,Deadlock while rolling WAL-log while finishing flush,NO,"Found this in our cluster:

{code}
Found one Java-level deadlock:
=============================
""IPC Server handler 5 on 60020"":
  waiting for ownable synchronizer 0x00007f5f659d4e90, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""regionserver/0:0:0:0:0:0:0:0:60020.cacheFlusher""
""regionserver/0:0:0:0:0:0:0:0:60020.cacheFlusher"":
  waiting to lock monitor 0x00007f5f56312f78 (object 0x00007f5f659d4ec0, a java.lang.Integer),
  which is held by ""IPC Server handler 5 on 60020""

Java stack information for the threads listed above:
===================================================
""IPC Server handler 5 on 60020"":
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f5f659d4e90> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(Unknown Source)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(Unknown Source)
        at java.util.concurrent.locks.ReentrantLock.lock(Unknown Source)
        at org.apache.hadoop.hbase.HLog.rollWriter(HLog.java:219)
        at org.apache.hadoop.hbase.HLog.append(HLog.java:390)
        - locked <0x00007f5f659d4ec0> (a java.lang.Integer)
        at org.apache.hadoop.hbase.HRegion.update(HRegion.java:1633)
        at org.apache.hadoop.hbase.HRegion.batchUpdate(HRegion.java:1436)
        at org.apache.hadoop.hbase.HRegionServer.batchUpdate(HRegionServer.java:1552)
        at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.hadoop.hbase.ipc.HbaseRPC$Server.call(HbaseRPC.java:413)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:901)
""regionserver/0:0:0:0:0:0:0:0:60020.cacheFlusher"":
        at org.apache.hadoop.hbase.HLog.completeCacheFlush(HLog.java:481)
        - waiting to lock <0x00007f5f659d4ec0> (a java.lang.Integer)
        at org.apache.hadoop.hbase.HRegion.internalFlushcache(HRegion.java:1133)
        at org.apache.hadoop.hbase.HRegion.flushcache(HRegion.java:1020)
        at org.apache.hadoop.hbase.HRegionServer$Flusher.flushRegion(HRegionServer.java:446)
        - locked <0x00007f5f659d3ec8> (a java.util.HashSet)
        at org.apache.hadoop.hbase.HRegionServer$Flusher.run(HRegionServer.java:390)

Found 1 deadlock.
{code}","** Comment 1 **
Fix for deadlock.  Removed last-ditch effort that would force roll of log when HDFS issue and then retry append.  The log rolling makes for a deadlock.  Instead, just register a roll of the log and just let out the exception.

** Comment 2 **
Made it blocker because it hangs up the regionserver; regionserver keeps reporting that alls fine so regions do not get deployed elsewhere.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]
"
HBASE-737,https://issues.apache.org/jira/browse/HBASE-737,https://github.com/apache/hbase/blob/release-0.2.0/src/test/org/apache/hadoop/hbase/HBaseTestCase.java,Scanner: every cell in a row has the same timestamp,NO,"A row can have multiple cells, and each cell can have a different timestamp.  The get command in the shell demonstrates that cells are being stored with different timestamps:

{code}
hbase(main):008:0> get 'table1', 'row2'  
COLUMN                       CELL 
 fam1:letters                timestamp=1215707612949, value=def 
 fam1:numbers                timestamp=1215707629064, value=123 
 fam2:letters                timestamp=1215711498969, value=abc 
3 row(s) in 0.0100 seconds
{code}

However, using the scanners to retrieve these cells shows that they all have the same timestamp:

{code}
hbase(main):009:0> scan 'table1'  
ROW                          COLUMN+CELL
 row2                        column=fam1:letters, timestamp=1215711498969, value=def 
 row2                        column=fam1:numbers, timestamp=1215711498969, value=123 
 row2                        column=fam2:letters, timestamp=1215711498969, value=abc 
3 row(s) in 0.0600 seconds
{code}

The scanners are losing timestamp information somewhere along the line.","** Comment 1 **
[Comment excluded]

** Comment 2 **
I'm pretty sure it's a Java issue.  I added a debug line to HTable to print out what the scanner returns on a call to next().  Here's the result:
{code}
08/07/10 11:03:22 DEBUG client.HTable$ClientScanner: IZAAK: Scanner output on next is: row=row2, cells={(column=fam1:letters, timestamp=1215711498969, value=[B@1f86b7), (column=fam1:numbers, timestamp=1215711498969, value=[B@c57009), (column=fam2:letters, timestamp=1215711498969, value=[B@3e6b10)}
 row2                        column=fam1:letters, timestamp=1215711498969, value=def 
 row2                        column=fam1:numbers, timestamp=1215711498969, value=123 
 row2                        column=fam2:letters, timestamp=1215711498969, value=abc 
{code}
(scroll over, they all have the same timestamp.)

** Comment 3 **
I've done some investigating into the timestamp discrepancies.  In HRegionServer.next(long), HStoreScanner.next(HStoreKey, Map<byte,byte>) is called once per row to retrieve Cell data for that row.  The HStoreKey contains the name of the row and a *single* timestamp for that row.  When HRegionServer.next() constructs the actual Cell objects for a row, it uses the same single timestamp from the HStoreKey.  This is why the scanners return the same timestamp for every Cell in a row.  
It looks like, in order to fix the problem, the HStoreScanner will have to store more cell information.  Does the HStoreKey even need to store a timestamp if timestamps aren't unique to a row?

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]
"
HBASE-926,https://issues.apache.org/jira/browse/HBASE-926,https://github.com/apache/hbase/blob/0.18.1/src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,"If no master, regionservers should hang out rather than fail on connection and shut themselves down",YES,"Here is what currently happens if no master:

{code}
08/10/14 18:16:52 INFO metrics.RpcMetrics: Initializing RPC Metrics with hostName=HRegionServer, port=60020
08/10/14 18:16:52 DEBUG regionserver.HRegionServer: Telling master at XX.XX.XX.XX:60000 that we are up
08/10/14 18:16:53 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 0 time(s).
08/10/14 18:16:54 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 1 time(s).
08/10/14 18:16:55 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 2 time(s).
08/10/14 18:16:56 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 3 time(s).
08/10/14 18:16:57 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 4 time(s).
08/10/14 18:16:58 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 5 time(s).
08/10/14 18:16:59 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 6 time(s).
08/10/14 18:17:00 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 7 time(s).
08/10/14 18:17:01 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 8 time(s).
08/10/14 18:17:02 INFO ipc.Client: Retrying connect to server: XX.XX.XX.XX:60000. Already tried 9 time(s).
08/10/14 18:17:02 FATAL regionserver.HRegionServer: Unhandled exception. Aborting...
java.io.IOException: Call failed on local exception
        at org.apache.hadoop.ipc.Client.call(Client.java:718)
        at org.apache.hadoop.hbase.ipc.HbaseRPC$Invoker.invoke(HbaseRPC.java:245)
        at $Proxy0.getProtocolVersion(Unknown Source)
        at org.apache.hadoop.hbase.ipc.HbaseRPC.getProxy(HbaseRPC.java:388)
        at org.apache.hadoop.hbase.ipc.HbaseRPC.getProxy(HbaseRPC.java:364)
        at org.apache.hadoop.hbase.ipc.HbaseRPC.getProxy(HbaseRPC.java:412)
        at org.apache.hadoop.hbase.ipc.HbaseRPC.waitForProxy(HbaseRPC.java:328)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.reportForDuty(HRegionServer.java:711)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:290)
        at java.lang.Thread.run(Thread.java:674)
Caused by: java.net.ConnectException: Connection refused
        at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
        at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:592)
        at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:118)
        at org.apache.hadoop.ipc.Client$Connection.setupIOstreams(Client.java:300)
        at org.apache.hadoop.ipc.Client$Connection.access$1700(Client.java:177)
        at org.apache.hadoop.ipc.Client.getConnection(Client.java:789)
        at org.apache.hadoop.ipc.Client.call(Client.java:704)
        ... 9 more
08/10/14 18:17:02 DEBUG hbase.RegionHistorian: Offlined
08/10/14 18:17:02 INFO ipc.Server: Stopping server on 60020
08/10/14 18:17:02 INFO regionserver.HRegionServer: aborting server at: 0.0.0.0:60020
08/10/14 18:17:02 INFO regionserver.HRegionServer: regionserver/0:0:0:0:0:0:0:0:60020 exiting
08/10/14 18:17:02 INFO regionserver.HRegionServer: Starting shutdown thread.
08/10/14 18:17:02 INFO regionserver.HRegionServer: Shutdown thread complete
{code}

Making it a blocker.  Boys at pset need this.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Applied to 0.18.  Psetters need this and it fixed a fail in TestHTable where we were jumping out at head of regionserver startup because no retry of getProtocolVersion.
"
HBASE-1127,https://issues.apache.org/jira/browse/HBASE-1127,https://github.com/apache/hbase/blob/0.19.0/src/java/org/apache/hadoop/hbase/io/BlockFSInputStream.java,OOME running randomRead PE (Disable blanket enabling of blockcache),NO,"Blockcache is misbehaving on TRUNK.  Something is broke.  We OOME about 20% into the randomRead test.  Looking at heap, its all soft references.  Instrumenting the referencequeue, we're never clearing full gc'ing.  Something is off.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]
"
HBASE-675,https://issues.apache.org/jira/browse/HBASE-675,https://github.com/apache/hbase/blob/0.19.0/src/java/org/apache/hadoop/hbase/mapred/TableInputFormatBase.java,Report correct server hosting a table split for assignment to for MR Jobs,NO,"Currently we return a null String array to the MR framework to use a random node for MR job assignment.

class: org.apache.hadoop.hbase.mapred.tableSplit
function getLocations()

We should be able to query the meta now for the current host name of the server hosting the region in question.
This will help with scaling as there will be less cross server communication removing bandwidth as a bottleneck.

The side effect of fixing this will help from overloading region servers with lots of MR clients all pulling from the same region server while theres work local for them to do.

","** Comment 1 **
[Comment excluded]

** Comment 2 **
sense the load on MR jobs is on the Region server not the datanode then moveing the task close to the region server would be idea. 
the problem with above is the client/mr task would have to talk to the region server over the network for a request 
then the region server would have to talk back to the data node with the data
and then back to the map task with the returned data.
thats 4 hops for each request.
If the task would run on the same region server as the region was hosted then we would 
just have the region server to the data node hops speeding up each request
Assuming average setup is going to be per server
hadoop datanode
hbase region server
X mapper tasks
x Reducer tasks
Then havening the local task work on the local region server would also help spread the load and help not overloading one region server at once.


** Comment 3 **
[Comment excluded]

** Comment 4 **
I tried this with a couple of hundred regions.  Ran the rowcounter MR job.  No discernible difference.  Might be because I only have 4 nodes each with datanode and regionservers. Perhaps its not enough?  Let me take a look to see that we're giving back info thats wanted.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]
"
HBASE-1132,https://issues.apache.org/jira/browse/HBASE-1132,https://github.com/apache/hbase/blob/0.19.0/src/java/org/apache/hadoop/hbase/regionserver/LogRoller.java,"Can't append to HLog, can't roll log, infinite cycle (another spin on HBASE-930)",NO,"Saw below loop in Ryan Rawson logs:

{code}
....
2009-01-16 15:32:43,001 INFO org.apache.hadoop.hdfs.DFSClient: Abandoning block blk_-2067415907098101353_164148
2009-01-16 15:32:45,561 INFO org.apache.hadoop.hdfs.DFSClient: Exception in createBlockOutputStream java.io.IOException: Could not read from stream
2009-01-16 15:32:45,561 INFO org.apache.hadoop.hdfs.DFSClient: Abandoning block blk_4699358014912484437_164148
2009-01-16 15:32:49,004 INFO org.apache.hadoop.hdfs.DFSClient: Exception in createBlockOutputStream java.io.IOException: Bad connect ack with firstBadLink 10.10.20.19:50010
2009-01-16 15:32:49,004 INFO org.apache.hadoop.hdfs.DFSClient: Abandoning block blk_-8649135750875451286_164148
2009-01-16 15:32:51,562 WARN org.apache.hadoop.hdfs.DFSClient: DataStreamer Exception: java.io.IOException: Unable to create new block.
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.nextBlockOutputStream(DFSClient.java:2723)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2000(DFSClient.java:1997)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2183)

2009-01-16 15:32:51,562 WARN org.apache.hadoop.hdfs.DFSClient: Error Recovery for block blk_4699358014912484437_164148 bad datanode[0] nodes == null
2009-01-16 15:32:51,562 WARN org.apache.hadoop.hdfs.DFSClient: Could not get block locations. Aborting...
2009-01-16 15:32:51,562 FATAL org.apache.hadoop.hbase.regionserver.HLog: Could not append. Requesting close of log
java.io.IOException: Could not read from stream
    at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:119)
    at java.io.DataInputStream.readByte(DataInputStream.java:265)
    at org.apache.hadoop.io.WritableUtils.readVLong(WritableUtils.java:325)
    at org.apache.hadoop.io.WritableUtils.readVInt(WritableUtils.java:346)
    at org.apache.hadoop.io.Text.readString(Text.java:400)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.createBlockOutputStream(DFSClient.java:2779)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.nextBlockOutputStream(DFSClient.java:2704)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2000(DFSClient.java:1997)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2183)
2009-01-16 15:32:51,563 ERROR org.apache.hadoop.hbase.regionserver.LogRoller: Log rolling failed with ioe:
java.io.IOException: Could not read from stream
    at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:119)
    at java.io.DataInputStream.readByte(DataInputStream.java:265)
    at org.apache.hadoop.io.WritableUtils.readVLong(WritableUtils.java:325)
    at org.apache.hadoop.io.WritableUtils.readVInt(WritableUtils.java:346)
    at org.apache.hadoop.io.Text.readString(Text.java:400)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.createBlockOutputStream(DFSClient.java:2779)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.nextBlockOutputStream(DFSClient.java:2704)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2000(DFSClient.java:1997)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2183)
2009-01-16 15:32:51,564 FATAL org.apache.hadoop.hbase.regionserver.HLog: Could not append. Requesting close of log
java.io.IOException: Could not read from stream
    at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:119)
    at java.io.DataInputStream.readByte(DataInputStream.java:265)
    at org.apache.hadoop.io.WritableUtils.readVLong(WritableUtils.java:325)
    at org.apache.hadoop.io.WritableUtils.readVInt(WritableUtils.java:346)
    at org.apache.hadoop.io.Text.readString(Text.java:400)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.createBlockOutputStream(DFSClient.java:2779)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.nextBlockOutputStream(DFSClient.java:2704)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2000(DFSClient.java:1997)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2183)
2009-01-16 15:32:51,563 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: java.io.IOException: Could not read from stream
2009-01-16 15:32:51,564 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: java.io.IOException: Could not read from stream
2009-01-16 15:32:51,564 FATAL org.apache.hadoop.hbase.regionserver.HLog: Could not append. Requesting close of log
java.io.IOException: Could not read from stream
    at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:119)
    at java.io.DataInputStream.readByte(DataInputStream.java:265)
    at org.apache.hadoop.io.WritableUtils.readVLong(WritableUtils.java:325)
    at org.apache.hadoop.io.WritableUtils.readVInt(WritableUtils.java:346)
    at org.apache.hadoop.io.Text.readString(Text.java:400)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.createBlockOutputStream(DFSClient.java:2779)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.nextBlockOutputStream(DFSClient.java:2704)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.access$2000(DFSClient.java:1997)
    at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream$DataStreamer.run(DFSClient.java:2183)
...
{code}

For 930, for different exception type, we triggered abort.  Should do same here.  If IOE and ""Can't read from stream"", shut down.    The filesystem check seems to be coming back fine and dandy.",
HBASE-803,https://issues.apache.org/jira/browse/HBASE-803,https://github.com/apache/hbase/blob/0.19.1/src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Atomic increment operations,NO,"Discussion was already started in HBASE-798

First version will contain to additional HTable methods:

incrementColumnValue(table,row,family:column) -> Inserts a new version of the specified column (which must already exist) with an incremented cell value.

incrementFamilyColumn(table,row,family: ) -> Inserts a new column under the specified family.  This assumes the family always contains only one column.  That column is read, incremented, deleted, and a new column is inserted with the incremented column name.  The existing value is re-inserted unchanged to the new column.

I'm going to be making even more specialized versions of these for internal use (taking apart byte[]'s, doing different bit/byte operations, and assorted munging...).  So if anyone has any requests for other specialized versions, or more generic versions, please post them here and I'd be more than happy to take a stab at them.

Next week I will likely have a go at HBASE-493","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Here's a couple of comments on the patch:
Javadoc on new method in HTable is wrong (run ant javadoc and you'll see the warnings).  I'd suggest you remove it.  The correct javadoc in the Interface will shine through when the javadoc tool is run.
The below should probably be DEBUG especially if you are talking of many updates an hour:
+        LOG.info(""Overwriting the memcache value for "" + Bytes.toString(row) + ""/"" + Bytes.toString(column));
Same here:
+          LOG.info(""Using HFile previous value for "" + Bytes.toString(row) + ""/"" + Bytes.toString(column));
,,,,and this:
+        LOG.info(""Creating new counter value for "" + Bytes.toString(row) + ""/""+ Bytes.toString(column));
I don't think this necessary though no harm I suppose:
+      for (int i = 0; i < newvalue.length; ++i)
+        newvalue = 0;
Here, I think  you can add the exception as an extra argument:\
+      IOException io = new IOException(
+          ""Invalid arguments to incrementColumnValue"");
+      io.initCause(npe);
As in, new IOException(""Invalid...."", npe);
I could be wrong on that.  Just FYI.
Your new test is missing an Apache license header.
Otherwise patch is great.  Does it work for you jgray?


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Changes HTable method to long to match HRI.  Also changes logging in HRegion to debug level, even one line per increment is noisy for info.
0.19 patch just changes Store back to HStore and RPC version from 15 to 16 (instead of 16 to 17)... What's the right thing to do here?  This is actually a unique RPC version as it's not 15, 16 or 17.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]
"
HBASE-1233,https://issues.apache.org/jira/browse/HBASE-1233,https://github.com/apache/hbase/blob/0.19.1/src/java/org/apache/hadoop/hbase/regionserver/transactional/TransactionState.java,"Transactional fixes: Overly conservative scan read-set, potential CME",NO,"This patch fixes two issues with the OCC transactions:

- Overly conservative read-set. Previously a scanner was claiming read set on the whole region. This patch gets the read set from the start and end keys that a scanner was opened with (the start key comes from the arg to open, the end key comes from a WhileMatch(StopRow()) filter if present. 

- A potential ConcurrentModificationException.","** Comment 1 **
[Comment excluded]
"
HBASE-1732,https://issues.apache.org/jira/browse/HBASE-1732,https://github.com/apache/hbase/blob/0.20.0/src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Flag to disable regionserver restart,NO,"Add a flag so on zk session expiration, regionserver goes down and doesn't try restarting.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Restart doesn't work for me either. RS log entries are misleading. They imply that the RS will restart but it does not. I imagine that will come up again and again on hbase-users@.  I think we need a new RC which includes the patch for this issue with abort as default behavior until this is sorted for 0.20.1. 

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]
"
HBASE-1879,https://issues.apache.org/jira/browse/HBASE-1879,https://github.com/apache/hbase/blob/0.20.1/src/contrib/transactional/src/java/org/apache/hadoop/hbase/regionserver/transactional/THLogRecoveryManager.java,ReadOnly transactions generate WAL activity.,NO,"Currently we write a start entry in the WAL each time a transaction starts, and a commit/abort at the end of the transaction. This means read-only transactions unnecessarily generate two WAL entries per region.

Can avoid this by removing the start entry from the WAL (this is implicit in the first trx OP entry we see), and only writing commit/abort when the transaction has a write.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]
"
HBASE-1829,https://issues.apache.org/jira/browse/HBASE-1829,https://github.com/apache/hbase/blob/0.20.2/src/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java,Make use of start/stop row in TableInputFormat,NO,Since we can now specify a start and stop row with the Scan that is handed to the TIF we can reduce the splits to the regions that contain these rows. That allows to test large MR jobs on a single region for example.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Or, rather, I got this when I tried the patch (RowCounter on a table loaded up with PE):
{code}
09/09/16 15:56:23 INFO zookeeper.ClientCnxn: Server connection successful
Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: -1
	at org.apache.hadoop.hbase.KeyValue$KeyComparator.compare([file java]:1722)
	at org.apache.hadoop.hbase.KeyValue$KeyComparator.compare([file java]:1758)
	at org.apache.hadoop.hbase.mapreduce.TableInputFormatBase.getSplits([file java]:296)
	at org.apache.hadoop.mapred.JobClient.writeNewSplits([file java]:885)
	at org.apache.hadoop.mapred.JobClient.submitJobInternal([file java]:779)
	at org.apache.hadoop.mapreduce.Job.submit([file java]:432)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion([file java]:447)
	at org.apache.hadoop.hbase.mapreduce.RowCounter.main([file java]:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:25)
	at java.lang.reflect.Method.invoke([file java]:597)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke([file java]:68)
	at org.apache.hadoop.util.ProgramDriver.driver([file java]:139)
	at org.apache.hadoop.hbase.mapreduce.Driver.main([file java]:41)
{code}

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
HBASE-1829-v2.patch fixes error Stack got above. Comparing cannot be done with KeyValue comparators but Bytes.compareTo() directly. Also fixed issues with start and stop row. Scan by default has a value assigned to them and does not return ""null"". Comparing to HConstants.EMPTY_START_ROW for example did not work, so I chose checking the length instead.
Tested with a real data set and it works for subrange and full scan. Will still add unit test. Just thought I up the patch here for progress tracking.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
I applied TRUNK.  Shall I apply all but the tests to 0.20 (The tests won't work in 0.20 branch).  I think it should be fine.  The default behavior is unchanged.  Its only if you provide start/stop rows that behavior changes.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]
"
HBASE-1921,https://issues.apache.org/jira/browse/HBASE-1921,https://github.com/apache/hbase/blob/0.20.2/src/java/org/apache/hadoop/hbase/master/HMaster.java,"When the Master's session times out and there's only one, cluster is wedged",NO,"On IRC, some fella had a session expiration on his Master and had only one. Maybe in this case the Master should first try to re-get the znode?","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Patch that does what I described and here's what you will see when it happens:
{code}2009-10-20 10:53:38,708 DEBUG org.apache.hadoop.hbase.master.HMaster: Got event None with path null
2009-10-20 10:53:39,997 INFO org.apache.zookeeper.ClientCnxn: Attempting connection to server /10.10.1.58:2181
2009-10-20 10:53:39,998 INFO org.apache.zookeeper.ClientCnxn: Priming connection to java.nio.channels.SocketChannel
2009-10-20 10:53:39,998 INFO org.apache.zookeeper.ClientCnxn: Server connection successful
2009-10-20 10:53:40,000 WARN org.apache.zookeeper.ClientCnxn: Exception closing session 0x12472fd41f10004 to sun.nio.ch.SelectionKeyImpl@2afb6c5f
java.io.IOException: Session Expired
	at org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult([file java]:589)
	at org.apache.zookeeper.ClientCnxn$SendThread.doIO([file java]:709)
	at org.apache.zookeeper.ClientCnxn$SendThread.run([file java]:945)
2009-10-20 10:53:40,000 DEBUG org.apache.hadoop.hbase.master.HMaster: Got event None with path null
2009-10-20 10:53:40,000 INFO org.apache.hadoop.hbase.master.HMaster: Master lost its znode, trying to get a new one
2009-10-20 10:53:40,000 INFO org.apache.zookeeper.ZooKeeper: Closing session: 0x12472fd41f10004
2009-10-20 10:53:40,000 INFO org.apache.zookeeper.ClientCnxn: Closing ClientCnxn for session: 0x12472fd41f10004
2009-10-20 10:53:40,001 INFO org.apache.zookeeper.ClientCnxn: Disconnecting ClientCnxn for session: 0x12472fd41f10004
2009-10-20 10:53:40,001 INFO org.apache.zookeeper.ZooKeeper: Session: 0x12472fd41f10004 closed
2009-10-20 10:53:40,001 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Closed connection with ZooKeeper
2009-10-20 10:53:40,003 INFO org.apache.zookeeper.ZooKeeper: Initiating client connection, connectString=10.10.1.58:2181 sessionTimeout=60000 watcher=Thread
2009-10-20 10:53:40,003 INFO org.apache.zookeeper.ClientCnxn: Attempting connection to server /10.10.1.58:2181
2009-10-20 10:53:40,005 INFO org.apache.zookeeper.ClientCnxn: Priming connection to java.nio.channels.SocketChannel
2009-10-20 10:53:40,006 INFO org.apache.zookeeper.ClientCnxn: Server connection successful
2009-10-20 10:53:40,009 DEBUG org.apache.hadoop.hbase.master.HMaster: Got event None with path null
2009-10-20 10:53:40,012 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Wrote master address 10.10.1.58:60000 to ZooKeeper
2009-10-20 10:53:40,016 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Read ZNode /hbase/master got 10.10.1.58:60000
2009-10-20 10:53:40,017 DEBUG org.apache.hadoop.hbase.master.HMaster: Checking cluster state...
2009-10-20 10:53:40,017 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Read ZNode /hbase/root-region-server got 10.10.1.58:60020
2009-10-20 10:53:40,019 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Read ZNode /hbase/rs/1256061062528 got 10.10.1.58:60020
2009-10-20 10:53:40,019 INFO org.apache.hadoop.hbase.master.HMaster: This is a failover, ZK inspection begins...
2009-10-20 10:53:40,020 DEBUG org.apache.hadoop.hbase.master.HMaster: Inspection found server 10.10.1.58
2009-10-20 10:53:40,022 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Updated ZNode /hbase/rs/1256061062528 with data 10.10.1.58:60020
2009-10-20 10:53:40,028 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: SetData of ZNode /hbase/root-region-server with 10.10.1.58:60020
2009-10-20 10:53:40,029 INFO org.apache.hadoop.hbase.master.HMaster: Inspection found 3 regions, with -ROOT-
2009-10-20 10:53:40,029 INFO org.apache.hadoop.hbase.master.HMaster: Found log folder : 10.10.1.58,60020,1256061062528
2009-10-20 10:53:40,029 INFO org.apache.hadoop.hbase.master.HMaster: Log folder belongs to an existing region server
2009-10-20 10:53:40,029 INFO org.apache.zookeeper.ClientCnxn: EventThread shut down
2009-10-20 10:54:38,601 INFO org.apache.hadoop.hbase.master.ServerManager: 1 region servers, 0 dead, average load 3.0
2009-10-20 10:54:38,602 INFO org.apache.hadoop.hbase.master.BaseScanner: RegionManager.rootScanner scanning meta region {server: 10.10.1.58:60020, regionname: -ROOT-,,0, startKey: <>}
2009-10-20 10:54:38,607 INFO org.apache.hadoop.hbase.master.BaseScanner: RegionManager.metaScanner scanning meta region {server: 10.10.1.58:60020, regionname: .META.,,1, startKey: <>}
2009-10-20 10:54:38,611 INFO org.apache.hadoop.hbase.master.BaseScanner: RegionManager.rootScanner scan of 1 row(s) of meta region {server: 10.10.1.58:60020, regionname: -ROOT-,,0, startKey: <>} complete
2009-10-20 10:54:38,615 INFO org.apache.hadoop.hbase.master.BaseScanner: RegionManager.metaScanner scan of 1 row(s) of meta region {server: 10.10.1.58:60020, regionname: .META.,,1, startKey: <>} complete
2009-10-20 10:54:38,615 INFO org.apache.hadoop.hbase.master.BaseScanner: All 1 .META. region(s) scanned
{code}

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]
"
HBASE-1537,https://issues.apache.org/jira/browse/HBASE-1537,https://github.com/apache/hbase/blob/0.20.5/src/java/org/apache/hadoop/hbase/regionserver/HRegion.java,Intra-row scanning,NO,"To continue scaling numbers of columns or versions in a single row, we need a mechanism to scan within a row so we can return some columns at a time.  Currently, an entire row must come back as one piece.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Result is actually just KeyValue... Each KeyValue holds ALL the data, row, family, qualifier, timestamp, value, type.  So we already have all the information we need to put things back in any way we want.
The byte  row inside Result is actually computed when you ask for it, and it just grabs the row from the first KV, so it's actually already capable from a data structure perspective to hold multiple rows.
Good stuff, Andrew.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
Committed to branch. Thanks for backporting Andrey Stepachev. SCAN_DESCRIPTOR_VERSION being missing should be fine on branch.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]
"
HBASE-2752,https://issues.apache.org/jira/browse/HBASE-2752,https://github.com/apache/hbase/blob/0.20.5/src/java/org/apache/hadoop/hbase/regionserver/Store.java,Don't retry forever when waiting on too many store files,NO,"HBASE-2087 introduced a way to not block all flushes when on region has too many store files. Unfortunately, that undid the behavior that if we waited for longer than 90 secs then that we would still flush the region... which means that when a  region blocks inserts because its memstore is too big it's actually holding off writes for a very long time, occupying handlers, etc.

We need to add more smarts in MemStoreFlusher so that we detect when a region was held up for too long.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Thanks for the quick work.  It's really aprpeciated.  I'll try to get this patch tested on a cluster.
Minor nits:
* The log on ""Cache flush failed"" should use toStringBinary for the region name.
* blockingWaitTime / 100 seems somewhat arbitrary for check interval, but probably fine for now.


** Comment 6 **
Thanks j-d for review.  I added in your first suggestion.  For the second, I kept count.  I think it'll be of use when we have a jsp page that dumps current state of the flush queue.
I've been running it up on cluster.  I see some of these during a big upload:
{code}
2010-06-18 18:02:17,864 INFO org.apache.hadoop.hbase.regionserver.MemStoreFlusher: Waited 90495ms on a compaction to clean up 'too many store files'; waited long enough... proceeding with flush
{code}
...so it looks like we got the 0.20.3 behavior back where we'll go ahead and flush regardless if we've waited N ms (I left the interval at the 0.20.3 90 seconds which seems a bit long but...).
I'm going to commit and roll an RC

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]
"
HBASE-3613,https://issues.apache.org/jira/browse/HBASE-3613,https://github.com/apache/hbase/blob/0.90.2/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java,NPE in MemStoreFlusher,NO,"every now and again in a 0.90.1-2 load run I get a NPE on this line:


      if (bestAnyRegion.memstoreSize.get() > 2 * bestFlushableRegion.memstoreSize.get()) {
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
my prev patch messed up logging anyways. im going to commit this one.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]
"
HBASE-3695,https://issues.apache.org/jira/browse/HBASE-3695,https://github.com/apache/hbase/blob/0.90.3/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java,Some improvements to Hbck to test the entire region chain in Meta and provide better error reporting,YES,"The current Hbck tool will miss some inconsistencies in Meta, and in other cases will detect an issue, but does not provide much in the way of useful feedback.  

* Incorporate the full region chain tests (similar to check_meta.rb). I.e. look for overlaps, holes and cycles. I believe check_meta.rb will be redundant after this change.
* More unit tests, and better tests that will test the actual error discovered, instead of just errors true/false.
* In the case of overlaps and holes, output both ends of the broken chain.
* Previous implementation runs check() twice.  This is inefficient and, more importantly, reports redundant errors which could be confusing to the user.
","** Comment 1 **
@Marc Should I resolve 'HBASE-3602)  Print out better info if detects overlapping regions in .META.' as dup of this?  Thanks boss.

** Comment 2 **
[Comment excluded]

** Comment 3 **
Resolved the dupe.  There is already an online merge too.  And yes, need to make it so region hacking in .META. is a bit easier, perhaps some facility in shell (Saw someone trying to do ""put '.META.', 'STRING_VERSION_OF_HREGIONINFO', etc"" which plain won't work, but, if you think a second, should work).

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]
"
HBASE-4095,https://issues.apache.org/jira/browse/HBASE-4095,https://github.com/apache/hbase/blob/0.90.4/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java,Hlog may not be rolled in a long time if checkLowReplication's request of LogRoll is blocked,NO,"Some large Hlog files(Larger than 10G) appeared in our environment, and I got the reason why they got so huge:

1. The replicas is less than the expect number. So the method of checkLowReplication will be called each sync.

2. The method checkLowReplication request log-roll first, and set logRollRequested as true: 

{noformat}
private void checkLowReplication() {
// if the number of replicas in HDFS has fallen below the initial
// value, then roll logs.
try {
  int numCurrentReplicas = getLogReplication();
  if (numCurrentReplicas != 0 &&
	  numCurrentReplicas < this.initialReplication) {
	LOG.warn(""HDFS pipeline error detected. "" +
		""Found "" + numCurrentReplicas + "" replicas but expecting "" +
		this.initialReplication + "" replicas. "" +
		"" Requesting close of hlog."");
	requestLogRoll();
	logRollRequested = true;
  }
} catch (Exception e) {
  LOG.warn(""Unable to invoke DFSOutputStream.getNumCurrentReplicas"" + e +
	  "" still proceeding ahead..."");
}
}
{noformat}
3.requestLogRoll() just commit the roll request. It may not execute in time, for it must got the un-fair lock of cacheFlushLock.
But the lock may be carried by the cacheflush threads.

4.logRollRequested was true until the log-roll executed. So during the time, each request of log-roll in sync() was skipped.

Here's the logs while the problem happened(Please notice the file size of hlog ""193-195-5-111%3A20020.1309937386639"" in the last row):

2011-07-06 15:28:59,284 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: HDFS pipeline error detected. Found 2 replicas but expecting 3 replicas.  Requesting close of hlog.
2011-07-06 15:29:46,714 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Roll /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937339119, entries=32434, filesize=239589754. New hlog /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937386639
2011-07-06 15:29:56,929 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: HDFS pipeline error detected. Found 2 replicas but expecting 3 replicas.  Requesting close of hlog.
2011-07-06 15:29:56,933 INFO org.apache.hadoop.hbase.regionserver.Store: Renaming flushed file at hdfs://193.195.5.112:9000/hbase/Htable_UFDR_034/a3780cf0c909d8cf8f8ed618b290cc95/.tmp/4656903854447026847 to hdfs://193.195.5.112:9000/hbase/Htable_UFDR_034/a3780cf0c909d8cf8f8ed618b290cc95/value/8603005630220380983
2011-07-06 15:29:57,391 INFO org.apache.hadoop.hbase.regionserver.Store: Added hdfs://193.195.5.112:9000/hbase/Htable_UFDR_034/a3780cf0c909d8cf8f8ed618b290cc95/value/8603005630220380983, entries=445880, sequenceid=248900, memsize=207.5m, filesize=130.1m
2011-07-06 15:29:57,478 INFO org.apache.hadoop.hbase.regionserver.HRegion: Finished memstore flush of ~207.5m for region Htable_UFDR_034,07664,1309936974158.a3780cf0c909d8cf8f8ed618b290cc95. in 10839ms, sequenceid=248900, compaction requested=false
2011-07-06 15:28:59,236 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Roll /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309926531955, entries=216459, filesize=2370387468. New hlog /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937339119
2011-07-06 15:29:46,714 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Roll /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937339119, entries=32434, filesize=239589754. New hlog /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937386639
2011-07-06 16:29:58,775 DEBUG org.apache.hadoop.hbase.regionserver.LogRoller: Hlog roll period 3600000ms elapsed
2011-07-06 16:29:58,775 DEBUG org.apache.hadoop.hbase.regionserver.LogRoller: Hlog roll period 3600000ms elapsed
2011-07-06 16:30:01,978 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Roll /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309937386639, entries=1135576, filesize=19220372830. New hlog /hbase/.logs/193-195-5-111,20020,1309922880081/193-195-5-111%3A20020.1309940998890

","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
@Jieshan:
I saw the following test failures using patch TRUNK:
{code}
Running org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 108.675 sec <<< FAILURE!
--
Running org.apache.hadoop.hbase.master.TestDistributedLogSplitting
Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 162.863 sec <<< FAILURE!
{code}
Running the tests manually passed.

** Comment 6 **
[Comment excluded]

** Comment 7 **
About the failure in trunk(Sorry, I just tested the branch patch), is it a problem?
Thanks, Ted.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
TestLogRolling failed in build 2040.

** Comment 14 **
Although build 2041 passed, we should investigate why TestLogRolling failed intermittently.

** Comment 15 **
assertTrue(""Missing datanode should've triggered a log roll"",
        newFilenum > oldFilenum && newFilenum > curTime);
I've got the reasons why the TestLogRolling failed intermittently.
1. Before the patch of this issue, if one datanode was killed, it will trigger a log-roll. For it will get the lock of cacheFlushLock finally.
2. But after the modification, if the log-roll didn't get the lock in 5 second, it will skip the operations.
So it may not get the lock of cacheFlushLock in 5 second , so it failed.

** Comment 16 **
I wonder if there is other reason.
I added else block for cacheFlushLock.tryLock() call and placed a breakpoint inside else block.
testLogRollOnDatanodeDeath failed but the breakpoint wasn't hit.

** Comment 17 **
It failed for me just now on local machine.

** Comment 18 **
Only two places was changed in HLog$rollWriter():
1. lock -> tryLock
2. Change the value of ""this.initialReplication"":
      //This method get expect but not the actual replicas of the Hlog file
        int nextExpectReplicas = fs.getFileStatus(newPath).getReplication();
      //Get the current replicas of the Hlog file
        int nextActualReplicas = -1;
        try
        {
            nextActualReplicas = getLogReplication();
        } catch (Exception e) {
            LOG.warn(""Unable to invoke DFSOutputStream.getNumCurrentReplicas"" + e +
                "" still proceeding ahead..."");
        }
       this.initialReplication = nextActualReplicas == -1 ? 
              nextExpectReplicas : nextActualReplicas;


** Comment 19 **
Here's the logs from a failure-test:
---------------Rolling from the first test-------------------------------
2011-07-20 12:35:59,121 INFO   wal.HLog(529): Roll /user/root/.logs/C4C2.site,42700,1311136499029/C4C2.site%3A42700.1311136501182, entries=296, filesize=307097. New hlog /user/root/.logs/C4C2.site,42700,1311136499029/C4C2.site%3A42700.1311136559078
2011-07-20 12:35:59,121 DEBUG  wal.HLog(541): Last sequenceid written is empty. Deleting all old hlogs
2011-07-20 12:35:59,136 INFO   wal.TestLogRolling(206): after flushing all regions and rolling logs there are 0 log files
---------------Rolling from the second test ()testLogRollOnDatanodeDeath----------------
2011-07-20 12:35:59,141 INFO   wal.TestLogRolling(264): Replication=2
2011-07-20 12:37:02,434 WARN   wal.HLog(1035): HDFS pipeline error detected. Found 1 replicas but expecting 2 replicas.  Requesting close of hlog.
2011-07-20 12:37:02,497 INFO   wal.HLog(529): Roll /user/root/.logs/C4C2.site,42700,1311136499029/C4C2.site%3A42700.1311136559078, entries=3, filesize=1043. New hlog /user/root/.logs/C4C2.site,42700,1311136499029/C4C2.site%3A42700.1311136622435
From the logs, we can see that, the Hlog was indeed rolled.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
I added some log  and found that the initialReplication is zero. 
when we create a file in hdfs , If I don't write data , the replication should be zero.
So the solution has some issue.
2011-07-20 19:38:20,517 WARN   wal.HLog(478): gjc:rollWriter start1311161900517
2011-07-20 19:38:20,650 WARN   wal.HLog(478): gjc:rollWriter start1311161900650
2011-07-20 19:38:20,707 WARN   wal.HLog(518): gjc:updateLock start1311161900707
2011-07-20 19:38:20,707 WARN   wal.HLog(532): gjc:initialReplication start0
2011-07-20 19:38:21,238 WARN   wal.HLog(518): gjc:updateLock start1311161901238
2011-07-20 19:38:21,239 WARN   wal.HLog(532): gjc:initialReplication start0
2011-07-20 19:38:41,726 WARN   wal.HLog(478): gjc:rollWriter start1311161921726
2011-07-20 19:38:41,769 WARN   wal.HLog(518): gjc:updateLock start1311161921769
2011-07-20 19:38:41,769 WARN   wal.HLog(532): gjc:initialReplication start0


** Comment 24 **
[Comment excluded]

** Comment 25 **
Jieshan.  Is there something messed up in the logs you report way up at the top of this issue?  Time starts to go backwards if I look at the log timestamps.  We go:
2011-07-06 15:29:57,478
2011-07-06 15:28:59,236
2011-07-06 15:29:46,714
Your patch seems a little odd in that we do this.logRollRequested = true; inside in a method named rollWriter.  That doesn't seem right; i.e. at the start of log rolling, we set a flag to say we have requested a log roll.
Is the issue that this.logRollRequested is being set to true but its not being cleared appropriately?  Once set, we'll never roll the logs again though the replicas are < 3?


** Comment 26 **
About the report, I mixed up several tests.
For the first time, I ran all the tests, but several got error(It's the hostName problems)..So I changed some code ,and run the failed test again. All the tests passed.
Before the patch, this.logRollRequested = true was placed in the method of checkLowReplication(). But if rollWriter is blocked, all the following roll will be skippted. That's why I made the modification and change the place of this.logRollRequested = true.
Though the name of this.logRollRequested seems misleading. But if don't change its place, the rollWriter may not run a for long time, and the HLog could becomes very large.

** Comment 27 **
Sorry for misunderstood your comments about the logs:
Yes, I copied the logs together, but make up them with the wrong order. Sorry.

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
I attached the full logs of the regionserver.
""hbase-root-regionserver-193-195-5-111.rar"":
1. One datanode was down, it tricker the rollWriter.
2. Before the patch:
  private void checkLowReplication() {
    // if the number of replicas in HDFS has fallen below the initial
    // value, then roll logs.
    try {
      int numCurrentReplicas = getLogReplication();
      if (numCurrentReplicas != 0 &&
          numCurrentReplicas < this.initialReplication) {
        LOG.warn(""HDFS pipeline error detected. "" +
            ""Found "" + numCurrentReplicas + "" replicas but expecting "" +
            this.initialReplication + "" replicas. "" +
            "" Requesting close of hlog."");
        requestLogRoll();
        logRollRequested = true;
      }
    } catch (Exception e) {
      LOG.warn(""Unable to invoke DFSOutputStream.getNumCurrentReplicas"" + e +
          "" still proceeding ahead..."");
    }
  }
  It requested to rollWriter, and set logRollRequested as true.
  But the rollWriter may be blocked this time. So the logRollRequested is always true until the next success rollWriter finished.
  During the time , client was writing the data into this RegionServer. If Hlog was larger than 256M(Suppose it is), it should tricker a new rollWriter, 
  but each time will skip the request, for logRollRequested was still true:  
	public void sync() throws IOException {
	   -----
       if (!logRollRequested) {
          checkLowReplication();
          if (this.writer.getLength() > this.logrollsize) {
            requestLogRoll();
          }
       }
    }

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
After I've taken more tests about this issue. I found the cause of ""RollWriter blocked for a long time"" is just a illusion.
(In order to tracing what happened, I add some new logs, please check the attached file ""RelatedLogs2011-07-28"")
Here's the analysis:
(Suppose there's only 3 nodes in the cluster)
1. HLog-rolling was requested after one datanode was killed.
2. Set HLog#logRollRequested as true after the request.
3. HLog#rollWriter was executed some time later. 
4. A new rollWriter was requested nearby the prev one. And there's no new entries during the time.
   HLog#rollWriter() was returned at the beginning, for the numEntries.get() == 0:
  public byte  rollWriter() throws FailedLogCloseException, IOException {
    // Return if nothing to flush.
    long stamp = System.currentTimeMillis();
    if (this.writer != null && this.numEntries.get() <= 0) {
      return null;
    }
    byte  regionsToFlush = null;
It happens with a high probabities if one datanode was down in such mini-cluster(3 nodes):
1.HLog#initialReplication is reset in each HLog#rollWriter.
  int nextInitialReplication = fs.getFileStatus(newPath).getReplication();
  this.initialReplication = nextInitialReplication;
The method of ""fs.getFileStatus(newPath).getReplication()"" could only get the default/expect replicas value(3).
So HLog#initialReplication is always 3.
2.HLog could only has 2 replicas for there's only 2 datanodes.
  So rollWriter was requested in each HLog#sync().
That's why it happens easily if one datanode was down.
I'm thinking about two solutions to this issue:
Consider the actual live datanode count while reset the value of HLog#initialReplication.
If the live datanode count is less than the default replicas, its value should be the actual datanode count. Otherwise, set it to the default value.
But I've no idea about how to get the live datanode count. 
Add a new configurable parameter to set the minimum tolerable number. It's default value is the default replicas.
If one datanode was killed which carried one replicas of HLog, but the actual replicas value is still larger than/equal with the configurable parameter value. We should not tricker a new RollWriter.
Something likes:
   private OutputStream hdfs_out;     // OutputStream associated with the current SequenceFile.writer
-  private int initialReplication;    // initial replication factor of SequenceFile.writer
+  
+  //Minimum tolerable replicas, if the actual value is less than that, the rollWriter would be trickered
+  private int minTolerableReplication; 
+  
   private Method getNumCurrentReplicas; // refers to DFSOutputStream.getNumCurrentReplicas
   final static Object  NO_ARGS = new Object {};
@@ -358,6 +361,9 @@
       }
     }
     this.maxLogs = conf.getInt(""hbase.regionserver.maxlogs"", 32);
+    
+    this.minTolerableReplication = 
+      conf.getInt(""hbase.regionserver.hlog.mintolerablereplicas"", 3);
     this.enabled = conf.getBoolean(""hbase.regionserver.hlog.enabled"", true);
     LOG.info(""HLog configuration: blocksize="" +
       StringUtils.byteDesc(this.blocksize) +
@@ -480,7 +486,6 @@
       this.filenum = System.currentTimeMillis();
       Path newPath = computeFilename();
       HLog.Writer nextWriter = this.createWriterInstance(fs, newPath, conf);
-      int nextInitialReplication = fs.getFileStatus(newPath).getReplication();
       // Can we get at the dfsclient outputstream?  If an instance of
       // SFLW, it'll have done the necessary reflection to get at the
       // protected field name.
@@ -500,7 +505,6 @@
         // Clean up current writer.
         Path oldFile = cleanupCurrentWriter(currentFilenum);
         this.writer = nextWriter;
-        this.initialReplication = nextInitialReplication;
         this.hdfs_out = nextHdfsOut;
         LOG.info((oldFile != null?
@@ -1003,10 +1007,10 @@
     try {
       int numCurrentReplicas = getLogReplication();
       if (numCurrentReplicas != 0 &&
-          numCurrentReplicas < this.initialReplication) {
+          numCurrentReplicas < this.minTolerableReplication) {
         LOG.warn(""HDFS pipeline error detected. "" +
-            ""Found "" + numCurrentReplicas + "" replicas but expecting "" +
-            this.initialReplication + "" replicas. "" +
+            ""Found "" + numCurrentReplicas + "" replicas but expecting no less than "" +
+            this.minTolerableReplication + "" replicas. "" +
             "" Requesting close of hlog."");
         requestLogRoll();
         logRollRequested = true;


** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
@Jieshan,
I was analysing the initial logs attached.  As you said the Rolling of hLog has not happened due to some reason. I hope the cacheFlushLock was not allowed to be held by the HLog Roller.  If the rolling of logs has not happened due to this reason then the current soln will it take care of it ? 
One more point is, if the number of replicas doesnt for the Logroll to happen then we stop the log rolling as per the current patch. Correct me if am wrong.  
Is this behaviour ok? 
Should we expose the new properties in the hbase-default.xml?
Pls correct me if my analysis/query is wrong.  


** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-08-09 04:20:46.103510)
Review request for hbase.
Summary
-------
Issue: [link]
Some large Hlog files(Larger than 10G) appeared in our environment, and I got the reason why they got so huge:
1. The replicas is less than the expect number. So the method of checkLowReplication will be called each sync.
2. The method checkLowReplication request log-roll first, and set logRollRequested as true: 
3. requestLogRoll() just commit the roll request. It may not execute in time, like the following scenario(It returns at the beginning, for the numEntries.get() == 0):
    public byte  rollWriter() throws FailedLogCloseException, IOException {
    // Return if nothing to flush.
    if (this.writer != null && this.numEntries.get() <= 0) {
      return null;
    }
4.logRollRequested was true until the log-roll executed. So during the time, each request of log-roll in sync() was skipped.
This addresses bug HBASE-4095.
    [link]
Diffs
-----
  [file java] 1155186 
Diff: [link]
Testing
-------
Please find the test result from the attachment of [link]
Thanks,
Jieshan


** Comment 43 **
[Comment excluded]

** Comment 44 **
I'd clean up the extra spaces the patch adds before commit.  It adds a bunch.
Reviewing I kept scratching my head.  This seems to be a slightly odd case in that it happens on a cluster of three nodes or less yet we're changing the way a pretty important piece of code works.  Any chance of a unit test Jieshan?  The HLog has a bunch of tests that do various mock ups.  Shouldn't be too hard studying what goes on there to figure how to get a little test in.  If you think this too much, that's fine, we can commit since you got two +1s but I thought I'd ask anyways.

** Comment 45 **
[Comment excluded]

** Comment 46 **
I repeated the LLT test for several times. All the tests past except one--TestHFileReaderV1. And I found it had got failure before this patch(I have no time to dig in. But the failure has no relationship with this patch).
Please find the results from the attached file ""LatestLLTResults-20110810.rar""

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
mintolerablereplicas and fewerreplicasrolllimit should be made more readable.
The log message ""it's a sign of the live datanodes count is less than the minimum tolerable replicas"" should be rewritten.
Fix spelling:
{quote}
+    // Force roll writer. The new log file will have the defalt replication,
+    // and the lowerReplcas roller will be enabled.
{quote}
This is not how we do brackets:
{code}
+  public boolean isFewerReplicasRollEnabled()
+  {
+    return fewerReplicasRollEnabled;
+  }
{code}
About the test, there's a _lot_ of sleeping in there which makes the test suite run even slower than it is. Any chance of making it not really on time (which is usually flaky) by using tools like mockito?

** Comment 51 **
Thanks for doing the new test.  That helps.  I'm w/ J-D though that there are lots of timeouts.  Is that necessary?  The trouble with depending on timeouts is that they are not determinate and in different environments may behave differently.  If there is no other way, then so be it... 
There is:
{code}
-    // write some more log data (this should use a new hdfs_out)
-    writeData(table, 3);
-    assertTrue(""The log should not roll again."", log.getFilenum() == newFilenum);
{code}
Where you remove an assertion.  Can you leave that in?
What difference between batchWriteData and writeData?  The pause?  Is the pause needed?
Thanks

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
Config parameters are renamed in HLog but not in the test, please make them consistent.
{code}
+        ""hbase.regionserver.hlog.lowreplication.tolerable""
{code}
A better name would be hbase.regionserver.hlog.tolerable.lowreplication
{code}
+        ""hbase.regionserver.hlog.lowreplication.rolls"", 5);
{code}
Would hbase.regionserver.hlog.lowreplication.rolllimit be more informative ?
In batchWriteAndWait() remaining always decrements by 200. This can be made more accurate through calling System.currentTimeMillis()

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
Thank you for your persistence Jieshan on trying to get this patch in.  I'm basically +1 on v9.  Below is a small question.
{code}
-        this.logRollRequested = false;
+        this.logRollRunning = false;
{code}
Should the setting of this.logRollRunning be set instead in a finally block in here in rollWriter?  If an exception thrown after we set the logRollRunning, it looks like logRollRunning could stay set.   My guess is that not doing this would probably not be noticed in that we probably crash out the regionserver if a rollWriter fails but having the flag stuck set might make for some unexpected state?
So, it looks like we'll roll 5 times by default before we'll turn off the low replication log rolling facility -- which is better than a log per sync, right?
You seem to lose some 'liveness' regards file replication setting.  In code before this patch, when rollwriter ran, it'd ask the FS what the replication on the new writer is and that going forward would be the replication to use.  See here:
{code}
-      int nextInitialReplication = fs.getFileStatus(newPath).getReplication();
{code}
Instead you set the replication once on instantiation of HLog.  See here:
{code}
+    this.minTolerableReplication = conf.getInt(
+        ""hbase.regionserver.hlog.tolerable.lowreplication"",
+        this.fs.getDefaultReplication());
{code}
.. and rather than ask the files replication you use the filesystem default value.
Do you have a good reason for changing this behavior?
Thanks Jieshan.


** Comment 60 **
{quote}
Should the setting of this.logRollRunning be set instead in a finally block in here in rollWriter? If an exception thrown after we set the logRollRunning, it looks like logRollRunning could stay set. My guess is that not doing this would probably not be noticed in that we probably crash out the regionserver if a rollWriter fails but having the flag stuck set might make for some unexpected state?
{quote}
Yes, it's good suggestion. It should be put in the finally block. And I've changed it.
{quote}
So, it looks like we'll roll 5 times by default before we'll turn off the low replication log rolling facility - which is better than a log per sync, right?
{quote}
Yes.
{quote}
Do you have a good reason for changing this behavior?
{quote}
Maybe we misunderstood the method of :
 int nextInitialReplication = fs.getFileStatus(newPath).getReplication();
It always returns the default replications value(I've taken some tests to prove it. And I affirmed it from some hdfs experts). No matter how many live datanodes there and what's the actual replications.
this.minTolerableReplication = conf.getInt(
+        ""hbase.regionserver.hlog.tolerable.lowreplication"",
+        this.fs.getDefaultReplication());
So I added a new parameter ""hbase.regionserver.hlog.tolerable.lowreplication"". Suppose the default replication value is 3. Before the patch, once the replications decreased, rollWriter should be triggered. To some extend, it's unreasonable. Because the rest 2 replication is also tolerable sometime. So I made it configurable. 
That's why I changed the behavior.

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]
"
HBASE-4352,https://issues.apache.org/jira/browse/HBASE-4352,https://github.com/apache/hbase/blob/0.90.5/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java,Apply version of hbase-4015 to branch,NO,Consider adding a version of hbase-4015 to 0.90.  It changes HRegionInterface so would need move change to end of the Interface and then test that it doesn't break rolling restart.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
I am running test suite on 0.90 branch. Will report back if any test failure comes up.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Playing around w/ a cluster under load upgrading it from 0.90.4 to 0.90.5, all basically works except stuff like the following:
{code}
2011-12-08 05:47:42,226 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Assigning region TestTable,0006971712,1323323148059.2e97f25eefbd77765d64b0900d94e5ba. to sv4r12s38,7003,1323321454788
2011-12-08 05:47:42,226 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=M_ZK_REGION_OFFLINE, server=sv4r11s38:7001, region=2e97f25eefbd77765d64b0900d94e5ba
2011-12-08 05:47:42,229 WARN org.apache.hadoop.hbase.master.AssignmentManager: Failed assignment of TestTable,0006971712,1323323148059.2e97f25eefbd77765d64b0900d94e5ba. to serverName=sv4r12s38,7003,1323321454788, load=(requests=29558, regions=35, usedHeap=295, maxHeap=493), trying to assign elsewhere instead; retry=9
org.apache.hadoop.ipc.RemoteException: java.io.IOException: java.lang.NoSuchMethodException: org.apache.hadoop.hbase.regionserver.HRegionServer.openRegion(org.apache.hadoop.hbase.HRegionInfo, int)
        at java.lang.Class.getMethod([file java]:1605)
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call([file java]:565)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run([file java]:1039)
        at org.apache.hadoop.hbase.ipc.HBaseClient.call([file java]:771)
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Invoker.invoke([file java]:257)
        at $Proxy7.openRegion(Unknown Source)
        at org.apache.hadoop.hbase.master.ServerManager.sendRegionOpen([file java]:574)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:1132)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:894)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:876)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:872)
        at org.apache.hadoop.hbase.master.handler.ClosedRegionHandler.process([file java]:92)
        at org.apache.hadoop.hbase.executor.EventHandler.run([file java]:156)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask([file java]:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:908)
        at java.lang.Thread.run([file java]:662)
{code}
I see this when balancer tries to run (Its a 0.90.5 master running against a 0.90.4 cluster).
I don't think this too bad.  Its transient situation: i.e. you can't do a balancer till all servers go up to 0.90.5.


** Comment 15 **
Backing this out.  Can't do rolling restart from 0.90.4 to 0.90.5.  I get NPEs client-side trying to receive response even after putting up a 0.90.5 master first and while trying to rolling restart a 0.90.4 to 0.90.5 regionserver; the offloading works but then the onloading fails.
Without this patch I can rolling restart from 0.90.4 to 0.90.5 smoothly.

** Comment 16 **
[Comment excluded]

** Comment 17 **
@Stack
Where is the NPE coming in the client side? Could you paste the stack trace to chk it out.

** Comment 18 **
Here is a 0.90.5 master trying to reload a regionserver that has been restarted as a 0.90.5 (it had been a 0.90.4):
{code}
2011-12-08 22:56:53,807 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Assigning region TestTable,0013681953,1323325588029.5d0a564b65a53b1c86f7c02407c82231. to sv4r9s38,7003,1323384867368
2011-12-08 22:56:53,809 WARN org.apache.hadoop.ipc.HBaseClient: Unexpected exception receiving call responses
java.lang.NullPointerException
2011-12-08 22:56:53,810 WARN org.apache.hadoop.hbase.master.AssignmentManager: Failed assignment of TestTable,0013681953,1323325588029.5d0a564b65a53b1c86f7c02407c82231. to serverName=sv4r9s38,7003,1323384867368, load=(requests=0, regions=0, usedHeap=23, maxHeap=493), trying to assign elsewhere instead; retry=0
java.io.IOException: Call to /10.4.9.38:7003 failed on local exception: java.io.IOException: Unexpected exception receiving call responses
        at org.apache.hadoop.hbase.ipc.HBaseClient.wrapException([file java]:806)
        at org.apache.hadoop.hbase.ipc.HBaseClient.call([file java]:775)
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Invoker.invoke([file java]:257)
        at $Proxy7.openRegion(Unknown Source)
        at org.apache.hadoop.hbase.master.ServerManager.sendRegionOpen([file java]:561)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:1043)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:858)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign([file java]:838)
        at org.apache.hadoop.hbase.master.handler.ClosedRegionHandler.process([file java]:92)
        at org.apache.hadoop.hbase.executor.EventHandler.run([file java]:156)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask([file java]:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:908)
        at java.lang.Thread.run([file java]:662)
Caused by: java.io.IOException: Unexpected exception receiving call responses
        at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.run([file java]:481)
Caused by: java.lang.NullPointerException
{code}
It looks like call is null as per another issue that just got committed.  Shouldn't be.
Was getting bunches of this on regionserver side, though it don't seem directly related:
{code}
2011-12-08 22:56:53,809 DEBUG org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler: Processing open of TestTable,0013681953,1323325588029.5d0a564b65a53b1c86f7c02407c82231.
2011-12-08 22:56:53,810 DEBUG org.apache.hadoop.hbase.zookeeper.ZKAssign: regionserver:7003-0x1341fa8d95400cc Attempting to transition node 5d0a564b65a53b1c86f7c02407c82231 from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING
2011-12-08 22:56:53,811 WARN org.apache.hadoop.hbase.zookeeper.ZKAssign: regionserver:7003-0x1341fa8d95400cc Attempt to transition the unassigned node for 5d0a564b65a53b1c86f7c02407c82231 from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING failed, the node existed but was version 2 not the expected version -1
2011-12-08 22:56:53,811 WARN org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler: Failed transition from OFFLINE to OPENING for region=5d0a564b65a53b1c86f7c02407c82231
2011-12-08 22:56:53,811 WARN org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler: Region was hijacked? It no longer exists, encodedName=5d0a564b65a53b1c86f7c02407c82231
{code}
I was hoping to put up a 0.90.5RC.  If you want me to hold a while, I can.  Else, I'll go ahead and cut an RC w/o this.

** Comment 19 **
@Stack
5d0a564b65a53b1c86f7c02407c82231 - Did this region get opened up correctly? Then the second set of logs is not a problem. 
First set of logs am not very clear as why it came up.
Thanks Stack for your time.:) 

** Comment 20 **
It seemed like 5d0a564b65a53b1c86f7c02407c82231 was opened fine (I'd just done clean cluster start, killed master, started 0.90.5 master, then had tried the rolling restart --- no load on cluster).  I didn't dig in too deep.  Was going to start adding logging... debugging... but had spent enough time on it.
Can I roll a 0.90.5RC Ram?

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]
"
HBASE-5327,https://issues.apache.org/jira/browse/HBASE-5327,https://github.com/apache/hbase/blob/0.90.6/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java,Print a message when an invalid hbase.rootdir is passed,NO,"As seen on the mailing list: http://comments.gmane.org/gmane.comp.java.hadoop.hbase.user/24124

If hbase.rootdir doesn't specify a folder on hdfs we crash while opening a path to .oldlogs:

{noformat}
2012-02-02 23:07:26,292 FATAL org.apache.hadoop.hbase.master.HMaster: Unhandled exception. Starting shutdown.
java.lang.IllegalArgumentException: java.net.URISyntaxException: Relative path in absolute URI: hdfs://sv4r11s38:9100.oldlogs
        at org.apache.hadoop.fs.Path.initialize(Path.java:148)
        at org.apache.hadoop.fs.Path.<init>(Path.java:71)
        at org.apache.hadoop.fs.Path.<init>(Path.java:50)
        at org.apache.hadoop.hbase.master.MasterFileSystem.<init>(MasterFileSystem.java:112)
        at org.apache.hadoop.hbase.master.HMaster.finishInitialization(HMaster.java:448)
        at org.apache.hadoop.hbase.master.HMaster.run(HMaster.java:326)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.net.URISyntaxException: Relative path in absolute URI: hdfs://sv4r11s38:9100.oldlogs
        at java.net.URI.checkPath(URI.java:1787)
        at java.net.URI.<init>(URI.java:735)
        at org.apache.hadoop.fs.Path.initialize(Path.java:145)
        ... 6 more
{noformat}

It could also crash anywhere else, this just happens to be the first place we use hbase.rootdir. We need to verify that it's an actual folder.","** Comment 1 **
I tested the patch and it can detect the error mentioned in the description and abort the master with error message saying it is not a valid hdfs file path.

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -136 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 156 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
This patch fix two issues:
(1) check the root dir to make sure it is valid before generating the old log dir.  So that it can give a meaningful error message.
(2) make sure the root dir is a dir instead of a file.  If it is a file, the master will hang and try to create the version file forever.
@Jon,  I added some actionable log message.

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -136 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 156 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestReplication
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
My comment was really just asking for more info in the first version's IAE string. 


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
Integrated in HBase-TRUNK #2660 (See )
    HBASE-5327  Print a message when an invalid hbase.rootdir is passed (Jimmy Xiang) (Revision 1243650)
     Result = FAILURE
tedyu : 
Files : 
* [file txt]
* [file java]


** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
Integrated in HBase-0.92-security #91 (See )
    HBASE-5327  Print a message when an invalid hbase.rootdir is passed (Jimmy Xiang) (Revision 1243648)
     Result = FAILURE
tedyu : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]

"
HBASE-5060,https://issues.apache.org/jira/browse/HBASE-5060,https://github.com/apache/hbase/blob/0.92.0/src/main/java/org/apache/hadoop/hbase/catalog/CatalogTracker.java,HBase client is blocked forever,NO,"Since the client had a temporary network failure, After it recovered.
I found my client thread was blocked. 
Looks below stack and logs, It said that we use a invalid CatalogTracker in function ""tableExists"".

Block stack:
""WriteHbaseThread33"" prio=10 tid=0x00007f76bc27a800 nid=0x2540 in Object.wait() [0x00007f76af4f3000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
         at java.lang.Object.wait(Native Method)
         at org.apache.hadoop.hbase.catalog.CatalogTracker.waitForMeta(CatalogTracker.java:331)
         - locked <0x00007f7a67817c98> (a java.util.concurrent.atomic.AtomicBoolean)
         at org.apache.hadoop.hbase.catalog.CatalogTracker.waitForMetaServerConnectionDefault(CatalogTracker.java:366)
         at org.apache.hadoop.hbase.catalog.MetaReader.tableExists(MetaReader.java:427)
         at org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(HBaseAdmin.java:164)
         at com.huawei.hdi.hbase.HbaseFileOperate.checkHtableState(Unknown Source)
         at com.huawei.hdi.hbase.HbaseReOper.reCreateHtable(Unknown Source)
         - locked <0x00007f7a4c5dc578> (a com.huawei.hdi.hbase.HbaseReOper)
         at com.huawei.hdi.hbase.HbaseFileOperate.writeToHbase(Unknown Source)
         at com.huawei.hdi.hbase.WriteHbaseThread.run(Unknown Source)

In ZooKeeperNodeTracker, We don't throw the KeeperException to high level.
So in CatalogTracker level, We think ZooKeeperNodeTracker start success and
continue to process .

[WriteHbaseThread33]2011-12-16 17:07:33,153[WARN ]  | hconnection-0x334129cf6890051-0x334129cf6890051-0x334129cf6890051 Unable to get data of znode /hbase/root-region-server | org.apache.hadoop.hbase.zookeeper.ZKUtil.getDataAndWatch(ZKUtil.java:557)
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase/root-region-server
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)
         at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:931)
         at org.apache.hadoop.hbase.zookeeper.ZKUtil.getDataAndWatch(ZKUtil.java:549)
         at org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.start(ZooKeeperNodeTracker.java:73)
         at org.apache.hadoop.hbase.catalog.CatalogTracker.start(CatalogTracker.java:136)
         at org.apache.hadoop.hbase.client.HBaseAdmin.getCatalogTracker(HBaseAdmin.java:111)
         at org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(HBaseAdmin.java:162)
         at com.huawei.hdi.hbase.HbaseFileOperate.checkHtableState(Unknown Source)
         at com.huawei.hdi.hbase.HbaseReOper.reCreateHtable(Unknown Source)
         at com.huawei.hdi.hbase.HbaseFileOperate.writeToHbase(Unknown Source)
         at com.huawei.hdi.hbase.WriteHbaseThread.run(Unknown Source)
[WriteHbaseThread33]2011-12-16 17:07:33,361[ERROR]  | hconnection-0x334129cf6890051-0x334129cf6890051-0x334129cf6890051 Received unexpected KeeperException, re-throwing exception | org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.keeperException(ZooKeeperWatcher.java:385)
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase/root-region-server
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)
         at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:931)
         at org.apache.hadoop.hbase.zookeeper.ZKUtil.getDataAndWatch(ZKUtil.java:549)
         at org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.start(ZooKeeperNodeTracker.java:73)
         at org.apache.hadoop.hbase.catalog.CatalogTracker.start(CatalogTracker.java:136)
         at org.apache.hadoop.hbase.client.HBaseAdmin.getCatalogTracker(HBaseAdmin.java:111)
         at org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(HBaseAdmin.java:162)
         at com.huawei.hdi.hbase.HbaseFileOperate.checkHtableState(Unknown Source)
         at com.huawei.hdi.hbase.HbaseReOper.reCreateHtable(Unknown Source)
         at com.huawei.hdi.hbase.HbaseFileOperate.writeToHbase(Unknown Source)
         at com.huawei.hdi.hbase.WriteHbaseThread.run(Unknown Source)


[WriteHbaseThread33]2011-12-16 17:07:33,361[FATAL]  | Unexpected exception during initialization, aborting | org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.abort(HConnectionManager.java:1351)
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hbase/root-region-server
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)
         at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)
         at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:931)
         at org.apache.hadoop.hbase.zookeeper.ZKUtil.getDataAndWatch(ZKUtil.java:549)
         at org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.start(ZooKeeperNodeTracker.java:73)
         at org.apache.hadoop.hbase.catalog.CatalogTracker.start(CatalogTracker.java:136)
         at org.apache.hadoop.hbase.client.HBaseAdmin.getCatalogTracker(HBaseAdmin.java:111)
         at org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(HBaseAdmin.java:162)
         at com.huawei.hdi.hbase.HbaseFileOperate.checkHtableState(Unknown Source)
         at com.huawei.hdi.hbase.HbaseReOper.reCreateHtable(Unknown Source)
         at com.huawei.hdi.hbase.HbaseFileOperate.writeToHbase(Unknown Source)
         at com.huawei.hdi.hbase.WriteHbaseThread.run(Unknown Source)
","** Comment 1 **
1.This issue is diffcult to fix. I made a trial version.
2.I have checked all using ZooKeeperNodeTracker, It seems fine.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Test case passed:
My test code:
    try {
      HBaseAdmin hbase = new HBaseAdmin(config);
      while (true) {
      	try {
	        if (hbase.tableExists(tableName)) {
	          System.out.println("" The usertable: "" + tableName
	              + "" is already existed"");
	        }
	        try {
	          Thread.sleep(50);
	        } catch (InterruptedException e) {
	          continue;
	        }
	}catch(IOException e){
	   e.printStackTrace();
	   continue;
	}
      }
1. run test case
2. kill two zk servers(total three zk servers)
3. start the killed server again


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -152 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
{code}
Hanging test: Running org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed
Hanging test: Running org.apache.hadoop.hbase.replication.TestMasterReplication
{code}
I verified that the above tests passed on TRUNK, on MacBook.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]
"
HBASE-5088,https://issues.apache.org/jira/browse/HBASE-5088,https://github.com/apache/hbase/blob/0.92.0/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java,A concurrency issue on SoftValueSortedMap,NO,"SoftValueSortedMap is backed by a TreeMap. All the methods in this class are synchronized. If we use this method to add/delete elements, it's ok.
But in HConnectionManager#getCachedLocation, it use headMap to get a view from SoftValueSortedMap#internalMap. Once we operate 
on this view map(like add/delete) in other threads, a concurrency issue may occur.

","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
{code}
""WriterThread-2"" prio=10 tid=0x00000000405cb000 nid=0x6a98 runnable 
   java.lang.Thread.State: RUNNABLE
	at org.apache.hadoop.hbase.util.Bytes.compareTo([file java]:916)
	at org.apache.hadoop.hbase.util.Bytes$ByteArrayComparator.compare([file java]:109)
	at org.apache.hadoop.hbase.util.Bytes$ByteArrayComparator.compare([file java]:101)
	at java.util.TreeMap.getEntryUsingComparator([file java]:351)
	at java.util.TreeMap.getEntry([file java]:322)
	at java.util.TreeMap.remove([file java]:580)
	at org.apache.hadoop.hbase.util.SoftValueSortedMap.checkReferences([file java]:76)
	at org.apache.hadoop.hbase.util.SoftValueSortedMap.isEmpty([file java]:150)
	- locked <0x00007fd106cd6870> (a org.apache.hadoop.hbase.util.SoftValueSortedMap)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.getCachedLocation([file java]:826)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta([file java]:668)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion([file java]:594)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatch([file java]:1133)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.processBatchOfPuts([file java]:1253)
	at org.apache.hadoop.hbase.client.HTable.flushCommits([file java]:828)
	at org.apache.hadoop.hbase.client.HTable.doPut([file java]:684)
	at org.apache.hadoop.hbase.client.HTable.put([file java]:674)
	at PerRegionLoadData$WriterThread.writeBuffer([file java]:350)
	at PerRegionLoadData$WriterThread.doRun([file java]:314)
{code}
Once we got the above stack trace.. did not dig in much that time.. good finding

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
First, I wonder why this problem wasn't discovered earlier.
@Jieshan:
What JDK version is used ? Please also give us the information on OS as well.
Second I want to see the breakdown of slowdown across reads vs writes.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
Here's a version that does that.
o SoftValueSortedMap implements NavigableMap
o All extra NavigableMap methods are delegated to internalMap
o None of its methods are synchronized
o All generics warnings are fixed.
Please have a look.

** Comment 30 **
[Comment excluded]

** Comment 31 **
@Ted,
At first, I also thought we would get a higher performance with this patch, because all the keywords of ""synchronized"" removed. But it slowdown.
I agree with the explaination from Lars.
Our JDK version is 1.6.0_22. And the below is our OS information:
C3S3:~ # cat /proc/version
Linux version 2.6.32.12-0.7-default (geeko@buildhost) (gcc version 4.3.4  (SUSE Linux) ) #1 SMP 2010-05-20 11:14:20 +0200
C3S3:/proc # lsb_release -a
LSB Version:    core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch
Distributor ID: SUSE LINUX
Description:    SUSE Linux Enterprise Server 11 (x86_64)
Release:        11
Codename:       n/a
We'll take more tests accross the read vs write and give out the results.
@Lars,
Sorry, I didn't do another comparison with SoftvalueSortedMap replaced by ConcurrentSkiplistMap.And am planning to do it. Including the functional test and the performance test. And then, we can choose a better one.

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
@Jieshan: What do you think of my attached 5088.[file txt] patch?
It switches TreeMap with ConcurrentSkipListMap and also:
* fixes all generics warnings
* uses proper interfaces instead of concrete classes
* removes all synchronization (should not be necessary with the inner map being a ConcurrentSkipListMap).


** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestSplitLogManager
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 42 **
These four test frequently (always?) fail.
Would be nice to get this in before 0.92.
Since this ends up in an infinite loop, it is hard to replicate in a test.

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.master.TestSplitLogManager
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 49 **
[Comment excluded]

** Comment 50 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestReplication
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
[Comment excluded]

** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 71 **
[Comment excluded]

** Comment 72 **
[Comment excluded]

** Comment 73 **
[Comment excluded]

** Comment 74 **
[Comment excluded]

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
[Comment excluded]

** Comment 78 **
[Comment excluded]

** Comment 79 **
[Comment excluded]

** Comment 80 **
[Comment excluded]

** Comment 81 **
[Comment excluded]

** Comment 82 **
[Comment excluded]

** Comment 83 **
[Comment excluded]

** Comment 84 **
[Comment excluded]

** Comment 85 **
[Comment excluded]

** Comment 86 **
[Comment excluded]

** Comment 87 **
[Comment excluded]
"
HBASE-4694,https://issues.apache.org/jira/browse/HBASE-4694,https://github.com/apache/hbase/blob/0.92.0/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java,Some cleanup of log messages in RS and M,YES,"I did a little edit of logging.  We do way too much but am not going to do a big overhaul just yet.  Here's a few small changes saving a few lines, some redundancy, and making others look like surrounding log lines.","** Comment 1 **
Removed the HFile saying 'I'm making an hfileV1' or 'a v2hfile' since subsequent loggings say which type of hfile it is.
Used stringutils.humanReadableInt instead of raw bytes in HFileBlockIndex.  Made log debug rather than info
Removed logging of servers when LoadBalancer runs.  If 1k cluster, means every five minutes all servers are dumped in log.
Changed some stats logging to debug and put behind an isDebugEnabled test.
Shortened some messages... no need to log full path in many contexts


** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Integrated in HBase-TRUNK #2381 (See )
    HBASE-4694 Some cleanup of log messages in RS and M
stack : 
Files : 
* [file txt]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 5 **
At least the following change to [file java] shouldn't have been made:
{code}
-      numRegions += sz;
-      serversByLoad.put(new ServerAndLoad(server.getKey(), sz), regions);
{code}
The two load balancer related tests failed due to above change.

** Comment 6 **
This addendum allows the two failed load balancer tests to pass.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Integrated in HBase-TRUNK #2382 (See )
    HBASE-4694 Addendum, revert non-logging statements in DefaultLoadBalancer
tedyu : 
Files : 
* [file java]


** Comment 10 **
Test failures in TRUNK is down to 1.

** Comment 11 **
Integrated in HBase-0.92 #90 (See )
    HBASE-4694 Addendum, restore non-logging statements in DefaultLoadBalancer
HBASE-4694 Some cleanup of log messages in RS and M
tedyu : 
Files : 
* /hbase/branches/0.[file java]
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 12 **
[Comment excluded]
"
HBASE-4944,https://issues.apache.org/jira/browse/HBASE-4944,https://github.com/apache/hbase/blob/0.92.0/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java,Optionally verify bulk loaded HFiles,NO,"We rely on users to produce properly formatted HFiles for bulk import. Attached patch adds an optional code path, toggled by a configuration property, that verifies the HFile under consideration for import is properly sorted. The default maintains the current behavior, which does not scan the file for correctness.

Patch is against trunk but can apply against all active branches.","** Comment 1 **
From JIRA: ""Cannot attach file HBASE-4944.patch: Unknown server error (500).""
The patch is pretty small, so here it is:
{code}
Index: [file java]
===================================================================
--- [file java]	(revision 1210044)
+++ [file java]	(working copy)
@@ -50,6 +50,7 @@
 import org.apache.hadoop.hbase.io.hfile.Compression;
 import org.apache.hadoop.hbase.io.hfile.HFile;
 import org.apache.hadoop.hbase.io.hfile.HFileScanner;
+import org.apache.hadoop.hbase.io.hfile.InvalidHFileException;
 import org.apache.hadoop.hbase.monitoring.MonitoredTask;
 import org.apache.hadoop.hbase.regionserver.StoreScanner.ScanType;
 import org.apache.hadoop.hbase.regionserver.compactions.CompactionProgress;
@@ -123,6 +124,7 @@
   private final String storeNameStr;
   private CompactionProgress progress;
   private final int compactionKVMax;
+  private final boolean verifyBulkLoads;
   // not private for testing
   /* package */ScanInfo scanInfo;
@@ -222,6 +224,9 @@
       = conf.getLong(""hbase.hstore.compaction.max.size"", Long.MAX_VALUE);
     this.compactionKVMax = conf.getInt(""hbase.hstore.compaction.kv.max"", 10);
+    this.verifyBulkLoads = conf.getBoolean(""hbase.hstore.bulkload.verify"",
+        true);
+
     if (Store.closeCheckInterval == 0) {
       Store.closeCheckInterval = conf.getInt(
           ""hbase.hstore.close.check.interval"", 10*1000*1000 /* 10 MB */);
@@ -355,8 +360,8 @@
   }
   /**
-   * This throws a WrongRegionException if the bulkHFile does not fit in this
-   * region.
+   * This throws a WrongRegionException if the HFile does not fit in this
+   * region, or an InvalidHFileException if the HFile is not valid.
    *
    */
   void assertBulkLoadHFileOk(Path srcPath) throws IOException {
@@ -386,6 +391,34 @@
             ""Bulk load file "" + srcPath.toString() + "" does not fit inside region ""
             + this.region);
       }
+
+      if (verifyBulkLoads) {
+        KeyValue pkv = null;
+        HFileScanner scanner = reader.getScanner(false, false, false);
+        scanner.seekTo();
+        do {
+          KeyValue kv = scanner.getKeyValue();
+          if (pkv != null) {
+            if (Bytes.compareTo(pkv.getBuffer(), pkv.getRowOffset(),
+                pkv.getRowLength(), kv.getBuffer(), kv.getRowOffset(),
+                kv.getRowLength()) > 0) {
+              throw new InvalidHFileException(""Previous row is greater then""
+                  + "" current row: path="" + srcPath + "" previous=""
+                  + Bytes.toStringBinary(pkv.getKey()) + "" current=""
+                  + Bytes.toStringBinary(kv.getKey()));
+            }
+            if (Bytes.compareTo(pkv.getBuffer(), pkv.getFamilyOffset(),
+                pkv.getFamilyLength(), kv.getBuffer(), kv.getFamilyOffset(),
+                kv.getFamilyLength()) != 0) {
+              throw new InvalidHFileException(""Previous key had different""
+                  + "" family compared to current key: path="" + srcPath
+                  + "" previous="" + Bytes.toStringBinary(pkv.getKey())
+                  + "" current="" + Bytes.toStringBinary(kv.getKey()));
+            }
+          }
+          pkv = kv;
+        } while (scanner.next());
+      }
     } finally {
       if (reader != null) reader.close();
     }
Index: [file java]
===================================================================
--- [file java]	(revision 0)
+++ [file java]	(revision 0)
@@ -0,0 +1,40 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     [link]
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hbase.io.hfile;
+
+import java.io.IOException;
+
+/**
+ * Thrown when an invalid HFile format is detected
+ */
+public class InvalidHFileException extends IOException {
+  private static final long serialVersionUID = 4660352028739861249L;
+
+  /** constructor */
+  public InvalidHFileException() {
+    super();
+  }
+
+  /**
+   * Constructor
+   * @param s message
+   */
+  public InvalidHFileException(String s) {
+    super(s);
+  }
+}
\ No newline at end of file
{code}

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Looks like the patch should be rebased:
{code}
4 out of 5 hunks FAILED -- saving rejects to file [file java].rej
{code}

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated -160 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 71 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.TestDrainingServer
                  org.apache.hadoop.hbase.TestFullLogReconstruction
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapreduce.TestTableMapReduce
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
Test failures are unrelated to the patch. All tests pass locally for me. 
@Ted, what do you think of v3?

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]
"
HBASE-5081,https://issues.apache.org/jira/browse/HBASE-5081,https://github.com/apache/hbase/blob/0.92.0/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java,Distributed log splitting deleteNode races against splitLog retry ,YES,"Recently, during 0.92 rc testing, we found distributed log splitting hangs there forever.  Please see attached screen shot.
I looked into it and here is what happened I think:

1. One rs died, the servershutdownhandler found it out and started the distributed log splitting;
2. All three tasks failed, so the three tasks were deleted, asynchronously;
3. Servershutdownhandler retried the log splitting;
4. During the retrial, it created these three tasks again, and put them in a hashmap (tasks);
5. The asynchronously deletion in step 2 finally happened for one task, in the callback, it removed one
task in the hashmap;
6. One of the newly submitted tasks' zookeeper watcher found out that task is unassigned, and it is not
in the hashmap, so it created a new orphan task.
7.  All three tasks failed, but that task created in step 6 is an orphan so the batch.err counter was one short,
so the log splitting hangs there and keeps waiting for the last task to finish which is never going to happen.

So I think the problem is step 2.  The fix is to make deletion sync, instead of async, so that the retry will have
a clean start.

Async deleteNode will mess up with split log retrial.  In extreme situation, if async deleteNode doesn't happen
soon enough, some node created during the retrial could be deleted.

deleteNode should be sync.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Or we need a means of uniquely identifying the failed split in the hashmap so when the callback runs, it only removes the pertinent tasks if present; i.e. the filename alone is not enough?
Otherwise, sounds good Jimmy.  Good find.

** Comment 3 **
To expedite the release of 0.92, I think we can make deleteNode synchronous first.
Once distributed log splitting works robustly, we can implement async deleteNode in a follow on JIRA.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs
-----
  [file java] 7b7316f 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 9 **
[Comment excluded]

** Comment 10 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4046
-----------------------------------------------------------
[file java]
<[link]#comment9151>
    White space on end and 'is' should be 'if'
- Michael
On 2011-12-21 17:01:22, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 17:01:22)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 7b7316f 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 11 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4045
-----------------------------------------------------------
Ship it!
Looks good to me.  How I know it works?  Would it be hard to write a test?
- Michael
On 2011-12-21 17:01:22, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 17:01:22)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 7b7316f 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 12 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-21 17:12:36.185307)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
Fixed the comments.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 7b7316f 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 13 **
bq.  On 2011-12-21 17:05:47, Michael Stack wrote:
bq.  > Looks good to me.  How I know it works?  Would it be hard to write a test?
This is a race issue hard to reproduce. Let me think about how to come up a unit test.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4045
-----------------------------------------------------------
On 2011-12-21 17:12:36, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 17:12:36)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 7b7316f 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 14 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4050
-----------------------------------------------------------
Interesting idea. Let us know result of testing in real cluster.
Since the zk node may live across cluster restart, we should verify the change works in that scenario.
[file java]
<[link]#comment9158>
    I think the new comments should be lifted to line 353 for clarity.
[file java]
<[link]#comment9156>
    Should read 'if the task failed'
[file java]
<[link]#comment9157>
    Indentation should be 2 spaces.
- Ted
On 2011-12-21 17:12:36, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 17:12:36)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 7b7316f 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 15 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-21 17:40:59.028814)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
Fixed the indentation issue, added more comment.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 667a8b1 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 16 **
[Comment excluded]

** Comment 17 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4052
-----------------------------------------------------------
[file java]
<[link]#comment9159>
    Should read 'Asynchronously deleting'
[file java]
<[link]#comment9160>
    Should read 'if the task failed and was not an orphan'
- Ted
On 2011-12-21 17:40:59, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 17:40:59)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 18 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-21 18:06:55.460515)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
Changed some comments
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 667a8b1 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 19 **
bq.  On 2011-12-21 17:44:53, Ted Yu wrote:
bq.  > [file java], line 368
bq.  > <[link]#file65674line368>
bq.  >
bq.  >     Should read 'if the task failed and was not an orphan'
The original is fine.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4052
-----------------------------------------------------------
On 2011-12-21 18:06:55, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 18:06:55)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 20 **
I can reproduce the following test failures on MacBook:
{code}
Failed tests:   testTaskErr(org.apache.hadoop.hbase.master.TestSplitLogManager)
  testUnassignedTimeout(org.apache.hadoop.hbase.master.TestSplitLogManager)
{code}
Please adjust TestSplitLogManager accordingly.

** Comment 21 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4056
-----------------------------------------------------------
Ship it!
Looks good to me. Nice simple fix.
According to the jira testTaskErr is failing, probably needs to be adjusted.
- Lars
On 2011-12-21 18:06:55, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 18:06:55)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 22 **
I am thinking about sync delete for the failure case.  What do you think?
I am adjusting the test failure now.


** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-21 21:30:56.293535)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
This one adjusted the TestSplitLogManager since we don't delete node in case of task failure.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 7b7316f 
  [file java] 5c9d7dd 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 26 **
Upload patch v6 to review board.
+    assertTrue(ZKUtil.checkExists(zkw, tasknode) != -1);
The original is this:
+    assertTrue(ZKUtil.checkExists(zkw, tasknode) == -1);
This assertion can be satisfied when there is no race without this patch.
With this patch, we don't delete any failed task node.  So the node should be
there now.
I am still working on a patch to delete the node synchronously in this scenario.


** Comment 27 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4059
-----------------------------------------------------------
Test change looks good to me.
- Lars
On 2011-12-21 21:30:56, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-21 21:30:56)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 7b7316f 
bq.    [file java] 5c9d7dd 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 28 **
Do we have a test case where zk nodes (including the failed task node) survive cluster restart and distributed log splitting successfully finishes after cluster restart ?
If we use patch v6 instead of the synchronous node deletion patch (upcoming), we should check the value of resubmit_threshold. If the value is 0, we should still delete the failed task node because there would be no resubmission.

** Comment 29 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-22 00:25:32.299870)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
This patch deletes the failed task node synchronously.  I also modified a unit test to test a scenario where a failed task is not deleted properly.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 667a8b1 
  [file java] 32ad7e8 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 30 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-12-22 00:31:23.167537)
Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
Changes
-------
Removed whitespaces.
Summary
-------
In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
It used to delete the node always.
This addresses bug HBASE-5081.
    [link]
Diffs (updated)
-----
  [file java] 667a8b1 
  [file java] 32ad7e8 
Diff: [link]
Testing
-------
mvn -Dtest=TestDistributedLogSplitting clean test
Thanks,
Jimmy


** Comment 31 **
bq.  On 2011-12-21 17:05:47, Michael Stack wrote:
bq.  > Looks good to me.  How I know it works?  Would it be hard to write a test?
bq.  
bq.  Jimmy Xiang wrote:
bq.      This is a race issue hard to reproduce. Let me think about how to come up a unit test.
Jimmy.  Please paste your last patch to JIRA.  I'd like to include in our 0.92RC though it doesn't have a test.
- Michael
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4045
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 32 **
bq.  On 2011-12-21 17:05:47, Michael Stack wrote:
bq.  > Looks good to me.  How I know it works?  Would it be hard to write a test?
bq.  
bq.  Jimmy Xiang wrote:
bq.      This is a race issue hard to reproduce. Let me think about how to come up a unit test.
bq.  
bq.  Michael Stack wrote:
bq.      Jimmy.  Please paste your last patch to JIRA.  I'd like to include in our 0.92RC though it doesn't have a test.
Yes, it is in Jira: [file txt]
Thanks.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4045
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 33 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4064
-----------------------------------------------------------
[file java]
<[link]#comment9163>
    Did the first approach not work?
[file java]
<[link]#comment9164>
    It seems we can do this unconditionally now (no need for the safeToDeleteNodeAsync flag). The worst scenario is trying to remove a node that has already been removed
- Lars
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 34 **
[Comment excluded]

** Comment 35 **
bq.  On 2011-12-22 00:58:56, Lars Hofhansl wrote:
bq.  > [file java], line 373
bq.  > <[link]#file65682line373>
bq.  >
bq.  >     It seems we can do this unconditionally now (no need for the safeToDeleteNodeAsync flag). The worst scenario is trying to remove a node that has already been removed
If the failed node is not removed at the beginning, we could run into the same race issue again.
bq.  On 2011-12-22 00:58:56, Lars Hofhansl wrote:
bq.  > [file java], line 354
bq.  > <[link]#file65682line354>
bq.  >
bq.  >     Did the first approach not work?
The first approach will not hang the splitLog method, but the failed tasks won't be actually tried again since the state stays in TaskState.TASK_ERR.  We do need to delete those nodes unless we put different data in zookeeper as Stack suggested.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4064
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 36 **
[Comment excluded]

** Comment 37 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4067
-----------------------------------------------------------
[file java]
<[link]#comment9167>
    The deletion is immediate. Should this counter be incremented ?
[file java]
<[link]#comment9168>
    I think we should be more cautious because RecoverableZooKeeper has attempted retry.
    ke should be rethrown.
- Ted
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 38 **
bq.  On 2011-12-22 02:23:19, Ted Yu wrote:
bq.  > [file java], line 380
bq.  > <[link]#file65682line380>
bq.  >
bq.  >     The deletion is immediate. Should this counter be incremented ?
Yes, so that we can track how many deletions succeed, how many fail.
bq.  On 2011-12-22 02:23:19, Ted Yu wrote:
bq.  > [file java], line 386
bq.  > <[link]#file65682line386>
bq.  >
bq.  >     I think we should be more cautious because RecoverableZooKeeper has attempted retry.
bq.  >     ke should be rethrown.
In this case, we should not re-throw it actually.  In the corresponding asynchronous deleteNode method, it doesn't throw KeeperException either. It just logs the failure.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4067
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 39 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4069
-----------------------------------------------------------
[file java]
<[link]#comment9171>
    Looking at current code:
      private void deleteNodeFailure(String path) {
        LOG.fatal(""logic failure, failing to delete a node should never happen "" +
            ""because delete has infinite retries"");
    since the above failure should never happen, the correct action would be to rethrown the exception - for both synchronous and async cases.
- Ted
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 40 **
[Comment excluded]

** Comment 41 **
I can understand the following code from [file java]:
{code}
        LOG.fatal(this.getName() + "" Got while writing log entry to log"", e);
        throw e;
{code}
But not this code from [file java]:
{code}
    } catch (KeeperException.NoNodeException e) {
      LOG.fatal(""logic error - end task "" + path + "" "" + ts +
          "" failed because task doesn't exist"", e);
    } catch (KeeperException e) {
{code}
I think we should add rethrowing in the above case for NoNodeException in this JIRA.

** Comment 42 **
I found 4 other occasions of LOG.fatal() without (re)throwing in [file java], such as:
{code}
    public void setBatch(TaskBatch batch) {
      if (batch = null) {
        LOG.fatal(""logic error - batch being overwritten"");
      }
{code}
I think these 4 places should throw proper exception.

** Comment 43 **
[Comment excluded]

** Comment 44 **
Integrated in HBase-TRUNK-security #40 (See )
    HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED -- AGAINpatch -p0 -R < [file txt] patch -p0 -R < [file txt]
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REAPPLY
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry
stack : 
Files : 
* [file txt]
* [file java]
* [file java]
stack : 
Files : 
* [file txt]
* [file java]
* [file java]
stack : 
Files : 
* [file txt]
* [file java]
* [file java]
stack : 
Files : 
* [file txt]
* [file java]
* [file java]


** Comment 45 **
Integrated in HBase-0.92-security #48 (See )
    HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED -- AGAIN
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REAPPLY
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 46 **
Integrated in HBase-0.92 #209 (See )
    HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED -- AGAIN
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REAPPLY
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 47 **
Integrated in HBase-TRUNK #2568 (See )
    HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REVERT -- COMMITTED BEFORE REVIEW FINISHED -- AGAINpatch -p0 -R < [file txt] patch -p0 -R < [file txt]
HBASE-5081 Distributed log splitting deleteNode races againsth splitLog retry; REAPPLY
stack : 
Files : 
* [file txt]
* [file java]
* [file java]
stack : 
Files : 
* [file txt]
* [file java]
* [file java]


** Comment 48 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4073
-----------------------------------------------------------
This patch seems to be raising too many questions.  Should we try going other route of ensuring the async delete removes the 'right' task?
[file java]
<[link]#comment9172>
    Why check for success up here rather than down inside the synchronize on task.batch?   Why not do this safeToDeleteNodeAsync in there in the else clause where we up the count of errors?  Is it not safe to do the delete of zk node NOW under the synchronize block?
[file java]
<[link]#comment9174>
    Are we duplicating the code from deleteNode here?  Should we have sync/async versions?
- Michael
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 49 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4076
-----------------------------------------------------------
[file java]
<[link]#comment9178>
    Since the value of status won't change, I think it is better to call deleteNodeNow() here.
    If we call deleteNodeNow() at line 360, we hold the lock much longer.
- Ted
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 50 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4077
-----------------------------------------------------------
[file java]
<[link]#comment9179>
    DeleteAsyncCallback is only used by deleteNode().
    I think we should simplify logic by removing deleteNode() and DeleteAsyncCallback - deleteNodeNow() uses RecoverableZooKeeper which has the retry logic.
- Ted
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 51 **
bq.  On 2011-12-22 15:24:02, Ted Yu wrote:
bq.  > [file java], line 349
bq.  > <[link]#file65682line349>
bq.  >
bq.  >     Since the value of status won't change, I think it is better to call deleteNodeNow() here.
bq.  >     If we call deleteNodeNow() at line 360, we hold the lock much longer.
Right.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4076
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 52 **
bq.  On 2011-12-22 15:34:13, Ted Yu wrote:
bq.  > [file java], line 373
bq.  > <[link]#file65682line373>
bq.  >
bq.  >     DeleteAsyncCallback is only used by deleteNode().
bq.  >     I think we should simplify logic by removing deleteNode() and DeleteAsyncCallback - deleteNodeNow() uses RecoverableZooKeeper which has the retry logic.
The difference is that deleteNode has unlimited retries.  RecoverableZooKeeper doesn't.  It has only 3 retries by default.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4077
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 53 **
bq.  On 2011-12-22 15:08:38, Michael Stack wrote:
bq.  > This patch seems to be raising too many questions.  Should we try going other route of ensuring the async delete removes the 'right' task?
Due to the race issue, we have to put more than the ""filename"" in the node and the hashmap, so as to removes the right task.
That's much bigger change and will raise more questions.
bq.  On 2011-12-22 15:08:38, Michael Stack wrote:
bq.  > [file java], line 349
bq.  > <[link]#file65682line349>
bq.  >
bq.  >     Why check for success up here rather than down inside the synchronize on task.batch?   Why not do this safeToDeleteNodeAsync in there in the else clause where we up the count of errors?  Is it not safe to do the delete of zk node NOW under the synchronize block?
It is safe to do the delete under the synchronize block. The reason is that I don't want to hold the lock on task.batch while delete the node synchronously.  
bq.  On 2011-12-22 15:08:38, Michael Stack wrote:
bq.  > [file java], line 378
bq.  > <[link]#file65682line378>
bq.  >
bq.  >     Are we duplicating the code from deleteNode here?  Should we have sync/async versions?
deleteNode is the async version.  deleteNodeNow is the sync version.  The async version can have unlimited retries.  The sync version can retry up to certain configured number (3 by default).
So the sync version doesn't guarantee it will be deleted.  The code wise, it's hard to reuse.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4073
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 54 **
@Jimmy Another tack would be ensuring splitLogDistributed has cleaned-up after itself before it returns including clean up on early-out because of exception.  It seems like we will rerun the split if we early-out if OrphanHLogAfterSplitException is thrown ONLY (Is this what happened in your scenario?  You say three log splits failed?  Was it because a new log file showed up: i.e. OrphanHLogAfterSplitException?  Or for some other reason?  If for some other reason, the split should have failed?).  I'd think that if a new file shows up while we were splitting, its fine to redo the split but I'd think that splitLogDistibuted would make sure it'd cleaned up after itself before it returned... that it had completed the batch it had been asked do.
I was waiting on this issue to be done before cutting the RC but after looking at the pieces, I think that while this an important issue, my thinking is that it rare so I won't hold up the RC.
Good stuff.

** Comment 55 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4089
-----------------------------------------------------------
I feel that the proper fix should go in the method createTaskIfAbsent()
before attempting to delete a task in zk, task.deleted is set to true. The task is not removed from tasks array until task is successfully removed from zk.
In createTaskIfAbsent() when you find a deleted task we should do the following
* If the task had completed successfully then return null. (It is as if the task is completed right away).
* if the task had completed unsuccessfully then block (with timeouts) until the task is removed from the tasks array.
Without fixing anything, the problem, I think is present only in the following scenario
- at startup the master acquires orphan tasks  listed in zookeeper. One of these orphan tasks fails. Before that orphan task could be deleted some master thread asks for that task to be completed. As  things currently stand, the SplitLogManager will reply with SUCCESS immediately. (This is because of the logic in createTaskIfAbsent())
The common case where  this race happens should work ...
- a master thread asks for a log dir to be split. That task fails but it has not been deleted from zk yet nor removed from tasks yet. The log-dir-split is retried and the retry finds the old, soon to be deleted task. But the retry will also see that task.batch is set and it will immediately throw an error saying 'someone else is waiting for this task'. And the next time log-dir-split is retried the tasks map might have been cleared and things will work.
[file java]
<[link]#comment9193>
    The task corresponding to this path has to be removed from the tasks map (as in deleteNodeSuccess())
[file java]
<[link]#comment9194>
    I guess this should be considered an error that the delete did not go through?
- Prakash
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 56 **
@Prakash:
Thanks for weighing in.
If possible, do you want to show us your proposal through a patch so that our discussion is more concrete ?
@Jimmy:
Prakash's analysis resonates with Stack's comments about OrphanHLogAfterSplitException.
Is it possible for you to collect master and region server logs so that we can verify the analysis ?
Thanks

** Comment 57 **
[Comment excluded]

** Comment 58 **
bq.  On 2011-12-22 22:55:55, Prakash Khemani wrote:
bq.  > I feel that the proper fix should go in the method createTaskIfAbsent()
bq.  > 
bq.  > before attempting to delete a task in zk, task.deleted is set to true. The task is not removed from tasks array until task is successfully removed from zk.
bq.  > 
bq.  > In createTaskIfAbsent() when you find a deleted task we should do the following
bq.  > * If the task had completed successfully then return null. (It is as if the task is completed right away).
bq.  > * if the task had completed unsuccessfully then block (with timeouts) until the task is removed from the tasks array.
bq.  > 
bq.  > Without fixing anything, the problem, I think is present only in the following scenario
bq.  > - at startup the master acquires orphan tasks  listed in zookeeper. One of these orphan tasks fails. Before that orphan task could be deleted some master thread asks for that task to be completed. As  things currently stand, the SplitLogManager will reply with SUCCESS immediately. (This is because of the logic in createTaskIfAbsent())
bq.  > 
bq.  > The common case where  this race happens should work ...
bq.  > - a master thread asks for a log dir to be split. That task fails but it has not been deleted from zk yet nor removed from tasks yet. The log-dir-split is retried and the retry finds the old, soon to be deleted task. But the retry will also see that task.batch is set and it will immediately throw an error saying 'someone else is waiting for this task'. And the next time log-dir-split is retried the tasks map might have been cleared and things will work.
""The task is not removed from tasks array until task is successfully removed from zk.""
This seems not correct.  stopTrackingTasks() will remove all tasks even if the task is not removed from zk.
That's why createTaskIfAbsent() can put a new task in the set.
If we remove stopTrackingTasks(), then the task should be still in tasks, then this alternative will work.
Will removing stopTrackingTasks() cause other issues?  For the second *, how long should we block?  If
the task is still not removed from the tasks array after the timeout, what should we do?
Can you come up a patch? I am very open to any fix.
bq.  On 2011-12-22 22:55:55, Prakash Khemani wrote:
bq.  > [file java], line 382
bq.  > <[link]#file65682line382>
bq.  >
bq.  >     The task corresponding to this path has to be removed from the tasks map (as in deleteNodeSuccess())
It is removed in the stopTrackingTasks() methods, since this one is failed, so batch.installed != batch.done.
- Jimmy
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review4089
-----------------------------------------------------------
On 2011-12-22 00:31:23, Jimmy Xiang wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-12-22 00:31:23)
bq.  
bq.  
bq.  Review request for hbase, Ted Yu, Michael Stack, and Lars Hofhansl.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  In this patch, after a task is done, we don't delete the node if the task is failed.  So that when it's retried later on, there won't be race problem.
bq.  
bq.  It used to delete the node always.
bq.  
bq.  
bq.  This addresses bug HBASE-5081.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] 667a8b1 
bq.    [file java] 32ad7e8 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  mvn -Dtest=TestDistributedLogSplitting clean test
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jimmy
bq.  
bq.


** Comment 59 **
@Stack, it is not an orphan task.  It happens in ServerShutdownHandler.  It retries the log splitting if the previous one failed for any reason:
line 178:
this.services.getExecutorService().submit(this);
It keep retrying.  Should we have a limit here?

** Comment 60 **
[Comment excluded]

** Comment 61 **
Currently SplitLogManager.Task doesn't have flag indicating whether the deletion was caused by successful splitting.
I think we should introduce such flag through boolean or enum so that stopTrackingTasks() can make better decision.
Looking at the code from 0.89-fb, I can see some subtle differences between 0.89-fb and TRUNK.
e.g. task.batch.notify() in 0.89-fb is guarded by a condition:
{code}
      if (!task.isOrphan()) {
        synchronized (task.batch) {
          if (status == SUCCESS) {
            task.batch.done++;
          } else {
            task.batch.error++;
          }
          if ((task.batch.done + task.batch.error) == task.batch.installed) {
            task.batch.notify();
          }
        }
      }
{code}
I think we should unify the two codebases so that our observations have common ground.

** Comment 62 **
@Jimmy I see. Its a recursion on ioe;  Any ioe could get us stuck here retrying split logs of a downed server.  I suppose there should be a bound on how many times we try split logs or a particular server.

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
[Comment excluded]

** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]

** Comment 68 **
[Comment excluded]

** Comment 69 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.TestReplication
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
                  org.apache.hadoop.hbase.master.TestSplitLogManager
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 70 **
fix an (unrelated) test failure in TestSplitLogManager.testRescanCleanup()

** Comment 71 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 76 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 72 **
@Prakash, this patch seems not fixed the problem.  Assume splitLog failed, and the deleteNode is queued up, then the splitLog is retried, then
createTaskIfAbsent is called, the failed task is still in the tasks map, so it's batch info is updated, batch.installed++, and a createNode is queued up.  Now, the deleteNode succeeds and on the deleteNodeSuccess callback, the task is removed from the tasks map.  Now it will be an orphan task.  batch.installed will never be equal to batch.done + batch.err, so the splitLog will hang.
Can we delete the task from the tasks map in the deleteNode call before calls zookeeper's delete?

** Comment 73 **
Assuming splitlog failed, the delete of the zk-task-node is queued up,
splitlog is retried, createTaskIfAbsent is called, the following piece of
code in createTaskIfAbsent() will be hit (because oldtask status is
neither IN_PROGRESS nor SUCCESS. Oldtask status is FAILED)
 LOG.warn(""Transient problem. Failure because previously failed task"" +
            "" state still present. Waiting for znode delete callback"" +
            "" path="" + path);
        return oldtask;
The splitlog retry will fail immediately with IOException(""duplicate log
split scheduled for ""). The caller (master) will wait and retry again.
On 1/3/12 7:02 PM, ""Jimmy Xiang (Commented) (JIRA)"" <jira@apache.org>


** Comment 74 **
In the above scenario, would there be many ""duplicate log split scheduled for "" messages in master log file ?
I think the latest patch should go through verification in a real cluster.

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
[Comment excluded]

** Comment 78 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 79 **
These failures seem unrelated to this patch -- they happened on previous hadoopqa build for unrelated patch.

** Comment 80 **
[Comment excluded]

** Comment 81 **
{code}
+        if (oldtask.status == FAILURE) {
+          // wait for status to change to DELETED
+          try {
+            oldtask.wait();
+          } catch (InterruptedException e) {
+            LOG.warn(""Interrupted when waiting for znode delete callback"");
+            // fall through to return failure
{code}
Should a loop be introduced wrapping oldtask.wait() ? JVM sometimes produces spurious notification.
{code}
+        LOG.fatal(""Logic error. Deleted task still present in tasks map"");
+        assert false : ""Deleted task still present in tasks map"";
{code}
The assertion wouldn't be effective at runtime, right ?
I think throwing exception would be better.


** Comment 82 **
[Comment excluded]

** Comment 83 **
w.r.t. master retry after the following exception is raised:
{code}
        throw new IOException(""duplicate log split scheduled for ""
            + lf.getPath());
{code}
I see this code in MasterFileSystem.splitLog():
{code}
      try {
        splitLogSize = splitLogManager.splitLogDistributed(logDirs);
      } catch (OrphanHLogAfterSplitException e) {
        LOG.warn(""Retrying distributed splitting for "" + serverNames, e);
        splitLogManager.splitLogDistributed(logDirs);
      }
{code}
Would the retry be carried out as described ?

** Comment 84 **
About the test suite, from [link]
{code}
Running org.apache.hadoop.hbase.master.TestSplitLogManager
Running org.apache.hadoop.hbase.regionserver.TestSeekOptimizations
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.055 sec
{code}
It is a pity that the hung test was masked by known failures.
MAPREDUCE-3583 seems to have gone into oblivion.

** Comment 85 **
...
If createTaskIfAbsent() returns a non-null oldtask then that is treated as
an error by the caller. The caller (splitLogDistributed() will throw an
IOException)
If the caller thread is interrupted while waiting for status to change to
DELETED then createTaskIfAbsent returns errror (I.e. Oldtask) to the
caller. It is better to return with error than to loop. I missed setting
the interrupt flag on the thread ... Will do that in the next diff.
If a task is found in the tasks map even after oldtask's state had changed
to DELETED then the found task is returned as an error. So it is OK even
if asserts are not enabled at run time. (This case can actually happen if
another thread sneaks in and create another task with the same name, but
it shouldn't happen for log-splitting tasks.)
On 1/4/12 11:47 AM, ""Zhihong Yu (Commented) (JIRA)"" <jira@apache.org>
wrote:


** Comment 86 **
[Comment excluded]

** Comment 87 **
Will look into the test failure. I am not sure I know where to find the
test run's output logs.
On 1/4/12 12:35 PM, ""Zhihong Yu (Commented) (JIRA)"" <jira@apache.org>


** Comment 88 **
set the interrupt flag on InterruptedException. Remove OrphanLogException handling for distributed log splitting.

** Comment 89 **
[Comment excluded]

** Comment 90 **
If there is a spurious wakeup before the status has changed to DELETE then
the code will return error (oldtask) to the caller.
Regarding the hung TestSplitLogManager test in
[link] - I
couldn't find what failed or what hung.
[link]
che.hadoop.hbase.master/TestSplitLogManager/ shows that everything passed.


** Comment 91 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 77 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 92 **
[Comment excluded]

** Comment 93 **
All tests but TestClassLoading (unrelated) pass for me locally:
{code}
...
Results :
Failed tests:   testClassLoadingFromHDFS(org.apache.hadoop.hbase.coprocessor.TestClassLoading): Class TestCP1 was missing on a region
Tests in error: 
  testEnableTableRoundRobinAssignment(org.apache.hadoop.hbase.client.TestAdmin): org.apache.hadoop.hbase.TableNotEnabledException: testEnableTableAssignment
Tests run: 792, Failures: 1, Errors: 1, Skipped: 10
 ------------------------------------------------------------------------
 BUILD FAILURE
 ------------------------------------------------------------------------
 There are test failures.
{code}

** Comment 94 **
[Comment excluded]

** Comment 95 **
{code}
+          try {
+            oldtask.wait();
+          } catch (InterruptedException e) {
{code}
I think the wait() above should be enclosed in a loop. The rationale is that spurious wakeup may mask successful deletion of old task.
I changed the if statement to while:
{code}
        while (oldtask.status == FAILURE) {
{code}
The following two tests passed:
{code}
  850  mt -Dtest=TestSplitLogManager
  851  mt -Dtest=TestDistributedLogSplitting
{code}
Also, it would be nice if someone can verify that the problem is fixed in a real cluster.
I am waiting for a real cluster to perform testing because our 60-node cluster is currently being used for hadoop testing.

** Comment 96 **
[Comment excluded]

** Comment 97 **
Patch based on Prakash's latest patch.
Changed 'if (oldtask.status == FAILURE)' to a while loop.
Also restored @param for the first SplitLogManager ctor

** Comment 98 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 78 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 99 **
{code}
+        while (oldtask.status == FAILURE) {
+          // wait for status to change to DELETED
+          try {
+            oldtask.wait();
+          } catch (InterruptedException e) {
+            Thread.currentThread().interrupt();
+            LOG.warn(""Interrupted when waiting for znode delete
callback"");
+            // fall through to return failure
           }
-          oldtask.setBatch(batch);
         }
{code}
Changing the 'if' to 'while' is OK. But in case of interruptedexception
you should exit the while loop and fall through and return.
If you don't return on interrupt then there is a good possibility of
deadlock when the process is trying to exit.
Also there is no point calling oldtask.wait() with the thread's interrupt
set. It will immediately throw InterruptedException again.


** Comment 100 **
[Comment excluded]

** Comment 101 **
bq. Changing the 'if' to 'while' is OK. But in case of interruptedexception...you should exit the while loop and fall through and return.
@Ted This would seem to say that the while should just stay an if?
Otherwise, the same old test failures; it don't seem to be an issue w/ this patch

** Comment 102 **
[Comment excluded]

** Comment 103 **
[Comment excluded]

** Comment 104 **
Couldn't you just move the try/catch outside the while loop like so:
{code}
try {
  while (oldtask.status == FAILURE) {
    // wait for status to change to DELETED
    oldtask.wait();
  }
} catch (InterruptedException e) {
  Thread.currentThread().interrupt();
  LOG.warn(""Interrupted when waiting for znode delete callback"");
  // fall through to return failure
}
{code}
?

** Comment 105 **
[Comment excluded]

** Comment 106 **
[Comment excluded]

** Comment 107 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 78 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 108 **
[Comment excluded]

** Comment 109 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 110 **
[Comment excluded]

** Comment 111 **
[Comment excluded]

** Comment 112 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 79 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 113 **
[Comment excluded]

** Comment 114 **
[Comment excluded]

** Comment 115 **
[Comment excluded]

** Comment 116 **
Was the log splitting for 1325810744985 ever done ?
In case of retry, the following code would be executed multiple times:
{code}
  public long splitLogDistributed(final List<Path> logDirs) throws IOException {
    MonitoredTask status = TaskMonitor.get().createStatus(
          ""Doing distributed log split in "" + logDirs);
{code}
leading to multiple MonitoredTask instances.
The redundant MonitoredTask instances can be handled in a different JIRA.

** Comment 117 **
[Comment excluded]

** Comment 118 **
Integrated in HBase-TRUNK #2614 (See )
    HBASE-5081  Distributed log splitting deleteNode races against splitLog retry (Prakash)
tedyu : 
Files : 
* [file txt]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 119 **
We experienced log splitting weirdness due to hdfs problem before (on an earlier version of 0.92)
I think handling hdfs failure should be done in a separate JIRA.

** Comment 120 **
Integrated in HBase-0.92 #226 (See )
    HBASE-5081  Distributed log splitting deleteNode races against splitLog retry (Prakash)
tedyu : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 121 **
Integrated in HBase-TRUNK-security #65 (See )
    HBASE-5081  Distributed log splitting deleteNode races against splitLog retry (Prakash)
tedyu : 
Files : 
* [file txt]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 122 **
Integrated in HBase-0.92-security #63 (See )
    HBASE-5081  Distributed log splitting deleteNode races against splitLog retry (Prakash)
tedyu : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 123 **
[Comment excluded]

** Comment 124 **
[Comment excluded]

** Comment 125 **
[Comment excluded]

** Comment 126 **
[Comment excluded]

** Comment 127 **
[Comment excluded]

** Comment 128 **
Now, all logs are split. I am happy with the patch.

** Comment 129 **
[Comment excluded]

** Comment 130 **
Will open new issue if other distributed log splitting bug is discovered.

** Comment 131 **
[Comment excluded]
"
HBASE-4634,https://issues.apache.org/jira/browse/HBASE-4634,https://github.com/apache/hbase/blob/0.92.0/src/test/java/org/apache/hadoop/hbase/TestRegionRebalancing.java,"""test.build.data"" property overused leading to write data at the wrong place",NO,"""test.build.data"" is overloaded in HBase.At the beginning, it's the ""Default parent directory for test output."", but then it's rewritten to be the directory itself in functions like HBaseTestingUtility#startMiniDFSCluster

It seems that this value is already used by MiniDFS (i.e. outside of HBase): 
""Name is as it is because mini dfs has hard-codings to put test data here.""

As it is today, there is at least a bug in HBaseTestingUtility:

{noformat}
  public void initTestDir() {
    if (System.getProperty(TEST_DIRECTORY_KEY) == null) {
      clusterTestBuildDir = setupClusterTestBuildDir();
      System.setProperty(TEST_DIRECTORY_KEY, clusterTestBuildDir.getPath());
    }
  }
{noformat}

if you set a value for ""test.build.data"", the test dir will be the parent directory and not a temp subdir, leading to issues as multiple tests will end-ups in the same (bad) directory. This function is barely used today, hence it's not visible, but I would like to use it in some new code.

A possible fix is to remove the check for null and continue with the overloading, but I don't think it would be a big issue to create a new key(like ""test.build.data.rootdirectory"") specific to the root directory and to use ""test.build.data"" only to communicate with MiniDFS. Feedback welcome.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Please use the same indent as the surrounding file (two spaces for a tab).
Should we deprecate '   public static final String TEST_DIRECTORY_KEY = ""test.build.data"";'  so we can later change it to private or protected access?
'root' is a pretty overloaded term in these parts.  There is unix root and then there is hbase root region and hbase.rootdir.  You are using ROOT_TEST_DIRECTORY in place of TEST_DIRECTORY.  Maybe BASE_TEST_DIRECTORY instead?
FYI, the surrounding code has spaces between operators.  e.g. '+    if (clusterTestBuildDir==null){' should be '+    if (clusterTestBuildDir == null) {'
Otherwise, patch is going in right direction IMO.  Good stuff.
I'm not sure what to do with the patch 20111020_4639_TestStoreFile.patch.  Is it to be applied here or over in hbase-4639?

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
I am going to attach a second version of the patch. I checked indent, it seems ok to me.
It took more time than expected because I haven't managed to escape some modifications to the get files functions. Not much impacts for the user. Basically, there is now a clear distinction between:
- base directory: configurable directory where all tests put their data
- data directory: sub directory used by the test
- cluster directory: subdirectory for the cluster stuff (dfs or hbase)
This will help to have multiple HBaseTestingUtility in the same JVM (// or not).
I have also removed a duplicate getter (something as getHbaseCluster while getHBase cluster exists). 
It includes the fixes for HBASE-4639 and most if not all the bad usage mentioned in HBASE-4326 (but I did not fix the root issue of HBASE-4326).
It seems to work on my env, currently n-checking again.
I have a systematic errors in the test, but it's in #org.apache.hadoop.hbase.io.hfile.TestHFileBlock#testBlockHeapSize , I believe it was there at the beginning.
I have random errors in: TestDistributedLogSplitting, regionserver.TestServerCustomProtocol, client.TestAdmin master.TestHMasterRPCException, coprocessor.TestRegionServerCoprocessorExceptionWithAbort, wal.TestLogRolling, CatalogTrackerOnCluster and a few else, but it works when I replay the test set, so I tend to think they belong to the flaky test sets.
At the end of the day, the patch is not that medium... Sorry for that.
Will add a new comment when the tests will be over and I will have rechecked the flaky one, but you can already have a look.


** Comment 8 **
[Comment excluded]

** Comment 9 **
A few more modifications in some tests. All test runs fine.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
@nkeywal  Mind refreshing your TRUNK?  Patch did not apply cleanly and I got this when trying to build it:
{code}
 ------------------------------------------------------------------------
 BUILD FAILURE
 ------------------------------------------------------------------------
 Compilation failure
[file java]: cannot find symbol
symbol: variable ShowTime
        ShowTime.start();
[file java]: cannot find symbol
symbol: variable ShowTime
        ShowTime.pub(""public void run() "");
[file java]: cannot find symbol
symbol  : variable ShowTime
location: class org.apache.hadoop.hbase.master.TestDistributedLogSplitting
[file java]: cannot find symbol
symbol  : variable ShowTime
location: class org.apache.hadoop.hbase.master.TestDistributedLogSplitting
[file java]: cannot find symbol
symbol  : method getTestDir()
location: class org.apache.hadoop.hbase.HBaseTestingUtility
{code}
Thanks boss.

** Comment 13 **
that's an error I missed in my patch. Ok to refresh.
On Mon, Oct 24, 2011 at 5:51 PM, stack (Commented) (JIRA)


** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]
"
HBASE-6023,https://issues.apache.org/jira/browse/HBASE-6023,https://github.com/apache/hbase/blob/0.92.2/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureServer.java,Normalize security audit logging level with Hadoop,YES,"A pretty trivial change, we log failed authentication attempts at WARN level, as does Hadoop, but log successful authentication at TRACE level, where Hadoop instead logs it at INFO level.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 31 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Integrated in HBase-TRUNK #2896 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339914)
     Result = FAILURE
apurtell : 
Files : 
* [file java]


** Comment 5 **
Integrated in HBase-0.94 #198 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339916)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 6 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #8 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339914)
     Result = FAILURE
apurtell : 
Files : 
* [file java]


** Comment 7 **
Integrated in HBase-0.92 #410 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339918)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]


** Comment 8 **
Integrated in HBase-0.92-security #107 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339918)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]


** Comment 9 **
Integrated in HBase-0.94-security #27 (See )
    HBASE-6023. Normalize security audit logging level with Hadoop (Revision 1339916)
     Result = SUCCESS
apurtell : 
Files : 
* /hbase/branches/0.[file java]

"
HBASE-5735,https://issues.apache.org/jira/browse/HBASE-5735,https://github.com/apache/hbase/blob/0.94.0/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureServer.java,Clearer warning message when connecting a non-secure HBase client to a secure HBase server,YES,"When a connection from a non secure-rpc-engine
client is attempted the warning message you get is related to version
mismatch:

Mar 28, 3:27:13 PM WARN org.apache.hadoop.ipc.SecureServer Incorrect
header or version mismatch from 172.29.82.121:43849 got version 3
expected version 4

While this is true, it isn't as useful as it could be. A more specific error message warning end users that they're connecting with a non-secure client may be more useful.","** Comment 1 **
Give a more specific error message if a current, but insecure, client is attempting to connect to a secure HBase server.
Several users have reported being confused by the more generic error message (thinking they were using old client JARs, etc).

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestDrainingServer
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
Adds the server's version to the warning message when an insecure client is attempting to connect (per Jon's suggestion).

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
Integrated in HBase-TRUNK #2727 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310914)
     Result = SUCCESS
stack : 
Files : 
* [file java]


** Comment 10 **
Integrated in HBase-0.94 #98 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310915)
     Result = SUCCESS
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 11 **
Integrated in HBase-0.92 #362 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310916)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]


** Comment 12 **
Integrated in HBase-TRUNK-security #162 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310914)
     Result = FAILURE
stack : 
Files : 
* [file java]


** Comment 13 **
Integrated in HBase-0.94-security #9 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310915)
     Result = SUCCESS
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 14 **
Integrated in HBase-0.92-security #105 (See )
    HBASE-5735 Clearer warning message when connecting a non-secure HBase client to a secure HBase server (Revision 1310916)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]

"
HBASE-5690,https://issues.apache.org/jira/browse/HBASE-5690,https://github.com/apache/hbase/blob/0.94.0/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java,compression does not work in Store.java of 0.94,NO,"HBASE-5442 The store.createWriterInTmp method missing ""compression""","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Integrated in HBase-0.94 #72 (See )
    HBASE-5690 compression does not work in [file java] of 0.94 (Honghua Zhu) (Revision 1307851)
     Result = FAILURE
tedyu : 
Files : 
* /hbase/branches/0.[file java]


** Comment 4 **
[Comment excluded]
"
HBASE-4861,https://issues.apache.org/jira/browse/HBASE-4861,https://github.com/apache/hbase/blob/0.94.0/src/main/java/org/apache/hadoop/hbase/util/BloomFilterFactory.java,Fix some misspells and extraneous characters in logs; set some to TRACE,YES,Some small clean up in logs.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Integrated in HBase-TRUNK-security #8 (See )
    HBASE-4861 Fix some misspells and extraneous characters in logs; set some to TRACE
stack : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 4 **
Integrated in HBase-TRUNK #2478 (See )
    HBASE-4861 Fix some misspells and extraneous characters in logs; set some to TRACE
stack : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 5 **
Integrated in HBase-0.92-security #13 (See )
    HBASE-4861 Fix some misspells and extraneous characters in logs; set some to TRACE
stack : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 6 **
Integrated in HBase-0.92 #163 (See )
    HBASE-4861 Fix some misspells and extraneous characters in logs; set some to TRACE
stack : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 7 **
[Comment excluded]
"
HBASE-2418,https://issues.apache.org/jira/browse/HBASE-2418,https://github.com/apache/hbase/blob/0.94.0/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java,add support for ZooKeeper authentication,NO,"Some users may run a ZooKeeper cluster in ""multi tenant mode"" meaning that more than one client service would
like to share a single ZooKeeper service instance (cluster). In this case the client services typically want to protect
their data (ZK znodes) from access by other services (tenants) on the cluster. Say you are running HBase and Solr 
and Neo4j, or multiple HBase instances, etc... having authentication/authorization on the znodes is important for both 
security and helping to ensure that services don't interact negatively (touch each other's data).

Today HBase does not have support for authentication or authorization. This should be added to the HBase clients
that are accessing the ZK cluster. In general it means calling addAuthInfo once after a session is established:

http://hadoop.apache.org/zookeeper/docs/current/api/org/apache/zookeeper/ZooKeeper.html#addAuthInfo(java.lang.String, byte[])

with a user specific credential, often times this is a shared secret or certificate. You may be able to statically configure this
in some cases (config string or file to read from), however in my case in particular you may need to access it programmatically,
which adds complexity as the end user may need to load code into HBase for accessing the credential.

Secondly you need to specify a non ""world"" ACL when interacting with znodes (create primarily):
http://hadoop.apache.org/zookeeper/docs/current/api/org/apache/zookeeper/data/ACL.html
http://hadoop.apache.org/zookeeper/docs/current/api/org/apache/zookeeper/ZooDefs.html

Feel free to ping the ZooKeeper team if you have questions. It might also be good to discuss with some 
potential end users - in particular regarding how the end user can specify the credential.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
The purpose of this issue is to prevent other (non-hbase) applications from accidentally writing to hbase's znodes on a multi-tenant zookeeper cluster .
I don't think we have to get too fancy; Zookeeper's Digest authentication would be sufficient for this use-case.
Assuming that Hbase clients only need read-only access to hbase's zookeeper znodes, then this simple approache would be sufficient:
Add a configuration property: hbase.zookeepeer.digest.auth.secrets.filename.
The secret will go in a separate file so that you can deploy the secret only on the hbase servers; you don't want the secret directly in the hbase config file, since the hbase config file is also deployed to hbase clients.
The contents of the secrets file will have one line with the data: username:password.
The Hbase server code (master/regionserver) will change to:
On server startup:
-----------------
if the property exists and the file exists and the file is readable:
  open the file and read the contents
  save the secret in server config state so that it can be used when connecting to zookeeper
On connecting to zookeeper:
--------------------------
right after connected to zookeeper:
  if we have a digest secret from server startup:
    zk.addAuthInfo(""digest"", digest_secret);
    save in server config state:
      create_acl_list = ZooDefs.Ids.READ_ACL_UNSAFE.clone();
      create_acl_list.addAll(ZooDefs.Ids.CREATOR_ALL_ACL);
      // allows world: read access; hbase servers: all privs
  else: // don't use authentication
    save in server configuration state:
      create_acl_list = ZooDefs.Ids.OPEN_ACL_UNSAFE;
On creating a node in zookeeper:
-------------------------------
  pass create_acl_list as the acl parameter when calling Zookeeper.create()


** Comment 4 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
Review request for hbase, Gary Helmling and Eugene Koontz.
Summary
-------
These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
  Server {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    keyTab=""/etc/hbase/conf/hbase.keytab""
    storeKey=true
    useTicketCache=false
    principal=""zookeeper/$HOSTNAME"";
  };
  Client {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    useTicketCache=false
    keyTab=""/etc/hbase/conf/hbase.keytab""
    principal=""hbase/$HOSTNAME"";
  };
and then configure both the client and server processes to use it, for example in hbase-site.xml:
  HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
There is extraneous whitespace in code surrounding these changes.
This addresses bug HBASE-2418.
    [link]
Diffs
-----
  [file java] f613ba9 
  [file java] PRE-CREATION 
  [file java] a75cf87 
  [file java] bb67e53 
  pom.xml c74ce25 
  [file java] 05abeb7 
Diff: [link]
Testing
-------
These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
Thanks,
Andrew


** Comment 5 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3270
-----------------------------------------------------------
Patch looks good.  There's a few questions below.  You fellas are running this at TM?
pom.xml
<[link]#comment7314>
    What are the implications of shipping a 3.4 zk snapshot with 0.92 hbase?  Will a 3.4 client be able to talk to a 3.3.3. ensemble?
[file java]
<[link]#comment7316>
    So, how do we guarantee that our session w/ zk is secure if the hbase install is configured secure?  What is in place to prevent our connecting insecure to a zk ensemble if the hbase is supposed to be secure?
[file java]
<[link]#comment7315>
    Would suggest filing the jira and reference it here.
[file java]
<[link]#comment7317>
    Good
[file java]
<[link]#comment7318>
    This line is no longer needed.
[file java]
<[link]#comment7319>
    This is an insecure cluster using a secure zk?
- Michael
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 6 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3272
-----------------------------------------------------------
[file java]
<[link]#comment7320>
    I agree that simply checking for a configuration file is insufficient. 
    We should use the JAAS configuration class ([link] API to parse the supplied JAAS configuration and make sure that the ""Client"" section exists. We could also log some warnings or info based on what we find there (for example, if the ""Client"" section exists, but there's no principal, LOG.warn(""No principal found in Client section"").
[file java]
<[link]#comment7321>
    s/Its/It's/
[file java]
<[link]#comment7322>
    Note that this fix is also in the patch for HBASE-3861: [link]
- Eugene
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 7 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3277
-----------------------------------------------------------
[file java]
<[link]#comment7334>
    Maybe add something about final test, since we are summarizing the other tests: 
    ""Finally, we check the ACLs of a node outside of the /hbase hierarchy and verify that its ACL is simply 'hbase:Perms.ALL'.""
- Eugene
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 8 **
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > pom.xml, line 794
bq.  > <[link]#file58410line794>
bq.  >
bq.  >     What are the implications of shipping a 3.4 zk snapshot with 0.92 hbase?  Will a 3.4 client be able to talk to a 3.3.3. ensemble?
bq.  Will a 3.4 client be able to talk to a 3.3.3. ensemble?
No, but we can make this change conditional on enabling the Maven '-P security' profile. I should have done that already.
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > [file java], line 668
bq.  > <[link]#file58412line668>
bq.  >
bq.  >     So, how do we guarantee that our session w/ zk is secure if the hbase install is configured secure?  What is in place to prevent our connecting insecure to a zk ensemble if the hbase is supposed to be secure?
ZooKeeper auth is independent of RPC auth.
Connecting insecurely to a secure ZK ensemble is totally acceptable from a non-HBase point of view. It allows backwards compatibility over in ZK land.
Even when running secure HBase, most clients would have no trouble even if connecting insecurely to ZK; only the Master and RegionServers would want to authenticate and set ACLs accordingly.
We could add another check elsewhere in the Master and RegionServer (via ZKUtil presumably) if HBase security is enabled to test that ACLs are set up, but this won't let someone run with an insecure ZooKeeper version, maybe 3.3.3 or whatever. Maybe someone will want that. I think it's a user concern.
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > [file java], line 676
bq.  > <[link]#file58412line676>
bq.  >
bq.  >     Would suggest filing the jira and reference it here.
Eugene opened HBASE-4791. Will make a note.
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > [file java], line 77
bq.  > <[link]#file58415line77>
bq.  >
bq.  >     This is an insecure cluster using a secure zk?
ZooKeeper auth is independent of RPC auth.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3270
-----------------------------------------------------------
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 9 **
bq.  On 2011-11-15 20:15:21, Eugene Koontz wrote:
bq.  > [file java], line 669
bq.  > <[link]#file58412line669>
bq.  >
bq.  >     I agree that simply checking for a configuration file is insufficient. 
bq.  >     
bq.  >     We should use the JAAS configuration class ([link] API to parse the supplied JAAS configuration and make sure that the ""Client"" section exists. We could also log some warnings or info based on what we find there (for example, if the ""Client"" section exists, but there's no principal, LOG.warn(""No principal found in Client section"").
Thanks for opening HBASE-4791. I think we can follow up on this there.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3272
-----------------------------------------------------------
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 10 **
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > [file java], line 676
bq.  > <[link]#file58412line676>
bq.  >
bq.  >     Would suggest filing the jira and reference it here.
bq.  
bq.  Andrew Purtell wrote:
bq.      Eugene opened HBASE-4791. Will make a note.
JIRA created and linked to HBASE-2418: [link]
bq.  On 2011-11-15 20:12:11, Michael Stack wrote:
bq.  > [file java], line 77
bq.  > <[link]#file58415line77>
bq.  >
bq.  >     This is an insecure cluster using a secure zk?
bq.  
bq.  Andrew Purtell wrote:
bq.      ZooKeeper auth is independent of RPC auth.
Both zookeeper server and client are using SASL authentication since there are both ""Server"" and ""Client"" sections in the jaas.conf file. So HBase and Zookeeper authenticate with each other in this test.
- Eugene
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3270
-----------------------------------------------------------
On 2011-11-15 19:43:37, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 19:43:37)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.    [file java] a75cf87 
bq.    [file java] bb67e53 
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 11 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-11-15 23:15:34.845036)
Review request for hbase, Gary Helmling and Eugene Koontz.
Changes
-------
Updated patch addresses review comments to date that have specific suggestions.
Summary
-------
These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
  Server {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    keyTab=""/etc/hbase/conf/hbase.keytab""
    storeKey=true
    useTicketCache=false
    principal=""zookeeper/$HOSTNAME"";
  };
  Client {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    useTicketCache=false
    keyTab=""/etc/hbase/conf/hbase.keytab""
    principal=""hbase/$HOSTNAME"";
  };
and then configure both the client and server processes to use it, for example in hbase-site.xml:
  HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
There is extraneous whitespace in code surrounding these changes.
This addresses bug HBASE-2418.
    [link]
Diffs (updated)
-----
  pom.xml c74ce25 
  [file java] 05abeb7 
  [file java] bb67e53 
  [file java] a75cf87 
  [file java] f613ba9 
  [file java] PRE-CREATION 
Diff: [link]
Testing
-------
These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
Thanks,
Andrew


** Comment 12 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3286
-----------------------------------------------------------
pom.xml
<[link]#comment7352>
    This addresses the comment about shipping a 3.4-SNAPSHOT if it is not warranted. The POM stanza here is a dup from related changes in HBASE-3025 with the zookeeper.version property added.
- Andrew
On 2011-11-15 23:15:34, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-15 23:15:34)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 13 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-11-17 20:58:47.295983)
Review request for hbase, Gary Helmling and Eugene Koontz.
Changes
-------
Updated POM to pull in Hadoop 0.20.205.1-7070-SNAPSHOT if building under the security profile (-P security). 0.20.205 does not yet include HADOOP-7070. Without it, the JAAS configuration required for secure operation of the ZooKeeper client will be ignored. This is not an issue with this patch per se. Hadoop without 7070 overrides any JAAS configuration. ZooKeeper integrated security in such a way as to require one. HBase is stuck in the middle here.
We will file another JIRA for simplifying the configuration of a secure HBase cluster. The user should need only to update one or two configuration properties in hbase-site.xml with the remainder handled behind the scenes. Within the context of that JIRA we can look at having HBase build the ZooKeeper JAAS configuration programatically, like Hadoop does. We may be able to simply update the LoginContext that Hadoop provides. 
Summary
-------
These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
  Server {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    keyTab=""/etc/hbase/conf/hbase.keytab""
    storeKey=true
    useTicketCache=false
    principal=""zookeeper/$HOSTNAME"";
  };
  Client {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    useTicketCache=false
    keyTab=""/etc/hbase/conf/hbase.keytab""
    principal=""hbase/$HOSTNAME"";
  };
and then configure both the client and server processes to use it, for example in hbase-site.xml:
  HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
There is extraneous whitespace in code surrounding these changes.
This addresses bug HBASE-2418.
    [link]
Diffs (updated)
-----
  pom.xml c74ce25 
  [file java] 05abeb7 
  [file java] bb67e53 
  [file java] a75cf87 
  [file java] f613ba9 
  [file java] PRE-CREATION 
Diff: [link]
Testing
-------
These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
Thanks,
Andrew


** Comment 14 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3335
-----------------------------------------------------------
Ship it!
+1 on commit (if all tests pass and my questions below have the answers i want)
pom.xml
<[link]#comment7446>
    This stuff is also in other patches?  I suppose we'll see who goes in first.
pom.xml
<[link]#comment7449>
    This is in gary's repo?  Is this the only version we'll work with? 
[file java]
<[link]#comment7450>
    These are not zk 3.4 imports are they?
[file java]
<[link]#comment7451>
    Is this a 3.4 zk change?
[file java]
<[link]#comment7453>
    Are these only in zk 3.4?
[file java]
<[link]#comment7455>
    This will work w/ 3.3.3. zk?
- Michael
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 15 **
bq.  On 2011-11-17 23:21:44, Michael Stack wrote:
bq.  > +1 on commit (if all tests pass and my questions below have the answers i want)
-1 based on review, thanks.
bq.  On 2011-11-17 23:21:44, Michael Stack wrote:
bq.  > pom.xml, line 251
bq.  > <[link]#file59198line251>
bq.  >
bq.  >     This stuff is also in other patches?  I suppose we'll see who goes in first.
Yes
bq.  On 2011-11-17 23:21:44, Michael Stack wrote:
bq.  > [file java], line 39
bq.  > <[link]#file59199line39>
bq.  >
bq.  >     These are not zk 3.4 imports are they?
You are right, this is not going to work without some kind of shim. 
bq.  On 2011-11-17 23:21:44, Michael Stack wrote:
bq.  > pom.xml, line 1354
bq.  > <[link]#file59198line1354>
bq.  >
bq.  >     This is in gary's repo?  Is this the only version we'll work with?
Without 7070 Hadoop will clobber any JAAS configuration supplied for ZK. So a Hadoop with 7070 must be used if one wants to set up ZK 3.4 for SASL authentication.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3335
-----------------------------------------------------------
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 16 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
[file java]
<[link]#comment7486>
    I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
    Any ideas?
    I think we have to pull in 3.4 unconditionally.
- Andrew
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 17 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
- Lars
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 18 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
bq.  
bq.  Lars Hofhansl wrote:
bq.      Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
We can put in the other two patches and defer this one until 3.4 is released. Consequence would be that 3025 can be subverted if one allows direct client access to the ZK cluster.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 19 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
bq.  
bq.  Lars Hofhansl wrote:
bq.      Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
bq.  
bq.  Andrew Purtell wrote:
bq.      We can put in the other two patches and defer this one until 3.4 is released. Consequence would be that 3025 can be subverted if one allows direct client access to the ZK cluster.
+1 on fixing this patch so it just upgrades our zk to 3.4.  I just tried hbase w/ a 3.4 client and a 3.3.3. ensemble and it seems to work.  I asked Mahadev to be sure and he says ""A 3.3.* client should be able to talk to 3.4.0 server and vice versa.""  Its as yet unreleased but I'm pretty sure it'll be out before we ship -- maybe even a 3.4.1 (smile).
- Michael
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-17 20:58:47, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-17 20:58:47)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml c74ce25 
bq.    [file java] 05abeb7 
bq.    [file java] bb67e53 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 20 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-11-18 16:05:49.921654)
Review request for hbase, Gary Helmling and Eugene Koontz.
Changes
-------
Unconditionally pull in ZK 3.4.
Some of the POM changes might reject, depending on what goes in first, but would be trivial to fix up.
Summary
-------
These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
  Server {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    keyTab=""/etc/hbase/conf/hbase.keytab""
    storeKey=true
    useTicketCache=false
    principal=""zookeeper/$HOSTNAME"";
  };
  Client {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    useTicketCache=false
    keyTab=""/etc/hbase/conf/hbase.keytab""
    principal=""hbase/$HOSTNAME"";
  };
and then configure both the client and server processes to use it, for example in hbase-site.xml:
  HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
There is extraneous whitespace in code surrounding these changes.
This addresses bug HBASE-2418.
    [link]
Diffs (updated)
-----
  pom.xml 382c7c2 
  [file java] 05abeb7 
  [file java] 74b9e62 
  [file java] a75cf87 
  [file java] f613ba9 
  [file java] PRE-CREATION 
Diff: [link]
Testing
-------
These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
Thanks,
Andrew


** Comment 21 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
bq.  
bq.  Lars Hofhansl wrote:
bq.      Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
bq.  
bq.  Andrew Purtell wrote:
bq.      We can put in the other two patches and defer this one until 3.4 is released. Consequence would be that 3025 can be subverted if one allows direct client access to the ZK cluster.
bq.  
bq.  Michael Stack wrote:
bq.      +1 on fixing this patch so it just upgrades our zk to 3.4.  I just tried hbase w/ a 3.4 client and a 3.3.3. ensemble and it seems to work.  I asked Mahadev to be sure and he says ""A 3.3.* client should be able to talk to 3.4.0 server and vice versa.""  Its as yet unreleased but I'm pretty sure it'll be out before we ship -- maybe even a 3.4.1 (smile).
Say what you will about the Hadoop Record compiler aka Jute, but ZK is 1) the only project that uses it that I know of 2) yet consistently can answer in the affirmative regarding cross-version compatibility.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 22 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3355
-----------------------------------------------------------
This last version pulls in 3.4?  Maybe I'm blind but I don't see it.  Mind putting a patch up in JIRA for hadoopqa patch-build to run Andrew?  Good stuff.
- Michael
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 23 **
bq.  On 2011-11-18 16:59:52, Michael Stack wrote:
bq.  > This last version pulls in 3.4?  Maybe I'm blind but I don't see it.  Mind putting a patch up in JIRA for hadoopqa patch-build to run Andrew?  Good stuff.
Patch won't apply until 3025 is committed.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3355
-----------------------------------------------------------
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 24 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
bq.  
bq.  Lars Hofhansl wrote:
bq.      Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
bq.  
bq.  Andrew Purtell wrote:
bq.      We can put in the other two patches and defer this one until 3.4 is released. Consequence would be that 3025 can be subverted if one allows direct client access to the ZK cluster.
bq.  
bq.  Michael Stack wrote:
bq.      +1 on fixing this patch so it just upgrades our zk to 3.4.  I just tried hbase w/ a 3.4 client and a 3.3.3. ensemble and it seems to work.  I asked Mahadev to be sure and he says ""A 3.3.* client should be able to talk to 3.4.0 server and vice versa.""  Its as yet unreleased but I'm pretty sure it'll be out before we ship -- maybe even a 3.4.1 (smile).
bq.  
bq.  Andrew Purtell wrote:
bq.      Say what you will about the Hadoop Record compiler aka Jute, but ZK is 1) the only project that uses it that I know of 2) yet consistently can answer in the affirmative regarding cross-version compatibility.
Let me add, Mahadev tried it himself on his end too and it seemed fine and then he did the caveat that 3.4 has not yet been used in production.....
- Michael
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 25 **
bq.  On 2011-11-18 16:59:52, Michael Stack wrote:
bq.  > This last version pulls in 3.4?  Maybe I'm blind but I don't see it.  Mind putting a patch up in JIRA for hadoopqa patch-build to run Andrew?  Good stuff.
bq.  
bq.  Andrew Purtell wrote:
bq.      Patch won't apply until 3025 is committed.
3025 just went in to 0.92 and trunk, so we should be good to put the patch up for testing.
- Gary
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3355
-----------------------------------------------------------
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 26 **
bq.  On 2011-11-18 16:59:52, Michael Stack wrote:
bq.  > This last version pulls in 3.4?  Maybe I'm blind but I don't see it.  Mind putting a patch up in JIRA for hadoopqa patch-build to run Andrew?  Good stuff.
bq.  
bq.  Andrew Purtell wrote:
bq.      Patch won't apply until 3025 is committed.
bq.  
bq.  Gary Helmling wrote:
bq.      3025 just went in to 0.92 and trunk, so we should be good to put the patch up for testing.
Rebased patch against current trunk, running tests, will post patch shortly.
- Andrew
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3355
-----------------------------------------------------------
On 2011-11-18 16:05:49, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-18 16:05:49)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml 382c7c2 
bq.    [file java] 05abeb7 
bq.    [file java] 74b9e62 
bq.    [file java] a75cf87 
bq.    [file java] f613ba9 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 27 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]
-----------------------------------------------------------
(Updated 2011-11-19 01:36:34.607701)
Review request for hbase, Gary Helmling and Eugene Koontz.
Changes
-------
Rebased to trunk.
Updated TestZooKeeperACL so it won't break the build if Hadoop is missing HADOOP-7070, but the issue will be logged at WARN in the test output. (-P security selects an artifact that includes it.)
Summary
-------
These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
  Server {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    keyTab=""/etc/hbase/conf/hbase.keytab""
    storeKey=true
    useTicketCache=false
    principal=""zookeeper/$HOSTNAME"";
  };
  Client {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    useTicketCache=false
    keyTab=""/etc/hbase/conf/hbase.keytab""
    principal=""hbase/$HOSTNAME"";
  };
and then configure both the client and server processes to use it, for example in hbase-site.xml:
  HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
  HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
There is extraneous whitespace in code surrounding these changes.
This addresses bug HBASE-2418.
    [link]
Diffs (updated)
-----
  pom.xml eccf41f 
  [file java] fe6f4a5 
  [file java] 960c9c1 
  [file java] a75cf87 
  [file java] d1b7647 
  [file java] PRE-CREATION 
Diff: [link]
Testing
-------
These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
Thanks,
Andrew


** Comment 28 **
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3368
-----------------------------------------------------------
[file java]
<[link]#comment7546>
    Missing 'return' here will be added upon commit.
- Andrew
On 2011-11-19 01:36:34, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-19 01:36:34)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml eccf41f 
bq.    [file java] fe6f4a5 
bq.    [file java] 960c9c1 
bq.    [file java] a75cf87 
bq.    [file java] d1b7647 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
bq.  On 2011-11-18 04:14:48, Andrew Purtell wrote:
bq.  > [file java], line 338
bq.  > <[link]#file59201line338>
bq.  >
bq.  >     I don't see how to work around this. The code has to be recompiled against 3.3 or 3.4.
bq.  >     
bq.  >     Any ideas?
bq.  >     
bq.  >     I think we have to pull in 3.4 unconditionally.
bq.  
bq.  Lars Hofhansl wrote:
bq.      Might be a good thing anyway. 3.4 is in RC right now, would probably be GA by the time we GA 0.92. (we're meeting with Ted Dunning tomorrow - unrelated - can ask him what he thinks about it).
bq.  
bq.  Andrew Purtell wrote:
bq.      We can put in the other two patches and defer this one until 3.4 is released. Consequence would be that 3025 can be subverted if one allows direct client access to the ZK cluster.
bq.  
bq.  Michael Stack wrote:
bq.      +1 on fixing this patch so it just upgrades our zk to 3.4.  I just tried hbase w/ a 3.4 client and a 3.3.3. ensemble and it seems to work.  I asked Mahadev to be sure and he says ""A 3.3.* client should be able to talk to 3.4.0 server and vice versa.""  Its as yet unreleased but I'm pretty sure it'll be out before we ship -- maybe even a 3.4.1 (smile).
bq.  
bq.  Michael Stack wrote:
bq.      Let me add, Mahadev tried it himself on his end too and it seemed fine and then he did the caveat that 3.4 has not yet been used in production.....
bq.  
bq.  Andrew Purtell wrote:
bq.      Say what you will about the Hadoop Record compiler aka Jute, but ZK is 1) the only project that uses it that I know of 2) yet consistently can answer in the affirmative regarding cross-version compatibility.
Ted said 3.4RC is stable and wire and diskformat compatible with 3.3. Apparently 3.4 will be happening soon.
- Lars
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
[link]#review3344
-----------------------------------------------------------
On 2011-11-19 01:36:34, Andrew Purtell wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  [link]
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-11-19 01:36:34)
bq.  
bq.  
bq.  Review request for hbase, Gary Helmling and Eugene Koontz.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  These changes add support for protecting the state of HBase znodes on a multi-tenant ZooKeeper cluster. This support requires ZK 3.4.0, currently at RC2. It is a companion patch to HBASE-2742 (secure RPC), and HBASE-3025 (Coprocessor based access control).
bq.  
bq.  SASL authentication of ZooKeeper clients with the quorum is handled in the ZK client independently of HBase concerns. To enable strong ZK authentication, one must create a suitable JaaS configuration, for example:
bq.  
bq.    Server {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      storeKey=true
bq.      useTicketCache=false
bq.      principal=""zookeeper/$HOSTNAME"";
bq.    };
bq.    Client {
bq.      com.sun.security.auth.module.Krb5LoginModule required
bq.      useKeyTab=true
bq.      useTicketCache=false
bq.      keyTab=""/etc/hbase/conf/hbase.keytab""
bq.      principal=""hbase/$HOSTNAME"";
bq.    };
bq.  
bq.  and then configure both the client and server processes to use it, for example in hbase-site.xml:
bq.  
bq.    HBASE_OPTS=""${HBASE_OPTS} -Djava.security.auth.login.config=/etc/hbase/conf/jaas.conf""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeHostFromPrincipal=true""
bq.    HBASE_OPTS=""${HBASE_OPTS} -Dzookeeper.kerberos.removeRealmFromPrincipal=true""
bq.  
bq.  HBase will then secure all znodes but for a few world-readable read-only ones needed for clients to look up region locations. All internal cluster operations will be protected from unauthenticated ZK clients, or clients not authenticated to the HBase principal. Presumably the only ZK clients authenticated to the HBase principal will be those embedded in the master and regionservers.
bq.  
bq.  There is extraneous whitespace in code surrounding these changes.
bq.  
bq.  
bq.  This addresses bug HBASE-2418.
bq.      [link]
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    pom.xml eccf41f 
bq.    [file java] fe6f4a5 
bq.    [file java] 960c9c1 
bq.    [file java] a75cf87 
bq.    [file java] d1b7647 
bq.    [file java] PRE-CREATION 
bq.  
bq.  Diff: [link]
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  These changes are running in production at Trend Micro, using a snapshot build of ZooKeeper 3.4.0.
bq.  
bq.  New unit test TestZooKeeperACL passes 100 iterations. All test pass not otherwise currently failing on trunk.
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Andrew
bq.  
bq.


** Comment 33 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 7 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 60 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
                  org.apache.hadoop.hbase.client.TestShell
                  org.apache.hadoop.hbase.client.TestAdmin
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 34 **
Could the TestAdmin be because of this patch A?
{code}
Error Message
An error is preventing HBase from connecting to ZooKeeper
Stacktrace
org.apache.hadoop.hbase.ZooKeeperConnectionException: An error is preventing HBase from connecting to ZooKeeper
{code}
(Might be same issue w/ the TestShell fails)
TestLogRolling seems innocuous.. that can't lock data dir.


** Comment 35 **
bq. Could the TestAdmin be because of this patch A?
I don't see it locally. 
This change in the patch could be suspect but it's a shot in the dark:
{code}
--- [file java]
+++ [file java]
@@ -148,11 +156,14 @@ public class MiniZooKeeperCluster {
         tickTimeToUse = TICK_TIME;
       }
       ZooKeeperServer server = new ZooKeeperServer(dir, dir, tickTimeToUse);
-      NIOServerCnxn.Factory standaloneServerFactory;
+      NIOServerCnxnFactory standaloneServerFactory;
       while (true) {
         try {
-          standaloneServerFactory = new NIOServerCnxn.Factory(
-              new InetSocketAddress(tentativePort));
+          standaloneServerFactory = new NIOServerCnxnFactory();
+          standaloneServerFactory.configure(
+            new InetSocketAddress(tentativePort),
+            configuration.getInt(HConstants.ZOOKEEPER_MAX_CLIENT_CNXNS,
+              HConstants.DEFAULT_ZOOKEPER_MAX_CLIENT_CNXNS));
         } catch (BindException e) {
           LOG.debug(""Failed binding ZK Server to client port: "" +
               tentativePort);
{code}
I could change HConstants.DEFAULT_ZOOKEPER_MAX_CLIENT_CNXNS here to 1000 and resubmit.

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
Trunk is changing too fast on you Andrew!
{code}
patching file pom.xml
Hunk #1 FAILED at 276.
Hunk #2 succeeded at 861 (offset 41 lines).
Hunk #3 succeeded at 1404 with fuzz 2 (offset 3 lines).
1 out of 3 hunks FAILED -- saving rejects to file pom.xml.rej
patching file [file java]
patching file [file java]
patching file [file java]
patching file [file java]
patching file [file java]
PATCH APPLICATION FAILED
{code}
This is last 0.92 patch though.... Almost there.

** Comment 40 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 7 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 60 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestAdmin
                  org.apache.hadoop.hbase.replication.TestReplication
                  org.apache.hadoop.hbase.client.TestShell
Test results: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 41 **
Committed to trunk and 0.92.
TestZooKeeperACL passes with and without '-P security' locally. Does not break the build if '-P security' is not specified. Test failures found by HudsonQA are not directly related to this change.


** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
Hudson returned another build failure report. I committed the above to the 0.92 POM.

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[link] is showing people.apache.org is down (minotaur.apache.org).  This is probably the cause of the build failures, which are showing connection timed out retrieving artifacts from my repo.

** Comment 55 **
I just saw this regionserver crash in my five-node, three-RS cluster test. Since this is a ZK-related patch that went in recently, I am attaching the stack trace here just in case.
2011-11-21 01:30:15,188 FATAL org.apache.hadoop.hbase.regionserver.HRegionServer: ABORTING region server <machine_name>,60020,1321867814890: Initialization of RS failed.  Hence aborting RS.
java.util.ConcurrentModificationException
        at java.util.Hashtable$Enumerator.next([file java]:1031)
        at org.apache.hadoop.conf.Configuration.iterator([file java]:1042)
        at org.apache.hadoop.hbase.zookeeper.ZKConfig.makeZKProps([file java]:75)
        at org.apache.hadoop.hbase.zookeeper.ZKConfig.getZKQuorumServersString([file java]:245)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.<init>([file java]:144)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.<init>([file java]:124)
        at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.getZooKeeperWatcher([file java]:1262)
        at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.setupZookeeperTrackers([file java]:568)
        at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.<init>([file java]:559)
        at org.apache.hadoop.hbase.client.HConnectionManager.getConnection([file java]:183)
        at org.apache.hadoop.hbase.catalog.CatalogTracker.<init>([file java]:177)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.initializeZooKeeper([file java]:575)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.preRegistrationInitialization([file java]:534)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.run([file java]:642)
        at java.lang.Thread.run([file java]:619)


** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
@Mikhail: Thanks, that doesn't have a clear direct relation. If it were a test failure, I'd say otherwise. This patch modified the MiniZKCluster to take a Configuration in constructor and use it. This patch did not touch ZKConfig, which is HBase side code.

** Comment 60 **
[Comment excluded]

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
[Comment excluded]

** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]
"
HBASE-6373,https://issues.apache.org/jira/browse/HBASE-6373,https://github.com/apache/hbase/blob/0.94.2/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java,Add more context information to audit log messages,YES,"The attached patch adds more information to the audit log messages; namely, it includes the IP address where the request originated, if it's available.

The patch is against trunk, but I've tested it against the 0.92 branch. I didn't find any unit test for this code, please let me know if I missed something.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
I'm not dereferencing remoteAddr; it's safe to have a null reference in the middle of string concatenation. In fact that did show up during my testing (you just get ""null"" in the log message).
Unless you prefer to log an empty string instead of ""null"" in that case.

** Comment 4 **
bq. Unless you prefer to log an empty string instead of ""null"" in that case.
Fair enough, but since you offered...

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk's current 4 warnings).
    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
Committed to trunk.  Thanks for the patch Marcelo (I tried the failed test w/ patch applied locally a few times and it passed)

** Comment 9 **
Took a look at the logs and none of the issues pointed out by hadoopqa seem related to the patch at all.

** Comment 10 **
Integrated in HBase-TRUNK #3146 (See )
    HBASE-6373 Add more context information to audit log messages (Revision 1363188)
     Result = SUCCESS
stack : 
Files : 
* [file java]


** Comment 11 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #99 (See )
    HBASE-6373 Add more context information to audit log messages (Revision 1363188)
     Result = FAILURE
stack : 
Files : 
* [file java]


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Integrated in HBase-0.94 #384 (See )
    HBASE-6373 Add more context information to audit log messages (Revision 1370005)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 16 **
Integrated in HBase-0.94-security #48 (See )
    HBASE-6373 Add more context information to audit log messages (Revision 1370005)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 17 **
Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See )
    HBASE-6373 Add more context information to audit log messages (Revision 1370005)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 18 **
[Comment excluded]
"
HBASE-6710,https://issues.apache.org/jira/browse/HBASE-6710,https://github.com/apache/hbase/blob/0.94.2/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java,0.92/0.94 compatibility issues due to HBASE-5206,NO,"HBASE-5206 introduces some compatibility issues between {0.94,0.94.1} and
{0.92.0,0.92.1}.  The release notes of HBASE-5155 describes the issue (HBASE-5206 is a backport of HBASE-5155).

I think we can make 0.94.2 compatible with both {0.94.0,0.94.1} and {0.92.0,0.92.1}, although one of those sets will require configuration changes.

The basic problem is that there is a znode for each table ""zookeeper.znode.tableEnableDisable"" that is handled differently.

On 0.92.0 and 0.92.1 the states for this table are:
[ disabled, disabling, enabling ] or deleted if the table is enabled

On 0.94.1 and 0.94.2 the states for this table are:
[ disabled, disabling, enabling, enabled ]

What saves us is that the location of this znode is configurable.  So the basic idea is to have the 0.94.2 master write two different znodes, ""zookeeper.znode.tableEnableDisabled92"" and ""zookeeper.znode.tableEnableDisabled94"" where the 92 node is in 92 format, the 94 node is in 94 format.  And internally, the master would only use the 94 format in order to solve the original bug HBASE-5155 solves.
We can of course make one of these the same default as exists now, so we don't need to make config changes for one of 0.92 or 0.94 clients.  I argue that 0.92 clients shouldn't have to make config changes for the same reason I argued above.  But that is debatable.

Then, I think the only question left is the question of how to bring along the {0.94.0, 0.94.1} crew.  A {0.94.0, 0.94.1} client would work against a 0.94.2 cluster by just configuring ""zookeeper.znode.tableEnableDisable"" in the client to be whatever ""zookeeper.znode.tableEnableDisabled94"" is in the cluster.  A 0.94.2 client would work against both a {0.94.0, 0.94.1} and {0.92.0, 0.92.1} cluster if it had HBASE-6268 applied.  About rolling upgrade from {0.94.0, 0.94.1} to 0.94.2 -- I'd have to think about that.  Do the regionservers ever read the tableEnableDisabled znode?

On the mailing list, Lars H suggested the following:
""The only input I'd have is that format we'll use going forward will not have a version attached to it.
So maybe the 92 version would still be called ""zookeeper.znode.tableEnableDisable"" and the new node could have a different name ""zookeeper.znode.tableEnableDisableNew"" (or something).""","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Interesting. I think it would be awash either way.
I have a slight preference for using the new znode all over where possible. Just feels right :)
Either way this fine. In 0.96 we break everything so, we'll retire the old znode then.


** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
Here's a first cut.  Let me know what you think.
This issue introduces a compatibility mode on the HMaster for 0.92.0 and 0.92.1 clients that requires a configuration change on those client to turn on.  Without the compatibility mode, 0.92.0 and 0.92.1 clients will hang on calls to ""enableTable"" and ""is_enabled"" will always return false, even for enabled tables.  To use the compatibility mode, 0.92.0 and 0.92.1 clients should make the following configuration change:
<name>zookeeper.znode.tableEnableDisable</name>
<value>table92</value>
In rare failure cases, even with the compatibility mode on, the client may report inaccurate results for ""is_enabled"" and ""is_disabled.""  This issue can be corrected by calling ""enable"" or ""disable"" again to return the table to the desired state.

** Comment 25 **
[Comment excluded]

** Comment 26 **
I was trying to wrap up 0.92.2 release. So pardon me for late comments.
Looking at code for void setTableState(final String tableName, final TableState state):
{code}
      if (settingToEnabled) {
        ZKUtil.deleteNodeFailSilent(this.watcher, znode92);
      }
{code}
Should we fail silently if node deletion fails ? Would this increase the chance of inconsistency between znode92 and znode ?
Should hbck be enhanced to detect / fix such inconsistencies ?

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
bq. Should we fail silently if node deletion fails ? Would this increase the chance of inconsistency between znode92 and znode ?
The name ""deleteNodeFailSilent"" is bad.  It's only silent on a NoNodeException, which is fine because that's the state you want anyway.

** Comment 33 **
Here's a second draft of the release note...
This issue introduces a compatibility mode on the HMaster for 0.92.0 and 0.92.1 clients that requires a configuration change on those client to turn on. Without the compatibility mode, 0.92.0 and 0.92.1 clients will hang on calls to ""enableTable"" and ""is_enabled"" will always return false, even for enabled tables. To use the compatibility mode, 0.92.0 and 0.92.1 clients should make the following configuration change:
<name>zookeeper.znode.tableEnableDisable</name>
<value>table92</value>
In rare failure cases, even with the compatibility mode on, the client may report incorrect results for ""is_enabled"" and ""is_disabled.""  For example, ""is_enabled"" may return true even though the table is disabled (the correct value can be checked via the HMaster UI).  This issue can be corrected by calling ""enable"" or ""disable"" to return the table to the desired state.

** Comment 34 **
Integrated in HBase-TRUNK #3334 (See )
    HBASE-6759 Forward port ZKReadOnly change from HBASE-6710 (Revision 1384987)
     Result = FAILURE
gchanan : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #175 (See )
    HBASE-6759 Forward port ZKReadOnly change from HBASE-6710 (Revision 1384987)
     Result = FAILURE
gchanan : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
Integrated in HBase-0.94-security-on-Hadoop-23 #8 (See )
    HBASE-6710 0.92/0.94 compatibility issues due to HBASE-5206 (Revision 1384181)
     Result = FAILURE
gchanan : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 41 **
Integrated in HBase-0.94 #640 (See )
    HBASE-6775 Use ZK.multi when available for HBASE-6710 0.92/0.94 compatibility fix (Revision 1423616)
     Result = FAILURE
gchanan : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/resources/hbase-default.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 42 **
[Comment excluded]

** Comment 43 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    HBASE-6775 Use ZK.multi when available for HBASE-6710 0.92/0.94 compatibility fix (Revision 1423616)
     Result = FAILURE
gchanan : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/resources/hbase-default.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-5582,https://issues.apache.org/jira/browse/HBASE-5582,https://github.com/apache/hbase/blob/0.94.2/src/main/java/org/apache/hadoop/hbase/zookeeper/RegionServerTracker.java,"""No HServerInfo found for"" should be a WARNING message",YES,"The message from RegionServerTracker ""No HServerInfo found for..."" is easy to miss. It should not be INFO. 


From irc chat 

{noformat}
jdcryans
JohnP789: can you grep for ""No HServerInfo found for"" in that log?
jdcryans
wait I see it
jdcryans
ok there's your problem
shrijeet_
Yes it is there
shrijeet_
jdcryans: it should be INFO, why?
jdcryans
it shouldn't be INFO, it's so easy to miss
jdcryans
it's not the first time we have to look super closely to figure this one out
shrijeet_
yes , I will file a jira
jdcryans
in any case it's a mismatch in that machine's DNS config
shrijeet_
anyways JohnP789 is waiting :) go on
JohnP789
haha!
JohnP789
yes...  ???  :-)
jdcryans
the master is expecting a RS called ""localhost.localdomain,53875,1328924863478""
17:26 jdcryans
but the RS calls itself ""localhost,53875,1328924863478""
{noformat}","** Comment 1 **
Changed LOG level and re-worded the message a bit, since we no longer have HServerinfo. 

** Comment 2 **
Changed the LOG.info to LOG.warn, and expanded the error message a bit.

** Comment 3 **
Line too long:
{code}
+        LOG.warn(serverName.toString() + "" is not online or isn't known to the master. The latter could be caused by a DNS misconfiguration."");
{code}
Wrap the second sentence.
Otherwise looks good.

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 81 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher
                  org.apache.hadoop.hbase.master.TestSplitLogManager
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 81 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Integrated in HBase-TRUNK #3431 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394768)
     Result = FAILURE
jdcryans : 
Files : 
* [file java]


** Comment 10 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #211 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394768)
     Result = FAILURE
jdcryans : 
Files : 
* [file java]


** Comment 11 **
Integrated in HBase-0.92 #595 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394766)
HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Revision 1394765)
     Result = FAILURE
jdcryans : 
Files : 
* /hbase/branches/0.[file txt]
jdcryans : 
Files : 
* /hbase/branches/0.[file java]


** Comment 12 **
Integrated in HBase-0.94-security #60 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394767)
     Result = FAILURE
jdcryans : 
Files : 
* /hbase/branches/0.[file java]


** Comment 13 **
Integrated in HBase-0.92-security #145 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394766)
HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Revision 1394765)
     Result = SUCCESS
jdcryans : 
Files : 
* /hbase/branches/0.[file txt]
jdcryans : 
Files : 
* /hbase/branches/0.[file java]


** Comment 14 **
Integrated in HBase-0.94-security-on-Hadoop-23 #9 (See )
    HBASE-5582  ""No HServerInfo found for"" should be a WARNING message (Kevin Odell via JD) (Revision 1394767)
     Result = FAILURE
jdcryans : 
Files : 
* /hbase/branches/0.[file java]


** Comment 15 **
[Comment excluded]
"
HBASE-7097,https://issues.apache.org/jira/browse/HBASE-7097,https://github.com/apache/hbase/blob/0.94.3/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureServer.java,Log message in SecureServer.class uses wrong class name,NO,"log messages are printing wrongly in org.apache.hadoop.hbase.ipc.SecureServer.class 
{code}
public static final Log LOG = LogFactory.getLog(""org.apache.hadoop.ipc.SecureServer""); 
  private static final Log AUDITLOG = 
    LogFactory.getLog(""SecurityLogger.org.apache.hadoop.ipc.SecureServer""); 
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Integrated in HBase-0.94 #574 (See )
    HBASE-7097. Log message in SecureServer.class uses wrong class name (Y. Sreenivasulu Reddy) (Revision 1405906)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 6 **
Integrated in HBase-0.92 #604 (See )
    HBASE-7097. Log message in SecureServer.class uses wrong class name (Y. Sreenivasulu Reddy) (Revision 1405909)
     Result = SUCCESS
apurtell : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]


** Comment 7 **
This was unfortunately intentional, at least in the {{LOG}} instance, in order to provide an admittedly cludgey way to enable debug logging for the entire org.apache.hadoop.hbase logger without spamming region server logs with per-request messages -- per request metrics only get logged if you enable debug logging for org.apache.hadoop.ipc. It preserves the same technique that is used in HBaseServer.
No argument from me that the technique is ugly.  But if we actually fix the logger to use the correct class name, we should also change per-request logging to only happen at trace level instead of debug, so that existing HBase setups with debug level enabled for the org.apache.hadoop.hbase parent don't start getting noisy per-request messages.

** Comment 8 **
bq. But if we actually fix the logger to use the correct class name, we should also change per-request logging to only happen at trace level instead of debug, so that existing HBase setups with debug level enabled for the org.apache.hadoop.hbase parent don't start getting noisy per-request messages.
+1 here, can do an addendum

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Sure... We can change the per request logging to TRACE too.

** Comment 12 **
bq. Sure... We can change the per request logging to TRACE too.
I'll wait for a bit to see if there's more opinion, otherwise will do so.

** Comment 13 **
+1 to an addendum to change the per-request logging to trace level.  Works for me.

** Comment 14 **
I'm also fine with reverting and just adding a comment. This class is gone in 0.96, so when 0.94 is eventually phased out this is no longer a problem anyway.
Either way, make an addendum Andy?
+1 on changing all debug logs using this logger to trace,
alternatively
+1 on reverting with comment


** Comment 15 **
Proposed addendum attached. Any more of the DEBUG level messages should go to TRACE?

** Comment 16 **
I think this looks reasonable. 
Should we leave the ""SecurityEnabled"" message?
I have no good sense about how frequently
{code}
            if (LOG.isDebugEnabled())
              LOG.debug(""Created SASL server with mechanism = ""
                  + authMethod.getMechanismName());
{code}
or 
{code}
             if (LOG.isDebugEnabled())
                LOG.debug(""Kerberos principal name is "" + fullName);
{code}
Would called, but I think it should be OK to leave those at DEBUG.

** Comment 17 **
Thanks for taking a look Lars. I'll commit the proposed addendum with the additional log messages you called out moved to TRACE level shortly unless there is further comment. I don't think they are that useful.

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
Integrated in HBase-0.94 #575 (See )
    Amend HBASE-7097. Change per-request logging in SecureServer to TRACE level (Revision 1406420)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 21 **
Integrated in HBase-0.92 #605 (See )
    Amend HBASE-7097. Change per-request logging in SecureServer to TRACE level (Revision 1406421)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 22 **
Integrated in HBase-0.94-security #83 (See )
    Amend HBASE-7097. Change per-request logging in SecureServer to TRACE level (Revision 1406420)
HBASE-7097. Log message in SecureServer.class uses wrong class name (Y. Sreenivasulu Reddy) (Revision 1405906)
     Result = SUCCESS
apurtell : 
Files : 
* /hbase/branches/0.[file java]
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 23 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    Amend HBASE-7097. Change per-request logging in SecureServer to TRACE level (Revision 1406420)
HBASE-7097. Log message in SecureServer.class uses wrong class name (Y. Sreenivasulu Reddy) (Revision 1405906)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]
apurtell : 
Files : 
* /hbase/branches/0.[file java]


** Comment 24 **
Integrated in HBase-0.92-security #147 (See )
    Amend HBASE-7097. Change per-request logging in SecureServer to TRACE level (Revision 1406421)
HBASE-7097. Log message in SecureServer.class uses wrong class name (Y. Sreenivasulu Reddy) (Revision 1405909)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]
apurtell : 
Files : 
* /hbase/branches/0.[file txt]
* /hbase/branches/0.[file java]

"
HBASE-7037,https://issues.apache.org/jira/browse/HBASE-7037,https://github.com/apache/hbase/blob/0.94.3/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeer.java,ReplicationPeer logs at WARN level aborting server instead of at FATAL,YES,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 82 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestFromClientSide
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
Integrated in HBase-0.94 #552 (See )
    HBASE-7037 ReplicationPeer logs at WARN level aborting server instead of at FATAL (Revision 1401564)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]


** Comment 5 **
Integrated in HBase-TRUNK #3480 (See )
    HBASE-7037 ReplicationPeer logs at WARN level aborting server instead of at FATAL (Revision 1401563)
     Result = FAILURE
stack : 
Files : 
* [file java]


** Comment 6 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #233 (See )
    HBASE-7037 ReplicationPeer logs at WARN level aborting server instead of at FATAL (Revision 1401563)
     Result = FAILURE
stack : 
Files : 
* [file java]


** Comment 7 **
Integrated in HBase-0.94-security-on-Hadoop-23 #9 (See )
    HBASE-7037 ReplicationPeer logs at WARN level aborting server instead of at FATAL (Revision 1401564)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]

"
HBASE-7331,https://issues.apache.org/jira/browse/HBASE-7331,https://github.com/apache/hbase/blob/0.94.4/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java,"Add access control for region open and close, row locking, and stopping the regionserver",NO,"The following APIs in HRegionServer are either missing hooks to coprocessor or the hooks are not implemented in the AccessController class for security. As a result any unauthorized user can:

1.Open a region
2. Close a region
3. Stop region server
4. Lock a row
5. Unlock a row.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
All tests pass for me locally except for TestHBaseFsck#testRegionShouldNotBeDeployed, which seems an unrelated failure.

** Comment 8 **
Fixed formatting errors.  One of the small tests, TestLruCache fails for me intermittently, I am not sure if there is something wrong in my set up.

** Comment 9 **
bq. Fixed formatting errors.
Thanks. Looks like there may still be tabs in RegionServerCoprocessorHost but I'll fix that, no worries.
bq. TestLruCache fails for me intermittently
That would seem unrelated.
Running another round of tests with the updated patch to see what's up, if anything. 


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
All tests pass locally again with v2 patch except TestHBaseFsck#testRegionShouldNotBeDeployed, what appears to be an unrelated failure. Going to commit soon if no objection.
 Please consider the 0.94 patch for inclusion too. It's a low risk change that adds more hooks for checking admin permission before allowing actions that affect other users: stop the RS, close a region, open a region.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Integrated in HBase-TRUNK #3624 (See )
    HBASE-7331. Add access control for region open and close, and stopping the regionserver (Vandana Ayyalasomayajula) (Revision 1422094)
     Result = FAILURE
apurtell : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #297 (See )
    HBASE-7331. Add access control for region open and close, and stopping the regionserver (Vandana Ayyalasomayajula) (Revision 1422094)
     Result = FAILURE
apurtell : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 17 **
Patch looks fine, does not seem to break existing functionality or introduce and incompatibilities.
I'll defer to you . If you think it's save, let's commit to 0.94.
Aren't we getting rid of rowlocks?

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
Integrated in HBase-0.94 #646 (See )
    HBASE-7331. Add access control for region open and close, and stopping the regionserver (Vandana Ayyalasomayajula) (Revision 1424085)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 23 **
[Comment excluded]

** Comment 24 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    HBASE-7331. Add access control for region open and close, and stopping the regionserver (Vandana Ayyalasomayajula) (Revision 1424085)
     Result = FAILURE
apurtell : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-7467,https://issues.apache.org/jira/browse/HBASE-7467,https://github.com/apache/hbase/blob/0.94.4/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,CleanerChore checkAndDeleteDirectory not deleting empty directories,NO,"CleanerChore checkAndDeleteDirectory is not deleting empty directories. As a result, some directories are kept in the FS but should have been removed.

To reproduce, simply create an empty directory under /hbase/.archive/table_name/. If you place a file into this directory, it's not more empty and therefore it's correctly removed.

","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
On more comment:
Regarding TestCleanerChore#testDeletesEmptyDirectories if you comment the file creation (//fs.create(file).close();) the test will fail since empty directories will be left behind.
I think we should add some empty directories tests too on TestCleanerChore#testDeletesEmptyDirectories. I will add some and submit a patch for that too.

** Comment 5 **
Oh, yeah, that makes sense. This could still throw an exception though if we get a file added under that directory (see HBASE-7465). Make it something like:
{code}
   try {
      return fs.delete(toCheck, false);
    } catch (IOException e) {
      if (LOG.isTraceEnabled()) {
        LOG.trace(""Couldn't delete directory: "" + toCheck+ e);
      }
      return false;
    }
{code}
for the delete and I'm +1

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
@Jean-Marc:
Your finding was really good.
@Jesse:
Do you think that the log in the code snippet above should be at warn level ?

** Comment 9 **
By applying HBASE-7465 over this patch, everything is working very well. No more issues displayed (Can still see them if required by setting the loglevel to trace), and all tests passing including the new one added by Jesse.


** Comment 10 **
[Comment excluded]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.replication.TestReplicationWithCompression
     -1 core zombie tests.  There are 3 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade([file java]:83)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
Attached is Jesse's patch + mine both in a single file. But they can still noth be applied separatly. I'm not sure what's the best way to go, so I will let you pickup the recommanded one.
Also, I'm wondering if I should replace
if (children == null) return fs.delete(toCheck, false);
by 
{code}
if (children == null) {
  try {
    return fs.delete(toCheck, false);
  } catch (IOException e) {
    if (LOG.isTraceEnabled()) {
      LOG.trace(""Couldn't delete directory: "" + toCheck, e);
    }
  }
  // couldn't delete w/o exception, so we can't return success.
  return false;
}
{code}
Like Jesse did too...

** Comment 13 **
I understand Jesse's intention in HBASE-7465.
I am fine with not leaking IOE. We should preserve the effect of IOE in that IOException would stop remaining checking / deletion from being executed in checkAndDeleteDirectory() calls. We can achieve this by introducing an enum one of whose values indicates fast fail.

** Comment 14 **
So. Another version is attached with the catch for IOException.
FSUtils.listStatus(fs, toCheck); can still throw an IOException, so we are fine to keep the throws IOException declaration.
Again, this is also including Jesse's fix for 7465.

** Comment 15 **
[Comment excluded]

** Comment 16 **
Patch v5 fixed compilation error.
Also corrected spelling.

** Comment 17 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
Integrated in HBase-TRUNK #3678 (See )
    HBASE-7467 CleanerChore checkAndDeleteDirectory not deleting empty directories (Jean-Marc and Jesse Yates) (Revision 1427287)
     Result = FAILURE
tedyu : 
Files : 
* [file java]
* [file java]
* [file java]


** Comment 20 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #323 (See )
    HBASE-7467 CleanerChore checkAndDeleteDirectory not deleting empty directories (Jean-Marc and Jesse Yates) (Revision 1427287)
     Result = FAILURE
tedyu : 
Files : 
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
+1 on patch. Personally I would have preferred for the these logs to be at debug level.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
Looks like your 0.94 workspace is out of date - use the tip of 0.94, please:
p1 7465_7467-v6-0.94.patch
patching file [file java]
Reversed (or previously applied) patch detected!  Assume -R?  
Apply anyway?  y
Hunk #1 FAILED at 142.
Hunk #2 FAILED at 165.
2 out of 2 hunks FAILED -- saving rejects to file [file java].rej
patching file [file java]
Reversed (or previously applied) patch detected!  Assume -R?  ^C

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
TestHRegionOnCluster failed in the 0.94 build.
I ran TestHRegionOnCluster locally 5 times and didn't reproduce the failure.

** Comment 39 **
Yeah, that's one I have seen failing before. @#%$^

** Comment 40 **
[Comment excluded]

** Comment 41 **
Integrated in HBase-0.94 #692 (See )
    HBASE-7467 CleanerChore checkAndDeleteDirectory not deleting empty directories (Jean-Marc) (Revision 1428114)
     Result = FAILURE
tedyu : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 42 **
All tests just finished and went well for me using dev-support/hbasetests.sh:
##########################
315 tests executed successfully
0 tests are in error
0 tests didn't finish
Tests in error are: 
Tests that didn't finish are: 
Execution time in minutes: 115
##########################
I'm now running the tests with mvn command line.

** Comment 43 **
[Comment excluded]

** Comment 44 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    HBASE-7467 CleanerChore checkAndDeleteDirectory not deleting empty directories (Jean-Marc) (Revision 1428114)
     Result = FAILURE
tedyu : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-7214,https://issues.apache.org/jira/browse/HBASE-7214,https://github.com/apache/hbase/blob/0.94.4/src/main/java/org/apache/hadoop/hbase/master/cleaner/TimeToLiveHFileCleaner.java,"CleanerChore logs too much, so much so it obscures all else that is going on",YES,"Testing 0.94.3RC0, I see loads of this in logs:

{code}
2012-11-23 13:39:40,488 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: file:/tmp/hbase-stack/hbase/.oldlogs/192.168.1.73%2C61033%2C1353705880078.1353706219757 is not deletable according t#
 14 2012-11-23 13:39:40,488 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: file:/tmp/hbase-stack/hbase/.oldlogs/192.168.1.73%2C61033%2C1353705880078.1353706221210 is not deletable according t#
 1
{code}

There is too much of it.  Can we cut back some?","** Comment 1 **
[Comment excluded]

** Comment 2 **
But its important to know those files aren't being deleted! Seriously though, putting that on 'trace' would be find IMO. I'll work on a patch (hopefully this weekend).

** Comment 3 **
Dropped the most prominent logs to trace, so if you really need the info, you can get at it (helpful for debugging), but shouldn't come up in most cases.
No notable perf impact by continuing to log, as this all runs in a background thread.

** Comment 4 **
[Comment excluded]

** Comment 5 **
+1 on commit.  On commit, I'd wrap the log messages in and if (TRACE) to avoid our making objects we won't use.
I find the logging annoying.  Would be +1 on committing to 0.94 for 0.94.4 (not enough to sink an RC IMO).

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Integrated in HBase-TRUNK #3568 (See )
    HBASE-7214: CleanerChore logs too much, so much so it obscures all else that is going on (Revision 1414229)
     Result = FAILURE
jyates : 
Files : 
* [file java]
* [file java]


** Comment 10 **
Integrated in HBase-0.94 #602 (See )
    HBASE-7214: CleanerChore logs too much, so much so it obscures all else that is going on (Revision 1414244)
     Result = SUCCESS
jyates : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 11 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #276 (See )
    HBASE-7214: CleanerChore logs too much, so much so it obscures all else that is going on (Revision 1414229)
     Result = FAILURE
jyates : 
Files : 
* [file java]
* [file java]


** Comment 12 **
Integrated in HBase-0.94-security #86 (See )
    HBASE-7214: CleanerChore logs too much, so much so it obscures all else that is going on (Revision 1414244)
     Result = SUCCESS
jyates : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 13 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    HBASE-7214: CleanerChore logs too much, so much so it obscures all else that is going on (Revision 1414244)
     Result = FAILURE
jyates : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-7282,https://issues.apache.org/jira/browse/HBASE-7282,https://github.com/apache/hbase/blob/0.94.4/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java,Backport Compaction Tool to 0.94,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
Integrated in HBase-0.94 #613 (See )
    HBASE-7282 Backport Compaction Tool to 0.94; RETRY (Revision 1418131)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 18 **
[Comment excluded]

** Comment 19 **
Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See )
    HBASE-7282 Backport Compaction Tool to 0.94; RETRY (Revision 1418131)
     Result = FAILURE
stack : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-7360,https://issues.apache.org/jira/browse/HBASE-7360,https://github.com/apache/hbase/blob/0.94.6/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java,Snapshot 0.94 Backport ,NO,"Backport snapshot code to 0.94

The main changes needed to backport the snapshot are related to the protobuf vs writable rpc.

Offline Snapshot
 * HBASE-6610 HFileLink: Hardlink alternative for snapshot restore
 * HBASE-6765 Take a Snapshot interface
** This patch is significantly different because of the RPC changes between 0.94/0.96
 * HBASE-6571 Generic multi-thread/cross-process error handling framework
 * HBASE-6353 Snapshots shell
 * HBASE-7107 Snapshot References Utils (FileSystem Visitor)
 * HBASE-6836 Offline snapshots
 * HBASE-6865 Snapshot File Cleaners
 * HBASE-6777 Snapshot Restore Interface
** This patch is significantly different because of the RPC changes between 0.94/0.96
 * HBASE-6230 Clone/Restore Snapshots
 * HBASE-6802 Export Snapshot
 * HBASE-7240 Cleanup old snapshots on start
 * HBASE-7174 Refactor snapshot file cleaner cache to use Snapshot
 * HBASE-7367 Snapshot coprocessor and ACL security
 * HBASE-7311 Add snapshot information to hbase master webui
** This patch is significantly different because of the RPC changes between 0.94/0.96
 * HBASE-7418 HFileLink flaky test
 * HBASE-7420 TestSnapshotExceptionSnare and TestWALReferenceTask missing test category annotation and failing TestCheckTestClasses
 * HBASE-7206 ForeignException framework v2 (simplifies and replaces HBASE-6571)
 * HBASE-7430 TestSnapshotDescriptionUtils break compaction/scanner tests (EnvironmentEdge issue)
 * HBASE-7436 Improve stack trace info dumped by ForeignExceptionSnare#rethrowException
 * HBASE-7339 Splitting an HFileLink causes region servers to go down.
 * HBASE-7439 HFileLink should not use the configuration from the Filesystem
 * HBASE-7452 Change ForeignExceptionListener#receive(String, FE)  to only be #receive(FE)
 * HBASE-7208 Transition Offline Snapshots to ForeignExceptions and Refactor for merge
 * HBASE-7207 Consolidate snapshot related classes into fewer packages
 * HBASE-7400 ExportSnapshot mapper closes the FileSystem
 * HBASE-7352 clone operation from HBaseAdmin can hang forever
 * HBASE-7294 Check for snapshot file cleaners on start
 * HBASE-7354 Snapshot Info/Debug Tool
 * HBASE-7423 HFileArchiver should not use the configuration from the Filesystem
 * HBASE-7453 HBASE-7423 snapshot followup
 * HBASE-7212 Globally Barriered Procedure Mechanism
 * HBASE-6864 Online snapshots scaffolding
 * HBASE-7321 Simple Flush Snapshot
 * HBASE-7496 TestZKProcedure fails interrmittently.
 * HBASE-7484 Fix Restore with schema changes
 * HBASE-7419 revisit hfilelink file name format
 * HBASE-7467 CleanerChore checkAndDeleteDirectory not deleting empty directories
 * HBASE-7214 CleanerChore logs too much, so much so it obscures all else that is going on
 * HBASE-7523 Snapshot attempt with the name of a previously taken snapshot fails sometimes.
 * HBASE-7480 Explicit message for not allowed snapshot on meta tables
 * HBASE-7537 .regioninfo not created by createHRegion()
 * HBASE-7535 Fix restore reference files
 * HBASE-7552 Pass bufferSize param to FileLinkInputStream constructor within FileLink.open method, and remove unnecessary import packages.
 * HBASE-7501 Introduce MetaEditor method that both adds and deletes rows in .META. table
 * HBASE-7365/HBASE-7389 Safer table creation and deletion using .tmp dir
 * HBASE-7547 Fix findbugs warnings in snapshot classes
 * HBASE-7548 Fix javadoc warnings in snapshot classes
 * HBASE-7538 Improve snapshot related error and exception messages
 * HBASE-7536 Add test that confirms that multiple concurrent snapshot requests are rejected
 * HBASE-7583 Fixes and cleanups
 * HBASE-7604 Remove duplicated code from HFileLink
 * HBASE-7616 NPE in ZKProcedure.nodeCreated
 * HBASE-7625 Remove duplicated logFSTree() from TestRestoreFlushSnapshotFromClient
 * HBASE-7627 UnsupportedOperationException in CatalogJanitor thread
 * HBASE-7622 Add table descriptor verification after snapshot restore
 * HBASE-7651 RegionServerSnapshotManager fails with CancellationException if previous snapshot fails in per region task
 * HBASE-7666 More logging improvements in online snapshots code
 * HBASE-7689 CloneTableHandler notify completion too early
 * HBASE-7699 Replace LOG.info() with LOG.debug() in FSUtils.listStatus()
 * HBASE-7703 Eventually all online snapshots failing due to Timeout at same regionserver.
 * HBASE-7720 Improve logging messages of failed snapshot attempts.
 * HBASE-7795 Race in the Restore Archiving
 * HBASE-7788 Fix flakey TestRestore*SnapshotFromClient#testCloneSnapshot
 * HBASE-7858 cleanup before merging snapshots branch to trunk
 * HBASE-7889 Fix javadoc warnings in snapshot classes
 * HBASE-7911 Remove duplicated code from CreateTableHandler
 * HBASE-7969 Rename HBaseAdmin#getCompletedSnapshots as HBaseAdmin#listSnapshots
 * HBASE-7299 TestMultiParallel fails intermittently in trunk builds ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Let's get this rocksolid in trunk (without any known bugs).
Then we can discuss the 0.94 backport. My reasoning for not dismissing this outright is the information I got that both Cloudera and Hortonworks plan to backport this to their 0.94-based distributions.
If that is indeed the plan we should consider doing this also in the ""official"" Apache branch.


** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Backporting HBASE-5548 is fine too.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
bq. and why the shell is still list_snapshots and admin is getCompletedSnapshots()?
The shell command to get the list of tables is 'list', so in the shell it make sense to keep it as 'list_snapshots'
In the HBaseAdmin code there is a method called 'getTableDescriptors'.  The change Ted did with 'getCompletedSnapshots' seems to go well with the latter.  
I just looked at the code again, and HBaseAdmin has another method called 'listTables' [link]#L262 which is more analogous.  Since 0.95 isn't released yet, I'm fine if we revert to the 'listSnapshots' name.
With this extra piece of evidence I'm leaning towards 's suggestion of using the listSnapshots name.


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
Ran patch v1 through test suite.
No repeatable test failure.

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
+1. I didn't look at the patch carefully, but assume that since the tests pass and since it should be essentially the same version that matteo has ported in the past.
However on commit let's update the jira description and include the exact list of jiras that have been included in this mega backport so we know what is in and what else needs backporting (like the spell fixes).  Ideally we'd include the list of original jiras in the commit message and list places (or at least mark off the patch) where this back port is significantly different from trunk.  With regards to HBASE-7969, I don't care if it is in or out of this mega patch as long it is documented to be in or out properly.
Maybe have a commit message like:
{code}
HBASE-7360 Backport Snapshots to 0.94
This patch includes:
  HBASE-6610 HFileLink: Hardlink alternative for snapshot restore
  HBASE-6765 Take a Snapshot interface
    This patch is significantly different because of the RPC changes between 0.94/0.96
  HBASE-6571 Generic multi-thread/cross-process error handling framework
  HBASE-6353 Snapshots shell
  HBASE-7107 Snapshot References Utils (FileSystem Visitor)
  HBASE-6863 Offline snapshots
  HBASE-6865 Snapshot File Cleaners
  HBASE-6777 Snapshot Restore Interface
  HBASE-6230 Clone/Restore Snapshots
  HBASE-6802 Export Snapshot 
  ... blah blah blah...
{code}


** Comment 28 **
[Comment excluded]

** Comment 29 **
From a testing point of view the backport Matteo's provided should be the version that CDH has been system testing against a real cluster since December.  Matteo can describe his rig in more detail (he focused on chains of snapshots from tables that were restored/clone snapshots).
My rig tested the online snapshot in the presense of ""interference"" and load.  It has a PE job running that writes a bunch of data.  While the PE is running, we'd take 30-50 snapshots, and then clone them all.  We usually get the large majority of the snapshots taken and cloned (28 for 30).  We also inject RS kills, Master kills, forced compactions, as snapshots are being taken and as they are being cloned.  Master kills affect the success rate the most -- because the master takes time to failover and we go through a few aborted master timeout cycles before being able to succeed again.   In all of these cases, the RS/HM never permanently hung during snapshotting or cloning.  We did encounter some master hangs during disable (which i believe is a separate issue). These tests were run for weeks over a 5 node physical cluster.
Larger versions of online snapshot testing (excluding the fault injection) was also run against a 20 node cluster and a 100 node cluster.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
Integrated in HBase-0.94 #878 (See )
    HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)
     Result = FAILURE
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 40 **
[link]
{code}
Failed tests:   testFlushCommitsWithAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server count=2, abort=true expected:<1> but was:<2>
Tests in error:
  testFlushCommitsNoAbort(org.apache.hadoop.hbase.client.TestMultiParallel): Server hemera.apache.org,32876,1362399716392 not running, aborting
{code}
this failure seems to be related to HBASE-7299. I've attached 94 patch here that seems to work.

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
Integrated in HBase-0.94 #879 (See )
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)
     Result = FAILURE
larsh : 
Files : 
* /hbase/branches/0.[file java]


** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See )
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)
HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)
     Result = FAILURE
larsh : 
Files : 
* /hbase/branches/0.[file java]
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 52 **
Integrated in HBase-0.94-security #116 (See )
    HBASE-7360 Addendum, test fix for TestMultiParallel (Matteo) (Revision 1452537)
HBASE-7360 Backport Snapshots to 0.94 (Revision 1452257)
     Result = SUCCESS
larsh : 
Files : 
* /hbase/branches/0.[file java]
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/protobuf/generated
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/main/protobuf
* /hbase/branches/0.94/src/main/protobuf/ErrorHandling.proto
* /hbase/branches/0.94/src/main/protobuf/hbase.proto
* /hbase/branches/0.94/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.94/src/main/ruby/shell.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/clone_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/delete_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/list_snapshots.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/restore_snapshot.rb
* /hbase/branches/0.94/src/main/ruby/shell/commands/snapshot.rb
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/errorhandling
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/master/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/procedure
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/snapshot
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 53 **
[Comment excluded]

** Comment 54 **
bq. since taking or restoring a snapshot is something rare
Some users would perform snapshot periodically.
bq. the impact is the same as the impact of the cleaner after a table delete. 
Table deletion would ultimately remove data. Sanpshotting, on the other hand, creates copy (mostly through references) of data. Can you elaborate on why the impact is same ?
bq. you're just asking stuff to the NN with max N RS connection
Assuming N is the number of region servers, I think the above holds for any moment in time.
bq. so the time required to do the snapshot is the same as the time required to do a roundtrip to the NN
I tend to disagree. See code from ReferenceRegionHFilesTask:
{code}
    // snapshot directories to store the hfile reference
    List<Path> snapshotFamilyDirs = TakeSnapshotUtils.getFamilySnapshotDirectories(snapshot,
      snapshotDir, families);
    LOG.debug(""Add hfile references to snapshot directories:"" + snapshotFamilyDirs);
    for (int i = 0; i < families.length; i++) {
      FileStatus family = families;
      Path familyDir = family.getPath();
      // get all the hfiles in the family
      FileStatus hfiles = FSUtils.listStatus(fs, familyDir, fileFilter);
      // if no hfiles, then we are done with this family
      if (hfiles == null || hfiles.length == 0) {
        LOG.debug(""Not hfiles found for family: "" + familyDir + "", skipping."");
        continue;
      }
      // make the snapshot's family directory
      Path snapshotFamilyDir = snapshotFamilyDirs.get(i);
      fs.mkdirs(snapshotFamilyDir);
      // create a reference for each hfile
      for (FileStatus hfile : hfiles) {
        // references are 0-length files, relying on file name.
        Path referenceFile = new Path(snapshotFamilyDir, hfile.getPath().getName());
        LOG.debug(""Creating reference for:"" + hfile.getPath() + "" at "" + referenceFile);
        if (!fs.createNewFile(referenceFile)) {
          throw new IOException(""Failed to create reference file:"" + referenceFile);
        }
      }
    }
{code}
bq. do we want a format 1 now and a format 2 later on or just a format 2 later on?
In the second half of the question, did you mean 'a format 2 now' ?
I think this discussion is about reducing maintenance overhead, from both operations and code development points of view.
I would vote for reaching format 2 in the first 0.94 release with snapshot feature.

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
[Comment excluded]

** Comment 66 **
OK. From the discussion we're fine with leaving this.
If/when we introduce the manifest we'll either support the old approach or have an upgrade path. The upgrade path is trick during rolling upgrades.

** Comment 67 **
[Comment excluded]
"
HBASE-8288,https://issues.apache.org/jira/browse/HBASE-8288,https://github.com/apache/hbase/blob/0.94.7/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java,HBaseFileSystem: Refactoring and correct semantics for createPath methods,NO,"This jira is for two issues I see in the HBaseFileSystem class:
1) Load testing on a 7 node cluster using ycsb insert workload shows that static initialization of conf properties results in a slightly better throughput. Though the initialization uses HBaseConfiguration.create() call which is expensive (and I tried to avoid that in its first version), this class is used for most of the filesystem class, and had to invoke an additional checkAndSetXX call before making the fs call because it is not certain whether the retry properties are set or not. Having initialize them in static block removes that limitation.

2) Correct semantics for CreatePathXXX method. In case the overwrite flag is false and file already exists, underlying fs throws an exception. It should be re-thrown to the caller.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
I'm +1 on the idea, but why you still have the ""conf"" arg to each function?
The only problem that I see is that in a test I want to start a cluster with the dfs retries = X. In this case my value is ignored because you use the hbase-*.xml.
It should be fine in a normal situation since the server is started by the external script and no one should change the conf object, but test values are ignored.
If instead of calling HBaseConfig.create() you introduce a singleton on the configuration, as you have mentioned time ago, the test can set the configuration and the HBaseFileSystem will pickup the singleton conf that will contains the hbase-*.xml + the ""test"" config.
It's more work and maybe a more intrusive change, so I'm ok to have it in another jira and commit this one as initial version since the ""problem"" is just related to the tests.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Jenkins is good. One medium test, TestMetaReadeEditor failed, but when ran independently, it passes. Since it is a medium test, it is ok.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]
"
HBASE-8446,https://issues.apache.org/jira/browse/HBASE-8446,https://github.com/apache/hbase/blob/0.94.8/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java,Allow parallel snapshot of different tables,NO,"currently only one snapshot at the time is allowed.
Like for the restore, we should allow taking snapshot of different tables in parallel.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    -1 lineLengths.  The patch introduces lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
                  org.apache.hadoop.hbase.backup.TestHFileArchiving
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
{quote}Should null be returned when h.isFinished() is true ?{quote}
No, if the handler is still in the map means that no one has already called isSnapshotDone()
and isSnapshotDone() raise an exception if the snapshot is finished with an error handler.rethrowException()
""currently running"" in this case refers more to the client state where the snapshot() operation is not completed client side. The @return docs has the strict correct meaning ""null if doesn't match, else a live handler.""
{quote}
I think it would be better if TestFlushSnapshotFromClient#testConcurrentSnapshottingAttempts is split into two tests: one where single table is snapshotted and one where two tables are snapshotted concurrently. In the second case, there is no conflict and we should have two snapshots.
{quote}
If you just call takeSnapshotAsync() two times you're not sure that the operations are concurrent, since the first one may end before the second one starts, so I like the idea of having n takeSnapshotAsync() running and at the end check if there're at least two snapshot of different tables, but maybe I don't have understood what is your idea...

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
bq. adding a new parameter to the client will make the API incompatible
Point taken.
I am fine with latest patch. We can revisit this area of code in the future.
Thanks for your patience.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Holdup on commit!
Remove TODO
{code}
  // TODO: this is a bad smell;  likely replace with a collection in the future.  Also this gets
   // reset by every operation.
-  private TakeSnapshotHandler handler;
+  private Map<String, TakeSnapshotHandler> snapshotHandlers =
+      new HashMap<String, TakeSnapshotHandler>();
{code}
Is this the correct place to remove handler references? (in #getTakeSnapshotHandler)?  Removing from the list seems like a unexpected side-effect for a getter.  I'd imagine this would be at the end of the TableSnasphotHandler#process call or in #completeSnapshot.  This introduces two problems -- a concurrency problem (what if two getTakeSnapshotHandlers called) and a resource leak problem (what if over time we create many snapshots -- these handlers never get gc'ed since they continue to live in the table..)
{code}
@@ -306,6 +308,11 @@ public class SnapshotManager implements Stoppable {
       return null;
     }
+    // Remove from the ""in-progress"" list once completed
+    if (h.isFinished()) {
+      snapshotHandlers.remove(snapshot.getTable());
+    }
+
     return h;
   }
{code}
Change comment to say only a single snapshot per table at a time.
{code}
  }
-
-  /**
    * Check to see if the specified table has a snapshot in progress.  Currently we have a
    * limitation only allowing a single snapshot attempt at a time.
    * @param tableName name of the table being snapshotted.
    * @return <tt>true</tt> if there is a snapshot in progress on the specified table.
    */
-  private boolean isTakingSnapshot(final String tableName) {
-    if (handler != null && handler.getSnapshot().getTable().equals(tableName)) {
-      return !handler.isFinished();
-    }
-    return false;
+  boolean isTakingSnapshot(final String tableName) {
+    TakeSnapshotHandler handler = this.snapshotHandlers.get(tableName);
+    return handler handler.isFinished();
   }
{code}
SnapshotManager lines 455. (delete working dir on failed snapshot) -- will this affect other concurrently table snapshots? Are they isolated? (Please add test.).  Could one fail on verification (if another is getting deleted?)


** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 17 **
{quote}Is this the correct place to remove handler references? (in #getTakeSnapshotHandler)? Removing from the list seems like a unexpected side-effect for a getter. I'd imagine this would be at the end of the TableSnasphotHandler#process call or in #completeSnapshot. This introduces two problems – a concurrency problem (what if two getTakeSnapshotHandlers called) and a resource leak problem (what if over time we create many snapshots – these handlers never get gc'ed since they continue to live in the table..){quote}
Changed and renamed some stuff... now the logic looks like this
 * the in-progress handlers map is always accessed/changed under synchronized
 ** isSnapshotDone(), isRestoreDone(): Looks at the map for a pending handler and removes it if finished
 ** isTakingSnapshot(), isRestoringTable(): Looks at the map in a read-only way
 ** snapshotTable(), restoreSnapshot(), cloneSnapshot(): Adds a new handler to the map
We can't remove the handlers until HMaster.isSnapshotDone()/HMaster.isRestoreDone() is called, since we want to raise an exception if the snapshot/restore is failed. but if no one is calling is*Done() we've the handlers pending forever... so now each snapshot/restore/clone operation there's a cleanupSentinels() invoked that remove the completed ones after a specified timeout.
{quote}SnapshotManager lines 455. (delete working dir on failed snapshot) – will this affect other concurrently table snapshots? Are they isolated? (Please add test.). Could one fail on verification (if another is getting deleted?){quote}
Here we are removing the snapshot working dir... so only ""snapshotName"" is affected.
For the new test my guess is that TestFlushSnapshotFromClient.testConcurrentSnapshottingAttempts() is already covering the failure scenario with concurrent snapshot. It execute N snapshots on two different tables, some will fail and at the end we verify if there's at least one snapshot per table.

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 10 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.cleaner.TestSnapshotFromMaster
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 19 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 10 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 20 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
{quote}What does this comment say? Thread number can be >1.{quote}
yes, there's a thread pool that runs the snapshot task... so if you've 1 your request are enqueued
{quote}What ensures that put doesn't replace the old value?{quote}
All the logic before, you get in there if there're no other snapshot/restore running on the same table and the snapshot doesn't exists. you may replace the old value if is in a finished state, that means finished but with an error. so in this case you are starting another task to ""take the same snapshot""

** Comment 24 **
[Comment excluded]

** Comment 25 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 26 **
bq. +   * In case of something fail on the client side and the snapshot/restore state is not reclaimed
bq. +   * after a default timeout the entry is removed from the in-progress map.
Does this mean client rather than user? Just clarifying. I.e. no user code action is necessary; otherwise 60sec. would seem too small.
bq. +      // If there's no handler in the in-progress map, it means that:
""one of the following""?
bq. yes, there's a thread pool that runs the snapshot task... so if you've 1 your request are enqueued
Yeah, but the comment says ""thread pool for snapshots ensures the snapshot won't be started if there is another snapshot already running""
It either doesn't and mustn't ensure this, so comment is wrong, or it should ensure and the code is :)
bq. All the logic before, you get in there if there're no other snapshot/restore running on the same table and the snapshot doesn't exists. 
So if two simultaneous requests are sent and multiple threads are used what ensures they don't both reach this method and race?

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
no you're right, I assumed the prepare() and take() were both under synchronized...
anyway, with the current code in that case the worst thing that may happen is that you've two snapshot operations running and my guess is that one of the two will fail since they both poke with the zk procedure nodes that it will be in an unexpected state... result is a snapshot failure on both... which is fine...


** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestOpenedRegionHandler
                  org.apache.hadoop.hbase.util.TestHBaseFsck
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 37 **
[Comment excluded]

** Comment 38 **
+1.. could instead put some sort of placeholder there and remove when failing, but probably doesn't matter, there are no particularly slow ops in the middle

** Comment 39 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 40 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
Integrated in hbase-0.95-on-hadoop2 #92 (See )
    HBASE-8446 Allow parallel snapshot of different tables (Revision 1480587)
     Result = FAILURE
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 46 **
Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #522 (See )
    HBASE-8446 Allow parallel snapshot of different tables (Revision 1480585)
     Result = FAILURE
mbertozzi : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 47 **
Integrated in HBase-TRUNK #4106 (See )
    HBASE-8446 Allow parallel snapshot of different tables (Revision 1480585)
     Result = FAILURE
mbertozzi : 
Files : 
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 48 **
Integrated in hbase-0.95 #183 (See )
    HBASE-8446 Allow parallel snapshot of different tables (Revision 1480587)
     Result = FAILURE
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 49 **
Integrated in HBase-0.94-security #141 (See )
    HBASE-8446 Allow parallel snapshot of different tables (Revision 1480586)
     Result = FAILURE
mbertozzi : 
Files : 
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]

"
HBASE-9120,https://issues.apache.org/jira/browse/HBASE-9120,https://github.com/apache/hbase/blob/0.94.11/src/test/java/org/apache/hadoop/hbase/ClassFinder.java,ClassFinder logs errors that are not,YES,"ClassFinder logs error messages that are not actionable, so they just cause distraction","** Comment 1 **
Simple patch that changes lines to warn and info depending on how likely it is to be actually worth looking at.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
SUCCESS: Integrated in HBase-0.94-security #245 (See )
HBASE-9120 ClassFinder logs errors that are not (Sergey) (larsh: rev 1510088)
* /hbase/branches/0.[file java]


** Comment 8 **
FAILURE: Integrated in HBase-0.94 #1094 (See )
HBASE-9120 ClassFinder logs errors that are not (Sergey) (larsh: rev 1510088)
* /hbase/branches/0.[file java]


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
SUCCESS: Integrated in hbase-0.95 #401 (See )
HBASE-9120 ClassFinder logs errors that are not (stack: rev 1510095)
* /hbase/branches/0.[file java]


** Comment 13 **
SUCCESS: Integrated in hbase-0.95-on-hadoop2 #217 (See )
HBASE-9120 ClassFinder logs errors that are not (stack: rev 1510095)
* /hbase/branches/0.[file java]


** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in HBase-0.98 #257 (See )
HBASE-9120 ClassFinder logs errors that are not (stack: rev 1582945)
* /hbase/branches/0.[file java]


** Comment 16 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #241 (See )
HBASE-9120 ClassFinder logs errors that are not (stack: rev 1582945)
* /hbase/branches/0.[file java]


** Comment 17 **
SUCCESS: Integrated in HBase-TRUNK #5050 (See )
HBASE-9120 ClassFinder logs errors that are not (stack: rev 1582944)
* [file java]

"
HBASE-9221,https://issues.apache.org/jira/browse/HBASE-9221,https://github.com/apache/hbase/blob/0.94.13/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Provide interface for getting a User in the client,NO,"Sometimes, users will want to provide their own User class depending on the type of security they will support in their local environment. For instance, running Hadoop1 vs Hadoop2 vs CDH means potentially different ways of getting the UserGroupInformation. 

This issue abstracts out the mechanism by which we obtain an o.a.h.hbase.security.User to a UserProvider. This UserProvider can then be extented as a Hadoop 1/2 shim as well as supporting custom authentication code.","** Comment 1 **
This came up at Salesforce where we have to connect to a secure and insecure cluster from the same JVM. To enable this, we needed to rewrite UserGroupInformation to correctly support this case. However, this meant we needed to change how we obtain a o.a.h.h.security.User (to bind it to the right Configuration).

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Attaching updated patch for 0.94 - fixes small test failure in TestMasterServlet that UserProvider#instantiate expects a non-null configuration. It will always be non-null, from the MasterServlet except in the test case where the mock HBaseAdmin was not setup to pass along the configuration.
Hoping to commit this soon to make the 0.94.12 deadline...

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 14 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    -1 hadoop2.0.  The patch failed to compile against the hadoop 2.0 profile.
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 14 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
                  org.apache.hadoop.hbase.security.access.TestTablePermissions
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher
                  org.apache.hadoop.hbase.security.access.TestAccessControlFilter
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.security.access.TestAccessController
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 17 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    -1 javac.  The applied patch generated 12 javac compiler warnings (more than the trunk's current 4 warnings).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.access.TestAccessController
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.security.access.TestAccessControlFilter
                  org.apache.hadoop.hbase.security.access.TestTablePermissions
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
Attaching patches with the above mentioned fix. Passes all the failed tests locally, across all versions.

** Comment 28 **
[Comment excluded]

** Comment 29 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 17 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    -1 javac.  The applied patch generated 12 javac compiler warnings (more than the trunk's current 4 warnings).
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
FAILURE: Integrated in HBase-0.94 #1189 (See )
HBASE-9221: Provide interface for getting a User in the client (jyates: rev 1536930)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
FAILURE: Integrated in hbase-0.96-hadoop2 #106 (See )
HBASE-9221: Provide interface for getting a User in the client: ADDENDUM (jyates: rev 1536945)
* /hbase/branches/0.96/hbase-client/pom.xml
* /hbase/branches/0.[file java]
HBASE-9221: Provide interface for getting a User in the client (jyates: rev 1536936)
* /hbase/branches/0.96/hbase-client/pom.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.96/hbase-common/pom.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.96/hbase-common/src/main/java/org/apache/hadoop/hbase/security
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]
"
HBASE-9651,https://issues.apache.org/jira/browse/HBASE-9651,https://github.com/apache/hbase/blob/0.94.13/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java,Backport HBASE-3890 'Scheduled tasks in distributed log splitting not in sync with ZK' to 0.94,YES,"HBASE-3890 was fixed in 0.96 and trunk. This issue is to backport to 0.94

Note that there must be more slightly off here. Although the splitlogs znode is now empty the master is still stuck here:
{code}
Doing distributed log split in hdfs://localhost:8020/hbase/.logs/10.0.0.65,60020,1305406356765	
- Waiting for distributed tasks to finish. scheduled=2 done=1 error=0   4380s

Master startup	
- Splitting logs after master startup   4388s
{code}
There seems to be an issue with what is in ZK and what the TaskBatch holds. In my case it could be related to the fact that the task was already in ZK after many faulty restarts because of the NPE. Maybe it was added once (since that is keyed by path, and that is unique on my machine), but the reference count upped twice? Now that the real one is done, the done counter has been increased, but will never match the scheduled.
","** Comment 1 **
Tests passed:
{code}
Tests run: 1384, Failures: 0, Errors: 0, Skipped: 13
 ------------------------------------------------------------------------
 BUILD SUCCESS
 ------------------------------------------------------------------------
 Total time: 1:12:13.160s
 Finished at: Wed Sep 25 00:18:38 UTC 2013
 Final Memory: 30M/319M
{code}

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in HBase-0.94 #1161 (See )
HBASE-9651 Backport HBASE-3890 'Scheduled tasks in distributed log splitting not in sync with ZK' to 0.94 (tedyu: rev 1526194)
* /hbase/branches/0.[file java]


** Comment 5 **
SUCCESS: Integrated in HBase-0.94-security #302 (See )
HBASE-9651 Backport HBASE-3890 'Scheduled tasks in distributed log splitting not in sync with ZK' to 0.94 (tedyu: rev 1526194)
* /hbase/branches/0.[file java]


** Comment 6 **
[Comment excluded]
"
HBASE-9783,https://issues.apache.org/jira/browse/HBASE-9783,https://github.com/apache/hbase/blob/0.94.13/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java,o.a.h.h.r.HRegion.mutateRow() with non-existent CF cause NPE,NO,"h6. 0.94 branch only

Calling {{HTable.mutateRow()}} with non-existent column families result in a NPE on the region server which is wrapped into {{RemoteException}} and returned to the client. Since NPE is not a {{DoNotRetryIOException}}, client keeps repeating it until the number of retries are exhausted.

Negative case, hence creating as minor.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Looking at the patch. Two comments:
# Nit: In the test, just let the unexpected exception fall through. That way it shows up in the test log rather than an assertion failure
# The problem seems to be that checkFamilies is inside the try block and in the finally clause we attempt to get the store for a family, which returns null. The same check is done in prepareDelete
I think it would be better to either have a null check for the store in the finally clause, or add another boolean that we set to true right before we update the memstore and only rollback if that is set.


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]
"
HBASE-10622,https://issues.apache.org/jira/browse/HBASE-10622,https://github.com/apache/hbase/blob/0.94.18/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java,Improve log and Exceptions in Export Snapshot ,YES,"from the logs of export snapshot is not really clear what's going on,
adding some extra information useful to debug, and in some places the real exception can be thrown","** Comment 1 **
This is right on the border of needed to be on review board for me.
This is a bit awkwards.  Make it a do .. while loop?
{code}
+      while (true) {
+        try {
+          copyFile(context, inputPath, outputPath);
+          break;
+        } catch (IOException e) {
+          if (++nattempts >= copyRetry) {
+            throw e;
+          }
+          LOG.warn(""Failed copy attempt "" + nattempts + "". retrying..."", e);
+          Thread.sleep(nattempts * copyRetryWait);
+        }
+      }
{code}
nit: The user/group may not *exist* on the 
{code}
+        } catch (IOException e) {
+          LOG.warn(""Unable to set the owner/group for file=""+ stat.getPath() +"": ""+ e.getMessage());
+          LOG.warn(""The user/group may not exists on the destination cluster: user="" +
+                   user + "" group="" + group);
+          return false;
{code}

** Comment 2 **
It will help to use job.getStatus().getFailureInfo() if the copy job failed?
Another area is to somehow intelligently to estimate the number of copy mappers needed based on the size and number of files?  Similar to DistCp?

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12631400
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestHCM
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
{code}It will help to use job.getStatus().getFailureInfo() if the copy job failed?{code}
We already get each mapper stack trace in the ""main"" log if something fail,
but I guess is not bad if we report it again at the end. let me add that
{code}
Another area is to somehow intelligently to estimate the number of copy mappers needed based on the size and number of files? Similar to DistCp?
{code}
sure, I was thinking to rewrite the file grouping later to keep in consideration also the locations..
but I guess adding a default number of mappers here is short enough

** Comment 5 **
job.getStatus().getFailureInfo() is not present in all the version, so when you end up getting this.
I've added a TODO, and I'll skip it for now
{code}
java.lang.NoSuchMethodError: org.apache.hadoop.mapreduce.Job.getStatus()Lorg/apache/hadoop/mapreduce/JobStatus
{code}

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12631707
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12631733
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12631831
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
A few more comments (since you are doing the improvement ...)
{code}
-        // Verify that the written size match
-        if (totalBytesWritten != inputFileSize) {
-          String msg = ""number of bytes copied not matching copied="" + totalBytesWritten +
-                       "" expected="" + inputFileSize + "" for file="" + inputPath;
-          throw new IOException(msg);
{code}
You think this is unnecessary?
In the run(),  can we cleanup/delete snapshotTmpDir if Step 2 failed so that we don't ask the user to manually clean it since it comes from our Step 1 copy?
Can we add a job counter say 'COPIES_FILES' to be along side with 'BYTES_COPIED'?
Another issue is probably more involved, and does not need to be covered in this JIRA. It is the overall progress reporting of the ExportSnapshot job.
For example,  
hbase org.apache.hadoop.hbase.snapshot.ExportSnapshot -snapshot snapshot1 -copy-to /user/biadmin/mysnapshots -mappers 30
{code}
14/03/02 12:19:54 INFO mapred.JobClient:  map 0% reduce 0%
14/03/02 12:20:12 INFO mapred.JobClient:  map 6% reduce 0%
14/03/02 12:20:13 INFO mapred.JobClient:  map 44% reduce 0%
14/03/02 12:20:19 INFO mapred.JobClient:  map 83% reduce 0%
{code}
There is about 130G to export.  But it takes just a few secs to get to 83%, after the first around of mappers are launched, and will stay there for a long time.
Similarly at the end it will show 100% for a long time while there are mappers still running.
he map progress percentage is quite inaccurate with regard to the over progress. 

** Comment 14 **
{quote}In the run(), can we cleanup/delete snapshotTmpDir if Step 2 failed so that we don't ask the user to manually clean it since it comes from our Step 1 copy?{quote}
There is an -overwrite option that does already this, but I think the general problem should be solved by the last line of this patch where the snapshotTmpDir is removed if you get an exception.
{quote}Another issue is probably more involved, and does not need to be covered in this JIRA. It is the overall progress reporting of the ExportSnapshot job.{quote}
other jira, it requires a new InputFormat/RecordReader with the progress based on the file size and not on the number of lines in the input file. The only progress that we track is the current file copy


** Comment 15 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12632218
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot
                  org.apache.hadoop.hbase.snapshot.TestExportSnapshot
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12632257
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestHCM
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in hbase-0.96-hadoop2 #224 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574033)
* /hbase/branches/0.[file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.94-security #429 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574034)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 20 **
FAILURE: Integrated in HBase-0.94-on-Hadoop-2 #39 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574034)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 21 **
FAILURE: Integrated in HBase-TRUNK #4976 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574031)
* [file java]


** Comment 22 **
SUCCESS: Integrated in hbase-0.96 #326 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574033)
* /hbase/branches/0.[file java]


** Comment 23 **
FAILURE: Integrated in HBase-0.94 #1308 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574034)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 24 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #186 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574032)
* /hbase/branches/0.[file java]


** Comment 25 **
FAILURE: Integrated in HBase-0.94-JDK7 #72 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574034)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 26 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #107 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574031)
* [file java]


** Comment 27 **
SUCCESS: Integrated in HBase-0.98 #200 (See )
HBASE-10622 Improve log and Exceptions in Export Snapshot (mbertozzi: rev 1574032)
* /hbase/branches/0.[file java]

"
HBASE-8408,https://issues.apache.org/jira/browse/HBASE-8408,https://github.com/apache/hbase/blob/0.95.2/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java,Implement namespace,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
TestNamespaceMigration failed on MacBook:
{code}
org.apache.hadoop.hbase.namespace.TestNamespaceMigration  Time elapsed: -1,591,169.417 sec  <<< FAILURE!
junit.framework.AssertionFailedError
  at junit.framework.Assert.fail([file java]:55)
  at junit.framework.Assert.assertTrue([file java]:22)
  at junit.framework.Assert.assertTrue([file java]:31)
  at org.apache.hadoop.hbase.namespace.TestNamespaceMigration.untar([file java]:125)
  at org.apache.hadoop.hbase.namespace.TestNamespaceMigration.setUpBeforeClass([file java]:81)
{code}
From test output:
{code}
2013-05-13 20:49:56,755 INFO   namespace.TestNamespaceMigration(123): Untarring hbase-server/src/test/data/TestNamespaceMigration.tgz into /Users/tyu/trunk/hbase-server/target/test-data/2f04848c-7909-4ff3-b133-0eca92c27508/TestNamespaceMigration
{code}
I have:
{code}
$ ls -l hbase-server/src/test/data/TestNamespaceMigration.tgz
-rw-r--r--@ 1 tyu  staff  9593 May 13 16:17 hbase-server/src/test/data/TestNamespaceMigration.tgz
{code}


** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 653 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 17 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestAtomicOperation
                  org.apache.hadoop.hbase.TestNamespaceUpgrade
     -1 core zombie tests.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.master.TestMasterNoCluster.testNotPullingDeadRegionServerFromZK([file java]:408)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 20 **
Good.  Keep fixing the javadoc warnings, zombie tests (there should be none in trunk now ) and take a look at the findbugs failings.  The site failure is likely not your issue.  I can see the patch going in w/ findbugs and javadoc issues for solving in a subsequent patch.  Tests should pass.  Use hadoopqa for checking by submitting new patches.  Going over to review on rb now...

** Comment 21 **
Thanks Stack! Should I worry about lineLengths? A lot of the files go beyond 100 (proto, jamon, etc)? 
Also TestNamespaceUpgrade will always fail with hadoopqa since it does not include the TGZ. Working on the other zombie. 
BTW I just went through the findbugs list to figure which ones I added but can't seem to find the last one. Is this there a tool to identify which ones were added by the patch. 

** Comment 22 **
Don't worry about line lengths I'd say.
Ok On TestNSUpgrade failing for now.  Make sure it passes locally for you.
No worries on findbugs.  Can do after patch goes in.  We can help there.  Ditto on javadoc fixes.

** Comment 23 **
I was having trouble up in rb loading page #3 so moved to raw patch.  Here is some feedback up to TableSplit:
{code}
+ [file java]
Good you upped the fs version number.
I wonder if the tablename defines don't better belong in the new TableName class.
On the name of the datadir being .data, is that right?  Did we talk about
changing the names of dirs after ns goes in to remove the '.' ?  Would that be after
this patch?
+ [file java]
So the system ns is called 'hbase' and not 'system'?  HConstants.META_TABLE_NAME.getName().length; // 'hbase.meta' length
+ [file java]
Looks good.  When we list them, they will look like an HTableDescriptor listing in
the ruby map format.... Thats consistent (if ugly but ugly ain't your fault)
+ [file java]
I suppose it is ok haveing NS and TN in hbase-common.  They have no dependency on anything else.
What is a qualifier name in TN?  A ns?  Or it looks like it is the old tablename?  Should say
in javadoc since can confuse
TN#valueOf(byte ) and TN#valueOf(String) duplicate code.
Yeah, add some javadoc on what qualifier is.  An example?  Yeah, javadoc needs examples.
Fix javadoc (missing @param)
+ [file java]
Suggest putting this class into a migration subpackage (it is where we used to put
shortlived migration classes in the past -- see 0.92... )
The class javadoc is off.... we use ':' now?
Looking at this script, can it resume if it fails midway through a migration and it then
gets restarted again?  It does not look like it.
Good that it implements Tool.
Does it change the fs file version?  I don't see it.
+ [file java]
You have unit test for your new hfilelink regex?
You have a note about ':' being illegal but it is floating in the middle of the file
unattached.
Yeah, do these changes have test coverage?
{code}
More to come.

** Comment 24 **
[Comment excluded]

** Comment 25 **
{quote}
+ [file java]
Good you upped the fs version number.
I wonder if the tablename defines don't better belong in the new TableName class.
{quote}
Yeah there's some table utilities (isSystem()) and constants. 
{quote}
On the name of the datadir being .data, is that right?  Did we talk about
changing the names of dirs after ns goes in to remove the '.' ?  Would that be after
this patch?
{quote}
We talked about it going in a separate patch. After reading Enis' reviews. I decided to go with .data we can deal with all these directories in a separate patch. Since you'll need downtime moving the others as well anyway?
{quote}
+ [file java]
So the system ns is called 'hbase' and not 'system'?  HConstants.META_TABLE_NAME.getName().length; // 'hbase.meta' length
{quote}
Yeah this is an artifact of the '.' delimiter. Less chance someone has a table named hbase.foo as opposed to system.foo. We can rename it back to system if you'd like. Tho mysql has theirs named as mysql. Not sure about the others so hbase should be fine too.
{quote}
+ [file java]
I suppose it is ok haveing NS and TN in hbase-common.  They have no dependency on anything else.
What is a qualifier name in TN?  A ns?  Or it looks like it is the old tablename?  Should say
in javadoc since can confuse
TN#valueOf(byte ) and TN#valueOf(String) duplicate code.
Yeah, add some javadoc on what qualifier is.  An example?  Yeah, javadoc needs examples.
Fix javadoc (missing @param)
{quote}
yeah qualifier is the old/simple table name. like column qualifier is to a column. will fix doc. 
{quote}
Looking at this script, can it resume if it fails midway through a migration and it then
gets restarted again?  It does not look like it.
{quote}
It essentially just goes through what hasn't been moved yet. And moves those. There's nothing much else to do.
{quote}
Does it change the fs file version?  I don't see it.
{quote}
Good catch will put that in.
{quote}
You have unit test for your new hfilelink regex?
{quote}
When I was looking for hfilelink tests I noticed most of the coverage is done by snapshot tests so I just relied on that plus some new tests that's in TestNamespaceUpgrade which tests non-default tables. That should cover the two cases. Thinking about it I should move these tests into a snapshot test class as well.
{quote}
You have a note about ':' being illegal but it is floating in the middle of the file
unattached.
{quote}
line number?


** Comment 26 **
Ok on separate patch renaming dirs so they no longer have the leading '.' post this patch going in.
Your reasoning on system ns being called 'hbase' is fine by me.
Add examples to TN javadoc to explain what you mean by 'qualifier'.
Sounds like the migration script is written so it can be rerun.  Its test that migration has happened -- that .meta. has been renamed -- ... is that a good one?  It'll be fs version after you make the update?
On hfilelink, the regex in particular could do w/ a little test.


** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
 So, regards system tables, they are all treated like meta table?  They all get assigned out before user tables?   Or does meta go out first before everything else and other system tables are a new tier of assigning?  (I wonder if the meta log should become a system tables log now?)

** Comment 31 **
{quote}
Francis Liu So, regards system tables, they are all treated like meta table? They all get assigned out before user tables? Or does meta go out first before everything else and other system tables are a new tier of assigning?
{quote}
Currently system tables is a new tier. Meta first, then system, then users. Tho it's missing the open handler queue and wal. Let's add it as a follow on patch.
{quote}
(I wonder if the meta log should become a system tables log now?)
{quote}
That would be the next state. We need to add the notion of priorities into system table which we need anyway. As long as we keep the table sizes of system tables minimal. Else we risk slowing down MTTR. Though that should be a general principle for system tables in any case?

** Comment 32 **
Paging through review board was somehow very slow.
{code}
+    for(Iterator<HRegionInfo> iter = allRegions.keySet().iterator();
+        iter.hasNext();) {
+      if (HTableDescriptor.isSystemTable(iter.next().getTableName())) {
+        iter.remove();
+      }
+    }
{code}
I see 3 places in the patch where the above construct is used. It would be nice to extract into a util method.
In TableNamespaceManager:
{code}
+      zkNamespaceManager.update(ns);
+    }
+    scanner.close();
{code}
Can you place the close() call in finally block ?
In upsert(NamespaceDescriptor ns), IOException from table.put(p) is not considered fatal ?
Should we disallow splitting Namespace table ?

** Comment 33 **
[Comment excluded]

** Comment 34 **
I'm at page 2 right now. Will upload new patch for testing when it's done. Weird hadoopqa did not ran patch 12 I submitted last night. Luckily I ran the tests myself as well so far one failure is left zombie test: TestDistributedLogSplitting. Weird problem the cluster won't startup, seems previous cluster didn't shutdown as well. The class restarts the cluster after every method. Hopefully just some cleanup missing.

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
{quote}
Can you place the close() call in finally block ?
{quote}
Done
{quote}
In upsert(NamespaceDescriptor ns), IOException from table.put(p) is not considered fatal ?
{quote}
Not really since things are still in consistent state.
{quote}
Should we disallow splitting Namespace table ?
{quote}
Good point, will be conservative and make it not splittable. We may need cross-row atomicity in the future.

** Comment 38 **
[Comment excluded]

** Comment 39 **
TestDistributedLogSplitting has been going zombie on occasion so doubt it your patch that is responsible.  Would suggest you run it multiple times on your end though to verify.
Regards hadoopqa not running your patch, you might have to check  manually.  Look under here [link]  Looks like there was a build failure: [link]


** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
Build is done.
[link]
-1 on javadoc, -1 on line lengths and only TestNamespaceUpgrade failed which I verified passes locally.

** Comment 46 **
3 of 5 times it passed?   What happened the other times?  Maybe you have a log of it?  There is HBASE-8960.
So, where we at?  Have you addressed all comments up on rb in your latest patch?

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
Trying the patch, LoadTestTool is only hunk that would not apply (Easy fix of an import).  Also has prob w/
[file java]
This pretty brutal in the shell:
{code}
hbase(main):002:0> scan '.META.'
ERROR: java.lang.IllegalArgumentException: Illegal first character <46> at 0. Namespaces can only start with alphanumeric characters': i.e. : .META.
Here is some help for this command:
Scan a table; pass table name and optionally a dictionary of scanner
specifications.  Scanner specifications may include one or more of:
TIMERANGE, FILTER, LIMIT, STARTROW, STOPROW, TIMESTAMP, MAXLENGTH,
or COLUMNS, CACHE....
{code}
Should probably give folks a bit of a nicer letdown.
If I do 'list', I do not see system tables and the help gives me no clue they exist.  I suppose this is how it always was.
Should I be able to do this?
hbase(main):013:0> create 'hbase:stack', 'stack'
0 row(s) in 0.1790 seconds
I created a system table named 'stack'?
The 'create' command needs updating so  it has some namespace stuff going on?  Doesn't it?  It has nothing on it currently.


** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
addressed comments on RB. rebased patch. took some time to fix DistributedLogSplitting flakiness since it would pass on my IDE but not on maven. It seems it had to do with dfs hanging on a write request, a stacktrace showed it hung while TableNamespaceManager was trying to write reserved namespaces onto namespace table. 

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[link]
-1 javadoc
-1 line lengths
-1 tests, only TestNamespaceUpgrade failed. 
Looks good.

** Comment 64 **
FAILURE: Integrated in HBase-TRUNK #4354 (See )
HBASE-8408 Implement namespace (stack: rev 1511577)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-protocol/src/main/protobuf/AccessControl.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/MasterAdmin.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/MasterMonitor.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/SecureBulkLoad.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/ZooKeeper.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/hbase.proto
* /hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/migration
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/snapshot.jsp
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/tablesDetailed.jsp
* /hbase/trunk/hbase-server/src/main/ruby/hbase/admin.rb
* /hbase/trunk/hbase-server/src/main/ruby/hbase/table.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_alter.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_create.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_describe.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_drop.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_list.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_list_tables.rb
* /hbase/trunk/hbase-server/src/test/data/TestNamespaceUpgrade.tgz
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/migration
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/test/ruby/hbase/admin_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/hbase/hbase_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/hbase/table_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/shell/shell_test.rb


** Comment 65 **
Applied to trunk.  See between -r1511543 and -r1511577.  Minor fixup in TestHCM and in table.jsp, the former to workaround the commit made before this one and then in table.jsp the hunk just failed.  I added in the tgz on commit.  Also had to add a fixup addendum to fix test build.  Let me attach it.
Working on 0.95 now.  Lots of rejects.


** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
FAILURE: Integrated in HBase-TRUNK #4355 (See )
HBASE-8408 Implement namespace; ADDENDUM (stack: rev 1511587)
* [file java]
* [file java]


** Comment 71 **
FAILURE: Integrated in hbase-0.95 #415 (See )
HBASE-8408  implement Namespaces (stack: rev 1511591)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/AccessControl.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/MasterAdmin.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/MasterMonitor.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/SecureBulkLoad.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/ZooKeeper.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/hbase.proto
* /hbase/branches/0.95/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/migration
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/snapshot.jsp
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/tablesDetailed.jsp
* /hbase/branches/0.95/hbase-server/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/hbase/table.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_alter.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_create.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_describe.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_drop.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_list.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_list_tables.rb
* /hbase/branches/0.95/hbase-server/src/test/data/TestNamespaceUpgrade.tgz
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/migration
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/admin_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/hbase_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/table_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/shell/shell_test.rb


** Comment 72 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #224 (See )
HBASE-8408  implement Namespaces (stack: rev 1511591)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/AccessControl.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/MasterAdmin.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/MasterMonitor.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/SecureBulkLoad.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/WAL.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/ZooKeeper.proto
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/hbase.proto
* /hbase/branches/0.95/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/migration
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/snapshot.jsp
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* /hbase/branches/0.95/hbase-server/src/main/resources/hbase-webapps/master/tablesDetailed.jsp
* /hbase/branches/0.95/hbase-server/src/main/ruby/hbase/admin.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/hbase/table.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_alter.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_create.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_describe.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_drop.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_list.rb
* /hbase/branches/0.95/hbase-server/src/main/ruby/shell/commands/namespace_list_tables.rb
* /hbase/branches/0.95/hbase-server/src/test/data/TestNamespaceUpgrade.tgz
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/migration
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/admin_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/hbase_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/hbase/table_test.rb
* /hbase/branches/0.95/hbase-server/src/test/ruby/shell/shell_test.rb


** Comment 73 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #657 (See )
HBASE-8408 Implement namespace; ADDENDUM (stack: rev 1511587)
* [file java]
* [file java]
HBASE-8408 Implement namespace (stack: rev 1511577)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-protocol/src/main/protobuf/AccessControl.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/MasterAdmin.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/MasterMonitor.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/SecureBulkLoad.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/WAL.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/ZooKeeper.proto
* /hbase/trunk/hbase-protocol/src/main/protobuf/hbase.proto
* /hbase/trunk/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/migration
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/snapshot.jsp
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* /hbase/trunk/hbase-server/src/main/resources/hbase-webapps/master/tablesDetailed.jsp
* /hbase/trunk/hbase-server/src/main/ruby/hbase/admin.rb
* /hbase/trunk/hbase-server/src/main/ruby/hbase/table.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_alter.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_create.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_describe.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_drop.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_list.rb
* /hbase/trunk/hbase-server/src/main/ruby/shell/commands/namespace_list_tables.rb
* /hbase/trunk/hbase-server/src/test/data/TestNamespaceUpgrade.tgz
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/migration
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/test/ruby/hbase/admin_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/hbase/hbase_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/hbase/table_test.rb
* /hbase/trunk/hbase-server/src/test/ruby/shell/shell_test.rb


** Comment 74 **
Resolving.  Committed to trunk and 0.95.  There are some unit test failures post-commit.  Will address in follow-ups.   Nice contrib Francis.  Lets get the remaining ns stuff in.

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
[Comment excluded]

** Comment 78 **
[Comment excluded]

** Comment 79 **
[Comment excluded]

** Comment 80 **
 Thanks.  I missed that.
 Yeah, security is critical now.  I'm on some failing tests at the mo.

** Comment 81 **
FAILURE: Integrated in HBase-TRUNK #4356 (See )
HBASE-8408; addendum for new HConnection API (larsh: rev 1511885)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 82 **
FAILURE: Integrated in hbase-0.95 #417 (See )
HBASE-8408; addendum for new HConnection API (larsh: rev 1511890)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 83 **
[Comment excluded]

** Comment 84 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #225 (See )
HBASE-9166 TestSplitTransactionOnCluster broke since HBASE-8408 (Namespaces) (stack: rev 1512099)
* /hbase/branches/0.[file java]
HBASE-8408; addendum for new HConnection API (larsh: rev 1511890)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 85 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #658 (See )
HBASE-8408; addendum for new HConnection API (larsh: rev 1511885)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 86 **
FAILURE: Integrated in hbase-0.95 #419 (See )
HBASE-9166 TestSplitTransactionOnCluster broke since HBASE-8408 (Namespaces) (stack: rev 1512099)
* /hbase/branches/0.[file java]


** Comment 87 **
FAILURE: Integrated in hbase-0.95 #421 (See )
HBASE-9170 TestStoreFileBlockCacheSummary.testBlockCacheSummary broke since HBASE-8408 (Namespaces) in 0.95 (stack: rev 1512141)
* /hbase/branches/0.[file java]


** Comment 88 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #226 (See )
HBASE-9170 TestStoreFileBlockCacheSummary.testBlockCacheSummary broke since HBASE-8408 (Namespaces) in 0.95 (stack: rev 1512141)
* /hbase/branches/0.[file java]


** Comment 89 **
[Comment excluded]

** Comment 90 **
[Comment excluded]

** Comment 91 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #267 (See )
HBASE-9274 After HBASE-8408 applied, temporary test files are being left in /tmp/hbase-<user>
Added a HBaseTestingUtility#createLocalHTU for tests where hbaseroot is set to a unique testdata dir to prevent detritus. (jmhsieh: rev 1516621)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 92 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #693 (See )
HBASE-9274 After HBASE-8408 applied, temporary test files are being left in /tmp/hbase-<user>
Added a HBaseTestingUtility#createLocalHTU for tests where hbaseroot is set to a unique testdata dir to prevent detritus. (jmhsieh: rev 1516622)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]

"
HBASE-9191,https://issues.apache.org/jira/browse/HBASE-9191,https://github.com/apache/hbase/blob/0.95.2/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java,Update Loadbalancer method to throw HBaseIOException,NO,Some load balancers need a way to communicate failure scenarios so the AM has the opportunity to better handle them. ,"** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 3 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
Is this right?
+              try {
+                getRegionPlan(regionState.getRegion(), sn, true);
+              } catch (HBaseIOException e) {
+                LOG.warn(""Failed to get region plan"", e);
+              }
               new ClosedRegionHandler(server, this, regionState.getRegion()).process();
We don't get the plan but we press ahead w/ the close anyways?
 You good w/ this API change?

** Comment 4 **
Api plan sounds fine.
Your question about how to handlers should react when there's an error seems worth some study.

** Comment 5 **
I was thinking, that it will use the old plan since we failed to get a new one. And ClosedRegionHandler will behave accordingly. Couldn't imagine that would make anything worse. Tho wrapping including the handler would be a more conservative approach. Let me do that.

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #677 (See )
HBASE-9191 Update Loadbalancer method to throw HBaseIOException (stack: rev 1514155)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
[Comment excluded]
"
hbase-9098,https://issues.apache.org/jira/browse/HBASE-9098,https://github.com/apache/hbase/blob/0.95.2/hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java,During recovery use ZK as the source of truth for region state ,NO,"In HLogSplitter:locateRegionAndRefreshLastFlushedSequenceId(HConnection, byte[], byte[], String), we talk to the replayee regionserver to figure out whether a region is in recovery or not. We should look at ZK only for this piece of information (since that is the source of truth for recovery otherwise).","** Comment 1 **
Making it a blocker for 0.95.2 (feel free to move it to 0.95.3 if the patch doesn't get in time). This bug actually causes dataloss as far as I can tell in the meta region - meta will never be recovered (it turns out that isRecovering() is called on a constant FIRST_META_REGIONINFO and that will always return false).

** Comment 2 **
Thanks for the very good catch. Just providing more background details. In file [file java] as following:
{code}
  public static HRegionInfo convert(final RegionInfo proto) {
    if (proto == null) return null;
    byte  tableName = proto.getTableName().toByteArray();
    if (Bytes.equals(tableName, HConstants.META_TABLE_NAME)) {
      return FIRST_META_REGIONINFO;
    }
    long regionId = proto.getRegionId();
{code}
For META region recovery, we always return the constant FIRST_META_REGIONINFO whose recovering state is always false. The consequence is that we'll skip META region recovery.
I'll use ZK as the source of truth in the fix so the problematic area should be fixed.

** Comment 3 **
{code}
-  // when a region is in recovering state, it can only accept writes not reads
-  private volatile boolean recovering = false;
{code}
Nice simplification above.
{code}
-  public void prepareLogReplay(Set<ServerName> serverNames) throws IOException {
+  public void prepareLogReplay(ServerName serverName, List<HRegionInfo> regions) throws IOException {
{code}
There is conversion later in the patch:
{code}
+      for(HRegionInfo tmpRegionInfo : regions) {
+        regionSet.add(tmpRegionInfo);
{code}
Why not passing Set<HRegionInfo> as parameter ?
{code}
+      // verify current region is indeed in recovering state
+      try {
+        if (SplitLogManager.isRegionMarkedRecoveringInZK(watcher, loc.getRegionInfo()
+            .getEncodedName()) == false) {
{code}
The comment seems to be different from the check above.

** Comment 4 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.encoding.TestChangingEncoding
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove
                  org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingTTL
                  org.apache.hadoop.hbase.master.TestMasterFailover
                  org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint
                  org.apache.hadoop.hbase.master.TestMasterShutdown
                  org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk
     -1 core zombie tests.  There are 11 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 18 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 18 **
{code}
+        || op == Operation.COMPACT_REGION) {
+      // split, merge or compact region doesn't need to check the closing/closed state or lock the
{code}
Why was COMPACT_REGION added to the above check ?
{code}
+      // use one element array in order for waitUntilRegionOnline to pass inRecovering state out
+      boolean isRecovering = new boolean { true };
{code}
You can also use AtomicBoolean above.
{code}
+        // been being moved to somewhere before hosting RS fails
{code}
'being' is redundant.

** Comment 19 **
Thanks Ted for comments!
{quote}
Why was COMPACT_REGION added to the above check ?
{quote}
In tests, I found major compaction requests drag recovery process. Current recovered edits recovery doesn't allow compaction. So I disable compaction request for log replay recovery as well.
I incorporated the rest comments into v4 patch. Thanks.

** Comment 20 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 18 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #230 (See )
HBASE-9098: During recovery use ZK as the source of truth for region state - v2 (jeffreyz: rev 1512554)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.95/hbase-protocol/src/main/protobuf/Admin.proto
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]
"
HBASE-8940,https://issues.apache.org/jira/browse/HBASE-8940,https://github.com/apache/hbase/blob/0.95.2/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/DispatchMergingRegionHandler.java,TestRegionMergeTransactionOnCluster#testWholesomeMerge may fail due to race in opening region,YES,"From http://54.241.6.143/job/HBase-TRUNK-Hadoop-2/org.apache.hbase$hbase-server/395/testReport/org.apache.hadoop.hbase.regionserver/TestRegionMergeTransactionOnCluster/testWholesomeMerge/ :
{code}
013-07-11 09:33:44,154 INFO  [AM.ZK.Worker-pool-2-thread-2] master.RegionStates(309): Offlined 3ffefd878a234031675de6b2c70b2ead from ip-10-174-118-204.us-west-1.compute.internal,60498,1373535184820
2013-07-11 09:33:44,154 INFO  [AM.ZK.Worker-pool-2-thread-2] master.AssignmentManager$4(1223): The master has opened testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead. that was online on ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884
2013-07-11 09:33:44,182 DEBUG [RS_OPEN_REGION-ip-10-174-118-204:59210-1] zookeeper.ZKAssign(862): regionserver:59210-0x13fcd13a20c0002 Successfully transitioned node 3ffefd878a234031675de6b2c70b2ead from RS_ZK_REGION_OPENING to RS_ZK_REGION_OPENED
2013-07-11 09:33:44,182 INFO  [MASTER_TABLE_OPERATIONS-ip-10-174-118-204:39405-0] handler.DispatchMergingRegionHandler(154): Failed send MERGE REGIONS RPC to server ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884 for region testWholesomeMerge,,1373535210124.efcb10dcfa250e31bfd50dc6c7049f32.,testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead., focible=false, org.apache.hadoop.hbase.exceptions.RegionOpeningException: Region is being opened: 3ffefd878a234031675de6b2c70b2ead
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getRegionByEncodedName(HRegionServer.java:2566)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getRegion(HRegionServer.java:3862)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.mergeRegions(HRegionServer.java:3649)
	at org.apache.hadoop.hbase.protobuf.generated.AdminProtos$AdminService$2.callBlockingMethod(AdminProtos.java:14400)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2124)
	at org.apache.hadoop.hbase.ipc.RpcServer$Handler.run(RpcServer.java:1831)

2013-07-11 09:33:44,182 DEBUG [RS_OPEN_REGION-ip-10-174-118-204:59210-1] handler.OpenRegionHandler(373): region transitioned to opened in zookeeper: {ENCODED => 3ffefd878a234031675de6b2c70b2ead, NAME => 'testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead.', STARTKEY => 'testRow0020', ENDKEY => 'testRow0040'}, server: ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884
2013-07-11 09:33:44,183 DEBUG [RS_OPEN_REGION-ip-10-174-118-204:59210-1] handler.OpenRegionHandler(186): Opened testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead. on server:ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884
{code}
We can see that MASTER_TABLE_OPERATIONS thread couldn't get region 3ffefd878a234031675de6b2c70b2ead because RS_OPEN_REGION thread finished region opening 1 millisecond later.

One solution is to retry operation when receiving RegionOpeningException","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
I think this a test issue.  What you think ?  We are asking to merge a region that the regionserver is NotServering.   Merge should fail.
I think this issue will be fixed by the Enis's ""HBASE-8934 Fix bunch of flaky tests"" -- the region will be fully opened before the test starts.

** Comment 8 **
Chatting w/ Jimmy friday afternoon, there is a little hole where we have published the region as available on regionserver X -- because it has been set in .META. and master has been informed the region has been opened via a transitioning of znode -- but the region may not be added to the regionserver online regions set just yet (it is done after we move region from OPENING to OPENED up in zk).  If a client comes in in the meantime, which is possible when all threads are running in the one jvm as we have in unit tests, client will get NotServingRegionException (or RegionOpeningException which is a subclass in this case)... which is the 'truth' in that we have not yet put up the region online.  The client will retry usually but in this case, in merge, there is no retry since it is the regionserver itself making a call on itself; there is no client.  Adding retries inside the regionserver seems wrong.  Regionserver knows its own state.
Talking w/ Jimmy, changing the order in which we online the region in the regionserver so we do it before we 'publish' via znode could open us up to races where region could be open in more than one place so it is safer to leave things as they are regards region onlining and instead just fix tests, or better, HBaseTestingUtility; i.e. not start the merge until for sure the regions are online.
Let me put up a patch.


** Comment 9 **
I took a closer look at the logs.  Something else is going on here.  We load the table, scan the table to ensure row count is as expected (which can only succeed after all regions are online), we then print out the regions we think make up the table, and then immediately after, we choose to unassign a region.  The merge fails because this unexpected unassign followed by an open elsewhere has not completed by the time the merge goes to run.  I cannot see why we do the unassign.  I see that the balancer is set to off for these tests.  Any clues ?  Otherwise, I'm going to add in a 'why' string for unassigns, etc.
Here is us listing all regions after successful verification of row count followed by the immediate unassign:
{code}
...
2013-07-11 09:33:43,744 INFO   regionserver.TestRegionMergeTransactionOnCluster(262): Regions after load: {{ENCODED => efcb10dcfa250e31bfd50dc6c7049f32, NAME => 'testWholesomeMerge,,1373535210124.efcb10dcfa250e31bfd50dc6c7049f32.', STARTKEY => '', ENDKEY => 'testRow0020'},ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884},{{ENCODED => 3ffefd878a234031675de6b2c70b2ead, NAME => 'testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead.', STARTKEY => 'testRow0020', ENDKEY => 'testRow0040'},ip-10-174-118-204.us-west-1.compute.internal,60498,1373535184820},{{ENCODED => 96a2b66754838d21e88d31cbeb21ed41, NAME => 'testWholesomeMerge,testRow0040,1373535210125.96a2b66754838d21e88d31cbeb21ed41.', STARTKEY => 'testRow0040', ENDKEY => 'testRow0060'},ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884},{{ENCODED => 71eb1ffffd93a0d6a9f5529a45922519, NAME => 'testWholesomeMerge,testRow0060,1373535210125.71eb1ffffd93a0d6a9f5529a45922519.', STARTKEY => 'testRow0060', ENDKEY => 'testRow0080'},ip-10-174-118-204.us-west-1.compute.internal,60498,1373535184820},{{ENCODED => f0cc6807bbeb1b4731f81397710ead3d, NAME => 'testWholesomeMerge,testRow0080,1373535210125.f0cc6807bbeb1b4731f81397710ead3d.', STARTKEY => 'testRow0080', ENDKEY => 'testRow0100'},ip-10-174-118-204.us-west-1.compute.internal,58569,1373535184726},{{ENCODED => bc7ff4e217795751fd2a9fc671ad33a4, NAME => 'testWholesomeMerge,testRow0100,1373535210125.bc7ff4e217795751fd2a9fc671ad33a4.', STARTKEY => 'testRow0100', ENDKEY => 'testRow0120'},ip-10-174-118-204.us-west-1.compute.internal,58569,1373535184726},{{ENCODED => 7bd39de7c7cc8e46007e50d2e60e4e3d, NAME => 'testWholesomeMerge,testRow0120,1373535210125.7bd39de7c7cc8e46007e50d2e60e4e3d.', STARTKEY => 'testRow0120', ENDKEY => 'testRow0140'},ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884},{{ENCODED => f6ca1923a2636032360186166784a35c, NAME => 'testWholesomeMerge,testRow0140,1373535210125.f6ca1923a2636032360186166784a35c.', STARTKEY => 'testRow0140', ENDKEY => 'testRow0160'},ip-10-174-118-204.us-west-1.compute.internal,60498,1373535184820},{{ENCODED => cc4e5e073976cf056ea7b629f3eaeee6, NAME => 'testWholesomeMerge,testRow0160,1373535210125.cc4e5e073976cf056ea7b629f3eaeee6.', STARTKEY => 'testRow0160', ENDKEY => 'testRow0180'},ip-10-174-118-204.us-west-1.compute.internal,58569,1373535184726},{{ENCODED => 95559e718b7b1dc87635f3bd474b9d36, NAME => 'testWholesomeMerge,testRow0180,1373535210125.95559e718b7b1dc87635f3bd474b9d36.', STARTKEY => 'testRow0180', ENDKEY => ''},ip-10-174-118-204.us-west-1.compute.internal,59210,1373535184884}
2013-07-11 09:33:43,751 DEBUG  client.ClientScanner(195): Finished region={ENCODED => 1028785192, NAME => '.META.,,1', STARTKEY => '', ENDKEY => ''}
2013-07-11 09:33:43,767 DEBUG  master.AssignmentManager(2205): Starting unassign of testWholesomeMerge,testRow0020,1373535210125.3ffefd878a234031675de6b2c70b2ead. (offlining)
...
{code}


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
Here is what I committed.  Only real difference is my adding logging of move of regions so they are adjacent; not having anything in the log confounded me.
Thanks for showing up w/ the why 

** Comment 16 **
[Comment excluded]

** Comment 17 **
It failed here: [link]
Want to take a look ?

** Comment 18 **
The above failed test is caused by
2013-07-27 20:08:48,345 INFO   handler.DispatchMergingRegionHandler(170): Cancel merging regions testWholesomeMerge,,1374955684854.8b452e80a9e15d54bd265c344f4ad953., testWholesomeMerge,testRow002
0,1374955684854.4a31455f2b0256853c41c52ba65bdc10., because can't move them together after 30003ms
Timeout of moving regions together on same RS is caused by closing region ""4a31455f2b0256853c41c52ba65bdc10"" take more time than 30s,
2013-07-27 20:08:18,753 DEBUG  handler.CloseRegionHandler(125): Processing close of 
testWholesomeMerge,testRow0020,1374955684854.4a31455f2b0256853c41c52ba65bdc10.
2013-07-27 20:08:18,755 DEBUG  regionserver.HRegion(1493): Started memstore flush for testWholesomeMerge,testRow0020,1374955684854.4a31455f2b0256853c41c52ba65bdc10., current region memstore size 3.4k
2013-07-27 20:09:03,914 INFO   regionserver.HRegion(1637): Finished memstore flush of ~3.4k/3520, currentsize=0.0/0 for region testWholesomeMerge,testRow0020,1374955684854.4a31455f2b0256853c41c52ba65bdc1
0. in 45159ms, sequenceid=186, compaction requested=false
2013-07-27 20:09:03,956 DEBUG  handler.CloseRegionHandler(177): Closed region testWholesomeMerge,testRow0020,1374955684854.4a31455f2b0256853c41c52ba65bdc10.
From the above logs, closing region took 45s, it seems flushing is too slow, but can't get the reason from the current logs, maybe GC or high IO load at that time

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]
"
HBASE-9177,https://issues.apache.org/jira/browse/HBASE-9177,https://github.com/apache/hbase/blob/0.95.2/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java,Cluster UUID is not properly parsable after rewriting to PB.,NO,"I am facing this problem while testing HBASE-8348(migration).
->I have started two clusters with 0.94 version to replicate data from one cluster to other. When we have started master,writing cluster id without PB. 
-> killed both the clusters when Replication in progress
-> running migration script to migrate hdfs and zk data to 0.96.0(No changes in cluster id.)
-> starting 0.96.0 processes. 
Then not able to start region server.
{code}
java.io.IOException: Region server startup failed
	at org.apache.hadoop.hbase.regionserver.HRegionServer.convertThrowableToIOE(HRegionServer.java:2629)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.handleReportForDutyResponse(HRegionServer.java:1202)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:802)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NumberFormatException: For input string: "" $411f611e
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Long.parseLong(Long.java:410)
	at java.lang.Long.valueOf(Long.java:498)
	at java.lang.Long.decode(Long.java:641)
	at java.util.UUID.fromString(UUID.java:208)
	at org.apache.hadoop.hbase.zookeeper.ZKClusterId.getUUIDForCluster(ZKClusterId.java:90)
	at org.apache.hadoop.hbase.replication.regionserver.Replication.initialize(Replication.java:127)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.newReplicationInstance(HRegionServer.java:2248)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.createNewReplicationInstance(HRegionServer.java:2219)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.setupWALAndReplication(HRegionServer.java:1423)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.handleReportForDutyResponse(HRegionServer.java:1190)
	... 2 more
{code}

{code}
      try {
        clusterId = ClusterId.parseFrom(content);
      } catch (DeserializationException e) {
        throw new IOException(""content="" + Bytes.toString(content), e);
      }
      // If not pb'd, make it so.
      if (!ProtobufUtil.isPBMagicPrefix(content)) rewriteAsPb(fs, rootdir, idPath, clusterId);
{code}
","** Comment 1 **
[Comment excluded]

** Comment 2 **
 I took a quick look.  It is not immediately plain why we are failing to read the old style serialization.  It looks like we should be able to.

** Comment 3 **
The reason for failure is in 0.94 we are persisting cluster id as string in UTF encoding but in trunk we are reading as bytes, so some extra bytes are getting appended to it.
0.94.x
======
{code}
        Path filePath = new Path(rootdir, HConstants.CLUSTER_ID_FILE_NAME);
        FSDataOutputStream s = fs.create(filePath);
        s.writeUTF(clusterId);
        s.close();
{code}
trunk:
======
{code}
      FSDataInputStream in = fs.open(idPath);
      try {
        in.readFully(content);
      } catch (EOFException eof) {
        LOG.warn(""Cluster ID file "" + idPath.toString() + "" was empty"");
      } finally{
        in.close();
      }
{code}

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestShell
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #677 (See )
HBASE-9177 Cluster UUID is not properly parsable after rewriting to PB. (stack: rev 1514161)
* [file java]
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]
"
HBASE-9661,https://issues.apache.org/jira/browse/HBASE-9661,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-client/src/main/java/org/apache/hadoop/hbase/catalog/CatalogTracker.java,Consistent log severity level guards and statements ,YES,"A log statement should be guarded by its matching severity level. A log statement like

     if (LOG.isTraceEnabled()) {
       LOG.debug(identifier + "" opening connection to ZooKeeper ensemble="" + ensemble);

doesn't make much sense because the log message is only printed out when TRACE-level is enabled. This inconsistency was possibly introduced when developers demoted the original log statement from DEBUG but forgot to change its corresponding log severity level.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in hbase-0.96 #97 (See )
HBASE-9661 Consistent log severity level guards and statements (Jackie Chang) (jmhsieh: rev 1526619)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 5 **
FAILURE: Integrated in HBase-TRUNK #4564 (See )
HBASE-9661 Consistent log severity level guards and statements (Jackie Chang) (jmhsieh: rev 1526620)
* [file java]
* [file java]


** Comment 6 **
SUCCESS: Integrated in hbase-0.96-hadoop2 #60 (See )
HBASE-9661 Consistent log severity level guards and statements (Jackie Chang) (jmhsieh: rev 1526619)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 7 **
SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #764 (See )
HBASE-9661 Consistent log severity level guards and statements (Jackie Chang) (jmhsieh: rev 1526620)
* [file java]
* [file java]


** Comment 8 **
[Comment excluded]
"
HBASE-9488,https://issues.apache.org/jira/browse/HBASE-9488,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java,Improve performance for small scan,NO,"review board:
https://reviews.apache.org/r/14059/

*Performance Improvement*
Test shows about 1.5~3X improvement for small scan where limit<=50 under cache hit ratio=100%.
See more performance test result from the picture attachment

*Usage:*
Scan scan = new Scan(startRow,stopRow);
scan.setSmall(true);
ResultScanner scanner = table.getScanner(scan);

Set the new 'small' attribute as true for scan object, others are the same



Now, one scan operation would call 3 RPC at least:
openScanner();
next();
closeScanner();

I think we could reduce the RPC call to one for small scan to get better performance

Also using pread is better than seek+read for small scan (For this point, see more on HBASE-7266)


Implements such a small scan as the patch, and take the performance test as following:

a.Environment：
patched on 0.94 version
one regionserver; 
one client with 50 concurrent threads;
KV size:50/100;
100% LRU cache hit ratio;
Random start row of scan


b.Results:
See the picture attachment

 ","** Comment 1 **
 Doesn't Get do a 'short scan' using pread?  Should we change the args passed so rather than 'boolean isGet, boolean usePread', we instead pass one arg 'boolean shortScan'. 
Is this caching location?
+  public HRegionInfo getHRegionInfo() {
+    if (this.location == null) {
+      return null;
+    }
+    return this.location.getRegionInfo();
Will we cache a location across changes?  i.e. changes in location for the HRegionInfo?
Does this have to public +public class ClientSmallScanner extends AbstractClientScanner {?
You have a better explanation of what the limitations are elsewhere in your patch than this which you have as javadoc:
{code}
+   * This is false by default which means use seek + read. If set this to true,
+   * the server will use pread.
{code}
You should instead say that the amount of data should be small and inside the one region.  That we do pread should be incidental info.
Should the Scan check that the stoprow is inside a single region and fail if not?  Or just fall back to old behavior?  That is what we do?
I skimmed the rest.  Looks good.

** Comment 2 **
bq.we instead pass one arg 'boolean shortScan'. 
In the method  HStore#getScanners, 
{format}storeFilesToScan =this.storeEngine.getStoreFileManager().getFilesForScanOrGet(isGet, startRow, stopRow);{format}
The arg 'isGet' is used, thus need a new arg to specify whether using pread
bq.Is this caching location? Will we cache a location across changes? i.e. changes in location for the HRegionInfo?
Sure, it use current client region cache mechanism
bq.Does this have to public +public class ClientSmallScanner extends AbstractClientScanner {?
Existed ClientScanner is also public, keep the same with it
bq.You should instead say that the amount of data should be small and inside the one region.
If the scan range is within one data block, it could be considered as a small scan
bq.Should the Scan check that the stoprow is inside a single region and fail if not?
Now, I hope it is controlled by user. e.g. if the scan cross multi regions, but only scan two rows, in that case, small scan also be better.
Improve the javadoc of Scan#small in patch-V2
review board:
[link]


** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 10 **
+1 on commit for trunk and 0.96.
I tried it.  Here is scan of two rows without setting 'short' scan (Below is rpcserver debug on regionserver):
{code}
2013-09-10 22:16:57,525 DEBUG  ipc.RpcServer: callId: 4 service: ClientService methodName: Scan size: 143.0 connection: 192.168.1.129:53587 executing as stack
2013-09-10 22:16:57,526 DEBUG  ipc.RpcServer: RpcServer.responder: callId: 4 wrote 25 bytes.
2013-09-10 22:16:57,526 DEBUG  ipc.RpcServer: callId: 5 service: ClientService methodName: Scan size: 29.0 connection: 192.168.1.129:53587 executing as stack
2013-09-10 22:16:57,526 DEBUG  ipc.RpcServer: RpcServer.responder: callId: 5 wrote 2150 bytes.
2013-09-10 22:16:57,527 DEBUG  ipc.RpcServer: callId: 6 service: ClientService methodName: Scan size: 27.0 connection: 192.168.1.129:53587 executing as stack
2013-09-10 22:16:57,527 DEBUG  ipc.RpcServer: RpcServer.responder: callId: 6 wrote 21 bytes.
{code}
Thats open, next, and close (I presume); all call the 'scan' method.
Here is what I see when I set short scan to true:
{code}
2013-09-10 22:20:54,164 DEBUG  ipc.RpcServer: callId: 4 service: ClientService methodName: Scan size: 145.0 connection: 192.168.1.129:53605 executing as stack
2013-09-10 22:20:54,164 DEBUG  ipc.RpcServer: RpcServer.responder: callId: 4 wrote 2146 bytes.
{code}
Just one call in which open, next, and close are all done.
Please change this log to trace level on commit because it will get annoying pretty quick given DEBUG is our default log level:
+    if (LOG.isDebugEnabled()) {
+      LOG.debug(""Advancing internal small scanner to startKey at '""
+          + Bytes.toStringBinary(localStartKey) + ""'"");
+    }
Nice one 
 You want this don't you?

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Patch-v4:
1.Change the log level from debug to trace
2.Add more documentation for the method Scan#setSmall
bq.it would be nice if we found a way to do it more automatically
Seems quite difficult~~~

** Comment 14 **
[Comment excluded]

** Comment 15 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestClientScannerRPCTimeout
                  org.apache.hadoop.hbase.master.TestAssignmentManager
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 18 **
Rerun hadoopqa while  is sleeping to see if the failures are because of the patch or just flakeyness

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 29 **
[Comment excluded]

** Comment 30 **
FAILURE: Integrated in HBase-TRUNK #4526 (See )
HBASE-9488 Improve performance for small scan (zjushch: rev 1524272)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-protocol/src/main/protobuf/Client.proto
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 31 **
FAILURE: Integrated in hbase-0.96 #66 (See )
HBASE-9488 Improve performance for small scan (zjushch: rev 1524273)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.96/hbase-protocol/src/main/protobuf/Client.proto
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
I ran this through my simple tight loop scan tester. No performance degradation, so I'm fine with committing this to 0.94.
If there are no objections I will so tomorrow.

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]
"
HBASE-9529,https://issues.apache.org/jira/browse/HBASE-9529,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCaller.java,Audit of hbase-client @InterfaceAudience.Public apis,NO,"Similar to HBASE-9523, let's do an audit of the hbase-client public api.  This is easier to do now that the we can publish only the public api javadoc 

http://hbase.apache.org/apidocs/  (notice it only has Public apis now!)","** Comment 1 **
tl;dr
* Make coproc api private (eventually limited private)
* All Exceptions Public
* Action, Caller* , Callable* Private
* Expose RegionLoad/RegionState because ClusterStats/ServerLoad are public
* All filters public except for FilterWrapper (private), and maybe FilterBase (eventually LimitedPrivate)
* All security private except for exceptions (they are all managed via configuration, never client code)
* Only expose HQuorumPeer (standalone zk) in zookeeper package, privatize all others (internals)
* BloomType, Compression, DataBlockEncoding  (in hbase-common) need to be public for HColumnDescriptor
Legend:
\* make Private 
! make Limited Private, but make Private in the mean time.
+ unmarked or Private and make Public 
If missing assume will add private.
= hbase-client
@Public org.apache.hadoop.hbase
Coprocessor ! 
CoprocessorEnvironment !
ClusterStatus // needs RegionState public
HColumnDescriptor // need to open up Compression enum in hbase-common.
HRegionInfo
HRegionLocation 
HTableDescriptor 
RegionLoad  + // exposed by ServerLoad
RegionState + // exposed by ClusterStatus
ServerLoad
ServerName
ClockOutOfSyncException
DoNotRetryIOException
DroppedSnapshotException
InvalidFamilyOperationException
MasterNotRunningException
NotAllMetaRegionsOnlineException
NotServingRegionException
PleaseHoldException
RegionException
RegionTooBusyException
TableExistsException
TableInfoMissingException + // should be public
TableNotDisabledException
TableNotEnabledException
TableNotFoundException
UnknownRegionException
UnknownScannerException
YouAreDeadException
ZooKeeperConnectionException
@Public o.a.h.h.catalog // all private
@Public o.a.h.h.client
Attributes
HConnection
HTableInterface // mark coprocessorService method Private
HTableInterfaceFactory
ResultScanner
RetryingCallable *
Row 
AbstractClientScanner * 
Action * // ?? I think this is internal
Append
ClientScanner
ConnectionUtils * 
Delete
Get
HBaseAdmin
HConnectable * (currently no mark)
HConnectionManager  // hide  #execute which takes an Hconnectable
HTable
HTableFactory
HTableMultiplexer
HTablePool * // marked deprecated
HTableUtil // is this user code or internals? mentione in docs, keep public 
Increment 
MultiAction * // I think this is internal to 
MultiResponse
Mutation
Operation
OperationWithAttributes
Put
RegionServerCallable *
Result
RowMutations
RpcRetryingCaller * 
Scan // exposes IsolationLevel, TimeRange (time range is assymetric -- set(int,int), but returns TimeRange.  Add setTimeRange(TimeRange)
ScannerCallable * 
UnmodifyableHTableDescriptor 
Durability // exposed by Mutation
IsolationLevel
NoServerForRegionException
RegionOfflineException
RetriesExhaustedException
RetriesExhaustedWithDetailsException
ScannerTimeoutException
WrongRowIOException *
@Public o.a.h.h.client.coprocessor   // hiding this since is is kind of a mess.
Batch.Call *
Batch.Callback *
AggregationClient * // TODO all this seems to expose raw protobuf messages, which is weird.  not sure what the righ way to use this is.
Batch *
BigDecimalColumnInterpreter * 
LongColumnInterpreter * 
SecureBulkLoadClient * // need help here -- do clients directly use this? if no answer make private
@Public o.a.h.h.client.metrics
ScanMetrics // where is this exposed?
@Public o.a.h.h.client.replication
ReplicationAdmin +  /// TODO double check with jd
@Public o.a.h.h.coprocessor
ColumnInterpreter // javadoc has soms strange strike through.  why public?
CoprocessorException 
@Public o.a.h.h.executor // all private
@Public o.a.h.h.filter // all public, 
BinaryComparator
BinaryPrefixComparator
BitComparator
ByteArrayComparable
ColumnCountGetFilter
ColumnPaginationFilter
ColumnPrefixFilter
ColumnRangeFilter
CompareFilter
DependentColumnFilter
FamilyFilter
Filter
FilterBase // maybe make private, eventually limited private
FilterList 
FilterWrapper // private
FirstKeyOnlyFilter
FirstKeyValueMatchingQualifiersFilter
FuzzyRowFilter
InclusiveStopFilter
KeyOnlyFilter
MultipleColumnPrefixFilter
NullComparator
PageFilter
ParseConstants
ParseFilter
PrefixFilter
QualifierFilter
RandomRowFilter
RegexStringComparator
RowFilter
SingleColumnValueExcludeFilter
SingleColumnValueFilter
SkipFilter
SubstringComparator
TimestampsFilter
ValueFilter
WhileMatchFilter
BitComparator.BitwiseOp + // these static inners should be exposed, this is part of BitComparator
CompareFilter.CompareOp + 
Filter.ReturnCode + // exposed as part of Filter api.
FilterList.Operator + 
IncompatibleFilterException
InvalidRowFilterException
@Public o.a.h.h.ipc
BlockingRpcCallback * 
BadAuthException +
CallerDisconnectedException +
FatalConnectionException +
RemoteWithExtrasException +
RpcClient.CallTimeoutException +
RpcClient.FailedServerException +
ServerNotRunningYetException +
StoppedRpcClientException +
UnsupportedCellCodecException +
UnsupportedCompressionCodecException +
WrongVersionException +
@Public o.a.h.h.master
RegionState + 
@Public o.a.h.h.protobuf // all private
@Public o.a.h.h.regionserver 
BloomType // expose for HColumnDescription
LeaseException +
NoSuchColumnFamilyException + 
RegionAlreadyInTransitionException
RegionServerRunningException + 
RegionServerStoppedException +
WrongRegionException 
@Public o.a.h.h.regionserver.wal
FailedLogCloseException +
@Public o.a.h.h.replication // all private, looks good 
@Public o.a.h.h.security // make all Private  except for exception (talked to jimmy)
AccessDeniedException +
@Public o.a.h.h.security.access // make all Private 
@Public o.a.h.h.security.token // make all Private
@Public o.a.h.h.snapshot
CorruptedSnapshotException
ExportSnapshotException
HBaseSnapshotException
RestoreSnapshotException +
SnapshotCreationException + 
SnapshotDoesNotExistException 
SnapshotExistsException
TablePartiallyOpenException
UnknownSnapshotException
@Public o.a.h.h.util
PoolMap.Pool *
PoolMap * 
Sleeper * 
PoolMap.PoolType *
FileSystemVersionException
@Public o.a.h.h.zookeeper
HQuorumPeer
RecoverableZooKeeper *
ZKAssign *
ZKConfig *
ZKLeaderManager * 
ZKTable *
ZKTableReadOnly *
ZKUtil *
ZKUtil.NodeAndData *
ZKUtil.ZKUtilOp *
ZKUtil.ZKUtilOp.CreateAndFailSilent *
ZKUtil.ZKUtilOp.DeleteNodeFailSilent *
ZKUtil.ZKUtilOp.SetData *
ZooKeeperListener *
ZooKeeperNodeTracker *
ZooKeeperWatcher *


** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
v2 is what I committed to trunk and to 0.96.  There is one conflict on 0.96 because it is applied to a file that does not exist -- if you ignore it it applies fine.

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in hbase-0.96 #53 (See )
HBASE-9529 Audit of hbase-client @InterfaceAudience.Public apis (jmhsieh: rev 1523541)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]
"
HBASE-9703,https://issues.apache.org/jira/browse/HBASE-9703,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-it/src/test/java/org/apache/hadoop/hbase/DistributedHBaseCluster.java,"DistributedHBaseCluster should not throw exceptions, but do a best effort restore",NO,"At the end of integration tests, we are calling DistributedCluster.restoreCluster() in case CM has killed nodes so that we can leave the cluster in the same state that we have taken over. 

However, if CM is not used in a test (for example ITLoadAndVerify), but some regions servers die, or an external daemon kills the servers, we will still  try to restore at the end of the test which may or may not succeed (depending on configuration, the region server going being unaccessible, etc. )

We can do two things, either do a best effort restore cluster which will not fail the test if there are any errors, or we can skip running restore if no disruptive actions have taken place. 

I am leaning towards the former one, since if an RS goes down with or w/o CM due to bad disk etc., we cannot restore the cluster, but we should not fail the test in this case. 
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Does &= short circuit? Might not call other methods after one failure.
Spacing is wrong in places.
Otherwise looks reasonable.
Can you post RB?

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in hbase-0.96 #122 (See )
HBASE-9703 DistributedHBaseCluster should not throw exceptions, but do a best effort restore (enis: rev 1529046)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 10 **
FAILURE: Integrated in HBase-TRUNK #4590 (See )
HBASE-9703 DistributedHBaseCluster should not throw exceptions, but do a best effort restore (enis: rev 1529045)
* [file java]
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #777 (See )
HBASE-9703 DistributedHBaseCluster should not throw exceptions, but do a best effort restore (enis: rev 1529045)
* [file java]
* [file java]


** Comment 12 **
FAILURE: Integrated in hbase-0.96-hadoop2 #74 (See )
HBASE-9703 DistributedHBaseCluster should not throw exceptions, but do a best effort restore (enis: rev 1529046)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 13 **
[Comment excluded]
"
HBASE-9371,https://issues.apache.org/jira/browse/HBASE-9371,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java,Eliminate log spam when tailing files,YES,"Tailing a file involves reopening it for each seek, so for example when running replication it looks like this every time:

{noformat}
2013-08-28 21:45:00,205 DEBUG [regionserver60020-EventThread.replicationSource,1] org.apache.hadoop.hbase.fs.HFileSystem: /hbase-master/WALs/jdec2hbase0403-5,60020,1377724981186/jdec2hbase0403-5%2C60020%2C1377724981186.1377725847406 is an HLog file, so reordering blocks, last hostname will be:jdec2hbase0403-5
2013-08-28 21:45:00,211 DEBUG [regionserver60020-EventThread.replicationSource,1] org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader: After reading the trailer: walEditsStopOffset: 0, fileLength: 0, trailerPresent: false
{noformat}

The frequency makes it more relevant for TRACEing.","** Comment 1 **
Attaching the patch that make them traces.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in HBase-TRUNK #4443 (See )
HBASE-9371 Eliminate log spam when tailing files
HBASE-9326 ServerName is created using getLocalSocketAddress, breaks binding to the wildcard
           address. Revert HBASE-8640 (jdcryans: rev 1518430)
* [file java]
* [file java]
* [file java]


** Comment 5 **
SUCCESS: Integrated in hbase-0.95 #502 (See )
HBASE-9371 Eliminate log spam when tailing files
HBASE-9326 ServerName is created using getLocalSocketAddress, breaks binding to the wildcard
           address. Revert HBASE-8640 (jdcryans: rev 1518429)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 6 **
SUCCESS: Integrated in hbase-0.95-on-hadoop2 #277 (See )
HBASE-9371 Eliminate log spam when tailing files
HBASE-9326 ServerName is created using getLocalSocketAddress, breaks binding to the wildcard
           address. Revert HBASE-8640 (jdcryans: rev 1518429)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 7 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #701 (See )
HBASE-9371 Eliminate log spam when tailing files
HBASE-9326 ServerName is created using getLocalSocketAddress, breaks binding to the wildcard
           address. Revert HBASE-8640 (jdcryans: rev 1518430)
* [file java]
* [file java]
* [file java]


** Comment 8 **
[Comment excluded]
"
HBASE-9696,https://issues.apache.org/jira/browse/HBASE-9696,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java,Master recovery ignores online merge znode,NO,"The online merge znode uses the new region to be created.  When master restarts, the new region is still unknown if the merging is not completed. Therefore the znode is ignored, which should not.  That means the two merging regions could be moved around.  This could cause some data loss if we are not luck.","** Comment 1 **
Attached a patch that contains the following changes:
1. introduced two new states for region to be created at merging/splitting.  don't have good names for them.
2. changed the payload of RegionTransition for merging/splitting, so that the new region info is also passed to master when the process started. Therefore, we can simplify the processing of these events, and make sure the new region can't be moved after the process is done, so that they can be closed properly when moving.
3. handled merging region at master recovery properly.
4. added test for 3.
5. some code consolidation with Split/MergeRegionHandler


** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
 Do you have a more concret statck trace? From the code, when master restarts, it reads the merging RIT znodes to reconstruct the RIT state in the following code:
{code}
      case RS_ZK_REGION_MERGING:
...
          handleRegionMerging(rt, prettyPrintedRegionName, sn);
...
        break;
{code}
And in unsign(the move region request) we handle the merging issue as following:
{code}
              if (isSplitOrSplittingOrMergedOrMerging(path)) {
                LOG.debug(path + "" is SPLIT or SPLITTING or MERGED or MERGING; "" +
                  ""skipping unassign because region no longer exists -- its split or merge"");
                reassign = false; // no need to reassign for split/merged region
                return;
              }
{code}
It seems to me that the issue in the JIRA should be a very rare case(not the normal code path), right? Thanks.

** Comment 5 **
, it won't get into this place actually.  In method
boolean processRegionInTransition(final String encodedRegionName,
      final HRegionInfo regionInfo)
If hri is null, it returns false.  For a new region to be created by a merge which is used as the znode path, is not known to master during the recovery since it could have not been written into meta yet.  Therefore, the two regions to be merged could be moved.
Yes, it's rare.  That's why ITBLL needs to loop several times to find it out.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
I ran v2 + (aggressive move region enabled). There are still data loss. I saved the log to investigate tomorrow.  Now I am running v2 only (with the existing not-aggressive region move).

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 14 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
{quote}
If hri is null, it returns false
{quote}
Thanks for pointing this out. I saw inside your patch (the following several lines) should address the JIRA issue. The rest is more like enhancement. Is that possible to split the patch into two: one as bug fix(to mitigate impacts) and the rest as enhancement? 
{code}
+        EventType et = rt.getEventType();
+        if (hri == null && et != EventType.RS_ZK_REGION_MERGING
-    final String encodedRegionName = regionInfo.getEncodedName();
-    final String prettyPrintedRegionName = HRegionInfo.prettyPrint(encodedRegionName);
-    LOG.info(""Processing "" + regionInfo.getRegionNameAsString() + "" in state "" + et);
-
+    final byte regionName = rt.getRegionName();
+    final String encodedName = HRegionInfo.encodeRegionName(regionName);
+    final String prettyPrintedRegionName = HRegionInfo.prettyPrint(encodedName);
+    LOG.info(""Processing "" + prettyPrintedRegionName + "" in state "" + et);
-    if (regionStates.isRegionInTransition(encodedRegionName)) {
+    if (regionStates.isRegionInTransition(encodedName)) {
{code}

** Comment 12 **
[Comment excluded]

** Comment 13 **
bq. 3. removed dump status CM action, which is no so helpful.
I'd prefer this is kept around; it can be useful when debugging HA tests where master and RS are killed.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
Just to report that this last patch of Jimmy's made it all the ways through the BLL test only to fail on last verify but the next verify passed so no dataloss.  New test is running right now.

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
Let me try answering because Jimmy ain't around till morning 
Its two states, not four?
bq. For merging, it's a master initiated operation we should have corresponding memory state so future region move requests can be cancelled.
Good question.  Looking at patch again, RS_ZK_REGION_PENDING_MERGE is set starting the merge transaction in region and it is the master that then moves the znode to MERGING meaning the RS can proceed w/ the merge.  The new event type sends the name of the new merged region and the daughters.  That is new.  Master now knows about the merged region before it shows up in meta registering it internally as a 'merging region'.  Knowing this it will NOT do something dumb like move the new region before it is done with the merge transaction.  For your suggestion to work, we'd at least  need to change merge so the parent was sent over in the merge message (we'd have to move some of the merge logic over master-side too).  This pending merge state laden with parent and daughter regions will be good across master crash too.  Maybe we could have put this new content into the MERGING znode.  Jimmy will answer better.
bq. For splitting, before a region split starts, it creates a splitting RIT znode while a region move will try to create a closing RIT znode so only one operation can succeed.
Will let Jimmy answer.  My guess is that failing the assign because of a znode clash is complicated to recover from and to back up out of.
bq. In master recovery scenario, merging state can be restored by a few lines of code in the patch.
Long as we added the data about parent to MERGING znode (and changed the merge rpc to carry parent region info too)
Good review 

** Comment 21 **
[Comment excluded]

** Comment 22 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 23 **
 The above unit test failure looks related. 
The overnight runs look like they succeeded.  Is that so (I don't know how to read the result).  Thanks 

** Comment 24 **
Fixing the unit test now. The overnight run is the same as the previous one: failure but no data loss.
The purpose of the pending state is to hold the split/merge till master is ok with it. Without that, if the master is not fast enough to process the events, the region could be split/merged while the master is moving the region around. For example, this is possible:
1. RS says to merge A and B to C, creates the merging node C;
2. RS completes the merge so that A and B are offline and C is online, merging node C is in merged state now;
3. Master moves A, since it hasn't got the event 1 or 2, master knows A is online in RS, sends a close and gets back NSR exception since it's offline there, so starts to assign it somewhere else.
The pending state idea is align with what we discussed in other jiras about the new AM design to make sure master knows/manages region transitions.


** Comment 25 **
Fixed the test failure.  It fails because we deleted the splitting znode for a mocked-up splitting failure case.

** Comment 26 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    -1 hadoop1.0.  The patch failed to compile against the hadoop 1.0 profile.
Console output: [link]
This message is automatically generated.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
Currently, for merging znode, we have the new region encoded name (from the znode path), but we don't have its HRegionInfo.  Region states map need the HRegionInfo.  For splitting znode, we don't have anything about the daughter regions (name or HRI). This patch passes all these info over to master so the master can properly record these regions before the split/merge starts.

** Comment 30 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
I +1'd 3.v3 over in RB as long as follow up issue is filed to address outstanding review comments.
The differences in v3 are minor.  My review comments from last night have been answered or are nits to address in follow-on.
This patch makes us more resilient when move/split or move/merge are going on.  It is an incompatible change.
We have two no-dataloss runs over last night which is better than what we've had at any time previous.  The last verify actually failed but the second verify passed -- no dataloss.  Will work on making the first verify pass but want to get this incompat change before RC.
 or  -- ok w/ you fellas if this gets committed?

** Comment 39 **
[Comment excluded]

** Comment 40 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 12 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
FAILURE: Integrated in HBase-TRUNK #4610 (See )
HBASE-9696 Master recovery ignores online merge znode (jxiang: rev 1531435)
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-protocol/src/main/protobuf/ClusterStatus.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
FAILURE: Integrated in hbase-0.96 #161 (See )
HBASE-9748 Address outstanding comments raised for HBASE-9696 (jxiang: rev 1535789)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]
"
HBASE-9602,https://issues.apache.org/jira/browse/HBASE-9602,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Cluster can't start when log splitting at startup time and the master's web UI is refreshed a few times,YES,"It looks like we cannot show the master's web ui at start time when there are logs to split because we can't reach the namespace regions.

So it means that you can't see how things are progressing without tailing the log while waiting on your cluster to boot up. This wasn't the case in 0.94

See this jstack:

{noformat}
""606214580@qtp-2001431298-3"" prio=10 tid=0x00007f6ac8040000 nid=0x7b1 in Object.wait() [0x00007f6aa82bf000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000bc0c1460> (a org.apache.hadoop.hbase.ipc.RpcClient$Call)
	at org.apache.hadoop.hbase.ipc.RpcClient.call(RpcClient.java:1416)
	- locked <0x00000000bc0c1460> (a org.apache.hadoop.hbase.ipc.RpcClient$Call)
	at org.apache.hadoop.hbase.ipc.RpcClient.callBlockingMethod(RpcClient.java:1634)
	at org.apache.hadoop.hbase.ipc.RpcClient$BlockingRpcChannelImplementation.callBlockingMethod(RpcClient.java:1691)
	at org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos$MasterAdminService$BlockingStub.listTableDescriptorsByNamespace(MasterAdminProtos.java:35031)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$5.listTableDescriptorsByNamespace(HConnectionManager.java:2181)
	at org.apache.hadoop.hbase.client.HBaseAdmin$22.call(HBaseAdmin.java:2265)
	at org.apache.hadoop.hbase.client.HBaseAdmin$22.call(HBaseAdmin.java:2262)
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:116)
	- locked <0x00000000c09baf20> (a org.apache.hadoop.hbase.client.RpcRetryingCaller)
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:94)
	- locked <0x00000000c09baf20> (a org.apache.hadoop.hbase.client.RpcRetryingCaller)
	at org.apache.hadoop.hbase.client.HBaseAdmin.executeCallable(HBaseAdmin.java:3155)
	at org.apache.hadoop.hbase.client.HBaseAdmin.listTableDescriptorsByNamespace(HBaseAdmin.java:2261)
	at org.apache.hadoop.hbase.tmpl.master.MasterStatusTmplImpl.__jamon_innerUnit__catalogTables(MasterStatusTmplImpl.java:461)
	at org.apache.hadoop.hbase.tmpl.master.MasterStatusTmplImpl.renderNoFlush(MasterStatusTmplImpl.java:270)
	at org.apache.hadoop.hbase.tmpl.master.MasterStatusTmpl.renderNoFlush(MasterStatusTmpl.java:382)
	at org.apache.hadoop.hbase.tmpl.master.MasterStatusTmpl.render(MasterStatusTmpl.java:372)
	at org.apache.hadoop.hbase.master.MasterStatusServlet.doGet(MasterStatusServlet.java:95)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)
	at org.apache.hadoop.http.HttpServer$QuotingInputFilter.doFilter(HttpServer.java:850)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
...
""RpcServer.handler=28,port=60000"" daemon prio=10 tid=0x00007f6ad08a5800 nid=0x77e waiting on condition [0x00007f6aa97d5000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:148)
	- locked <0x00000000c0909178> (a org.apache.hadoop.hbase.client.RpcRetryingCaller)
	at org.apache.hadoop.hbase.client.HTable.get(HTable.java:760)
	at org.apache.hadoop.hbase.master.TableNamespaceManager.get(TableNamespaceManager.java:171)
	at org.apache.hadoop.hbase.master.TableNamespaceManager.getNamespaceTable(TableNamespaceManager.java:119)
	- locked <0x00000000c1958890> (a org.apache.hadoop.hbase.master.TableNamespaceManager)
	at org.apache.hadoop.hbase.master.TableNamespaceManager.get(TableNamespaceManager.java:155)
	- locked <0x00000000c1958890> (a org.apache.hadoop.hbase.master.TableNamespaceManager)
	at org.apache.hadoop.hbase.master.HMaster.getNamespaceDescriptor(HMaster.java:3088)
	at org.apache.hadoop.hbase.master.HMaster.listTableDescriptorsByNamespace(HMaster.java:3102)
	at org.apache.hadoop.hbase.master.HMaster.listTableDescriptorsByNamespace(HMaster.java:3012)
	at org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos$MasterAdminService$2.callBlockingMethod(MasterAdminProtos.java:32908)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2146)
	at org.apache.hadoop.hbase.ipc.RpcServer$Handler.run(RpcServer.java:1851)
{noformat}","** Comment 1 **
It's actually worse than that, everytime you refresh you occupy one more handler and eventually they all get full, and log splitting *stops*. I attached my full jstack.

** Comment 2 **
Changing the title to reflect that it's not just a web UI problem. Any sizeable amount of splitting coupled with refreshing the web page will prevent the master from handling log splitting because all the handlers are full waiting on the Namespace region.

** Comment 3 **
Posting unfinished patch, trying to see if it fails unit tests.

** Comment 4 **
[Comment excluded]

** Comment 5 **
Looks okay to me.
A very minor nit:
+    if (tableNamespaceManager == null) {
+      LOG.warn(""Cannot getNamespaceDescriptor, manager not available"");
+    }
     NamespaceDescriptor nsd = tableNamespaceManager.get(name);
When this can happen? If it can happen, we would get a npe.

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.thrift.TestThriftServer
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
The first patch had a major flaw, the start() can timeout after a minute and then {{started}} would never get set. Also it had a findbugs warning.
In this new patch I basically just did a bunch of refactoring to be able to do lightweight checks and also not block on synchronization. I also cleaned up the original code a bit and added a few comments.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles
                  org.apache.hadoop.hbase.security.access.TestTablePermissions
                  org.apache.hadoop.hbase.security.access.TestAccessControlFilter
                  org.apache.hadoop.hbase.master.handler.TestCreateTableHandler
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed
                  org.apache.hadoop.hbase.master.TestMasterMetrics
                  org.apache.hadoop.hbase.security.access.TestNamespaceCommands
                  org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint
                  org.apache.hadoop.hbase.security.access.TestAccessController
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 13 **
Last patch was initializing the master too fast because of a missing negation in while (isTableAssigned()) {
For normal cluster operations it doesn't really matter since start() can timeout and it usually does in the case of a cluster restart with a bunch of logs to split if it includes the namespace region.

** Comment 14 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
SUCCESS: Integrated in hbase-0.96 #116 (See )
HBASE-9602 Cluster can't start when log splitting at startup time and the
           master's web UI is refreshed a few times (jdcryans: rev 1528572)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 18 **
FAILURE: Integrated in HBase-TRUNK #4584 (See )
HBASE-9602 Cluster can't start when log splitting at startup time and the
           master's web UI is refreshed a few times (jdcryans: rev 1528571)
* [file java]
* [file java]


** Comment 19 **
SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #773 (See )
HBASE-9602 Cluster can't start when log splitting at startup time and the
           master's web UI is refreshed a few times (jdcryans: rev 1528571)
* [file java]
* [file java]


** Comment 20 **
FAILURE: Integrated in hbase-0.96-hadoop2 #70 (See )
HBASE-9602 Cluster can't start when log splitting at startup time and the
           master's web UI is refreshed a few times (jdcryans: rev 1528572)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 21 **
[Comment excluded]
"
HBASE-9667,https://issues.apache.org/jira/browse/HBASE-9667,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,NullOutputStream removed from Guava 15,NO,"{{com.google.common.io.NullOutputStream}} was dropped in Guava 15.0 in favor of {{com.google.common.io.ByteStreams.nullOutputStream()}} which prevents projects on this artifact from upgrading from Guava 14 to Guava 15.

{noformat}
ERROR 2013-09-26 17:46:12,229 [hbase.master.MasterFileSystem] bootstrap
org.apache.hadoop.hbase.DroppedSnapshotException: region: -ROOT-,,0
        at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:1608)
        at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:1482)
        at org.apache.hadoop.hbase.regionserver.HRegion.doClose(HRegion.java:1011)
        at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:959)
        at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:930)
        at org.apache.hadoop.hbase.master.MasterFileSystem.bootstrap(MasterFileSystem.java:447)
        at org.apache.hadoop.hbase.master.MasterFileSystem.checkRootDir(MasterFileSystem.java:387)
        at org.apache.hadoop.hbase.master.MasterFileSystem.createInitialFileSystemLayout(MasterFileSystem.java:134)
        at org.apache.hadoop.hbase.master.MasterFileSystem.<init>(MasterFileSystem.java:119)
        at org.apache.hadoop.hbase.master.HMaster.finishInitialization(HMaster.java:536)
        at org.apache.hadoop.hbase.master.HMaster.run(HMaster.java:395)
        at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NoClassDefFoundError: com/google/common/io/NullOutputStream
        at org.apache.hadoop.hbase.io.hfile.HFileWriterV2.close(HFileWriterV2.java:374)
        at org.apache.hadoop.hbase.regionserver.StoreFile$Writer.close(StoreFile.java:1283)
        at org.apache.hadoop.hbase.regionserver.Store.internalFlushCache(Store.java:836)
        at org.apache.hadoop.hbase.regionserver.Store.flushCache(Store.java:747)
        at org.apache.hadoop.hbase.regionserver.Store$StoreFlusherImpl.flushCache(Store.java:2229)
        at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:1583)
        ... 11 more
Caused by: java.lang.ClassNotFoundException: com.google.common.io.NullOutputStream
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
        ... 17 more
{noformat}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestAsyncProcess
Test results: [link]
Release audit warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
TestAsyncProcess.testThreadCreation is a flaky test I fixed in HBASE-9676.
javadoc tool appears to have generated 1 warning messages: seems unrelated. 
-1 release audit.  I forgot the Apache license in v1. Fixed in v2.
So it seems that it works well with Guava 15. Version v2 fixed the warning above w/o changing the guava version.
Hadoop branch 2 does have the same problems as hbase, but only on Journal and in the tests. So we will be fine.

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-TRUNK #4584 (See )
HBASE-9667 NullOutputStream removed from Guava 15 (nkeywal: rev 1528573)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in hbase-0.96-hadoop2 #70 (See )
HBASE-9667 NullOutputStream removed from Guava 15 (nkeywal: rev 1528574)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]
"
HBASE-9394,https://issues.apache.org/jira/browse/HBASE-9394,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java,[replication] size accounting is completely off in the source,NO,"I was under the impression that I was sending way more data than I was expecting, so adding some more tracing I can see how much data I read VS how I much I think I'm sending:

{noformat}
Seeking at position 163771687
Replicating 2 entries of total size 2790
Seeking at position 166723643
{noformat}

That's about 2MB of data, not 2KB.","** Comment 1 **
I messed up in HBASE-5778, I fixed it in 0.94 but not in trunk.
I'm also adding my new size debugging to the existing log, and putting more stuff to trace.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in hbase-0.95-on-hadoop2 #282 (See )
HBASE-9394  size accounting is completely off in the source (jdcryans: rev 1519039)
* /hbase/branches/0.[file java]


** Comment 5 **
FAILURE: Integrated in hbase-0.95 #510 (See )
HBASE-9394  size accounting is completely off in the source (jdcryans: rev 1519039)
* /hbase/branches/0.[file java]


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]
"
HBASE-9693,https://issues.apache.org/jira/browse/HBASE-9693,https://github.com/apache/hbase/blob/hbase-0.96.0/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HFileV1Detector.java,Fix javadoc warnings,YES,There are not many javadoc warnings.  We can fix them all.,"** Comment 1 **
Fixed all javadoc warnings.

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
SUCCESS: Integrated in hbase-0.96 #120 (See )
HBASE-9693 Fix javadoc warnings (jxiang: rev 1528944)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 8 **
FAILURE: Integrated in HBase-TRUNK #4588 (See )
HBASE-9693 Fix javadoc warnings (jxiang: rev 1528938)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 9 **
SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #776 (See )
HBASE-9693 Fix javadoc warnings (jxiang: rev 1528938)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 10 **
FAILURE: Integrated in hbase-0.96-hadoop2 #73 (See )
HBASE-9693 Fix javadoc warnings (jxiang: rev 1528944)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 11 **
[Comment excluded]
"
HBASE-9748,https://issues.apache.org/jira/browse/HBASE-9748,https://github.com/apache/hbase/blob/0.96.1/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeTransaction.java,Address outstanding comments raised for HBASE-9696,NO,"This is a follow-up issue of HBASE-9696.

There are some outstanding review comments in https://reviews.apache.org/r/14470/ that haven't been addressed. I will address them later in this jira.","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
This test failure seems unrelated, try hadoop-qa again.

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 18 new or modified tests.
    -1 hadoop1.0.  The patch failed to compile against the hadoop 1.0 profile.
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 18 new or modified tests.
    -1 hadoop1.0.  The patch failed to compile against the hadoop 1.0 profile.
Console output: [link]
This message is automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 18 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Looks like the following javadoc warning is related to this issue ([link]
{code}
 Javadoc Warnings
 [file java]:440: warning - @param argument ""sn"" is not a parameter name.
{code}

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in hbase-0.96 #161 (See )
HBASE-9748 Address outstanding comments raised for HBASE-9696 (jxiang: rev 1535789)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]
"
HBASE-10505,https://issues.apache.org/jira/browse/HBASE-10505,https://github.com/apache/hbase/blob/0.96.2/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Import.java,Import.filterKv does not call Filter.filterRowKey,NO,"The general contract of a Filter is that filterRowKey is called before filterKeyValue.
Import is using Filters for custom filtering but it does not called filterRowKey at all. That throws off some Filters (such as RowFilter, and more recently PrefixFilter, and InclusiveStopFilter). See HBASE-10493 and HBASE-10485.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
0.98 is fine too.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in HBase-0.94-on-Hadoop-2 #20 (See )
HBASE-10505 Import.filterKv does not call Filter.filterRowKey. (larsh: rev 1567522)
* /hbase/branches/0.[file java]


** Comment 15 **
FAILURE: Integrated in HBase-0.94 #1284 (See )
HBASE-10505 Import.filterKv does not call Filter.filterRowKey. (larsh: rev 1567522)
* /hbase/branches/0.[file java]


** Comment 16 **
FAILURE: Integrated in HBase-0.94-JDK7 #47 (See )
HBASE-10505 Import.filterKv does not call Filter.filterRowKey. (larsh: rev 1567522)
* /hbase/branches/0.[file java]


** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]
"
HBASE-10770,https://issues.apache.org/jira/browse/HBASE-10770,https://github.com/apache/hbase/blob/0.96.2/hbase-server/src/main/java/org/apache/hadoop/hbase/tool/Canary.java,Don't exit from the Canary daemon mode if no regions are present,NO,"Using the regionserver mode the canary exit if there are no region servers
{code}hbase o.a.h.h.tool.Canary -daemon -regionserver REGION_NAME{code}
while in table mode the canary is waiting until the table is up
{code}hbase o.a.h.h.tool.Canary -daemon TABLE_NAME{code}

Remove the exit code from the region server mode, and keep waiting until  the -t timeout or the region shows up","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12635049
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in hbase-0.96 #357 (See )
HBASE-10770 Don't exit from the Canary daemon mode if no regions are present (mbertozzi: rev 1578608)
* /hbase/branches/0.[file java]


** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #121 (See )
HBASE-10770 Don't exit from the Canary daemon mode if no regions are present (mbertozzi: rev 1578606)
* [file java]


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]
"
HBASE-9036,https://issues.apache.org/jira/browse/HBASE-9036,https://github.com/apache/hbase/blob/0.98.0/hbase-common/src/test/java/org/apache/hadoop/hbase/ClassFinder.java,Few small code cleanup,NO,"Few code cleanup from HBase trunk.
1) TestOperation use String.format with 6 %s but give 7 parameters.
Resolution: Trivial

2) ClassFinder can throw a NPE.
If jarFile = new JarInputStream(new FileInputStream(jarFileName)); throw an exception and we want to proceed on exceptions, jarFile will be null, and just few lines after we will do a jarFile.getNextJarEntry() where NPE is not catch and will fail and throw an NPE. So I thinkg we can't proceed on exceptions for this first try since it will fail just the after with an NPE and we will loose the information about the real cause of the exception.  Therefor, we should always throw ioEx is the InputStream creation fails.

3)AccessController declare cfs but never use it.

4) FavoredNodeAssignmentHelper invokes toString on an array.
Just changed that to Bytes.toString() to print the server name.

5) ModifyTableHandler invokes toString on the tableName array.
Just changed that to Bytes.toString() to print the table name.

6) HFileWriterV2 invokes toString on the keys arrays.
Just changed that to Bytes.toStringBinary() to print the keys. And change some toString() calls to toStringBinary()

7) ServerAndLoad want to be serializable, but ServerName is not.
Made ServerName serializable since it's only Strings, numbers and bytes.

8) StorageClusterStatusModel want to be serializable, but its nested class Node is not.
Made Node serializable since it's only numbers and bytes.

9) In HRegion outResults can't be null since it's already used for outResults.isEmpty() few lines above.
Just remove the test.

10) In RegionScannerHolder region can't be null since it's already used for region.startRegionOperation (and others) few lines above.
Just remove the test.

11) CellCounter thisRowFamilyName can't be null since toStringBinary will return the string ""null"" for a null value.
Just remove the test.

12) CellCounter again, thisRowQualifierName can't be null since it's strings concatenations.
Just remove the test.

13) HBaseFsck setDisplayFullReport should be static since writing to a static field.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
The patch adds tabs, otherwise +1. One could conceivably work around the file open error, I guess we can do it later if needed

** Comment 6 **
[Comment excluded]

** Comment 7 **
I will fix the tab issue. I display all characters in Eclipse, so I should have catch that.
 I'm not sure to get your comment about the file open error. Can you please specify?

** Comment 8 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]
"
HBASE-6873,https://issues.apache.org/jira/browse/HBASE-6873,https://github.com/apache/hbase/blob/0.98.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java,Clean up Coprocessor loading failure handling,YES,"When registering a coprocessor with a missing dependency, the regionserver gets stuck in an infinite fail loop. Restarting the regionserver and/or master has no affect.

E.g., 

Load coprocessor from my-coproc.jar, that uses an external dependency (kafka) that is not included with HBase.

{code}
12/09/24 13:13:15 INFO handler.OpenRegionHandler: Opening of region {NAME => 'documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.', STARTKEY => '', ENDKEY => '', ENCODED => 6d1e1b7bb93486f096173bd401e8ef6b,} failed, marking as FAILED_OPEN in ZK
12/09/24 13:13:15 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Attempting to transition node 6d1e1b7bb93486f096173bd401e8ef6b from RS_ZK_REGION_OPENING to RS_ZK_REGION_FAILED_OPEN
12/09/24 13:13:15 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Successfully transitioned node 6d1e1b7bb93486f096173bd401e8ef6b from RS_ZK_REGION_OPENING to RS_ZK_REGION_FAILED_OPEN
12/09/24 13:13:15 INFO regionserver.HRegionServer: Received request to open region: documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.
12/09/24 13:13:15 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Attempting to transition node 6d1e1b7bb93486f096173bd401e8ef6b from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING
12/09/24 13:13:15 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Successfully transitioned node 6d1e1b7bb93486f096173bd401e8ef6b from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING
12/09/24 13:13:15 DEBUG regionserver.HRegion: Opening region: {NAME => 'documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.', STARTKEY => '', ENDKEY => '', ENCODED => 6d1e1b7bb93486f096173bd401e8ef6b,}
12/09/24 13:13:15 INFO regionserver.HRegion: Setting up tabledescriptor config now ...
12/09/24 13:13:15 INFO coprocessor.CoprocessorHost: Class com.mycompany.hbase.documents.DocumentObserverCoprocessor needs to be loaded from a file - file:/path/to/my-coproc.jar.
12/09/24 13:13:16 ERROR handler.OpenRegionHandler: Failed open of region=documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b., starting to roll back the global memstore size.
java.lang.IllegalStateException: Could not instantiate a region instance.
	at org.apache.hadoop.hbase.regionserver.HRegion.newHRegion(HRegion.java:3595)
	at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:3733)
	at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.openRegion(OpenRegionHandler.java:332)
	at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.process(OpenRegionHandler.java:108)
	at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:169)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.hadoop.hbase.regionserver.HRegion.newHRegion(HRegion.java:3592)
	... 7 more
Caused by: java.lang.NoClassDefFoundError: kafka/common/NoBrokersForPartitionException
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)
	at java.lang.Class.getConstructor0(Class.java:2699)
	at java.lang.Class.newInstance0(Class.java:326)
	at java.lang.Class.newInstance(Class.java:308)
	at org.apache.hadoop.hbase.coprocessor.CoprocessorHost.loadInstance(CoprocessorHost.java:254)
	at org.apache.hadoop.hbase.coprocessor.CoprocessorHost.load(CoprocessorHost.java:227)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.loadTableCoprocessors(RegionCoprocessorHost.java:162)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.<init>(RegionCoprocessorHost.java:126)
	at org.apache.hadoop.hbase.regionserver.HRegion.<init>(HRegion.java:417)
	... 11 more
Caused by: java.lang.ClassNotFoundException: kafka.common.NoBrokersForPartitionException
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 21 more
12/09/24 13:13:16 INFO handler.OpenRegionHandler: Opening of region {NAME => 'documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.', STARTKEY => '', ENDKEY => '', ENCODED => 6d1e1b7bb93486f096173bd401e8ef6b,} failed, marking as FAILED_OPEN in ZK
12/09/24 13:13:16 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Attempting to transition node 6d1e1b7bb93486f096173bd401e8ef6b from RS_ZK_REGION_OPENING to RS_ZK_REGION_FAILED_OPEN
12/09/24 13:13:16 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Successfully transitioned node 6d1e1b7bb93486f096173bd401e8ef6b from RS_ZK_REGION_OPENING to RS_ZK_REGION_FAILED_OPEN
12/09/24 13:13:16 INFO regionserver.HRegionServer: Received request to open region: documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.
12/09/24 13:13:16 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Attempting to transition node 6d1e1b7bb93486f096173bd401e8ef6b from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING
12/09/24 13:13:16 DEBUG zookeeper.ZKAssign: regionserver:60020-0x139f43af2a70043 Successfully transitioned node 6d1e1b7bb93486f096173bd401e8ef6b from M_ZK_REGION_OFFLINE to RS_ZK_REGION_OPENING
12/09/24 13:13:16 DEBUG regionserver.HRegion: Opening region: {NAME => 'documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b.', STARTKEY => '', ENDKEY => '', ENCODED => 6d1e1b7bb93486f096173bd401e8ef6b,}
12/09/24 13:13:16 INFO regionserver.HRegion: Setting up tabledescriptor config now ...
12/09/24 13:13:16 INFO coprocessor.CoprocessorHost: Class com.mycompany.hbase.documents.DocumentObserverCoprocessor needs to be loaded from a file - file:/path/to/my-coproc.jar.
12/09/24 13:13:17 ERROR handler.OpenRegionHandler: Failed open of region=documents,,1348505987177.6d1e1b7bb93486f096173bd401e8ef6b., starting to roll back the global memstore size.
java.lang.IllegalStateException: Could not instantiate a region instance.
	at org.apache.hadoop.hbase.regionserver.HRegion.newHRegion(HRegion.java:3595)
	at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:3733)
	at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.openRegion(OpenRegionHandler.java:332)
	at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.process(OpenRegionHandler.java:108)
	at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:169)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.hadoop.hbase.regionserver.HRegion.newHRegion(HRegion.java:3592)
	... 7 more
Caused by: java.lang.NoClassDefFoundError: kafka/common/NoBrokersForPartitionException
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)
	at java.lang.Class.getConstructor0(Class.java:2699)
	at java.lang.Class.newInstance0(Class.java:326)
	at java.lang.Class.newInstance(Class.java:308)
	at org.apache.hadoop.hbase.coprocessor.CoprocessorHost.loadInstance(CoprocessorHost.java:254)
	at org.apache.hadoop.hbase.coprocessor.CoprocessorHost.load(CoprocessorHost.java:227)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.loadTableCoprocessors(RegionCoprocessorHost.java:162)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.<init>(RegionCoprocessorHost.java:126)
	at org.apache.hadoop.hbase.regionserver.HRegion.<init>(HRegion.java:417)
	... 11 more
Caused by: java.lang.ClassNotFoundException: kafka.common.NoBrokersForPartitionException
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 21 more
{code}

Ad infinitum.

It seems that upon failing to open a region after adding a coprocessor, that coprocessor should be unregister or at least disabled/blacklisted.","** Comment 1 **
[Comment excluded]

** Comment 2 **
At worst I'd think that a bad coprocessor jar would just make that coprocessor registration fail - not cripple the whole server.
I'd argue that it's a bug because the regionserver is unrecoverable if this happens. Once it gets stuck in this failure loop, there's no way to get it unstuck (as far as I can see). So in effect, if you register a bad coprocessor, the whole server is unusable and unrecoverable.

** Comment 3 **
[Comment excluded]

** Comment 4 **
How does this work with the security co-processors.  Not loading them is a case that the we want to fail hard.

** Comment 5 **
 I was just pondering that very question. The first step is to clean up the above exception into an IOE with a more helpful message. The next is to extend CP loading slightly to allow region open to continue of a CP load fails, but not as the default behavior, it would have to be specified somehow.
Haven't quite gotten to that ""somehow"". For table CPs it could be a tag in the table attribute defining the CP. For system CPs, looks like I have to introduce CP definition attributes there?

** Comment 6 **
Or, for system CPs, since all region opens will fail, perhaps it's best to just abort the RS.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Making this a blocker for 0.98, but specifically only:
- If system coprocessors fail to load, just call abort().
- If table coprocessors fail to load, call abort() unless explicitly told to ignore failures for that particular coprocessor (only in RegionCoprocessorHost).

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12622772
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 7 new or modified tests.
    -1 hadoop1.0.  The patch failed to compile against the hadoop 1.0 profile.
    Here is snippet of errors:
    {code} Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-server: Compilation failure
 [file java]: cannot find symbol
 symbol  : method unset(java.lang.String)
 location: class org.apache.hadoop.conf.Configuration
 -> 
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-server: Compilation failure
[file java]: cannot find symbol
symbol  : method unset(java.lang.String)
location: class org.apache.hadoop.conf.Configuration
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute([file java]:213)
--
Caused by: org.apache.maven.plugin.CompilationFailureException: Compilation failure
[file java]: cannot find symbol
symbol  : method unset(java.lang.String)
location: class org.apache.hadoop.conf.Configuration
	at org.apache.maven.plugin.AbstractCompilerMojo.execute([file java]:729){code}
Console output: [link]
This message is automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12622793
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 7 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestCoprocessorInterface
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12622807
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 11 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove
                  org.apache.hadoop.hbase.coprocessor.TestClassLoading
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.constraint.TestConstraint.testIsUnloaded([file java]:221)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12622960
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 22 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.constraint.TestConstraint.testIsUnloaded([file java]:221)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
I understand the argument about data consistency in the case of unloaded coprocessors, so I see the need to change the default value of hbase.coprocessor.abortonerror.  But does this make it so that a misconfigured table-level coprocessor can bring down an entire cluster due to a missing dependency class?  If so, that really doesn't help our stability or multi-tenant story.  Seems like a more ideal approach would be to offline the table due to the coprocessor loading error (say with a prominent message on the master UI), but keep servers up so that the problem can be fixed.  For system level coprocessors, an abort might still be appropriate.
Maybe out of scope for this change, but what do you think about this as a follow on issue?

** Comment 26 **
bq.   But does this make it so that a misconfigured table-level coprocessor can bring down an entire cluster due to a missing dependency class?
At this stage, that is the point, unless you change the configuration away from the new default to avoid that situation (previous behavior). Otherwise we ship coprocessors like the AccessController and VisibilityController that should fail close but instead they would fail open, which is unacceptable as default config.

** Comment 27 **
bq. offline the table due to the coprocessor loading error (say with a prominent message on the master UI), but keep servers up so that the problem can be fixed
A patch that does this would be great. Let's follow up on another JIRA.

** Comment 28 **
[Comment excluded]

** Comment 29 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12622996
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 26 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestShell.testRunShellTests([file java]:70)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
I don't think that TestShell failure is related but I will look into it. Be back shortly.

** Comment 33 **
[Comment excluded]

** Comment 34 **
We are certainly totally vulnerable to misbehaving coprocessors until we do better isolation through an externalized process or whatever.
What I'm more worried about with the config default change is rendering a cluster inoperable due to a misconfiguration of a coprocessor.  For example:
* create a table with a table-level coprocessor as an attribute
* the table coprocessor when loaded has an unresolvable dependency (as described here)
* so the first table region bounces from host to host taking down regionservers, failing to open
Now we have a .tableinfo sitting around with the coprocessor configured in it, but we can't bring the cluster back up to alter the table definition and remove the CP or replace it with a CP config pointing to a new jar with the required dependency.  Maybe I'm missing some easy way of resolving this (hopefully I am), but that seems nasty.  Whether here or in a follow on enhancement, I'd just like to make sure we have an easy operational way of reversing the problem.
Though I agree that correctness (which we're currently sacrificing with hbase.coprocessor.abortonerror=false) is equally or more important.

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
bq. I was just looking for an issue I filed a while back, an option for pausing the master after the deployment of system tables but before deployment of user tables, but can't find it offhand. If meta is online it should be possible to alter the HTD/HCDs.
Yeah, that would be a good remediation option here and for other cases as well.  Constraining the failure domain to only the table the coprocessor is configured on would still be nice, but as you point out there is potential for other abuse that wouldn't be constrained anyway.

** Comment 40 **
[Comment excluded]

** Comment 41 **
The TestShell failure was real:
2014-01-14 21:56:49,890 DEBUG  coprocessor.CoprocessorHost(189): Loading coprocessor class SimpleRegionObserver with path hdfs:/foo.jar and priority 12
2014-01-14 21:56:49,896 ERROR  coprocessor.CoprocessorHost(771): The coprocessor SimpleRegionObserver threw an unexpected exception
java.io.FileNotFoundException: File does not exist: hdfs:/foo.jar
One of the shell tests wants to set a fake coprocessor attribute to prove that it can do it.
Attaching new patch.

** Comment 42 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12623067
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 30 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 43 **
[Comment excluded]

** Comment 44 **
I ran the full test suite (trunk, with this patch applied) locally on two boxes 25 times and no tests failed except TestAssignmentManagerOnCluster, which is HBASE-10341.
Committed to trunk and 0.98 branch. Thanks everyone for the reviews and good discussion.

** Comment 45 **
FAILURE: Integrated in HBase-TRUNK #4825 (See )
HBASE-6873. Clean up Coprocessor loading failure handling (apurtell: rev 1558869)
* /hbase/trunk/hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 46 **
I checked the build report of HBase-TRUNK #4825 ([link] . This is an occasional failure with TestHBaseFsck that turns up now and again in some environments, generally builds.apache.org, and is not related.

** Comment 47 **
SUCCESS: Integrated in HBase-0.98 #86 (See )
HBASE-6873. Clean up Coprocessor loading failure handling (apurtell: rev 1558870)
* /hbase/branches/0.98/hbase-common/src/main/resources/hbase-default.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 48 **
SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #78 (See )
HBASE-6873. Clean up Coprocessor loading failure handling (apurtell: rev 1558870)
* /hbase/branches/0.98/hbase-common/src/main/resources/hbase-default.xml
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 49 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #55 (See )
HBASE-6873. Clean up Coprocessor loading failure handling (apurtell: rev 1558869)
* /hbase/trunk/hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 50 **
[Comment excluded]
"
HBASE-9687,https://issues.apache.org/jira/browse/HBASE-9687,https://github.com/apache/hbase/blob/0.98.0/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java,ClassNotFoundException is thrown when ExportSnapshot runs against hadoop cluster where HBase is not installed on the same node as resourcemanager,NO,"First line below was the command, launched from gateway machine:
{code}
$ hbase org.apache.hadoop.hbase.snapshot.ExportSnapshot -Dfs.default.name=hdfs://hor17n25:8020/ -Dhbase.rootdir=hdfs://hor17n25:8020/apps/hbase/data/ -snapshot snapshot_tableone -copy-to hdfs://hor15n02:8020/apps/hbase/data/ -mappers 1

13/09/30 17:23:56 WARN conf.Configuration: hbase-site.xml:an attempt to override final parameter: dfs.support.append; Ignoring.
13/09/30 17:23:57 INFO Configuration.deprecation: hadoop.native.lib is deprecated. Instead, use io.native.lib.available
13/09/30 17:23:57 INFO util.FSVisitor: No logs under directory:hdfs://hor17n25:8020/apps/hbase/data/.hbase-snapshot/snapshot_tableone/WALs
13/09/30 17:23:57 WARN conf.Configuration: hbase-site.xml:an attempt to override final parameter: dfs.support.append; Ignoring.
13/09/30 17:23:57 INFO client.RMProxy: Connecting to ResourceManager at hor17n25/:8032
13/09/30 17:23:57 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library
13/09/30 17:23:57 INFO compress.CodecPool: Got brand-new compressor .deflate
13/09/30 17:23:57 WARN conf.Configuration: hbase-site.xml:an attempt to override final parameter: dfs.support.append; Ignoring.
13/09/30 17:23:57 INFO client.RMProxy: Connecting to ResourceManager at hor17n25/:8032
13/09/30 17:23:58 INFO input.FileInputFormat: Total input paths to process : 1
13/09/30 17:23:58 INFO mapreduce.JobSubmitter: number of splits:1
13/09/30 17:23:58 INFO Configuration.deprecation: user.name is deprecated. Instead, use mapreduce.job.user.name
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.jar is deprecated. Instead, use mapreduce.job.jar
13/09/30 17:23:58 INFO Configuration.deprecation: fs.default.name is deprecated. Instead, use fs.defaultFS
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.map.tasks.speculative.execution is deprecated. Instead, use mapreduce.map.speculative
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.reduce.tasks is deprecated. Instead, use mapreduce.job.reduces
13/09/30 17:23:58 INFO Configuration.deprecation: mapreduce.map.class is deprecated. Instead, use mapreduce.job.map.class
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.job.name is deprecated. Instead, use mapreduce.job.name
13/09/30 17:23:58 INFO Configuration.deprecation: mapreduce.inputformat.class is deprecated. Instead, use mapreduce.job.inputformat.class
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.input.dir is deprecated. Instead, use mapreduce.input.fileinputformat.inputdir
13/09/30 17:23:58 INFO Configuration.deprecation: mapreduce.outputformat.class is deprecated. Instead, use mapreduce.job.outputformat.class
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.map.tasks is deprecated. Instead, use mapreduce.job.maps
13/09/30 17:23:58 INFO Configuration.deprecation: mapred.working.dir is deprecated. Instead, use mapreduce.job.working.dir
13/09/30 17:23:58 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1380335340676_0003
13/09/30 17:23:58 INFO impl.YarnClientImpl: Submitted application application_1380335340676_0003 to ResourceManager at hor17n25/:8032
13/09/30 17:23:58 INFO mapreduce.Job: The url to track the job: http://hor17n25:8088/proxy/application_1380335340676_0003/
13/09/30 17:23:58 INFO mapreduce.Job: Running job: job_1380335340676_0003
13/09/30 17:24:03 INFO mapreduce.Job: Job job_1380335340676_0003 running in uber mode : false
13/09/30 17:24:03 INFO mapreduce.Job: map 0% reduce 0%
13/09/30 17:24:06 INFO mapreduce.Job: Task Id : attempt_1380335340676_0003_m_000000_0, Status : FAILED
Error: java.lang.ClassNotFoundException: org.apache.hadoop.hbase.TableName
at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
at org.apache.hadoop.hbase.io.HFileLink.getReferencedTableName(HFileLink.java:245)
at org.apache.hadoop.hbase.snapshot.ExportSnapshot$ExportMapper.getOutputPath(ExportSnapshot.java:154)
at org.apache.hadoop.hbase.snapshot.ExportSnapshot$ExportMapper.map(ExportSnapshot.java:137)
at org.apache.hadoop.hbase.snapshot.ExportSnapshot$ExportMapper.map(ExportSnapshot.java:89)
at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:145)
at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:763)
at org.apache.hadoop.mapred.MapTask.run(MapTask.java:339)
at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:162)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:396)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1483)
at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:157)
{code}
resourcemanager runs on hor17n25 where there is no HBase installation.

The root cause is that .ExportSnapshot#runCopyJob() doesn't specify dependent jars.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
The javadoc warning was from [file java], not related to the patch.
Integrated to 0.96 and trunk.

** Comment 6 **
FAILURE: Integrated in hbase-0.96-hadoop2 #66 (See )
HBASE-9687 ClassNotFoundException is thrown when ExportSnapshot runs against hadoop cluster where HBase is not installed on the same node as resourcemanager (tedyu: rev 1527822)
* /hbase/branches/0.[file java]


** Comment 7 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #768 (See )
HBASE-9687 ClassNotFoundException is thrown when ExportSnapshot runs against hadoop cluster where HBase is not installed on the same node as resourcemanager (tedyu: rev 1527823)
* [file java]


** Comment 8 **
Reverted from 0.96 and trunk due to test failure on hadoop-2 profile

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-TRUNK #4578 (See )
HBASE-9687 Revert due to some TestExportSnapshot failure on hadoop-2 (tedyu: rev 1527854)
* [file java]


** Comment 12 **
FAILURE: Integrated in hbase-0.96 #111 (See )
HBASE-9687 Revert due to some TestExportSnapshot failure on hadoop-2 (tedyu: rev 1527853)
* /hbase/branches/0.[file java]


** Comment 13 **
FAILURE: Integrated in hbase-0.96-hadoop2 #67 (See )
HBASE-9687 Revert due to some TestExportSnapshot failure on hadoop-2 (tedyu: rev 1527853)
* /hbase/branches/0.[file java]


** Comment 14 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #769 (See )
HBASE-9687 Revert due to some TestExportSnapshot failure on hadoop-2 (tedyu: rev 1527854)
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]
"
HBASE-10452,https://issues.apache.org/jira/browse/HBASE-10452,https://github.com/apache/hbase/blob/0.98.1/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeRequest.java,Fix potential bugs in exception handlers,NO,"Hi HBase developers,
We are a group of researchers on software reliability. Recently we did a study and found that majority of the most severe failures in HBase are caused by bugs in exception handling logic -- that it is hard to anticipate all the possible real-world error scenarios. Therefore we built a simple checking tool that automatically detects some bug patterns that have caused some very severe real-world failures. I am reporting some of the results here. Any feedback is much appreciated!

Ding

=========================
Case 1:
  Line: 134, File: ""org/apache/hadoop/hbase/regionserver/RegionMergeRequest.java""

{noformat}
  protected void releaseTableLock() {
    if (this.tableLock != null) {
      try {
        this.tableLock.release();
      } catch (IOException ex) {
        LOG.warn(""Could not release the table lock"", ex);
        //TODO: if we get here, and not abort RS, this lock will never be released
      }
    }
{noformat}

The lock is not released if the exception occurs, causing potential deadlock or starvation.

Similar code pattern can be found at:
  Line: 135, File: ""org/apache/hadoop/hbase/regionserver/SplitRequest.java""
==========================================

=========================
Case 2:
  Line: 252, File: ""org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java""

{noformat}
    try {
      Field fEnd = SequenceFile.Reader.class.getDeclaredField(""end"");
      fEnd.setAccessible(true);
      end = fEnd.getLong(this.reader);
    } catch(Exception e) { /* reflection fail. keep going */ }
{noformat}

The caught Exception seems to be too general.
While reflection-related errors might be harmless, the try block can throw
other exceptions including ""SecurityException"", ""IllegalAccessException"", etc. Currently
all those exceptions are ignored. Maybe
the safe way is to ignore the specific reflection-related errors while logging and
handling other types of unexpected exceptions.
==========================================
=========================
Case 3:
  Line: 148, File: ""org/apache/hadoop/hbase/HBaseConfiguration.java""

{noformat}
    try {
      if (Class.forName(""org.apache.hadoop.conf.ConfServlet"") != null) {
        isShowConf = true;
      }
    } catch (Exception e) {
    }
{noformat}

Similar to the previous case, the exception handling is too general. While ClassNotFound error might be the normal case and ignored, Class.forName can also throw other exceptions (e.g., LinkageError) under some unexpected and rare error cases. If that happens, the error will be lost. So maybe change it to below:

{noformat}
    try {
      if (Class.forName(""org.apache.hadoop.conf.ConfServlet"") != null) {
        isShowConf = true;
      }
    } catch (LinkageError e) {
      LOG.warn("".."");
      // handle linkage error
    } catch (ExceptionInInitializerError e) {
      LOG.warn("".."");
      // handle Initializer error
    } catch (ClassNotFoundException e) {
     LOG.debug("".."");
     // ignore
    }
{noformat}
==========================================
=========================
Case 4:
  Line: 163, File: ""org/apache/hadoop/hbase/client/Get.java""

{noformat}
  public Get setTimeStamp(long timestamp) {
    try {
      tr = new TimeRange(timestamp, timestamp+1);
    } catch(IOException e) {
      // Will never happen
    }
    return this;
  }
{noformat}

Even if the IOException never happens right now, is it possible to happen in the future due to code change?
At least there should be a log message. The current behavior is dangerous since if the exception ever happens
in any unexpected scenario, it will be silently swallowed.

Similar code pattern can be found at:
  Line: 300, File: ""org/apache/hadoop/hbase/client/Scan.java""
==========================================

=========================
Case 5:
  Line: 207, File: ""org/apache/hadoop/hbase/util/JVM.java""

{noformat}
   if (input != null){
        try {
          input.close();
        } catch (IOException ignored) {
        }
      }
{noformat}

Any exception encountered in close is completely ignored, not even logged.
In particular, the same exception scenario was handled differently in other methods in the same file:
Line: 154, same file
{noformat}
       if (in != null){
         try {
           in.close();
         } catch (IOException e) {
           LOG.warn(""Not able to close the InputStream"", e);
         }
       }
{noformat}

Line: 248, same file

{noformat}
      if (in != null){
        try {
          in.close();
        } catch (IOException e) {
          LOG.warn(""Not able to close the InputStream"", e);
        }
      }
{noformat}
==========================================

=========================
Case 6: empty handler for exception: java.io.IOException
  Line: 312, File: ""org/apache/hadoop/hbase/rest/RowResource.java""

{noformat}
    } finally {
      if (table != null) try {
        table.close();
      } catch (IOException ioe) { }
    }
{noformat}

IOException is completely ignored. This behavior is inconsistent with the same
code snippet at line 249 in the same file, where the IOExceptions was logged:

{noformat}
   } finally {
      if (table != null) try {
        table.close();
      } catch (IOException ioe) {
        LOG.debug(""Exception received while closing the table"", ioe);
      }
    }
{noformat}
==========================================
=========================
Case 7:
  Line: 95, File: ""org/apache/hadoop/hbase/master/handler/EnableTableHandler.java""

{noformat}
        try {
          this.assignmentManager.getZKTable().removeEnablingTable(tableName, true);
        } catch (KeeperException e) {
          // TODO : Use HBCK to clear such nodes
          LOG.warn(""Failed to delete the ENABLING node for the table "" + tableName
              + "".  The table will remain unusable. Run HBCK to manually fix the problem."");
        }
{noformat}

The log message in the exception handler and the comment seem to suggest that such nodes should be cleared using HBCK.
==========================================


=========================
Case 8:
  Line: 463, File: ""org/apache/hadoop/hbase/client/ClientScanner.java""

{noformat}
        try {
          this.caller.callWithRetries(callable);
        } catch (IOException e) {
          // We used to catch this error, interpret, and rethrow. However, we
          // have since decided that it's not nice for a scanner's close to
          // throw exceptions. Chances are it was just an UnknownScanner
          // exception due to lease time out.
        }
{noformat}

Currently the handler is empty because it may be caused by ""just an UnknownScanner exception"".
But what if it has other causes? Maybe the catch block can differentiate the exception into
different causes, ignoring the ones caused by UnknownScanner while handle others differently?
==========================================","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
nit:
{code}
+      throw new RuntimeException(""TimeRange failed, likely integer overflow. Preventing bad things to propagate.. "", e);
{code}
Please wrap long line - 100 characters limit.


** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12626898
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 hadoop1.0.  The patch failed to compile against the hadoop 1.0 profile.
    Here is snippet of errors:
    {code} Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-server: Compilation failure: Compilation failure:
 [file java]: cannot find symbol
 symbol  : class ReflectiveOperationException
 location: class org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader
 [file java]: cannot find symbol
 symbol  : class ReflectiveOperationException
--
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-server: Compilation failure
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute([file java]:213)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute([file java]:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute([file java]:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject([file java]:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject([file java]:59)
--
Caused by: org.apache.maven.plugin.CompilationFailureException: Compilation failure
	at org.apache.maven.plugin.AbstractCompilerMojo.execute([file java]:729)
	at org.apache.maven.plugin.CompilerMojo.execute([file java]:128)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo([file java]:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute([file java]:209)
	... 19 more{code}
Console output: [link]
This message is automatically generated.

** Comment 5 **
Thanks Ted! Fixed both the line wrapping and the compilation error on java 6.  

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12626957
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
Adding error logging is fine.
Throwing RuntimeExceptions is borderline. I would prefer you just add more error logging in those places.
The changes to RegionMergeRequest and SplitRequest are not good. Don't retry with a hardcoded and arbitrary strategy. If it is important enough to abort, just abort.

** Comment 8 **
[Comment excluded]

** Comment 9 **
Thanks for the comments! Attached a new patch to address them. As for the possible integer overflow error from TimeRange: an IOException instead of RuntimeException is now thrown so the upper levels will deal with it. Let me know if this is fine.

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12627964
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
The comment that was moved in ClientScanner needs fix up. Just remove the ""Chances are it was just an UnknownScanner exception due to lease time out."" part. Can be done on commit.
For the, change in HBaseConfiguration, we should log the details of the caught exception, not a hardcoded string.

** Comment 13 **
[Comment excluded]

** Comment 14 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12628594
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop1.1.  The patch compiles against the hadoop 1.1 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #89 (See )
HBASE-10452 Fix potential bugs in exception handlers (Ding Yuan) (tedyu: rev 1567979)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]
"
HBASE-10825,https://issues.apache.org/jira/browse/HBASE-10825,https://github.com/apache/hbase/blob/0.98.1/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java,Add copy-from option to ExportSnapshot,NO,"To simplify the ""Import"" of a snapshot add a ""-copy-from"" option.
That is basically doing the manual  -Dhbase.rootdir=hdfs://srv/hbase/ -Dfs.defaultFS=hdfs://srv/","** Comment 1 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12636516
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #236 (See )
HBASE-10825 Add copy-from option to ExportSnapshot (mbertozzi: rev 1581911)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 5 **
FAILURE: Integrated in hbase-0.96-hadoop2 #253 (See )
HBASE-10825 Add copy-from option to ExportSnapshot (mbertozzi: rev 1581910)
* /hbase/branches/0.[file java]
* /hbase/branches/0.[file java]


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]
"
HBASE-10906,https://issues.apache.org/jira/browse/HBASE-10906,https://github.com/apache/hbase/blob/0.98.2/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java,Change error log for NamingException in TableInputFormatBase to WARN level,YES,"Over in this thread:
http://search-hadoop.com/m/DHED4Qp3ho/HBase+resolveDns+error+in+log&subj=HBase+resolveDns+error+in+log

Amit mentioned that despite the error log, mapreduce job executed successfully.
The log level should be lowered to WARN.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12638563
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsOnRSRestart([file java]:351)
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testAddVisibilityLabelsOnRSRestart([file java]:374)
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsOnKillingOfRSContainingLabelsTable([file java]:304)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
SUCCESS: Integrated in HBase-0.98 #265 (See )
HBASE-10906 Change error log for NamingException in TableInputFormatBase to WARN level (tedyu: rev 1584889)
* /hbase/branches/0.[file java]


** Comment 6 **
ABORTED: Integrated in HBase-TRUNK #5065 (See )
HBASE-10906 Change error log for NamingException in TableInputFormatBase to WARN level (tedyu: rev 1584890)
* [file java]


** Comment 7 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #249 (See )
HBASE-10906 Change error log for NamingException in TableInputFormatBase to WARN level (tedyu: rev 1584889)
* /hbase/branches/0.[file java]


** Comment 8 **
[Comment excluded]
"
HBASE-11430,https://issues.apache.org/jira/browse/HBASE-11430,https://github.com/apache/hbase/blob/0.98.4/hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java,lastFlushSeqId has been updated wrongly during region open,NO,"In HRegion this.lastFlushSeqId is updated when opening a region which is wrong and will cause issue in distributedLogReplay recovery mode(not in log splitting mode) because its value is bumped up for log replay mode. 

This may cause data loss issue when we recover a region in distributedLogReplay mode while no flush for the region because no edits to be replayed. Later the region move to another region server and then future recovery will have issue because the large flush sequence Id value.","** Comment 1 **
Some more context, we saw this in a big cluster in masters log: 
{code}
2014-06-27 12:02:58,641 DEBUG  master.ServerManager: RegionServer hor10n08.gq1.ygridcore.net,16020,1403856435763 indicates a last flushed sequence id (numberOfStores=1, numberOfStorefiles=0, storefileUncompressedSizeMB=0, storefileSizeMB=0, memstoreSizeMB=0, storefileIndexSizeMB=0, readRequestsCount=0, writeRequestsCount=0, rootIndexSizeKB=0, totalStaticIndexSizeKB=0, totalStaticBloomSizeKB=0, totalCompactingKVs=0, currentCompactedKVs=0, compactionProgressPct=NaN, completeSequenceId=2) that is less than the previous last flushed sequence id (40000002) for region IntegrationTestTimeBoundedRequestsWithRegionReplicas,11111100,1403857312477_0002.20ce78e6a77cb1ddd5b6e360784971f4. Ignoring.
2014-06-27 12:02:58,644 DEBUG  master.ServerManager: RegionServer hor4n37.gq1.ygridcore.net,16020,1403856407099 indicates a last flushed sequence id (numberOfStores=1, numberOfStorefiles=0, storefileUncompressedSizeMB=0, storefileSizeMB=0, memstoreSizeMB=0, storefileIndexSizeMB=0, readRequestsCount=0, writeRequestsCount=0, rootIndexSizeKB=0, totalStaticIndexSizeKB=0, totalStaticBloomSizeKB=0, totalCompactingKVs=0, currentCompactedKVs=0, compactionProgressPct=NaN, completeSequenceId=2) that is less than the previous last flushed sequence id (40000002) for region IntegrationTestTimeBoundedRequestsWithRegionReplicas,049f49f0,1403857312477_0001.b21a19448b7c2f62a3ded3cfc2ddddb1. Ignoring.
2014-06-27 12:02:58,644 DEBUG  master.ServerManager: RegionServer hor4n37.gq1.ygridcore.net,16020,1403856407099 indicates a last flushed sequence id (numberOfStores=1, numberOfStorefiles=0, storefileUncompressedSizeMB=0, storefileSizeMB=0, memstoreSizeMB=0, storefileIndexSizeMB=0, readRequestsCount=0, writeRequestsCount=0, rootIndexSizeKB=0, totalStaticIndexSizeKB=0, totalStaticBloomSizeKB=0, totalCompactingKVs=0, currentCompactedKVs=0, compactionProgressPct=NaN, completeSequenceId=2) that is less than the previous last flushed sequence id (40000002) for region IntegrationTestTimeBoundedRequestsWithRegionReplicas,aeeeee40,1403857312477_0001.cb4295b2b6abe2db1e04f1a249cc5667. Ignoring.
{code}
+1 for patch. 

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in HBase-TRUNK #5245 (See )
HBASE-11430: lastFlushSeqId has been updated wrongly during region open (jeffreyz: rev c591a25f3c88cda5cde67f2b9dff44e0545f3008)
* [file java]
* [file java]


** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]
"
HBASE-11437,https://issues.apache.org/jira/browse/HBASE-11437,https://github.com/apache/hbase/blob/0.98.4/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java,Modify cell tag handling code to treat the length as unsigned,NO,"We store each tag's length and total tags length with 2 bytes in KeyValue buffer, HFiles etc and we treat these lengths as short through out the code.  So the max length can be Short.MAX_VALUE.   We can treat these lengths as unsigned and +ve always.  So we can actually treat these lengths as int and store with 2 bytes so that the max length can reach 65535.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654336
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 33 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.codec.TestCellCodecWithTags
                  org.apache.hadoop.hbase.codec.TestKeyValueCodecWithTags
                  org.apache.hadoop.hbase.TestKeyValue
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
By mistake one line removal in Tag caused the tests to fail. This should fix it.

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654436
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 33 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels.testMROnTable([file java]:162)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654826
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 21 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes.testMROnTableWithInvalidOperationAttr([file java]:137)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
Diff tests failed each time. (Second time unrelated to Tags). Let us see what happens this time 

** Comment 12 **
[Comment excluded]

** Comment 13 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12655050
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 21 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
bq. This seems strange to me. If an application program wants to use this and compile against both 1.x line and 2.x line, then there is no correct way to use the API
Ok, then how about deprecation of getTagsLengthUnsigned in 0.98 with Javadoc indicating the upcoming change to getTagsLength in 1.0 and later. Would like to relegate the error of using a short return to the scrapheap rather than carry it into later release lines.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
FAILURE: Integrated in HBase-0.98 #391 (See )
HBASE-11437 Modify cell tag handling code to treat the length as unsigned. (Anoop) (anoopsamjohn: rev f2d16e0a8cf6fc349216ffcc9c2b6eabd3a99c0d)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12655510
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]
"
HBASE-11876,https://issues.apache.org/jira/browse/HBASE-11876,https://github.com/apache/hbase/blob/0.98.6/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java,RegionScanner.nextRaw(...) should not update metrics,NO,"I added the RegionScanner.nextRaw(...) to allow ""smart"" client to avoid some of the default work that HBase is doing, such as {start|stop}RegionOperation and synchronized(scanner) for each row.

Metrics should follow the same approach. Collecting them per row is expensive and a caller should have the option to collect those later or to avoid collecting them completely.

We can also save some cycles in RSRcpServices.scan(...) if we updated the metric only once/batch instead of each row.
","** Comment 1 **
Let's discuss. The one problem I see that a client (coprocessor) could call nextRaw(...) cause lots of load on the RS, that would not register as a scan metric on the RS unless the coprocessor is a good citizen. (of course a called can already wreak havoc by failing to start/stop the region operation or to synchronize on the scanner object)
If no objections I'll make a patch.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Sry messed with the code block. This is the one I'm referring to
{code}
                 synchronized(scanner) {
                 boolean stale = (region.getRegionInfo().getReplicaId() != 0);
-                for (; i < rows
-                    && currentScanResultSize < maxResultSize; ) {
+                for (; i < rows; i++) {
+                  // Stop collecting results if maxScannerResultSize is set and we have exceeded it
+                  if ((maxScannerResultSize < Long.MAX_VALUE) &&
+                      (currentScanResultSize >= maxResultSize)) {
+                    break;
+                  }
                   // Collect values to be returned here
                   boolean moreRows = scanner.nextRaw(values);
                   if (!values.isEmpty()) {
-                    if (maxScannerResultSize < Long.MAX_VALUE){
-                      for (Cell kv : values) {
-                        currentScanResultSize += KeyValueUtil.ensureKeyValue(kv).heapSize();
-                      }
+                    for (Cell cell : values) {
+                      KeyValue kv = KeyValueUtil.ensureKeyValue(cell);
+                      currentScanResultSize += kv.heapSize();
+                      totalKvSize += kv.getLength();
                     }
                     results.add(Result.create(values, null, stale));
-                    i++;
                   }
{code}

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666061
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666070
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster
                  org.apache.hadoop.hbase.client.TestMultiParallel
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.TestDFSClientRetries.testFailuresArePerOperation([file java]:336)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-TRUNK #5462 (See )
HBASE-11876 RegionScanner.nextRaw should not update metrics (apurtell: rev 5ad6098b52fe3b046ff11ffe518ca8a096b7343e)
* [file java]
* [file java]
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-0.98 #492 (See )
HBASE-11876 RegionScanner.nextRaw should not update metrics (apurtell: rev 23a4181d1ecc5f492c16dc579bff92eef7d209f1)
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #465 (See )
HBASE-11876 RegionScanner.nextRaw should not update metrics (apurtell: rev 23a4181d1ecc5f492c16dc579bff92eef7d209f1)
* [file java]
* [file java]


** Comment 21 **
The trunk change passed precommit but the 0.98 version requires an addendum to fix a failing test, see [link]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
FAILURE: Integrated in HBase-0.98 #494 (See )
Revert ""HBASE-11876 RegionScanner.nextRaw should not update metrics"" (apurtell: rev c3882ed73a5c77c21ee5110ded9598f2f317cb55)
* [file java]
* [file java]
HBASE-11876 RegionScanner.nextRaw should not update metrics (apurtell: rev cf843b196338cf2f2bd0eafbe88fda7d4386fba2)
* [file java]
* [file java]
* [file java]


** Comment 25 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #467 (See )
Revert ""HBASE-11876 RegionScanner.nextRaw should not update metrics"" (apurtell: rev c3882ed73a5c77c21ee5110ded9598f2f317cb55)
* [file java]
* [file java]
HBASE-11876 RegionScanner.nextRaw should not update metrics (apurtell: rev cf843b196338cf2f2bd0eafbe88fda7d4386fba2)
* [file java]
* [file java]
* [file java]


** Comment 26 **
[Comment excluded]
"
HBASE-11742,https://issues.apache.org/jira/browse/HBASE-11742,https://github.com/apache/hbase/blob/0.98.6/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java,Backport HBASE-7987 and HBASE-11185 to 0.98,NO,"HBASE-7987 improves how snapshots are handled via a manifest file. This requires reverting HBASE-11360 since introduces an alternate functionality that is not compatible with HBASE-7987.
","** Comment 1 **
By applying the patch on 0.98 I get a param problem on the InputFormat constructor, which seems to be related to HBASE-11137
{code}
[file java]: error: no suitable constructor found for InputSplit(String,List<String>)
[file java]: error: no suitable constructor found for InputSplit(String,List<String>)
{code}
HBASE-11185 must be applied too.
and HBASE-11326 is a nice to have.
other then that looks ok to me, I'll take another look and play with it a later

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Yeah, I'm fine having HBASE-11185 too in this patch if you think so but I guess it could be done on the same HBASE-11185 after backporting this (done it already in my local repo and it applies cleanly).

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
What happens if there is an older client library that wants to run a MR-over snapshots job against snapshots dropped by newer servers? The older library will be looking for table descriptors and snapshot region names in the FS instead of SnapshotFileInfo/SnapshotRegionManifest.
Do we continue to handle TableSnapshotRegionSplit messages that have RegionSpecifiers (field #1) instead of the new TableSchema and RegionInfo fields (3 and 4)? 
What happens if someone uses the newer client in a MR-over-snapshots job where there is no SnapshotFileInfo/SnapshotRegionManifest data available because the servers are older?
What happens when we have a mix of snapshots dropped by an older server side versus a newer server side?

** Comment 11 **
{quote}What happens if there is an older client library that wants to run a MR-over snapshots job against snapshots dropped by newer servers? The older library will be looking for table descriptors and snapshot region names in the FS instead of SnapshotFileInfo/SnapshotRegionManifest.{quote}
you can't use old jars to read the new format.
{quote}Do we continue to handle TableSnapshotRegionSplit messages that have RegionSpecifiers (field #1) instead of the new TableSchema and RegionInfo fields (3 and 4)?{quote}
That proto is internal to the map reduce and used just for message passing, so there is no need for compatibility there. Unless you have different jars executing the mr job.
{quote}What happens if someone uses the newer client in a MR-over-snapshots job where there is no SnapshotFileInfo/SnapshotRegionManifest data available because the servers are older?{quote}
The new code is able to read the old format
{quote}What happens when we have a mix of snapshots dropped by an older server side versus a newer server side?{quote}
The new code support taking snapshot during rolling upgrades, which means that the older RS writes in the old format and the new one in the new format. Which is fine since both format are readable and aggregated on read if necessary (requires the new jars). If the master is already updates will do the merge of the RS result converting to the single manifest if necessary.

** Comment 12 **
{quote}
bq. What happens if there is an older client library that wants to run a MR-over snapshots job against snapshots dropped by newer servers? The older library will be looking for table descriptors and snapshot region names in the FS instead of SnapshotFileInfo/SnapshotRegionManifest.
you can't use old jars to read the new format.
{quote}
We can't force an upgrade of an older client with a minor server bump. The server side needs to support older clients until the client fleet can be upgraded independent of server side. Thanks for clarifying elsewhere, so this is the only issue with the current patch. Can we keep server side support for writing both formats with the backwards compatible option the default? Some new configuration setting will have a default of ""false"" (or ""1""). We can add a release note describing the necessary steps to move to the improved functionality.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #433 (See )
HBASE-11742 (Backport HBASE-7987 and HBASE-11185 to 0.98) (Esteban Gutierrez and Matteo Bertozzi) (apurtell: rev 2e978a165481c45c6a3d97b185c797a0425ddc44)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/MapReduce.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Snapshot.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.98 #460 (See )
HBASE-11742 (Backport HBASE-7987 and HBASE-11185 to 0.98) (Esteban Gutierrez and Matteo Bertozzi) (apurtell: rev 2e978a165481c45c6a3d97b185c797a0425ddc44)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Snapshot.proto
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/MapReduce.proto
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 20 **
Build on hadoop-1.1 was broken:
{code}
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-server: Compilation failure
 /x1/jenkins/jenkins-slave/workspace/HBase-0.98-on-Hadoop-1.[file java]: cannot find symbol
 symbol  : method copyBytes()
 location: class org.apache.hadoop.io.BytesWritable
 -> 
{code}
Addendum makes the compilation pass.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]
"
HBASE-12076,https://issues.apache.org/jira/browse/HBASE-12076,https://github.com/apache/hbase/blob/0.98.7/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/PutCombiner.java,Move InterfaceAudience imports to hbase-annotations,NO,,"** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12670897
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster
                  org.apache.hadoop.hbase.mapreduce.TestImportExport
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in HBase-TRUNK #5551 (See )
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 0a28af366b779489127a8d896a2f97df88cf539a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 5 **
FAILURE: Integrated in HBase-0.98 #537 (See )
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 7cfdb38c9274e306ac37374c147a978c2cef31d6)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 2cfe99f101c2260d2f79ad1c9bce1b4632f15ffc)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 6 **
[Comment excluded]

** Comment 7 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #512 (See )
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 7cfdb38c9274e306ac37374c147a978c2cef31d6)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 2cfe99f101c2260d2f79ad1c9bce1b4632f15ffc)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 8 **
FAILURE: Integrated in HBase-1.0 #225 (See )
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev 91642eed8253f61d27e89e0a21898d166092510e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
HBASE-12076 Move InterfaceAudience imports to hbase-annotations (eclark: rev eca856bad6757be12701e4cad12afef2aef28098)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]
"
HBASE-12432,https://issues.apache.org/jira/browse/HBASE-12432,https://github.com/apache/hbase/blob/0.98.8/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCaller.java,RpcRetryingCaller should log after fixed number of retries like AsyncProcess,YES,"Scanner retry is handled by RpcRetryingCaller. This is different from multi, which is handled by AsyncProcess. AsyncProcess will start logging operation status after hbase.client.start.log.errors.counter retries have been attempted. Let's bring the same functionality over to Scanner path.

Noticed this while debugging IntegrationTestMTTR.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Minor tweak to log only what the callable thinks is useful, not the whole exception.

** Comment 6 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12679767
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 7 **
bq. Minor tweak to log only what the callable thinks is useful, not the whole exception.
+1 on the second patch (01)
bq. Shouldn't we should consolidate these into a single execution path?
Sure let's look at it but after the change on this issue goes in. :-)

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
While I'm at it, both this and AsyncProcess should be emitting this log at debug, not info. We should fold that into Sean's work.

** Comment 12 **
[Comment excluded]

** Comment 13 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #631 (See )
HBASE-12432 RpcRetryingCaller should log after fixed number of retries like AsyncProcess (apurtell: rev 2d9bb9d340eeef468f74500209ea2324d5988bb8)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 14 **
SUCCESS: Integrated in HBase-TRUNK #5754 (See )
HBASE-12432 RpcRetryingCaller should log after fixed number of retries like AsyncProcess (apurtell: rev fb1af86ee1700ca1e6817c0c988ec9d5da1215d2)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 15 **
SUCCESS: Integrated in HBase-1.0 #445 (See )
HBASE-12432 RpcRetryingCaller should log after fixed number of retries like AsyncProcess (apurtell: rev df3ba6ea4b33962145803678d369c476b6ba5817)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-0.98 #662 (See )
HBASE-12432 RpcRetryingCaller should log after fixed number of retries like AsyncProcess (apurtell: rev 2d9bb9d340eeef468f74500209ea2324d5988bb8)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 17 **
[Comment excluded]
"
HBASE-12419,https://issues.apache.org/jira/browse/HBASE-12419,https://github.com/apache/hbase/blob/0.98.8/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java,"""Partial cell read caused by EOF"" ERRORs on replication source during replication",YES,"We are seeing exceptions like these on the replication sources when replication is active:
{noformat}
2014-11-04 01:20:19,738 ERROR [regionserver8120-EventThread.replicationSource,1] codec.BaseDecoder:
Partial cell read caused by EOF: java.io.IOException: Premature EOF from inputStream
{noformat}

HBase 0.98.8-SNAPSHOT, Hadoop 2.4.1.

Happens both with and without short circuit reads on the source cluster.

I'm able to reproduce this reliably:
# Set up two clusters. Can be single slave.
# Enable replication in configuration
# Use LoadTestTool -init_only on both clusters
# On source cluster via shell: alter 'cluster_test',{NAME=>'test_cf',REPLICATION_SCOPE=>1}
# On source cluster via shell: add_peer 'remote:port:/hbase'
# On source cluster, LoadTestTool -skip_init -write 1:1024:10 -num_keys 1000000
# Wait for LoadTestTool to complete
# Use the shell to verify 1M rows are in 'cluster_test' on the target cluster.

All 1M rows will replicate without data loss, but I'll see 5-15 instances of ""Partial cell read caused by EOF"" messages logged from codec.BaseDecoder at ERROR level on the replication source. 
","** Comment 1 **
This comes from BaseDecoder#rethrowEofException
{code}
  private void rethrowEofException(IOException ioEx) throws IOException {
    boolean isEof = false;
    try {
      isEof = this.in.available() == 0;
    } catch (Throwable t) {
      LOG.trace(""Error getting available for error message - ignoring"", t);
    }
    if (!isEof) throw ioEx;
    LOG.error(""Partial cell read caused by EOF: "" + ioEx);
    EOFException eofEx = new EOFException(""Partial cell read"");
    eofEx.initCause(ioEx);
    throw eofEx;
  }
{code}
which is called if we fail to parse a cell while advancing the reader through the WAL:
{code}
  public boolean advance() throws IOException {
    if (!this.hasNext) return this.hasNext;
    if (this.in.available() == 0) {
      this.hasNext = false;
      return this.hasNext;
    }
    try {
      this.current = parseCell();
    } catch (IOException ioEx) {
      rethrowEofException(ioEx);
    }
    return this.hasNext;
  }
{code}


** Comment 2 **
I built an ingest test (attached) to catch this under debugger. It's a relatively rare occurrence. 
Daemon Thread  (Suspended (breakpoint at line 66 in BaseDecoder))	
	KeyValueCodec$KeyValueDecoder(BaseDecoder).rethrowEofException(IOException) line: 66	
	KeyValueCodec$KeyValueDecoder(BaseDecoder).advance() line: 53
          in = org.apache.hadoop.hdfs.client.HdfsDataInputStream
            .in = org.apache.hadoop.hdfs.DFSInputStream
              .blockEnd = 17967301
              .lastBlockBeingWrittenLength = 17967302
              .lastLocatedBlock.b.block.numBytes = 17967302
              .locatedBlocks.blocks.size = 1
              .locatedBlocks.isLastBlockComplete = false
              .pos = 17967302              
	WALEdit.readFromCells(Codec$Decoder, int) line: 248
          cellDecoder = org.apache.hadoop.hbase.codec.KeyValueCodec$KeyValueDecoder	
          expectedCount = 1
	ProtobufLogReader.readNext(HLog$Entry) line: 317
          expectedCount = 1
          posBefore = 17967298
	ProtobufLogReader(ReaderBase).next(HLog$Entry) line: 106	
	ProtobufLogReader(ReaderBase).next() line: 91	
	ReplicationHLogReaderManager.readNextAndSetPosition() line: 86	
	ReplicationSource.readAllEntriesToReplicateOrNextFile(boolean, List<Entry>) line: 441	
	ReplicationSource.run() line: 328	
This is a short read from an incomplete file. We then seek back to the last good known location at ProtobufLineReader.readNext:346
""Encountered a malformed edit, seeking back to last good position in file""
I conclude the reread after seeking back is ultimately successful because the ingest test finds every written key. I've also done a manual test between two real clusters on EC2 where I write 1M rows with one cell per row only, and at the end of the test 1M rows always have arrived at the target cluster even though BaseDecoder has logged a few of the ERRORs in question.
Is there more to see here?
Should we downgrade the message at BaseDecoder.rethrowEofException:66 from ERROR to TRACE level?


** Comment 3 **
[Comment excluded]

** Comment 4 **
Yeah, getting partial reads has always been a reality in ReplicationSource, even before PBing everything. I'm +1 on TRACEing this but what about all the other users of BaseDecoder? Are there cases where we rely on this LOG.error to show that something went wrong?

** Comment 5 **
bq. Are there cases where we rely on this LOG.error to show that something went wrong?
I think BaseDecoder throwing an EOFException is good enough notice.
Thanks for the +1 for the idea , I'll put up a patch that does exactly as specified on this issue and commit it to 0.98 and up later tonight unless there's an objection.
Edit: Formatting

** Comment 6 **
Trivial patch that changes log level as described.

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12679738
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 8 **
A surefire JVM was killed during the precommit build, not a related failure.
Running org.apache.hadoop.hbase.executor.TestExecutorService
Killed


** Comment 9 **
[Comment excluded]

** Comment 10 **
Sorry for coming late. Maybe DEBUG would have been better?

** Comment 11 **
SUCCESS: Integrated in HBase-TRUNK #5750 (See )
HBASE-12419 'Partial cell read caused by EOF' ERRORs on replication source (apurtell: rev 910254715933e41662619e3bf109d841de448a42)
* [file java]


** Comment 12 **
SUCCESS: Integrated in HBase-1.0 #438 (See )
HBASE-12419 'Partial cell read caused by EOF' ERRORs on replication source (apurtell: rev bd42fbca6d87f94b053bc277bf6931a942bbaefb)
* [file java]


** Comment 13 **
SUCCESS: Integrated in HBase-0.98 #658 (See )
HBASE-12419 'Partial cell read caused by EOF' ERRORs on replication source (apurtell: rev e1666cb2c1a828137a5527217d5f13764ce4d6d9)
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #627 (See )
HBASE-12419 'Partial cell read caused by EOF' ERRORs on replication source (apurtell: rev e1666cb2c1a828137a5527217d5f13764ce4d6d9)
* [file java]


** Comment 15 **
[Comment excluded]
"
HBASE-11915,https://issues.apache.org/jira/browse/HBASE-11915,https://github.com/apache/hbase/blob/0.98.8/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java,Document and test 0.94 -> 1.0.0 update,NO,"We explicitly did not remove some of the upgrade related stuff in branch-1 for the possibility of supporting 0.94 -> 1.0, similar to 0.94 -> 0.98 support. 

We should document, and test this support before 1.0 comes. ","** Comment 1 **
Adds a bit of doc.  Adds back UpgradeTo96.  Stuck here at the moment:
{code}
113 2014-10-21 14:05:42,331 INFO   master.HMaster: Converting state from zk to new states:TestTable=ENABLED
114 2014-10-21 14:05:42,331 FATAL  master.HMaster: Failed to become active master
115 org.apache.hadoop.hbase.TableNotFoundException: TestTable
116   at org.apache.hadoop.hbase.master.TableStateManager.setTableState([file java]:74)
117   at org.apache.hadoop.hbase.master.HMaster.initializeZKBasedSystemTrackers([file java]:477)
118   at org.apache.hadoop.hbase.master.HMaster.finishActiveMasterInitialization([file java]:538)
119   at org.apache.hadoop.hbase.master.HMaster.access$500([file java]:158)
120   at org.apache.hadoop.hbase.master.HMaster$1.run([file java]:1296)
121   at java.lang.Thread.run([file java]:744)
122 2014-10-21 14:05:42,333 FATAL  master.HMaster: Unhandled exception. Starting shutdown.
123 org.apache.hadoop.hbase.TableNotFoundException: TestTable
124   at org.apache.hadoop.hbase.master.TableStateManager.setTableState([file java]:74)
125   at org.apache.hadoop.hbase.master.HMaster.initializeZKBasedSystemTrackers([file java]:477)
126   at org.apache.hadoop.hbase.master.HMaster.finishActiveMasterInitialization([file java]:538)
127   at org.apache.hadoop.hbase.master.HMaster.access$500([file java]:158)
128   at org.apache.hadoop.hbase.master.HMaster$1.run([file java]:1296)
129   at java.lang.Thread.run([file java]:744)
{code}

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
FAILURE: Integrated in HBase-TRUNK #5685 (See )
HBASE-11915 Document and test 0.94 -> 1.0.0 update (stack: rev c5022bb665bf5d041494b92551dfab6bd62680e0)
* src/main/docbkx/configuration.xml
* src/main/docbkx/upgrading.xml


** Comment 6 **
Let me add an addendum.  Testing on a cluster I get this when I do -execute of the migration:
{code}
2014-10-22 21:30:25,149 WARN   util.FSUtils: Unable to create version file at hdfs://c2020.halxg.cloudera.com:8020/hbase, retrying
java.io.IOException: Unable to move temp version file to hdfs://c2020.halxg.cloudera.com:8020/hbase/hbase.version
	at org.apache.hadoop.hbase.util.FSUtils.setVersion([file java]:644)
	at org.apache.hadoop.hbase.util.FSUtils.setVersion([file java]:599)
	at org.apache.hadoop.hbase.migration.NamespaceUpgrade.upgradeTableDirs([file java]:151)
	at org.apache.hadoop.hbase.migration.NamespaceUpgrade.run([file java]:562)
	at org.apache.hadoop.util.ToolRunner.run([file java]:70)
	at org.apache.hadoop.hbase.migration.UpgradeTo96.executeTool([file java]:221)
	at org.apache.hadoop.hbase.migration.UpgradeTo96.executeUpgrade([file java]:211)
	at org.apache.hadoop.hbase.migration.UpgradeTo96.run([file java]:133)
	at org.apache.hadoop.util.ToolRunner.run([file java]:70)
	at org.apache.hadoop.hbase.migration.UpgradeTo96.main([file java]:257)
2014-10-22 21:30:25,164 INFO   hdfs.DFSClient: checksum=CRC32C
{code}
It is actually  harmless case of TMI but it took me a minute or two to figure that so lets spare the poor operator.
Small patch.  i tested it works on a new migration.
I started a 0.94 on a hadoop 2.6.0-SNAPSHOT.  I inserted some data.  Shut it down.  Installed a branch-1 build.  Ran upgrade -check then upgrade -execute.  Then was able to start up the 0.99 over the 0.94 data.
Need to try and see what breaks when we run an application against 0.94 and then 1.0 but that is another issue.

** Comment 7 **
[Comment excluded]

** Comment 8 **
FAILURE: Integrated in HBase-1.0 #347 (See )
HBASE-11915 Document and test 0.94 -> 1.0.0 update -- ADDENDUM (stack: rev 46e4bffc2c7209b8d6620bdd187d9b43200770b8)
* [file java]


** Comment 9 **
FAILURE: Integrated in HBase-0.98 #628 (See )
HBASE-11915 Document and test 0.94 -> 1.0.0 update -- ADDENDUM (stack: rev 046c4ce62da624f1a98a78e3fcd5204a7a420585)
* [file java]


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]
"
HBASE-12461,https://issues.apache.org/jira/browse/HBASE-12461,https://github.com/apache/hbase/blob/0.98.8/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java,FSVisitor logging is excessive,YES,I noticed this in master log while debugging other issues. FSVisitor leaving walls of logs at INFO level making debugging difficult and creating huge log file.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Should you surround log.trace with is trace enabled to keep from creating un-needed strings ?

** Comment 4 **
Here's a patch that takes Nick's changes and wraps the trace level logging in an ifTraceEnabled() conditional. Applies cleanly to 0.98+. What say ye?

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
SUCCESS: Integrated in HBase-1.0 #458 (See )
HBASE-12461 FSVisitor logging is excessive (Nick Dimiduk) (apurtell: rev 17a816a0f977dae958a005d0a35cf7361d6a44d2)
* [file java]


** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12681098
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
SUCCESS: Integrated in HBase-TRUNK #5768 (See )
HBASE-12461 FSVisitor logging is excessive (Nick Dimiduk) (apurtell: rev 05c16633928ce170f6e917edb26c36e1fc82051a)
* [file java]


** Comment 10 **
SUCCESS: Integrated in HBase-0.98 #671 (See )
HBASE-12461 FSVisitor logging is excessive (Nick Dimiduk) (apurtell: rev 879be4c9619747aa202a1cc9bf3ce334d5087b91)
* [file java]


** Comment 11 **
SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #639 (See )
HBASE-12461 FSVisitor logging is excessive (Nick Dimiduk) (apurtell: rev 879be4c9619747aa202a1cc9bf3ce334d5087b91)
* [file java]


** Comment 12 **
[Comment excluded]
"
HBASE-12539,https://issues.apache.org/jira/browse/HBASE-12539,https://github.com/apache/hbase/blob/0.98.9/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java,HFileLinkCleaner logs are uselessly noisy,YES,I noticed these ERROR logs while debugging some test runs. The message was basically useless. Make demote the messages to DEBUG and make them actionable by including the path of the problematic file.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 05ced20a347213c31e46c528e53b93c675f85891.
  ATTACHMENT ID: 12682476
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer.testBulkAssignment([file java]:183)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
+1
Consider adding LOG.ifDebugEnabled() conditional on commit

** Comment 4 **
Wrapped statements in isDebugEnabled per 's comment. Attaching what I pushed.

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #652 (See )
HBASE-12539 HFileLinkCleaner logs are uselessly noisy (ndimiduk: rev 2d4a3ff2db947773fa7353c44b6ed33b43040b4a)
* [file java]


** Comment 7 **
FAILURE: Integrated in HBase-TRUNK #5799 (See )
HBASE-12539 HFileLinkCleaner logs are uselessly noisy (ndimiduk: rev b6dd9b441fb279bbd7b6c48d809166b2b0235514)
* [file java]


** Comment 8 **
SUCCESS: Integrated in HBase-1.0 #481 (See )
HBASE-12539 HFileLinkCleaner logs are uselessly noisy (ndimiduk: rev f1048a148bd505d24dfb78be724967b063d75018)
* [file java]


** Comment 9 **
SUCCESS: Integrated in HBase-0.98 #685 (See )
HBASE-12539 HFileLinkCleaner logs are uselessly noisy (ndimiduk: rev 2d4a3ff2db947773fa7353c44b6ed33b43040b4a)
* [file java]


** Comment 10 **
Looks like 0.98 build on hadoop-1 has some compilation error.
Here is proposed addendum - compilation passes against hadoop-1.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #656 (See )
HBASE-12539 Addendum fixes compilation against hadoop-1 (tedyu: rev 8dcb03c24530b66c6e93b1016cd25d5e5f10f0ae)
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-0.98 #689 (See )
HBASE-12539 Addendum fixes compilation against hadoop-1 (tedyu: rev 8dcb03c24530b66c6e93b1016cd25d5e5f10f0ae)
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]
"
HBASE-12787,https://issues.apache.org/jira/browse/HBASE-12787,https://github.com/apache/hbase/blob/0.98.10/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java,Backport HBASE-12028 (Abort the RegionServer when it's handler threads die) to 0.98,NO,"Backport HBASE-12028 (Abort the RegionServer when it's handler threads die) to 0.98. There are two 0.98-specific changes that should be addressed:
# The default configuration should preserve current behavior
# The interface change to RpcSchedulerFactory should be binary compatible for Phoenix if possible, and we can do this by detecting with reflection if an older implementation of the interface is missing the new 'create' method and by invoking the older deprecated 'create' method instead. We can cache the decision after making it once.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Phoenix compiles and unit tests pass also. 
There is a repeatable, probably unrelated, test failure that I'm looking into before proceeding.

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #750 (See )
HBASE-12787 Backport HBASE-12028 (Abort the RegionServer when it's handler threads die) to 0.98 (Alicia Ying Shu) (apurtell: rev b4b1b9c46308747b14620d1010526562a3fc4ff5)
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 18 **
Bah, another day another addendum for forgotten Hadoop 1...
 [file java]: error: cannot find symbol


** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #751 (See )
Amend HBASE-12787 Backport HBASE-12028 (Abort the RegionServer when it's handler threads die) to 0.98 (Alicia Ying Shu); Fix Hadoop 1 build (apurtell: rev 81e6831af812a02742a9ae76d0fa184eb7255719)
* [file java]
* [file java]


** Comment 23 **
[Comment excluded]
"
HBASE-13282,https://issues.apache.org/jira/browse/HBASE-13282,https://github.com/apache/hbase/blob/0.98.12/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java,Fix the minor issues of running Canary on kerberized environment,NO,"Found two minor issues.
* Canary tool not logging exception when failing to authenticate.
* Can't use -D option for setting keytab and principal as auth chore is being launched before calling ToolRunner.run method.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Did you look at the output on failure?
in theory if you do something like:
{code}
LOG.error(""xyz-msg: "" + e.getMessage(), e);
{code}
you can see the ""simple user error"" by doing cat log | grep ""initial login""
otherwise you have to look at the line below for the exception message + stack trace.
but do not trust me on this, check the output to see if what I said is true :)
Do we need to create/shutdown the choreService, if the authChore is null?
maybe change like this?
{code}
final ScheduledChore authChore = AuthUtil.getAuthChore(conf);
if (authChore != null) {
  choreService = new ChoreService(""CANARY_TOOL"");  
  choreService.scheduleChore(authChore);
}
...
if (choreService != null) {
  choreService.shutdown();
}
{code}

** Comment 5 **
Addressed both suggestions by . The sample error message while doing cat log|grep ""initial login"" looks like this:
{code}
015-03-20 09:06:25,726 ERROR  hbase.AuthUtil: Error while trying to perform the initial login: Login failure for hbase/XXX@YYY.COM from keytab hbase.keytab
{code}

** Comment 6 **
Fixing the checkstyle error.

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 34347a36399de5496119a692379de46551b07103.
  ATTACHMENT ID: 12705987
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-1.0 #818 (See )
HBASE-13282 Fix the minor issues of running Canary on kerberized environment (Srikanth Srungarapu) (matteo.bertozzi: rev d38433808cd35c2abe8f31398a9e45df1eebdb15)
* [file java]
* [file java]


** Comment 13 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit f4eb7191be66ada04c94cd555acbfe34efc350c1.
  ATTACHMENT ID: 12706045
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 14 **
FAILURE: Integrated in HBase-TRUNK #6285 (See )
HBASE-13282 Fix the minor issues of running Canary on kerberized environment (Srikanth Srungarapu) (matteo.bertozzi: rev 09151911679a608db31cca63c25cfd52818a311c)
* [file java]
* [file java]


** Comment 15 **
FAILURE: Integrated in HBase-1.1 #308 (See )
HBASE-13282 Fix the minor issues of running Canary on kerberized environment (Srikanth Srungarapu) (matteo.bertozzi: rev 4230b1ae2e77334b5463cbe117cdcc8d24254dec)
* [file java]
* [file java]


** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]
"
HBASE-14042,https://issues.apache.org/jira/browse/HBASE-14042,https://github.com/apache/hbase/blob/0.98.14/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java,Fix FATAL level logging in FSHLog where logged for non fatal exceptions,YES,We have FATAL level logging in FSHLog where an IOException causes a log roll to be requested. It isn't a fatal event. Drop the log level to WARN. (Could even be INFO.),"** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f5ad736282c8c9c27b14131919d60b72834ec9e4.
  ATTACHMENT ID: 12744286
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
     -1 core zombie tests.  There are 2 zombie test(s): 	at org.apache.camel.component.jetty.jettyproducer.HttpJettyProducerRecipientListCustomThreadPoolTest.testRecipientList([file java]:40)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 2 **
Bogus precommit. Looks like a Camel UT was erroneously flagged as a zombie.
This patch only changes log levels. No unit tests needed. 

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against 0.98 branch at commit f5ad736282c8c9c27b14131919d60b72834ec9e4.
  ATTACHMENT ID: 12744294
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 24 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1006 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev b51f980ee870c397a76a2429dacc69018c5a95b9)
* [file java]


** Comment 7 **
SUCCESS: Integrated in HBase-1.2 #58 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev be536ada0a0b6ed22c236cf0987cbc74f6eece8a)
* [file java]


** Comment 8 **
FAILURE: Integrated in HBase-1.0 #990 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev 8bb2a0223f6def1540f3fcfd517fc69cccba7e9a)
* [file java]


** Comment 9 **
FAILURE: Integrated in HBase-TRUNK #6637 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev 41c8ec7aeae859808a217bd7a561e81be7e3c7ac)
* [file java]


** Comment 10 **
SUCCESS: Integrated in HBase-1.1 #579 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev 49ee8ce4cafdcb9cbe4e9705eab1074defb28859)
* [file java]


** Comment 11 **
SUCCESS: Integrated in HBase-1.2-IT #44 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev be536ada0a0b6ed22c236cf0987cbc74f6eece8a)
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-1.3 #44 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev c66ff887e63a9da4f6c24c92dae917fb21260948)
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-0.98 #1052 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev b51f980ee870c397a76a2429dacc69018c5a95b9)
* [file java]


** Comment 14 **
SUCCESS: Integrated in HBase-1.3-IT #30 (See )
HBASE-14042 Fix FATAL level logging in FSHLog where logged for non fatal exceptions (apurtell: rev c66ff887e63a9da4f6c24c92dae917fb21260948)
* [file java]


** Comment 15 **
[Comment excluded]
"
HBASE-14611,https://issues.apache.org/jira/browse/HBASE-14611,https://github.com/apache/hbase/blob/0.98.16/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java,Backport HBASE-14473 (Compute region locality in parallel) to 0.98,NO,"[~eclark] contributed a nice change on HBASE-14473 that scales calculation of locality balance cost to larger clusters. I'd like to bring this back to 0.98 for folks running it on larger clusters. The changes require a partial rewrite of RegionLocationFinder hence a backport issue.

The difference between this backport and RegionLocationFinder on later branches is we preserve the ability to change the expiration time of cache items with the configuration parameter ""hbase.master.balancer.regionLocationCacheTime"". 

The difference between RegionLocationFinder in 0.98 before and after this change is the expiration time of cache entries will be set according to when they are written into the cache instead of from when they are last accessed, which seems better to me.","** Comment 1 **
Attaching patch for precommit.
Local results:
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 79.557 sec - in org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer
Running org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.193 sec - in org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer
Running org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.858 sec - in org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer
Running org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.614 sec - in org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence
Results :
Tests run: 20, Failures: 0, Errors: 0, Skipped: 0


** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against 0.98 branch at commit 46f2877381afefd1b7c838e10a80776b043854ae.
  ATTACHMENT ID: 12766727
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 29 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
FAILURE: Integrated in HBase-0.98-matrix #258 (See )
HBASE-14611 Backport HBASE-14473 (Compute region locality in parallel) (apurtell: rev 70b9015a0ec8de5ed9f9d9302b67b8e79bc4c558)
* [file java]


** Comment 9 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1131 (See )
HBASE-14611 Backport HBASE-14473 (Compute region locality in parallel) (apurtell: rev 70b9015a0ec8de5ed9f9d9302b67b8e79bc4c558)
* [file java]


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]
"
HBASE-14512,https://issues.apache.org/jira/browse/HBASE-14512,https://github.com/apache/hbase/blob/rel/0.98.17/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/CallRunner.java,Cache UGI groups,NO,"Right now every call gets a new User object.
We should keep the same user for the life of a connection. We should also cache the group names. However we can't cache the groups for forever as that would mean groups don't get refreshed every 5 mins.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 653458365281d96c288804d094c7d5f8d826a7d7.
  ATTACHMENT ID: 12764322
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.tajo.jdbc.TestTajoJdbcNegative.testConnectTimeout([file java]:226)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit c04d18970e066c1c5879a7ac1d261ef69cae5c3e.
  ATTACHMENT ID: 12764349
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.TestSecureRPC
                  org.apache.hadoop.hbase.mapred.TestRowCounter
                  org.apache.hadoop.hbase.mapreduce.TestTableMapReduceUtil
                  org.apache.hadoop.hbase.procedure.TestProcedureManager
                  org.apache.hadoop.hbase.ipc.TestRpcClientLeaks
                  org.apache.hadoop.hbase.ipc.TestIPC
                  org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepMapper
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction
                  org.apache.hadoop.hbase.ipc.TestAsyncIPC
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit c04d18970e066c1c5879a7ac1d261ef69cae5c3e.
  ATTACHMENT ID: 12764357
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.TestSecureRPC
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction
                  org.apache.hadoop.hbase.procedure.TestProcedureManager
                  org.apache.hadoop.hbase.ipc.TestAsyncIPC
                  org.apache.hadoop.hbase.ipc.TestIPC
                  org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepMapper
                  org.apache.hadoop.hbase.mapred.TestRowCounter
                  org.apache.hadoop.hbase.mapreduce.TestTableMapReduceUtil
                  org.apache.hadoop.hbase.ipc.TestRpcClientLeaks
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 24370547c500df0026a71944d8be88cd5b51b23e.
  ATTACHMENT ID: 12764433
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
FAILURE: Integrated in HBase-1.2-IT #179 (See )
HBASE-14512 Cache UGI groups (eclark: rev 54b64871fff96b35302f4709154eca6aa2699cf7)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-TRUNK #6860 (See )
HBASE-14512 Cache UGI groups (eclark: rev a463984945717bf9cb2881c3d586d5b11d192d65)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 15 **
FAILURE: Integrated in HBase-1.3 #220 (See )
HBASE-14512 Cache UGI groups (eclark: rev cca2ba4d93d8e476bed3e82631a165cb674fb682)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-1.2 #214 (See )
HBASE-14512 Cache UGI groups (eclark: rev 54b64871fff96b35302f4709154eca6aa2699cf7)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 17 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1132 (See )
HBASE-14512 Cache UGI groups (apurtell: rev 8d94773044a68ba601eecd4a08b02c48df5cbaa7)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-0.98-matrix #259 (See )
HBASE-14512 Cache UGI groups (apurtell: rev 8d94773044a68ba601eecd4a08b02c48df5cbaa7)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1135 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev 474c39913738db8a9a7358052e581279b081e471)
* [file java]


** Comment 20 **
FAILURE: Integrated in HBase-0.98-matrix #262 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev 474c39913738db8a9a7358052e581279b081e471)
* [file java]


** Comment 21 **
This change will cause Phoenix's PhoenixIndexRpcSchedulerTest to fail with a NPE. There is something very simple (and correct) we can do as an addendum to fix it. Attaching the addendum. Unless objection will commit the addendum to all branches that have this change shortly, to get the 0.98 RC out the door.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-1.3 #497 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev 8272c84f60217f508165258b3f34e1f5c9d811db)
* [file java]


** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in HBase-Trunk_matrix #638 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev 387eaff316d32b9983ecfff74520f6cb0e9b7404)
* [file java]


** Comment 29 **
FAILURE: Integrated in HBase-0.98-matrix #287 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev d5f8300c082a75ce8edbbe08b66f077e7d663a4a)
* [file java]


** Comment 30 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1161 (See )
Amend HBASE-14512 Cache UGI groups (apurtell: rev d5f8300c082a75ce8edbbe08b66f077e7d663a4a)
* [file java]

"
HBASE-15582,https://issues.apache.org/jira/browse/HBASE-15582,https://github.com/apache/hbase/blob/rel/0.98.19/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifestV1.java,SnapshotManifestV1 too verbose when there are no regions,YES,swap the INFO for DEBUG in SnapshotManifestV1.loadRegionManifests() otherwise the cleaner will spam everyone for no reason,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 46s  |  master passed  |
| +1 |  compile  |  0m 45s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 31s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 44s  |  master passed  |
| +1 |  mvneclipse  |  0m 16s  |  master passed  |
| +1 |  findbugs  |  2m 29s  |  master passed  |
| +1 |  javadoc  |  0m 40s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 44s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 47s  |  the patch passed  |
| +1 |  compile  |  0m 48s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  checkstyle  |  5m 35s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 20s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 37s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 14s  |  the patch passed  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  93m 31s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 15s  |  Patch does not generate ASF License warnings.  |
|  |   |  144m 15s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15582 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 25419d8 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.0   [link] |
This message was automatically generated.


** Comment 3 **
SUCCESS: Integrated in HBase-1.3 #632 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 643116d0b3bb305c4992ee3cd8085a99556ea297)
* [file java]


** Comment 4 **
SUCCESS: Integrated in HBase-1.3-IT #594 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 4bae771b652b87db836432a2fea2df5a0d32a007)
* [file java]


** Comment 5 **
SUCCESS: Integrated in HBase-1.2-IT #477 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 509a749746c85ef67eacabefa72b2b655749ce6c)
* [file java]


** Comment 6 **
SUCCESS: Integrated in HBase-1.1-JDK7 #1694 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev b7dbeabc346fef8c3626d54d69c4e95e5edf412e)
* [file java]


** Comment 7 **
FAILURE: Integrated in HBase-Trunk_matrix #823 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 79868bd394c0fd6743d6582aa4713f91e63a8baf)
* [file java]


** Comment 8 **
SUCCESS: Integrated in HBase-1.2 #596 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 509a749746c85ef67eacabefa72b2b655749ce6c)
* [file java]


** Comment 9 **
SUCCESS: Integrated in HBase-1.4 #68 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 4bae771b652b87db836432a2fea2df5a0d32a007)
* [file java]


** Comment 10 **
SUCCESS: Integrated in HBase-1.0 #1152 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 47baaed0c7185e8cccfcf9df7ea5b17268b94f37)
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-0.98-matrix #323 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 7b0db0d1359b03b03246eb23b6d25f2ffc72d7b2)
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1196 (See )
HBASE-15582 SnapshotManifestV1 too verbose when there are no regions (matteo.bertozzi: rev 7b0db0d1359b03b03246eb23b6d25f2ffc72d7b2)
* [file java]

"
HBASE-15954,https://issues.apache.org/jira/browse/HBASE-15954,https://github.com/apache/hbase/blob/rel/0.98.20/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java,REST server should log requests with TRACE instead of DEBUG,YES,"One of the surprising findings of one of the HBaseCon presentations from [~nitinverma], [~pravinmittal], [~maxluk] was that REST server is logging every request in DEBUG which is enabled by default. This obviously causes out-of-the-box experience to be pretty bad in terms of throughput unless DEBUG logging is turned off. 

We should bring REST server to be on par with the RS level log conventions. Individual requests to be only logged at the TRACE level.  

","** Comment 1 **
v1 patch. Moves everything to TRACE. 

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 9s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 50s  |  master passed  |
| +1 |  compile  |  1m 3s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 49s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  1m 52s  |  master passed  |
| +1 |  mvneclipse  |  0m 30s  |  master passed  |
| +1 |  findbugs  |  2m 32s  |  master passed  |
| +1 |  javadoc  |  0m 52s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 50s  |  master passed with JDK v1.7.0_79  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for patch  |
| -1 |  mvninstall  |  0m 17s  |  hbase-rest in the patch failed.  |
| -1 |  compile  |  0m 21s  |  hbase-rest in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  0m 21s  |  hbase-rest in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  0m 16s  |  hbase-rest in the patch failed with JDK v1.7.0_79.  |
| -1 |  javac  |  0m 16s  |  hbase-rest in the patch failed with JDK v1.7.0_79.  |
| +1 |  checkstyle  |  1m 53s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 30s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  1m 20s  |  Patch causes 18 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 39s  |  Patch causes 18 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  3m 59s  |  Patch causes 18 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  5m 21s  |  Patch causes 18 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  6m 42s  |  Patch causes 18 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  8m 4s  |  Patch causes 18 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  9m 26s  |  Patch causes 18 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  10m 48s  |  Patch causes 18 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  12m 10s  |  Patch causes 18 errors with Hadoop v2.7.1.  |
| -1 |  findbugs  |  0m 13s  |  hbase-rest in the patch failed.  |
| +1 |  javadoc  |  0m 51s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 52s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  86m 59s  |  hbase-server in the patch passed.  |
| -1 |  unit  |  0m 24s  |  hbase-rest in the patch failed.  |
| +1 |  asflicense  |  0m 28s  |  Patch does not generate ASF License warnings.  |
|  |   |  121m 40s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15954 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 0cbce07 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| mvninstall | [link] |
| compile | [link] |
| javac | [link] |
| compile | [link] |
| javac | [link] |
| findbugs | [link] |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server hbase-rest U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  3m 56s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  7m 11s  |  master passed  |
| +1 |  compile  |  0m 59s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 50s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  2m 10s  |  master passed  |
| +1 |  mvneclipse  |  1m 2s  |  master passed  |
| +1 |  findbugs  |  2m 32s  |  master passed  |
| +1 |  javadoc  |  1m 3s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 52s  |  master passed with JDK v1.7.0_79  |
| 0 |  mvndep  |  0m 9s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 1s  |  the patch passed  |
| +1 |  compile  |  1m 1s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 1s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  1m 49s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 30s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 26s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 7s  |  the patch passed  |
| +1 |  javadoc  |  0m 58s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 54s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  89m 36s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  4m 21s  |  hbase-rest in the patch passed.  |
| +1 |  asflicense  |  0m 32s  |  Patch does not generate ASF License warnings.  |
|  |   |  152m 37s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15954 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b557f0b |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server hbase-rest U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 7 **
SUCCESS: Integrated in HBase-1.3-IT #692 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 466eb31648a4783c79d9b044fdd84d0db25c3d12)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 8 **
[Comment excluded]

** Comment 9 **
SUCCESS: Integrated in HBase-1.2-IT #524 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 70593efa2760a4c0f5df353047200e5ed14c1035)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 10 **
FAILURE: Integrated in HBase-1.4 #197 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 4a0a9a20dd5bbfdafe2ec95196b449d2e1a45a13)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-1.3 #725 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 466eb31648a4783c79d9b044fdd84d0db25c3d12)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 12 **
SUCCESS: Integrated in HBase-1.2 #642 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 70593efa2760a4c0f5df353047200e5ed14c1035)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-Trunk_matrix #1001 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 3d7840a173aab97fb72409fa8c0f161fd7ad0e8f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 14 **
SUCCESS: Integrated in HBase-1.1-JDK7 #1726 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 218259c0edcb7e8d8ee5f6a586c114fa2f33bc7f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 15 **
SUCCESS: Integrated in HBase-1.1-JDK8 #1813 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 218259c0edcb7e8d8ee5f6a586c114fa2f33bc7f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-0.98-matrix #352 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 6367f7b706662cafe8f147b232869d90b3f65f64)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 17 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1224 (See )
HBASE-15954 REST server should log requests with TRACE instead of DEBUG (enis: rev 6367f7b706662cafe8f147b232869d90b3f65f64)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]

"
HBASE-13532,https://issues.apache.org/jira/browse/HBASE-13532,https://github.com/apache/hbase/blob/rel/0.98.20/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Make UnknownScannerException logging less scary,YES,"A customer reported seeing client-side UnknownScannerExceptions after an HBase upgrade/restart. Restarting a RS will expire leases on the server side. So, given that there was no actual problem and everything was working as it should, reworking this exception for more appropriate logging.

{code}
org.apache.hadoop.hbase.UnknownScannerException: org.apache.hadoop.hbase.UnknownScannerException: Name: 10092964, already closed? 
at org.apache.hadoop.hbase.regionserver.HRegionServer.scan(HRegionServer.java:3043) 
at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:29497) 
at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2012) 
at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:98) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.consumerLoop(SimpleRpcScheduler.java:160) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.access$000(SimpleRpcScheduler.java:38) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler$1.run(SimpleRpcScheduler.java:110) 
at java.lang.Thread.run(Thread.java:724) 

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) 
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 
at java.lang.reflect.Constructor.newInstance(Constructor.java:526) 
at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106) 
at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:95) 
at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRemoteException(ProtobufUtil.java:284) 
at org.apache.hadoop.hbase.client.ScannerCallable.close(ScannerCallable.java:287) 
at org.apache.hadoop.hbase.client.ScannerCallable.call(ScannerCallable.java:153) 
at org.apache.hadoop.hbase.client.ScannerCallable.call(ScannerCallable.java:57) 
at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:114) 
at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:90) 
at org.apache.hadoop.hbase.client.ClientScanner.close(ClientScanner.java:431) 
at com.squareup.moco.persistence.TransactionTable.scan(TransactionTable.java:207) 
at com.squareup.moco.persistence.TransactionTable$$EnhancerByGuice$$a12c1766.CGLIB$scan$9(<generated>) 
at com.squareup.moco.persistence.TransactionTable$$EnhancerByGuice$$a12c1766$$FastClassByGuice$$606c8773.invoke(<generated>) 
at com.google.inject.internal.cglib.proxy.$MethodProxy.invokeSuper(MethodProxy.java:228) 
at com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation.proceed(InterceptorStackCallback.java:75) 
at com.squareup.common.metrics.TimedHistogramInterceptor.invoke(TimedHistogramInterceptor.java:29) 
at com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation.proceed(InterceptorStackCallback.java:75) 
at com.google.inject.internal.InterceptorStackCallback.intercept(InterceptorStackCallback.java:55) 
at com.squareup.moco.persistence.TransactionTable$$EnhancerByGuice$$a12c1766.scan(<generated>) 
at com.squareup.moco.persistence.TransactionTable$1.run(TransactionTable.java:180) 
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) 
at java.util.concurrent.FutureTask.run(FutureTask.java:166) 
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) 
at java.lang.Thread.run(Thread.java:724) 
Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException(org.apache.hadoop.hbase.UnknownScannerException): org.apache.hadoop.hbase.UnknownScannerException: Name: 10092964, already closed? 
at org.apache.hadoop.hbase.regionserver.HRegionServer.scan(HRegionServer.java:3043) 
at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:29497) 
at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2012) 
at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:98) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.consumerLoop(SimpleRpcScheduler.java:160) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.access$000(SimpleRpcScheduler.java:38) 
at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler$1.run(SimpleRpcScheduler.java:110) 
at java.lang.Thread.run(Thread.java:724)
{code}","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit afd7a8f4742ddbc575b45fc141a75551b55c56f5.
  ATTACHMENT ID: 12727361
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  4m 29s  |  master passed  |
| +1 |  compile  |  1m 11s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 59s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  1m 16s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 53s  |  master passed  |
| +1 |  javadoc  |  0m 49s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 59s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  1m 10s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 10s  |  the patch passed  |
| +1 |  compile  |  0m 58s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 58s  |  the patch passed  |
| +1 |  checkstyle  |  1m 18s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  12m 37s  |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.0.  |
| +1 |  findbugs  |  3m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 51s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 0s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  134m 39s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 19s  |  Patch does not generate ASF License warnings.  |
|  |   |  171m 13s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-13532 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux pomona.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/test_framework/yetus-0.2.1/lib/precommit/personality/hbase.sh |
| git revision | master / a11091c |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 6 **
Just log message change. No testing needed.
Ready for review/commit.


** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
FAILURE: Integrated in HBase-1.2 #624 (See )
HBASE-13532 Make UnknownScannerException less scary by giving more (matteo.bertozzi: rev aaa43631490874a6d7ec8afdcebd8608212c8f8c)
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-Trunk_matrix #918 (See )
HBASE-13532 Make UnknownScannerException less scary by giving more (matteo.bertozzi: rev 60e19f60a9767db6b145cf9884d2295412baffe0)
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-0.98-matrix #353 (See )
HBASE-13532 Make UnknownScannerException less scary by giving more (apurtell: rev fb1995f58644ff55e6ea4f3ebb56bf807cad480b)
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1225 (See )
HBASE-13532 Make UnknownScannerException less scary by giving more (apurtell: rev fb1995f58644ff55e6ea4f3ebb56bf807cad480b)
* [file java]

"
HBASE-16220,https://issues.apache.org/jira/browse/HBASE-16220,https://github.com/apache/hbase/blob/rel/0.98.21/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionFileSystem.java,"Demote log level for ""HRegionFileSystem - No StoreFiles for"" messages to TRACE",YES,"Messages like this can significantly accumulate in regionserver logs when a cluster is carrying empty tables. 

> 2016-07-07 15:59:59,994 DEBUG [region-location-1] regionserver.HRegionFileSystem - No StoreFiles for: hdfs://pod/hbase/data/default/table/region/family 

All this means is no data has been written into a region yet. Table utilization information can be collected by other means for managing that. Because many deployments run with DEBUG as the default log level, especially when trying to track down other production issues, this message is better logged at TRACE level.","** Comment 1 **
Also wrap some debug logging with LOG.isDebugEnabled guards in HRegionFileSystem

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  14m 49s  |  master passed  |
| +1 |  compile  |  0m 53s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 46s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 37s  |  master passed  |
| +1 |  mvneclipse  |  0m 49s  |  master passed  |
| +1 |  findbugs  |  2m 39s  |  master passed  |
| +1 |  javadoc  |  1m 5s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 42s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  0m 55s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 55s  |  the patch passed  |
| +1 |  compile  |  0m 49s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 49s  |  the patch passed  |
| +1 |  checkstyle  |  1m 2s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 29s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  40m 38s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 28s  |  the patch passed  |
| +1 |  javadoc  |  0m 52s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 40s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  93m 24s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 42s  |  Patch does not generate ASF License warnings.  |
|  |   |  168m 4s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
|   | hadoop.hbase.replication.TestReplicationKillMasterRSCompressed |
| Timed out junit tests | org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence |
|   | org.apache.hadoop.hbase.client.TestFromClientSide |
|   | org.apache.hadoop.hbase.client.TestClientOperationInterrupt |
|   | org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas |
|   | org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16220 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux penates.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f292048 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 6 **
FAILURE: Integrated in HBase-Trunk_matrix #1218 (See )
HBASE-16220 Demote log level for ""HRegionFileSystem - No StoreFiles for"" (apurtell: rev 911706a8732262b4ce0e060900b76f84f5fdf11b)
* [file java]


** Comment 7 **
SUCCESS: Integrated in HBase-1.4 #285 (See )
HBASE-16220 Demote log level for ""HRegionFileSystem - No StoreFiles for"" (apurtell: rev 7c4c51f2c712a290fa3b0bd8cade193026069567)
* [file java]


** Comment 8 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1241 (See )
HBASE-16220 Demote log level for ""HRegionFileSystem - No StoreFiles for"" (apurtell: rev 364fa3f7f5f90dd7ac87b1c48234bfa4fd4cd5b9)
* [file java]

"
HBASE-16321,https://issues.apache.org/jira/browse/HBASE-16321,https://github.com/apache/hbase/blob/rel/0.98.21/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java,Ensure findbugs jsr305 jar isn't present,NO,"we should be using

{code}
<dependencies>
    <dependency>
      <groupId>com.github.stephenc.findbugs</groupId>
      <artifactId>findbugs-annotations</artifactId>
      <version>${findbugs-annotations}</version>
      <scope>compile</scope>
    </dependency>
{code}

 to ensure we don't have a prohibited dependency, but it looks like we're still bringing in

{code}
<dependency>
         <groupId>com.google.code.findbugs</groupId>
         <artifactId>jsr305</artifactId>
         <version>${jsr305.version}</version>
      </dependency>
{code}

remove the findbugs version (even though the maven central pom claims the license is ALv2, that doesn't line up with the referenced project sites).","** Comment 1 **
[Comment excluded]

** Comment 2 **
I'll let the test run, but it occurs to me that we should add a  check to fail faster when this comes in transitively again.

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 26s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  5m 15s  |  master passed  |
| +1 |  compile  |  8m 52s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  7m 43s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvneclipse  |  4m 50s  |  master passed  |
| +1 |  javadoc  |  6m 18s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  5m 3s  |  master passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| -1 |  mvninstall  |  0m 20s  |  hbase-client in the patch failed.  |
| -1 |  mvninstall  |  0m 38s  |  hbase-server in the patch failed.  |
| -1 |  mvninstall  |  0m 58s  |  hbase-spark in the patch failed.  |
| -1 |  mvninstall  |  1m 12s  |  root in the patch failed.  |
| -1 |  compile  |  0m 30s  |  hbase-client in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  0m 47s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  0m 29s  |  hbase-rsgroup in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  0m 32s  |  hbase-spark in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  1m 3s  |  root in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  0m 30s  |  hbase-client in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  0m 47s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  0m 29s  |  hbase-rsgroup in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  0m 32s  |  hbase-spark in the patch failed with JDK v1.8.0.  |
| -1 |  javac  |  1m 3s  |  root in the patch failed with JDK v1.8.0.  |
| -1 |  compile  |  0m 19s  |  hbase-client in the patch failed with JDK v1.7.0_80.  |
| -1 |  compile  |  0m 33s  |  hbase-server in the patch failed with JDK v1.7.0_80.  |
| -1 |  compile  |  0m 16s  |  hbase-rsgroup in the patch failed with JDK v1.7.0_80.  |
| -1 |  compile  |  0m 27s  |  hbase-spark in the patch failed with JDK v1.7.0_80.  |
| -1 |  compile  |  0m 36s  |  root in the patch failed with JDK v1.7.0_80.  |
| -1 |  javac  |  0m 19s  |  hbase-client in the patch failed with JDK v1.7.0_80.  |
| -1 |  javac  |  0m 33s  |  hbase-server in the patch failed with JDK v1.7.0_80.  |
| -1 |  javac  |  0m 16s  |  hbase-rsgroup in the patch failed with JDK v1.7.0_80.  |
| -1 |  javac  |  0m 27s  |  hbase-spark in the patch failed with JDK v1.7.0_80.  |
| -1 |  javac  |  0m 36s  |  root in the patch failed with JDK v1.7.0_80.  |
| +1 |  mvneclipse  |  4m 0s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  xml  |  0m 3s  |  The patch has no ill-formed XML file.  |
| -1 |  hadoopcheck  |  0m 49s  |  Patch causes 20 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  1m 32s  |  Patch causes 20 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  2m 16s  |  Patch causes 20 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  3m 0s  |  Patch causes 20 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  3m 42s  |  Patch causes 20 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  4m 25s  |  Patch causes 20 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  5m 12s  |  Patch causes 20 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  6m 8s  |  Patch causes 20 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  7m 2s  |  Patch causes 20 errors with Hadoop v2.7.1.  |
| -1 |  javadoc  |  12m 44s  |  hbase-client-jdk1.8.0 with JDK v1.8.0 generated 20 new + 13 unchanged - 0 fixed = 33 total (was 13)  |
| -1 |  javadoc  |  12m 44s  |  hbase-server-jdk1.8.0 with JDK v1.8.0 generated 7 new + 1 unchanged - 0 fixed = 8 total (was 1)  |
| -1 |  javadoc  |  12m 44s  |  hbase-rsgroup-jdk1.8.0 with JDK v1.8.0 generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  |
| -1 |  javadoc  |  12m 44s  |  hbase-spark-jdk1.8.0 with JDK v1.8.0 generated 25 new + 18 unchanged - 0 fixed = 43 total (was 18)  |
| -1 |  javadoc  |  12m 45s  |  root-jdk1.8.0 with JDK v1.8.0 generated 29 new + 19 unchanged - 0 fixed = 48 total (was 19)  |
| +1 |  javadoc  |  5m 42s  |  the patch passed with JDK v1.8.0  |
| -1 |  javadoc  |  17m 34s  |  hbase-client-jdk1.7.0_80 with JDK v1.7.0_80 generated 20 new + 13 unchanged - 0 fixed = 33 total (was 13)  |
| -1 |  javadoc  |  17m 34s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 7 new + 1 unchanged - 0 fixed = 8 total (was 1)  |
| -1 |  javadoc  |  17m 34s  |  hbase-rsgroup-jdk1.7.0_80 with JDK v1.7.0_80 generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  |
| -1 |  javadoc  |  17m 34s  |  hbase-spark-jdk1.7.0_80 with JDK v1.7.0_80 generated 25 new + 18 unchanged - 0 fixed = 43 total (was 18)  |
| -1 |  javadoc  |  17m 34s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 29 new + 24 unchanged - 0 fixed = 53 total (was 24)  |
| +1 |  javadoc  |  4m 49s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  0m 21s  |  hbase-client in the patch failed.  |
| -1 |  unit  |  0m 33s  |  hbase-server in the patch failed.  |
| -1 |  unit  |  0m 18s  |  hbase-rsgroup in the patch failed.  |
| -1 |  unit  |  0m 27s  |  hbase-spark in the patch failed.  |
| -1 |  unit  |  1m 7s  |  root in the patch failed.  |
| +1 |  asflicense  |  0m 51s  |  Patch does not generate ASF License warnings.  |
|  |   |  73m 36s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16321 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  |
| uname | Linux asf910.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b35cf8f |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| mvninstall | [link] |
| mvninstall | [link] |
| mvninstall | [link] |
| mvninstall | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| compile | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| javac | [link] |
| javadoc | hbase-client-jdk1.8.0: [link] |
| javadoc | hbase-server-jdk1.8.0: [link] |
| javadoc | hbase-rsgroup-jdk1.8.0: [link] |
| javadoc | hbase-spark-jdk1.8.0: [link] |
| javadoc | root-jdk1.8.0: [link] |
| javadoc | hbase-client-jdk1.7.0_80: [link] |
| javadoc | hbase-server-jdk1.7.0_80: [link] |
| javadoc | hbase-rsgroup-jdk1.7.0_80: [link] |
| javadoc | hbase-spark-jdk1.7.0_80: [link] |
| javadoc | root-jdk1.7.0_80: [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-rsgroup hbase-spark . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 37s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  4m 49s  |  master passed  |
| +1 |  compile  |  7m 22s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  6m 53s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  2m 31s  |  master passed  |
| +1 |  mvneclipse  |  3m 38s  |  master passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped branch modules with no Java source: .  |
| -1 |  findbugs  |  0m 42s  |  hbase-rsgroup in master has 6 extant Findbugs warnings.  |
| +1 |  javadoc  |  5m 5s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  4m 30s  |  master passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for patch  |
| -1 |  mvninstall  |  0m 20s  |  hbase-rsgroup in the patch failed.  |
| -1 |  mvninstall  |  0m 30s  |  hbase-spark in the patch failed.  |
| +1 |  compile  |  6m 45s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  6m 45s  |  the patch passed  |
| +1 |  compile  |  6m 44s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  6m 44s  |  the patch passed  |
| +1 |  checkstyle  |  2m 34s  |  the patch passed  |
| +1 |  mvneclipse  |  3m 58s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  xml  |  0m 2s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  35m 9s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patch modules with no Java source: .  |
| +1 |  findbugs  |  6m 4s  |  the patch passed  |
| +1 |  javadoc  |  4m 27s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  4m 7s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 48s  |  hbase-common in the patch passed.  |
| +1 |  unit  |  0m 58s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  113m 35s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 33s  |  hbase-rsgroup in the patch passed.  |
| +1 |  unit  |  1m 22s  |  hbase-spark in the patch passed.  |
| -1 |  unit  |  119m 32s  |  root in the patch failed.  |
| +1 |  asflicense  |  1m 53s  |  Patch does not generate ASF License warnings.  |
|  |   |  359m 22s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
|   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
| Timed out junit tests | org.apache.hadoop.hbase.mapreduce.TestRowCounter |
|   | org.apache.hadoop.hbase.mapreduce.TestCopyTable |
|   | org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |
|   | org.apache.hadoop.hbase.mapreduce.TestHashTable |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
|   | org.apache.hadoop.hbase.mapreduce.TestMultiTableInputFormat |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16321 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  compile  findbugs  hadoopcheck  hbaseanti  checkstyle  |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / bcf2738 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| mvninstall | [link] |
| mvninstall | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| modules | C: hbase-common hbase-client hbase-server hbase-rsgroup hbase-spark . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
FAILURE: Integrated in HBase-Trunk_matrix #1360 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev 60b79e2daa41927f5a2e00b78cca855f05048f0a)
* [file java]
* hbase-client/pom.xml
* [file java]
* [file java]
* pom.xml
* [file java]
* [file java]
* hbase-rsgroup/pom.xml
* [file java]
* [file java]
* hbase-server/pom.xml
* hbase-spark/pom.xml
* [file java]
* [file java]
* src/main/asciidoc/_chapters/developer.adoc
* [file java]
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-1.4 #335 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev a5f98c3f9ede67f3a5fb76bd00450f17ca233207)
* [file java]
* pom.xml
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]
* [file java]
* hbase-client/pom.xml


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-1.3 #810 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev bf12fe6788b7f6e2d8568177ffaf904662ac6d0e)
* [file java]
* pom.xml
* hbase-server/pom.xml
* [file java]
* [file java]
* hbase-client/pom.xml
* [file java]
* [file java]


** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-1.1-JDK7 #1761 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev ca5e1a57712166928c5dd6670580fd82f7918f4d)
* hbase-client/pom.xml
* pom.xml
* [file java]
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]

** Comment 22 **
FAILURE: Integrated in HBase-0.98-matrix #383 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev bbc427028cd2ee3382cd489fc5b25da994902db1)
* [file java]
* pom.xml
* hbase-client/pom.xml
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]


** Comment 23 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1255 (See )
HBASE-16321 ensure no findbugs-jsr305 (busbey: rev bbc427028cd2ee3382cd489fc5b25da994902db1)
* [file java]
* pom.xml
* [file java]
* [file java]
* [file java]
* hbase-server/pom.xml
* hbase-client/pom.xml


** Comment 24 **
Any objections to this amendment?
Otherwise this break 0.98 build against hadoop 2.7.2
{code}
> mvn -DskipTests -Dhadoop-two.version=2.7.2 install package assembly:single
...
 Rule 0: org.apache.maven.plugins.enforcer.BannedDependencies failed with message:
We don't allow the JSR305 jar from the Findbugs project, see HBASE-16321.
Found Banned Dependency: com.google.code.findbugs:jsr305:jar:3.0.0
Use 'mvn dependency:tree' to locate the source of the banned dependencies.
{code}


** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
FAILURE: Integrated in HBase-0.98-matrix #384 (See )
HBASE-16321 ammendment; allow compilation with Hadoop 2.7.2. (larsh: rev e23fa866d110602331be73f23514c4fba97ef141)
* pom.xml


** Comment 28 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1256 (See )
HBASE-16321 ammendment; allow compilation with Hadoop 2.7.2. (larsh: rev e23fa866d110602331be73f23514c4fba97ef141)
* pom.xml


** Comment 29 **
I need to partially revert and amend this change. 
With 0.98, where we require Java 6 to build, this change causes the build to inexplicably fail in compilation of hbase-common. Although the failure is silent, it is because the class file versions of the replacement jsr305 annotations are too recent.
What I am going to do to fix this in 0.98 is keep the enforcement ban and exclusions in place, but remove all instances of findbugs annotations. And not specify the replacement jsr305 dependency either.

** Comment 30 **
[Comment excluded]

** Comment 31 **
It's the {{NonNull}}, {{CheckForNull}}, and {{Nullable}} annotations.
If I remove it from hbase-common when we get to hbase-client we can see the problem. I was wrong about class file version, but still close:
 edu/umd/cs/findbugs/annotations/Nullable.class(edu/umd/cs/findbugs/annotations:Nullable.class): warning: Cannot find annotation method 'when()' in type 'javax.annotation.Nonnull': class file for javax.annotation.Nonnull not found
 An exception has occurred in the compiler (1.6.0_45). Please file a bug at the Java Developer Connection ([link]  after checking the Bug Parade for duplicates. Include your program and the following diagnostic in your report.  Thank you.


** Comment 32 **
[Comment excluded]

** Comment 33 **
FAILURE: Integrated in HBase-0.98-matrix #385 (See )
Amend HBASE-16321; javac 6 does not like the replacement NonNull and (apurtell: rev c706e30d02343e0ba36bdea1ac6f746da0ee5e54)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 34 **
[Comment excluded]

** Comment 35 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1257 (See )
Amend HBASE-16321; javac 6 does not like the replacement NonNull and (apurtell: rev c706e30d02343e0ba36bdea1ac6f746da0ee5e54)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]

"
HBASE-16527,https://issues.apache.org/jira/browse/HBASE-16527,https://github.com/apache/hbase/blob/rel/0.98.22/hbase-server/src/main/java/org/apache/hadoop/hbase/master/CatalogJanitor.java,IOExceptions from DFS client still can cause CatalogJanitor to delete referenced files,NO,"that was fixed partially in HBASE-13331, but issue still exists , now a little bit deeper in the code.","** Comment 1 **
CatalogJanitor:
{code}
  Pair<Boolean, Boolean> checkDaughterInFs(final HRegionInfo parent, final HRegionInfo daughter)
SKIP-SKIP
    boolean references = false;
    HTableDescriptor parentDescriptor = getTableDescriptor(parent.getTable());
    for (HColumnDescriptor family: parentDescriptor.getFamilies()) {
      if ((references = regionFs.hasReferences(family.getNameAsString()))) {
        break;
      }
    }
    return new Pair<Boolean, Boolean>(Boolean.TRUE, Boolean.valueOf(references));
{code}
HRegionFileSystem:
{code}
  /**
   * Returns true if the specified family has reference files
   * @param familyName Column Family Name
   * @return true if family contains reference files
   * @throws IOException
   */
  public boolean hasReferences(final String familyName) throws IOException {
    FileStatus files = FSUtils.listStatus(fs, getStoreDir(familyName),
        new FSUtils.ReferenceFileFilter(fs));
    return files != null && files.length > 0;
  }
{code}
 FSUtils.ReferenceFileFilter:
{code}
    @Override
    protected boolean accept(Path p, @CheckForNull Boolean isDir) {
      if (!StoreFileInfo.isReference(p)) {
        return false;
      }
      try {
        // only files can be references.
        return isFile(fs, isDir, p);
      } catch (IOException ioe) {
        // Maybe the file was moved or the fs was disconnected.
        LOG.warn(""Skipping file "" + p +"" due to IOException"", ioe);
        return false;
      }
    }
{code}
isFile can throw IOException and we return false (not reference) - which is bad.


** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
v2. adds exception handling in CatalogJanitor, changes log level of from WARN to ERROR on IOException.

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 14s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 15s  |  master passed  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 35s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 50s  |  master passed  |
| +1 |  mvneclipse  |  0m 18s  |  master passed  |
| +1 |  findbugs  |  2m 2s  |  master passed  |
| +1 |  javadoc  |  0m 27s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.7.0_111  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  compile  |  0m 37s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 37s  |  the patch passed  |
| +1 |  checkstyle  |  0m 50s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 18s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 37s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 15s  |  the patch passed  |
| +1 |  findbugs  |  2m 12s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_111  |
| -1 |  unit  |  88m 34s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 21s  |  The patch does not generate ASF License warnings.  |
|  |   |  133m 26s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster |
|   | hadoop.hbase.security.token.TestDelegationTokenWithEncryption |
| Timed out junit tests | org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics |
|   | org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders |
|   | org.apache.hadoop.hbase.mob.compactions.TestMobCompactor |
|   | org.apache.hadoop.hbase.mob.TestExpiredMobFileCleaner |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.tool.TestCanaryTool |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-08-31 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16527 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 264692fc8f1a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 605af95 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 14 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 44s  |  master passed  |
| +1 |  compile  |  0m 41s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 41s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 2s  |  master passed  |
| +1 |  mvneclipse  |  0m 19s  |  master passed  |
| +1 |  findbugs  |  2m 9s  |  master passed  |
| +1 |  javadoc  |  0m 31s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 36s  |  master passed with JDK v1.7.0_111  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  compile  |  0m 37s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 37s  |  the patch passed  |
| +1 |  checkstyle  |  0m 51s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 18s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| +1 |  hadoopcheck  |  30m 0s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 17s  |  the patch passed  |
| +1 |  findbugs  |  2m 30s  |  the patch passed  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 37s  |  the patch passed with JDK v1.7.0_111  |
| -1 |  unit  |  98m 17s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 17s  |  The patch does not generate ASF License warnings.  |
|  |   |  146m 17s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-08-31 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16527 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 12e4cd374aaf 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 605af95 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| whitespace | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 15 **
Verified that 
org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics
times out w/o patch, hence, failure is not related to the patch. Ready to go.


** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
FAILURE: Integrated in Jenkins build HBase-1.4 #387 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev a034a2bdcb13c005512665e00655a8049efde675)


** Comment 22 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1523 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev a1cd601ad7199ea91e9f9b5e462c24d6681bc870)


** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
FAILURE: Integrated in Jenkins build HBase-1.2-JDK8 #17 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev 81655cab9600542edbc76ff21bb9f65045b7e648)


** Comment 27 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #5 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev b41565d21ed1f2f290990ea0a86379910c052425)


** Comment 28 **
[Comment excluded]

** Comment 29 **
FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1269 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev c8da39429c8ff79971af9117691add17639f2bbb)


** Comment 30 **
FAILURE: Integrated in Jenkins build HBase-0.98-matrix #396 (See )
HBASE-16527 IOExceptions from DFS client still can cause CatalogJanitor (tedyu: rev c8da39429c8ff79971af9117691add17639f2bbb)


** Comment 31 **
FAILURE: Integrated in Jenkins build HBase-0.98-matrix #397 (See )
Amend HBASE-16527 IOExceptions from DFS client still can cause (apurtell: rev d525b0efb06239e6be28f45504913768753f911a)


** Comment 32 **
FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1270 (See )
Amend HBASE-16527 IOExceptions from DFS client still can cause (apurtell: rev d525b0efb06239e6be28f45504913768753f911a)

"
HBASE-16589,https://issues.apache.org/jira/browse/HBASE-16589,https://github.com/apache/hbase/blob/rel/0.98.23/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java,Adjust log level for FATAL messages from HBaseReplicationEndpoint that are not fatal,YES,HBaseReplicationEndpoint logs at FATAL level some messages that are not actually fatal. Drop to ERROR. ,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 30s  |  master passed  |
| +1 |  compile  |  0m 34s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 35s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 50s  |  master passed  |
| +1 |  mvneclipse  |  0m 18s  |  master passed  |
| +1 |  findbugs  |  1m 59s  |  master passed  |
| +1 |  javadoc  |  0m 26s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.7.0_111  |
| +1 |  mvninstall  |  0m 47s  |  the patch passed  |
| +1 |  compile  |  0m 30s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 30s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  checkstyle  |  0m 50s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 17s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 4s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 16s  |  the patch passed  |
| +1 |  findbugs  |  2m 12s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 36s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  94m 52s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 21s  |  The patch does not generate ASF License warnings.  |
|  |   |  139m 15s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-08 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16589 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux e93d82d64c83 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 1574c6e |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1867 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev ff914375f6954dc78760edb049c9cb9f86e7aa83)


** Comment 6 **
SUCCESS: Integrated in Jenkins build HBase-1.1-JDK7 #1782 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev ff914375f6954dc78760edb049c9cb9f86e7aa83)


** Comment 7 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1566 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 46c756a4a7f2bbce7f9b276e413636eda3d86e30)


** Comment 8 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK8 #22 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 4611b15f177bf1ff5cfe0535e34e481a2da36b06)


** Comment 9 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #12 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 493c31c297bbe2965ec295180cf627f9c7e01cec)


** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK7 #26 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 4611b15f177bf1ff5cfe0535e34e481a2da36b06)


** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #12 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 493c31c297bbe2965ec295180cf627f9c7e01cec)


** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-1.4 #402 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 52963b34286a8cfd5f7e5d0c9505f62b32f29814)


** Comment 13 **
FAILURE: Integrated in Jenkins build HBase-0.98-matrix #399 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 9317955b09900bd8cadf776673e88d672bc3e225)


** Comment 14 **
FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1272 (See )
HBASE-16589 Adjust log level for FATAL messages from (apurtell: rev 9317955b09900bd8cadf776673e88d672bc3e225)

"
HBASE-11822,https://issues.apache.org/jira/browse/HBASE-11822,https://github.com/apache/hbase/blob/0.99.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCaller.java,Convert EnvironmentEdge#getCurrentTimeMillis to getCurrentTime,NO,"Currently, environmentedge returns time in 'millis'. The parent issue is about being able to return something else for time.  In fact we already have an incrementing ee which is returning 'time' but not in 'millis' and ditto for our manual ee... so the method name is a little limiting even in our current code.

This is first step on way to changing our ts (left-shifting it or whatever we decide).

EnvironmentEdge is private audience.

Trying to do this for 1.0.","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12664322
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 78 new or modified tests.
    -1 javac.  The patch appears to cause mvn compile goal to fail.
    Compilation errors resume:
     COMPILATION ERROR : 
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateIssuerName is internal proprietary API and may be removed in a future release
 [file java]: CertificateSerialNumber is internal proprietary API and may be removed in a future release
 [file java]: CertificateSubjectName is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: CertificateX509Key is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: error: <anonymous org.apache.hadoop.hbase.regionserver.TestStoreScanner$1> is not abstract and does not override abstract method currentTime() in EnvironmentEdge
 [file java]: error: cannot find symbol
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateSerialNumber is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateSubjectName is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateIssuerName is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateX509Key is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: error: cannot find symbol
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
 [file java]: error: method does not override or implement a method from a supertype
 [file java]: error: cannot find symbol
   symbol:   method currentTimeMillis()
   symbol:   method currentTimeMillis()
 [file java]: error: method does not override or implement a method from a supertype
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-server: Compilation failure: Compilation failure:
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateIssuerName is internal proprietary API and may be removed in a future release
 [file java]: CertificateSerialNumber is internal proprietary API and may be removed in a future release
 [file java]: CertificateSubjectName is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: CertificateX509Key is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: error: <anonymous org.apache.hadoop.hbase.regionserver.TestStoreScanner$1> is not abstract and does not override abstract method currentTime() in EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: CertificateValidity is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X500Name is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateSerialNumber is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateSubjectName is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateIssuerName is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateX509Key is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: CertificateVersion is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertInfo is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: AlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: CertificateAlgorithmId is internal proprietary API and may be removed in a future release
 [file java]: X509CertImpl is internal proprietary API and may be removed in a future release
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type IncrementingEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type DefaultEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable edge of type DefaultEnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable timeMachine of type ManualEnvironmentEdge
 [file java]: error: TestDefaultMemStore.EnvironmentEdgeForMemstoreTest is not abstract and does not override abstract method currentTime() in EnvironmentEdge
 [file java]: error: method does not override or implement a method from a supertype
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: cannot find symbol
 symbol:   method currentTimeMillis()
 location: variable ee of type EnvironmentEdge
 [file java]: error: <anonymous org.apache.hadoop.hbase.master.cleaner.TestHFileCleaner$1> is not abstract and does not override abstract method currentTime() in EnvironmentEdge
 [file java]: error: method does not override or implement a method from a supertype
 -> 
 To see the full stack trace of the errors, re-run Maven with the -e switch.
 Re-run Maven using the -X switch to enable full debug logging.
 For more information about the errors and possible solutions, please read the following articles:
  [link]
 After correcting the problems, you can resume the build with the command
   mvn <goals> -rf :hbase-server
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12664419
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      metricsAssignmentManager.updateBulkAssignTime(EnvironmentEdgeManager.currentTime() - startTime);
+      metricsAssignmentManager.updateAssignmentTime(EnvironmentEdgeManager.currentTime() - startTime);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12664441
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      metricsAssignmentManager.updateBulkAssignTime(EnvironmentEdgeManager.currentTime() - startTime);
+      metricsAssignmentManager.updateAssignmentTime(EnvironmentEdgeManager.currentTime() - startTime);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint
                  org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
                  org.apache.hadoop.hbase.regionserver.TestHRegion
                  org.apache.hadoop.hbase.TestRegionRebalancing
                  org.apache.hadoop.hbase.regionserver.TestHRegionBusyWait
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
The failures do not look related.  They look like a bunch of classic flakies.
Any chance of a review here?

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12664740
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      metricsAssignmentManager.updateBulkAssignTime(EnvironmentEdgeManager.currentTime() - startTime);
+      metricsAssignmentManager.updateAssignmentTime(EnvironmentEdgeManager.currentTime() - startTime);
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
This patch per-se is fine for branch-1. I have to see the patch for the parent patch though. 

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-TRUNK #5449 (See )
HBASE-11822 Convert EnvironmentEdge#getCurrentTimeMillis to getCurrentTime (stack: rev 3bfbd062915d680f653af5b3747dbcfefbd3df12)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
HBASE-11822 Convert EnvironmentEdge#getCurrentTimeMillis to getCurrentTime (stack: rev 651b6bab495c4822e676b2da2109112940e49250)
* [file java]
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]
"
HBASE-10931,https://issues.apache.org/jira/browse/HBASE-10931,https://github.com/apache/hbase/blob/0.99.0/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperNodeTracker.java,Enhance logs,NO,We've got some logs that are expecting toString that are not there.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12639376
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
FAILURE: Integrated in HBase-TRUNK #5074 (See )
HBASE-10931 Enhance logs (nkeywal: rev 1586019)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 6 **
[Comment excluded]
"
HBASE-9516,https://issues.apache.org/jira/browse/HBASE-9516,https://github.com/apache/hbase/blob/0.99.0/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java,Mark hbase-common classes missing @InterfaceAudience annotation as Private,NO,"Files from hbase-common missing InterfaceAudience
jon@swoop:~/proj/hbase-trunk/hbase-common/src/main/java$ grep -R -L InterfaceAudience .
./org/apache/hadoop/hbase/CellScannable.java
./org/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext.java
./org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext.java
./org/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext.java
./org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext.java
./org/apache/hadoop/hbase/types/package-info.java
./org/apache/hadoop/hbase/codec/KeyValueCodec.java
./org/apache/hadoop/hbase/codec/CellCodec.java
./org/apache/hadoop/hbase/codec/CodecException.java
./org/apache/hadoop/hbase/codec/BaseEncoder.java
./org/apache/hadoop/hbase/codec/Codec.java
./org/apache/hadoop/hbase/codec/BaseDecoder.java
./org/apache/hadoop/hbase/util/test/RedundantKVGenerator.java
./org/apache/hadoop/hbase/util/test/LoadTestKVGenerator.java
./org/apache/hadoop/hbase/util/test/LoadTestDataGenerator.java
./org/apache/hadoop/hbase/util/CollectionUtils.java
./org/apache/hadoop/hbase/util/DrainBarrier.java
./org/apache/hadoop/hbase/util/ReflectionUtils.java
./org/apache/hadoop/hbase/util/Triple.java
./org/apache/hadoop/hbase/util/IterableUtils.java
./org/apache/hadoop/hbase/util/ArrayUtils.java
./org/apache/hadoop/hbase/util/KeyLocker.java
","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 9 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]
"
HBASE-11331,https://issues.apache.org/jira/browse/HBASE-11331,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java,[blockcache] lazy block decompression,NO,"Maintaining data in its compressed form in the block cache will greatly increase our effective blockcache size and should show a meaning improvement in cache hit rates in well designed applications. The idea here is to lazily decompress/decrypt blocks when they're consumed, rather than as soon as they're pulled off of disk.

This is related to but less invasive than HBASE-8894.","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12649880
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk
                  org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite
                  org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting([file java]:3499)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
Seeing this... trying to figure it in client:
{code}2014-07-26 00:38:46,924 DEBUG  ipc.RpcClient: IPC Client (1094864774) connection to c2021.halxg.cloudera.com/10.20.84.27:16020 from stack: got response header call_id: 1102 exception { exception_class_name: ""java.io.IOException"" stack_trace: ""java.io.IOException\n\tat org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:2047)\n\tat org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:98)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop([file java]:114)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor$1.run([file java]:94)\n\tat java.lang.Thread.run([file java]:744)\nCaused by: java.lang.ArrayIndexOutOfBoundsException\n\tat org.apache.hadoop.hbase.io.hfile.HFileBlock.unpack([file java]:498)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2.getCachedBlock([file java]:270)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2.readBlock([file java]:424)\n\tat org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader.loadDataBlockWithScanInfo([file java]:260)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo([file java]:644)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.reseekTo([file java]:624)\n\tat org.apache.hadoop.hbase.regionserver.StoreFileScanner.reseekAtOrAfter([file java]:251)\n\tat org.apache.hadoop.hbase.regionserver.StoreFileScanner.reseek([file java]:176)\n\tat org.apache.hadoop.hbase.regionserver.NonLazyKeyValueScanner.doRealSeek([file java]:55)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.generalizedSeek([file java]:312)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.requestSeek([file java]:268)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.reseek([file java]:721)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.seekAsDirection([file java]:709)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.next([file java]:559)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.next([file java]:139)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.populateResult([file java]:4002)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextInternal([file java]:4082)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextRaw([file java]:3951)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next([file java]:3933)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next([file java]:3920)\n\tat org.apache.hadoop.hbase.regionserver.HRegion.get([file java]:4865)\n\tat org.apache.hadoop.hbase.regionserver.HRegion.get([file java]:4838)\n\tat org.apache.hadoop.hbase.regionserver.RSRpcServices.get([file java]:1619)\n\tat org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod([file java]:29990)\n\tat org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:2013)\n\t... 4 more\n"" do_not_retry: false }, totalSize: 2735 bytes{code}

** Comment 21 **
Thanks . v02 addresses the exception you see here. It also:
 - makes the feature configurable. enable with {{hbase.block.data.cachecompressed=true}}
 - only retains data blocks in their ""packed"" format in memory. Everything else *should* be cached decompressed.
One observation: when running the RS with a compression-enabled table, I see a lot of log messages says ""got brand-new decompressor"". I don't see any messages saying ""got recycled compressor"" (i've enabled debug logging for org.apache.hadoop.io.compress). I think we're not returning the objects to the pool. Running this small PE workload results in ~1600 said log lines. Run the same workload with hbase.block.data.cachecompressed=true, I see ~10k, so this will have a significant impact on the performance of this feature. Will investigate further.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12659287
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 36 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestIOFencing
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas
                  org.apache.hadoop.hbase.client.TestReplicasClient
                  org.apache.hadoop.hbase.master.TestRestartCluster
                  org.apache.hadoop.hbase.TestRegionRebalancing
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
Parking an updated patch. Rebased onto master, adds a bit of instrumentation to LruBlockCache when TRACE debugging is enabled, and adds an e2e test comparing directly the flag enabled and disabled. The only testing I've done with this one is {{mvn test -Dtest=org.apache.hadoop.hbase.io.hfile.*}}
I've not been able to reproduce the jagged blockcache size spikes in recent runs. I'll take this patch through the ringer with my rig tomorrow, and report back with my findings.

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12663549
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 44 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 7 warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +            LOG.trace(""freed "" + StringUtils.byteDesc(bytesFreed) + "" from single and multi buckets"");
+            LOG.trace(""freed "" + StringUtils.byteDesc(bytesFreed) + "" total from all three buckets "");
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testMROnTable([file java]:113)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 46 **
[Comment excluded]

** Comment 47 **
re: hbase-hbase-master-hor17n36.gq1.ygridcore.net.log
bq. I've tripped my assertions around blockcache count metrics.
False alarm. There is a case when the reported metric is greater than 5% different from the actual map size, but it happened while executing the shutdown hooks, not while the job was running. Attaching the log file in case anyone is curious.

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12667477
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 44 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +            assertEquals((int) encodedSizes.get(blockId), blockFromHFile.getUncompressedSizeWithoutHeader());
+              LOG.info(""packedHeapsize="" + packedHeapsize + "", unpackedHeadsize="" + blockUnpacked.heapSize());
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 65 **
[Comment excluded]

** Comment 66 **
[Comment excluded]

** Comment 67 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12667525
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 44 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting
     -1 core zombie tests.  There are 6 zombie test(s): 	at org.apache.hadoop.hbase.util.TestBytes.testToStringBytesBinaryReversible([file java]:295)
	at org.apache.hadoop.hbase.backup.TestHFileArchiving.testCleaningRace([file java]:372)
	at org.apache.hadoop.hbase.ipc.TestDelayedRpc.testTooManyDelayedRpcs([file java]:202)
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction([file java]:224)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
Is this right? Assuming HeapByteBuffer here.  
{code}
         >    @Override
                                                              >    public void serialize(ByteBuffer destination) {
                                                              > -    ByteBuffer dupBuf = this.buf.duplicate();
                                                              > -    dupBuf.rewind();
                                                              > -    destination.put(dupBuf);
                                                              > +    // assumes HeapByteBuffer
                                                              > +    destination.put(this.buf.array(), this.buf.arrayOffset()
                                                              > +      getSerializedLength() - EXTRA_SERIALIZATION_SPACE);
                                                              >      serializeExtraInfo(destination);
                                                              >    }
{code}
On naming conf, I'll go with whatever you think is better. Agreed with Stack. Fat release note would be good. 

** Comment 71 **
[Comment excluded]

** Comment 72 **
[Comment excluded]

** Comment 73 **
[Comment excluded]

** Comment 74 **
[Comment excluded]

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
[Comment excluded]

** Comment 78 **
FAILURE: Integrated in HBase-0.98 #510 (See )
HBASE-11331  lazy block decompression (ndimiduk: rev b8851309e0ff1e04a3a0abd5fbad6d1868a151bc)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 79 **
[Comment excluded]

** Comment 80 **
[Comment excluded]

** Comment 81 **
[Comment excluded]
"
HBASE-11744,https://issues.apache.org/jira/browse/HBASE-11744,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java,RpcServer code should not use a collection from netty internal,NO,A side effect of the autocompletion...,"** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12661724
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
FAILURE: Integrated in HBase-TRUNK #5414 (See )
HBASE-11744 RpcServer code should not use a collection from netty internal (nkeywal: rev c308c37b23a463366878e027e7f5f10c800097ff)
* [file java]


** Comment 6 **
FAILURE: Integrated in HBase-1.0 #115 (See )
HBASE-11744 RpcServer code should not use a collection from netty internal (nkeywal: rev bafbc1264ab5977509d6c2b979a5419f1fa420ca)
* [file java]


** Comment 7 **
[Comment excluded]
"
HBASE-9164,https://issues.apache.org/jira/browse/HBASE-9164,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/PutCombiner.java,Convert List<? extends Cell> anti pattern to List<Cell> pattern.,NO,"As described in HBASE-9142, using List<? extends Cell> is an anti pattern that adds unnecessary typing and casting clutter to the code base.  It would be best to remove this before we release 0.95.2 or 0.96.

","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
I ended up refactoring the MetaComparator, KVComparator.  Have a patch that builds but am debugging test failures.  

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 19 new or modified tests.
    +1 hadoop1.0.  The patch compiles against the hadoop 1.0 profile.
    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]
"
HBASE-11679,https://issues.apache.org/jira/browse/HBASE-11679,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication.java,"Replace ""HTable"" with ""HTableInterface"" where backwards-compatible",NO,"This is a refactor to move more of the code towards using interfaces for proper encapsulation of logic.

The amount of code touched is large, but it should be fairly easy to review.  It changes variable declarations from HTable to HTableInterface where the following holds:

# The declaration being updated won't break assignment
# The declaration change does not break the compile (eg trying to access non-interface methods)

The two main situations are to change something like this:

{code}
HTable h = new HTable(c, tn);
{code}

to

{code}
HTableInterface h = new HTable(c, tn);
{code}

and this:

{code}
public void doSomething(HTable h) { ... }
{code}

to this:

{code}
public void doSomething(HTableInterface h) { ... }
{code}

This gets most of the obvious cases out of the way and prepares for more complicated interface refactors in the future.  In method signatures, I changed parameters, but did _not_ change any public or protected method return values, since that would violate criteria #1 above and break compatibility.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12659951
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 444 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  public static void addRegionToMeta(HTableInterface meta, HRegionInfo regionInfo) throws IOException {
+      final HTableInterface table, final ColumnInterpreter<R, S, P, Q, T> ci, Scan scan) throws Throwable {
+      final HTableInterface table, ColumnInterpreter<R, S, P, Q, T> ci, Scan scan) throws Throwable {
+  public int loadTable(final HTableInterface t, final byte f, boolean writeToWAL) throws IOException {
+    HTableInterface table = TEST_UTIL.createTable(Bytes.toBytes(""testRowsPutBufferedManyManyFlushes""),
+  private Map<byte , String> hello(final HTableInterface table, final String send, final String response)
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestIOFencing
                  org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas
                  org.apache.hadoop.hbase.client.TestReplicasClient
                  org.apache.hadoop.hbase.master.TestRestartCluster
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
Retry
I tried it locally and got below:
{code}
Results :
Failed tests:   testGroupOrSplitPresplit(org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery): expected:<20> but was:<0>
  testGroupOrSplitPresplit(org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery): expected:<20> but was:<0>
  testRetainAssignmentOnRestart(org.apache.hadoop.hbase.master.TestRestartCluster): expected:<localhost:618> but was:<localhost:618>
Tests in error:
  org.apache.hadoop.hbase.client.TestReplicasClient: KeeperErrorCode = NoNode for /hbase/region-in-transition/1588230740
  testClusterStatus(org.apache.hadoop.hbase.client.TestHCM): Unexpected exception, expected<org.apache.hadoop.hbase.regionserver.RegionServerStoppedException> but was<junit.framework.AssertionFailedError>
  testGroupOrSplitFailure(org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery): Unexpected exception, expected<java.io.IOException> but was<java.lang.AssertionError>
  testGroupOrSplitFailure(org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery): Unexpected exception, expected<java.io.IOException> but was<java.lang.AssertionError>
  org.apache.hadoop.hbase.regionserver.TestRegionReplicas: KeeperErrorCode = NoNode for /hbase/region-in-transition/1588230740
Tests run: 2020, Failures: 3, Errors: 5, Skipped: 18
{code}
Replica failures are being dealt wither elsewhere, HBASE-11611.  Ditto TestIOFencing -- it was supposed to be fixed but still failing.
TestLoadIncrementalHFilesSplitRecovery fails with this patch in place and passes without.  Haven't spent much time on it.  Lets see what happens on second time through.
Skimmed patch.  Looks innocuous.  Let me take a closer look.


** Comment 4 **
[Comment excluded]

** Comment 5 **
Fails to apply since yesterday's big commit (files removed and two little rejects). I tried to bring it over but TestEndToEndSplitTransaction proves a little awkward.  See what you think 
Went through the patch looking for API breakage to see if ""...did not change any public or protected method return values, since that would violate criteria #1 above and break compatibility"" holds.  LGTM. Bulk of changes are in test otherwise, internal changes; no API change.
+1 on commit to master.  +1 on commit to branch-1 but such a big change probably needs  blessing.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12660995
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 435 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  public static void addRegionToMeta(HTableInterface meta, HRegionInfo regionInfo) throws IOException {
+      final HTableInterface table, final ColumnInterpreter<R, S, P, Q, T> ci, Scan scan) throws Throwable {
+      final HTableInterface table, ColumnInterpreter<R, S, P, Q, T> ci, Scan scan) throws Throwable {
+  public int loadTable(final HTableInterface t, final byte f, boolean writeToWAL) throws IOException {
+    HTableInterface table = TEST_UTIL.createTable(Bytes.toBytes(""testRowsPutBufferedManyManyFlushes""),
+  private Map<byte , String> hello(final HTableInterface table, final String send, final String response)
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
+        HTableInterface acl = new HTable(util.getConfiguration(), AccessControlLists.ACL_TABLE_NAME);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery
                  org.apache.hadoop.hbase.TestRegionRebalancing
                  org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666804
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 495 new or modified tests.
    -1 javac.  The patch appears to cause mvn compile goal to fail.
    Compilation errors resume:
     COMPILATION ERROR : 
 [file java]: error: method render in class MasterStatusTmpl cannot be applied to given types;
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-server: Compilation failure
 [file java]: error: method render in class MasterStatusTmpl cannot be applied to given types;
 -> 
 To see the full stack trace of the errors, re-run Maven with the -e switch.
 Re-run Maven using the -X switch to enable full debug logging.
 For more information about the errors and possible solutions, please read the following articles:
  [link]
 After correcting the problems, you can resume the build with the command
   mvn <goals> -rf :hbase-server
Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666822
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 492 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static Map<String,List<Put>> createRsPutMap(RegionLocator htable, List<Put> puts) throws IOException {
+  private static Map<String,List<Row>> createRsRowMap(RegionLocator htable, List<Row> rows) throws IOException {
+   * Test for {@link HFileOutputFormat#configureDataBlockEncoding(org.apache.hadoop.hbase.client.Table,
+   * Test for {@link HFileOutputFormat2#configureDataBlockEncoding(org.apache.hadoop.hbase.client.Table,
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.replication.regionserver.TestReplicationThrottler
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 22 **
[Comment excluded]

** Comment 23 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12667330
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 483 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static Map<String,List<Put>> createRsPutMap(RegionLocator htable, List<Put> puts) throws IOException {
+  private static Map<String,List<Row>> createRsRowMap(RegionLocator htable, List<Row> rows) throws IOException {
+   * Test for {@link HFileOutputFormat#configureDataBlockEncoding(org.apache.hadoop.hbase.client.Table,
+   * Test for {@link HFileOutputFormat2#configureDataBlockEncoding(org.apache.hadoop.hbase.client.Table,
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestRollingRestart
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 24 **
FAILURE: Integrated in HBase-TRUNK #5481 (See )
HBASE-11679 Replace HTable with HTableInterface where backwards-compatible (Carter) (enis: rev 4995ed8a029feb8ccac8054f56f23261a6918add)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in HBase-1.0 #167 (See )
HBASE-11679 Replace HTable with HTableInterface where backwards-compatible (Carter) (enis: rev b175042917f88aebcffa2b554da73273620af5b1)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 29 **
[Comment excluded]
"
HBASE-10351,https://issues.apache.org/jira/browse/HBASE-10351,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java,LoadBalancer changes for supporting region replicas,NO,"LoadBalancer has to be aware of and enforce placement of region replicas so that the replicas are not co-hosted in the same server, host or rack. This will ensure that the region is highly available during process / host / rack failover. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Other than the point Sergey raised about putting some comments in the code around the array manipulations, and maybe breaking the manipulations into smaller methods, it looks good to me.
The one issue that is there I think is that the test (TestMasterOperationsForReplicas) may be flaky (the part where retain assignments is set to true). The reason being, that in the retainAssignment there is max iterations for choosing the server to place the region in but that may not be correct location given the replicas. I think it's fine to leave the balancer's assign methods as you currently have it (eventually the balancer.balance will fix it), but modify the test to be able to handle that.
Another minor nit is that in roundRobinAssignment, we could land up in the catch-all anytime we have numReplicas > numRegionServers. The comment in the catch-all code should be updated.
The refactor to do with introducing the Action class is good!

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
bq. Left some comments yesterday and today
Thanks! v4 patch addressed all the reviews there. 
bq. although the array manipulations are rather complex and meaning is not always clear 
When we unwound hashmap + hashset operations into array and index based ones for performance, we ended up un-javaifying that code. Not much to do about it (see HBASE-8119 for ref) 
bq. The one issue that is there I think is that the test (TestMasterOperationsForReplicas) may be flaky
It seems fine in my runs. retain assignment now also looks for availability and finds the best server while retaining the host locality. We can fix it if we see flakiness. 
bq. The comment in the catch-all code should be updated.
Fixed. 


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-TRUNK #5245 (See )
HBASE-10351 LoadBalancer changes for supporting region replicas (enis: rev a98f52953a0d8fdde2eb37110436967c7121d52c)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]
"
HBASE-11891,https://issues.apache.org/jira/browse/HBASE-11891,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java,Introduce HBaseInterfaceAudience level to denote class names that appear in configs.,NO,"We have several classes that are private use as far as APIs are concerned, but the class name appear in user provided config files.

We should add an HBaseInterfaceAudience level CONFIG and use it to denote these classes as LimitedPrivate.

HBase contributors can then use this audience marking to see when changes to a FQCN will require a release note to help upgrading users correct their configuration files.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in HBase-1.0 #155 (See )
HBASE-11891 Introduce an HBaseInterfaceAudience level to denote class names that appear in configs. (apurtell: rev 74f49496fd17d8e780f23656aaf2ff036ee45650)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 10 **
FAILURE: Integrated in HBase-TRUNK #5470 (See )
HBASE-11891 Introduce an HBaseInterfaceAudience level to denote class names that appear in configs. (apurtell: rev 39609a556a062a22b9ca0591a750381d6a3a86cc)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-0.98 #499 (See )
HBASE-11891 Introduce an HBaseInterfaceAudience level to denote class names that appear in configs. (apurtell: rev 50f71d43273c1667c1a28b06328af3630a7bd888)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]
"
HBASE-10926,https://issues.apache.org/jira/browse/HBASE-10926,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/RegionServerProcedureManagerHost.java,Use global procedure to flush table memstore cache,NO,"Currently, user can trigger table flush through hbase shell or HBaseAdmin API.  To flush the table cache, each region server hosting the regions is contacted and flushed sequentially, which is less efficient.
In HBase snapshot global procedure is used to coordinate and flush the regions in a distributed way.
Let's provide a distributed table flush for general use.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Should the subprocedure be in the regionserver package since that is what it is working against?
This is probably your just picking up the pattern from snapshots but why this:
+  private final FlushTableSubprocedurePool taskManager;
How does a task manager become a pool?
Do the new classes have to be public?  Can they be package private?
Should +public class MasterFlushTableProcedureManager extends MasterProcedureManager { be in the master package?  And RegionServerProcedureManager in RS package?
This is interesting.  Probably should add a short circuit for this in:
+    // We need to run the subprocedure even if we have no relevant regions.  The coordinator
+    // expects participation in the procedure and without sending message the master procedure
+    // will hang and fail.
No need of a test?
Whatever Matteo said.
This is nice work Jerry.  Thanks for using Procedure.
Separate, could we do a revamp of the naming of Procedure participants now it has been around a while (it is all private so should be safe)?  ForeignException, ProcedureMember always have me scrambling to read class and package doc because trouble figuring their roles. Should rethrowException be rethrowIfException?

** Comment 6 **
{quote}
// We need to run the subprocedure even if we have no relevant regions.  The coordinator
// expects participation in the procedure and without sending message the master procedure
// will hang and fail.
{quote}
 This comment is a bit misleading. The Mater procedure includes in the ""procedure"" only the 
RSs that are handling regions of the specified table (grep getTableRegionsAndLocations).
but you may end up in the case where the master send a request to a RS and the RS has just moved ""all"" the regions of the table that you want to flush.
It also means that the moved regions will not be flushed, but this may not be a problem in this case, since their cache is already ""empty"" due to the restart.

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12642282
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static final String CONCURENT_FLUSH_TASKS_KEY = ""hbase.flush.procedure.region.concurrentTasks"";
+  public static final String FLUSH_REQUEST_THREADS_KEY = ""hbase.flush.procedure.region.pool.threads"";
+  public static final String FLUSH_REQUEST_WAKE_MILLIS_KEY = ""hbase.flush.procedure.region.wakefrequency"";
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Also, regarding any behavior change.
The original behavior is this:
   Inside HBaseAdmin, we loop through each region with its region server, and a call is made to the region server directly for a flush.
   If any region is moved or not available while in the loop, we will log the NotServingRegionException, but continue on the next one.
The behavior with the distributed procedure:
   On the master side, we will collect the list of online regions with their region servers. The region servers will be the participating members.
   On the region server side, each member will again get its list of the online regions for the table, and flush the regions.
   There could be a race condition when the region moved in between master's server list and region server flush tasks. We may miss some regions.
   This miss is similar to the original NotServingRegionException.  But we should have a much smaller window to miss in the distributed case.
   Any error during flush will be thrown as foreign exception.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
The behavior change more is related to the failure case, if a RS is not-responding with the procedure you fail the flush, while with the old method some of them got flushed.
for where to place the files, i think procedures/flush is ok.
At least we know that every component is in a single place, the snapshots have the snapshot and rs division but which is conceptually more correct, but more painful when you try to read the code the first time.
For the testing I think you should add the case where a RS is not responding. I guess you can mock it.
For the preFlush() you are correct. You have to add the call to the coprocessor on the master side.
I'm looking at the code in more details, and I think there is something wrong with the MasterFlushTableProcedureManager. execProcedure() starts by resetting the done and call the flush procedure, but there is nothing that prevent multiple calls of flush on the same table or different table.
This means, that if you call a second flush() while the other is running your ""done"" flag is not describing what you expect and so on.

** Comment 18 **
bq. The behavior change more is related to the failure case, if a RS is not-responding with the procedure you fail the flush, while with the old method some of them got flushed.
Good point. Since the region servers are not in 'reached' state yet, nothing will proceed.  
If they are in 'reached' state, but one of them fails to flush for whatever reason, we will get 'some regions flushed, some not' case again.
bq. execProcedure() starts by resetting the done and call the flush procedure, but there is nothing that prevent multiple calls of flush on the same table or different table.
Good catch as well.
My thinking was to rely on the 'procedure name' which is the table name to prevent another flush request for the same table. Only one flush request for the same table at a time.
But I do want to allow different tables to go through. Will think more on how to accomplish this.  Any suggestion from you is welcome.

** Comment 19 **
[Comment excluded]

** Comment 20 **
bq. The behavior change more is related to the failure case, if a RS is not-responding with the procedure you fail the flush, while with the old method some of them got flushed.
Regarding this behavior, if I put the flush region tasks in 'acquireBarrier' phase, not the 'insideBarrier' phase, it will probably help somehow to maintain the old behavior. 
We don't need to have the agreement or consistency to flush across region servers anyway.
Any concern?

** Comment 21 **
{quote}We don't need to have the agreement or consistency to flush across region servers anyway. Any concern?{quote}
ok, I read the description of this jira. and what you really want is just broadcasting a command to all the regions. not using a two-phase commit like system.
If you look at HBASE-9864, there is some agreement to implement two notification systems. 
a two-phase commit one for broadcasting operations like grant/revoke on every region server (the procedure),
and another one which is just a ""state change"" notification, which doesn't require strong guarantees, which will probably be used by quotas as HBASE-11059.
since you have already done the patch, and all the code seems to be isolated in procedure/flush i guess is fine if you just use acquireBarrier() to do the flush


** Comment 22 **
[Comment excluded]

** Comment 23 **
bq. since you have already done the patch, and all the code seems to be isolated in procedure/flush i guess is fine if you just use acquireBarrier() to do the flush
I'm w/  here.  Can file an issue to refactor once the 'state change' notification system goes in.

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
bq. you don't reject concurrent flush on the same table, is that on purpose?
Concurrent flush on the same table is rejected.
{code}
    // We rely on the existing Distributed Procedure framework to prevent any concurrent
    // procedure with the same name.
    Procedure proc = coordinator.startProcedure(monitor, desc.getInstance(),
      new byte, Lists.newArrayList(regionServers));
    monitor.rethrowException();
    if (proc == null) {
      String msg = ""Failed to submit distributed procedure "" + desc.getSignature() + "" for '""
          + desc.getInstance() + ""'. "" + ""Another flush procedure is running?"";
      LOG.error(msg);
      throw new IOException(msg);
    }
{code}
In the master log:
{code}
2014-05-01 11:15:26,630 INFO org.apache.hadoop.hbase.master.HMaster: Client=biadmin//9.30.194.18 procedure request for: flush-table-proc
2014-05-01 11:15:26,644 WARN org.apache.hadoop.hbase.procedure.ProcedureCoordinator: Procedure table2 currently running.  Rejecting new request
2014-05-01 11:15:26,644 ERROR org.apache.hadoop.hbase.procedure.ProcedureCoordinator: Failed to submit procedure 'table2'
2014-05-01 11:15:26,644 ERROR org.apache.hadoop.hbase.procedure.flush.MasterFlushTableProcedureManager: Failed to submit distributed procedure flush-table-proc for 'table2'. Another flush procedure is running?
2014-05-01 11:15:26,852 INFO org.apache.hadoop.hbase.master.HMaster: Client=biadmin//9.30.194.18 procedure request for: flush-table-proc
2014-05-01 11:15:26,869 WARN org.apache.hadoop.hbase.procedure.ProcedureCoordinator: Procedure table2 currently running.  Rejecting new request
2014-05-01 11:15:26,869 ERROR org.apache.hadoop.hbase.procedure.ProcedureCoordinator: Failed to submit procedure 'table2'
2014-05-01 11:15:26,869 ERROR org.apache.hadoop.hbase.procedure.flush.MasterFlushTableProcedureManager: Failed to submit distributed procedure flush-table-proc for 'table2'. Another flush procedure is running?
{code}
Interestingly, in HBaseAdmin executeCallable, which execProcedure() uses , is RPC with retries. So in the log you can see the client just keeps trying until the previous flush procedure completes.
Then it will be able to run on the same table.
{code}
2014-05-01 11:15:38,788 INFO org.apache.hadoop.hbase.master.HMaster: Client=biadmin//9.30.194.18 procedure request for: flush-table-proc
2014-05-01 11:15:38,804 DEBUG org.apache.hadoop.hbase.procedure.ProcedureCoordinator: Procedure table2 was in running list but was completed.  Accepting new attempt.
2014-05-01 11:15:38,804 INFO org.apache.hadoop.hbase.procedure.Procedure: Starting procedure 'table2'
2014-05-01 11:15:38,804 DEBUG org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector: Scheduling process timer to run in: 60000 ms
2014-05-01 11:15:38,804 DEBUG org.apache.hadoop.hbase.procedure.Procedure: Procedure 'table2' starting 'acquire'
...
{code}
So effectively concurrent requests from the client will be executed sequentially.

** Comment 27 **
[Comment excluded]

** Comment 28 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12642951
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +            LOG.debug(""Procedure "" + procName + "" was in running list but was completed.  Accepting new attempt."");
+          LOG.debug(""Procedure "" + procName + "" was in running list but has exception.  Accepting new attempt."");
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
From [link] :
{code}
/home/jenkins/tools/maven/latest/bin/mvn clean package javadoc:javadoc -DskipTests -DHBasePatchProcess > [file txt] 2>&1
There appear to be 2 javadoc warnings generated by the patched build.
...
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.193 sec
FATAL: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel
hudson.remoting.RequestAbortedException: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel
	at hudson.remoting.RequestAbortedException.wrapForRethrow([file java]:41)
	at hudson.remoting.RequestAbortedException.wrapForRethrow([file java]:34)
	at hudson.remoting.Request.call([file java]:174)
	at hudson.remoting.Channel.call([file java]:739)
	at hudson.remoting.RemoteInvocationHandler.invoke([file java]:168)
	at com.sun.proxy.$Proxy53.join(Unknown Source)
	at hudson.Launcher$RemoteLauncher$ProcImpl.join([file java]:951)
	at hudson.tasks.CommandInterpreter.join([file java]:137)
	at hudson.tasks.CommandInterpreter.perform([file java]:97)
{code}
Please fix javadoc warnings and run test suite - QA bot is not reliable.
Thanks

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
Thanks, Ted, Andrew.
I spent some time yesterday trying to fix javadoc warnings Ted mentioned. I could not see the location of the warnings. 
I tried to run 'mvn clean package javadoc:javadoc -DskipTests -DHBasePatchProcess'. But couldn't find details in the output either.
I had to turn on javadoc warning in my Eclipse, which shows a bunch of warnings for existing code as well.  
Was still thinking whether I should fix them or not yesterday ...

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
FAILURE: Integrated in HBase-TRUNK #5127 (See )
HBASE-10926 Use global procedure to flush table memstore cache (Jerry He) (tedyu: rev 1592368)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* /hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/flush
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 42 **
I started a minicluster based instance of recent trunk and ran LoadTestTool concurrent with flushing every 10 seconds, to generate a lot of HFiles. In the logs I notice a lot of Procedure related WARNs:
122 of these logged over 30 minutes: 
bq. WARN   procedure.ProcedureCoordinator: Member 'cluster_test' is trying to release an unknown procedure 'reached'
112 of these logged over 30 minutes:
bq. WARN   procedure.ProcedureMember: A completed old subproc cluster_test is still present, removing
Given the rate at which I was triggering flushes, there would have been ~180 procedure executions, meaning we had these warnings 67% of the time. At a minimum this is noisy WARN level logging.


** Comment 43 **
Would lowering the above logs to DEBUG level be better ?

** Comment 44 **
The first question I have is are those WARN level logs indicative of a problem with this feature or the Procedure framework? 

** Comment 45 **
The warn means that someone joined the procedure ""later"", which in this case is not really a problem.
but more in general it is part of the problem described in HBASE-11221. once the procedure start it is not aware of the new server joining or regions moving. I'm working on a patch, but I'm stuck in finding a way to make it compatible for a rolling restart.

** Comment 46 **
[Comment excluded]

** Comment 47 **
uh.. no in theory you should receive a single event in that case. but if you get the warn means you receive two. let me look into it

** Comment 48 **
[Comment excluded]

** Comment 49 **
bq. WARN  procedure.ProcedureMember: A completed old subproc cluster_test is still present, removing
This one seems to be normal and expected. That is the only way to normally remove a completed subproc from the list.
bq. WARN  procedure.ProcedureCoordinator: Member 'cluster_test' is trying to release an unknown procedure 'reached'
This one is puzzling.  It comes from this part in the code:
{code}
  void memberFinishedBarrier(String procName, final String member, byte dataFromMember) {
    Procedure proc = procedures.get(procName);
    if (proc == null) {
      LOG.warn(""Member '""+ member +""' is trying to release an unknown procedure '""+ procName +""'"");
      return;
    }
    proc.barrierReleasedByMember(member, dataFromMember);
  }
{code}
'cluster_test' should be the proc name.
Are there any errors/exceptions or procedure timeout in the output?

** Comment 50 **
The normal layout of the zk node for the 'reached' phase:
: |-/hbase/flush-table-proc
:   |-reached
:   |----cluster_test
:   |-------hdtest010.svl.ibm.com,60020,1402634727563
:   |-------hdtest011.svl.ibm.com,60020,1402634727508
procName = ZKUtil.getNodeName(ZKUtil.getParent(path))     --> cluster_test
member = ZKUtil.getNodeName(path)    -->  hdtest010.svl.ibm.com,60020,1402634727563
But from the warning message, we seem to have the wrong layout (my deduction, not actual test result):
: |-/hbase/flush-table-proc
:  |-reached
:  |----cluster_test
The leaf nodes were missing.  Therefore we got:
procName = ZKUtil.getNodeName(ZKUtil.getParent(path))   --> reached
member = ZKUtil.getNodeName(path)  -->  cluster_test
Either the leaf node was not created or cleared due to race?

** Comment 51 **
[Comment excluded]

** Comment 52 **
ZKProcedureCoordinatorRpcs receives a nodeCreated() event on /hbase/flush-table-proc/reached/cluster_test and when we check isReachedPathNode() we don't verify if the node is the ""member"" or the root. so the warn is caused by the ""root"" creation event.

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]
"
HBASE-10859,https://issues.apache.org/jira/browse/HBASE-10859,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionFileSystem.java,Use HFileLink in opening region files from secondaries,NO,"We sometimes see the following stack trace on test logs (TestReplicasClient), but this is not test-specific:
{code}
2014-03-26 21:44:18,662 ERROR [RS_OPEN_REGION-c64-s12:35852-2] handler.OpenRegionHandler(481): Failed open of region=TestReplicasClient,,1395895445056_0001.5f8b8db27e36d2dde781193d92a05730., starting to roll back the global memstore size.
java.io.IOException: java.io.IOException: java.io.FileNotFoundException: File does not exist: hdfs://localhost:56276/user/jenkins/hbase/data/default/TestReplicasClient/856934fb87781c9030975706b66137a5/info/589000f197b048e0897e1d81dd7e3a90
  at org.apache.hadoop.hbase.regionserver.HRegion.initializeRegionStores(HRegion.java:739)
  at org.apache.hadoop.hbase.regionserver.HRegion.initializeRegionInternals(HRegion.java:646)
  at org.apache.hadoop.hbase.regionserver.HRegion.initialize(HRegion.java:617)
  at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4447)
  at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4417)
  at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4389)
  at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4345)
  at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4296)
  at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.openRegion(OpenRegionHandler.java:465)
  at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.process(OpenRegionHandler.java:139)
  at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:128)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
  at java.lang.Thread.run(Thread.java:722)
Caused by: java.io.IOException: java.io.FileNotFoundException: File does not exist: hdfs://localhost:56276/user/jenkins/hbase/data/default/TestReplicasClient/856934fb87781c9030975706b66137a5/info/589000f197b048e0897e1d81dd7e3a90
  at org.apache.hadoop.hbase.regionserver.HStore.openStoreFiles(HStore.java:531)
  at org.apache.hadoop.hbase.regionserver.HStore.loadStoreFiles(HStore.java:486)
  at org.apache.hadoop.hbase.regionserver.HStore.<init>(HStore.java:254)
  at org.apache.hadoop.hbase.regionserver.HRegion.instantiateHStore(HRegion.java:3357)
  at org.apache.hadoop.hbase.regionserver.HRegion$1.call(HRegion.java:710)
  at org.apache.hadoop.hbase.regionserver.HRegion$1.call(HRegion.java:707)
  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
  at java.util.concurrent.FutureTask.run(FutureTask.java:166)
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
  at java.util.concurrent.FutureTask.run(FutureTask.java:166)
  ... 3 more
Caused by: java.io.FileNotFoundException: File does not exist: hdfs://localhost:56276/user/jenkins/hbase/data/default/TestReplicasClient/856934fb87781c9030975706b66137a5/info/589000f197b048e0897e1d81dd7e3a90
  at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java:1128)
  at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java:1120)
  at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)
  at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1120)
  at org.apache.hadoop.fs.FilterFileSystem.getFileStatus(FilterFileSystem.java:397)
  at org.apache.hadoop.hbase.regionserver.StoreFileInfo.<init>(StoreFileInfo.java:95)
  at org.apache.hadoop.hbase.regionserver.HStore.createStoreFileAndReader(HStore.java:600)
  at org.apache.hadoop.hbase.regionserver.HStore.access$000(HStore.java:121)
  at org.apache.hadoop.hbase.regionserver.HStore$1.call(HStore.java:506)
  at org.apache.hadoop.hbase.regionserver.HStore$1.call(HStore.java:503)
  ... 8 more
{code}

The region fails to open for the region replica, because at this time, the primary region is performing a compaction. The file is moved to the archive directory in between listing of store files and opening those store files from the secondary. 

The secondary region should able to deal with this through usage of StoreFileInfo and HFile, but since we are reconstructing the StoreFileInfo object twice between HStore.openStoreFiles() and createStoreFileAndReader() we are getting this exception. 

","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Thanks for reviews. I have a test where there is a writer, a flush and compaction requester and a thread which does reads against the secondary. I am trying to get this test failing before the patch to demonstrate the problem but it seems that it is more robust than expected. I'll try to adjust the test. 
bq. Further, it establishes a divergent model – what's understood in the in-memory model vs the reality of what's on disk.
That is a valid concern. I've thought about making the hfilelinks concrete. We can create region directories for the secondary replicas, and save the hfile links to the primary replica in those directories. We opted not to do so, because it looks like these will be not required and an unnecessary burden on the namenode. We can revisit that decision if it becomes a problem. 
bq. InMemoryFileLink
let me see whether I can do a subclass of HFileLink. 

** Comment 8 **
Here is a v2 patch, which apart from the v1 patch: 
 - Adds a unit test for doing concurrent compaction+flushes in primary, and reading and reopening from secondary. This test reveals two minor issues as below which are fixed in this patch as well. 
 - compute hdfs block distribution does not work for hfile link if the link location is moved in between getting the file status and getting the block locations. We now retry on FileNotFoundException
 - On region open, the secondaries does not replay the recovered edits file (since it causes a flush and deletes the log files). Also .tmp directory is not removed. 

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in HBase-TRUNK #5245 (See )
HBASE-10859 Use HFileLink in opening region files from secondaries (enis: rev 7d247524b355c1014453d2a6ef69797ce8f54769)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
[Comment excluded]
"
HBASE-11921,https://issues.apache.org/jira/browse/HBASE-11921,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Minor fixups that come of testing branch-1,NO,"Testing branch-1, made some small fixups.  Would be good to get them in some time.  This is a bit of a mish-mash though.","** Comment 1 **
Minor adjustment to AsyncProcess logging so it is formatted like other log lines.
Changes ScannerCallableWithRetries to log at TRACE level its goings and comings on replicas since replicas will not be default deploy (yet) and the messages are a little confusing as is.
I am testing checksum effect. It is not possible going by log emissions to tell what checksum config is in effect.  Added logging and cleaned up current logging.
A problem w/ zk had the HRS exist prematurely.  We need to check metatable tool is null before calling it ... otherwise HRS doesn't die.
Minor test changes undoing setitng of what is default checksum.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
FAILURE: Integrated in HBase-1.0 #167 (See )
HBASE-11921 Minor fixups that come of testing branch-1 (Stack) (enis: rev f2898985ad755a8a10208b5d376c8c6abac7c7d2)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 8 **
FAILURE: Integrated in HBase-TRUNK #5484 (See )
HBASE-11921 Minor fixups that come of testing branch-1 (Stack) (enis: rev f7bcf3df6bb439888e2d47d941149dcb8aeadd17)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 9 **
[Comment excluded]
"
HBASE-10796,https://issues.apache.org/jira/browse/HBASE-10796,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ShutdownHook.java,Set default log level as INFO,YES,"When we roll out 1.0, the log level should be INFO-level by default, not DEBUG. 

Proposed on mailing list here http://search-hadoop.com/m/33P7E1GL08b/hbase+1.0&subj=DISCUSSION+1+0+0 and at least one other +1 with no objection.

","** Comment 1 **
+1 for this idea.  We set INFO level in ALL production cluster and DEBUG in testing cluster in the past:)

** Comment 2 **
Here is a start.  It sets the default to INFO (Leaves tests at DEBUG).  It then does a bit of a review comparing old and new logs to see what should be promoted from DEBUG to INFO.  I think that this is one of those things that will take a while to get right.... so suggest we check in this and run with it early before the release so we get used to INFO level... and as we go promote stuff we need that we forgot to surface.

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12636149
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
I'd like to commit this.  It result of my comparing logs w/ DEBUG enabled and then disabled.  I know that our INFO level logging is probably missing a few DEBUGs so can tell decent story on what transpired and then some INFOs should be DEBUG but this should do as a first cut.  Can add new issues for other changes as folks find they need them.

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12637239
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated 6 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
SUCCESS: Integrated in HBase-TRUNK #5046 (See )
HBASE-10796 Set default log level as INFO (stack: rev 1582532)
* /hbase/trunk/conf/log4j.properties
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 9 **
[Comment excluded]
"
HBASE-11805,https://issues.apache.org/jira/browse/HBASE-11805,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java,KeyValue to Cell Convert in WALEdit APIs,NO,"In almost all other main interface class/APIs we have changed KeyValue to Cell. But missing in WALEdit. This is public marked for Replication (Well it should be for CP also) 
These 2 APIs deal with KVs
add(KeyValue kv)
ArrayList<KeyValue> getKeyValues()

Suggest deprecate them and add for 0.98
add(Cell kv) 
List<Cell> getCells()

And just replace from 1.0","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Cells having SequenceNumber is also fine. HBASE-11777 deals with it. 

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12665959
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 45 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
Do we have to do the below?
-          for (KeyValue kv : value.getKeyValues()) {
+          for (Cell cell : value.getCells()) {
+            KeyValue kv = KeyValueUtil.ensureKeyValue(cell);
Maybe we could make do w/ a Cell? Seems like later changes have determined that you don't need KV so you have probably already tried my suggestion and it just don't work here... thats fine.  Just asking.
This one is a bit odd Anoop...
-      for (KeyValue kv: kvs) {
-        size += kv.getLength();
+      for (Cell cell: cells) {
+        size += KeyValueUtil.length(cell);
       }
Using a KeyValueUtils on a cell?
Nice one here: 
-         walEdit.add(KeyValueUtil.ensureKeyValue(cell));
+        walEdit.add(cell);
Good
This too....
-            kv.setSequenceId(currentReplaySeqId);
+            CellUtil.setSequenceId(cell, currentReplaySeqId);
+1 on patch.  A few nits above.  Nice stuff.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666280
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 45 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestMasterFailover
                  org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan([file java]:238)
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan1.testScanEmptyToBBA([file java]:70)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12666998
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 45 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestRegionRebalancing
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
FAILURE: Integrated in HBase-0.98 #502 (See )
HBASE-11805 KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev 3f6a44b98cdf4a6dc28a713bc70e4f5bb03ff36e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 36 **
[Comment excluded]

** Comment 37 **
FAILURE: Integrated in HBase-TRUNK #5475 (See )
HBASE-11805 KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev 0a9bfcaf744a908c1710fec47de073724ec2d8be)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
It's fine to return a KV as a KV is a Cell. The question is: Are we locking our to always requiring support for KVs? As far as I understand we just need to return same the objects that were added to edit (whether they are Cells or KVs)

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #490 (See )
Revert ""HBASE-11805 KeyValue to Cell Convert in WALEdit APIs."" (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 58 **
FAILURE: Integrated in HBase-0.98 #516 (See )
Revert ""HBASE-11805 KeyValue to Cell Convert in WALEdit APIs."" (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 59 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #491 (See )
Revert ""HBASE-11805 KeyValue to Cell Convert in WALEdit APIs."" (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 60 **
[Comment excluded]
"
HBASE-11963,https://issues.apache.org/jira/browse/HBASE-11963,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java,Synchronize peer cluster replication connection attempts,NO,Synchronize peer cluster connection attempts to avoid races and rate limit connections when multiple replication sources try to connect to the peer cluster. If the peer cluster is down we can get out of control over time.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Seems fine bottlenecking a single RS's query of base attributes of remote cluster.  +1

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12668405
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-1.0 #182 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts (Maddineni Sukumar) (apurtell: rev 3ca81843456029a5ea224ae5758a85ec9a30b60c)
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-0.98 #515 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts (Maddineni Sukumar) (apurtell: rev 128a1cce762ef44c73b46bda7e65ffcd78fa16bd)
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-TRUNK #5501 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts (Maddineni Sukumar) (apurtell: rev 98be489070622fd01183b7f129caa99d6aaaa1eb)
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #489 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts (Maddineni Sukumar) (apurtell: rev 128a1cce762ef44c73b46bda7e65ffcd78fa16bd)
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-0.94-JDK7 #180 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts. (Sukumar Maddineni) (larsh: rev b69f83995dc2d62b2395402bf373a4b5f1ddb501)
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-0.94 #1411 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts. (Sukumar Maddineni) (larsh: rev b69f83995dc2d62b2395402bf373a4b5f1ddb501)
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.94-security #521 (See )
HBASE-11963 Synchronize peer cluster replication connection attempts. (Sukumar Maddineni) (larsh: rev b69f83995dc2d62b2395402bf373a4b5f1ddb501)
* [file java]


** Comment 20 **
Also lemme explain what happened:
* We have a ReplicationPeer per slave cluster
* We have a ReplicationSource for every ""queue"" to replicate. A queue is either the data this region wishes to replicate or data it took over for another region server (for example when that region server went down)
* When we take over a queue from another region server we have *multiple* ReplicationSources replicating to the *same* set of ReplicationPeers.
* When the slave cluster is down, the ReplicationSources attempt to reset their peers upon each failed request.
* And hence now we have race where multiple ReplicationSources attempt to reconnect a peer simultaneously. That caused the race condition and leaked ZK clients.
* Each of the leaked client would attempt to reconnect to the slave once/sec until the ZK timeout (defaulting to 180s).
So this only happens when (a) we have some queues failed over from another region server *and* (b) a peer is not currently reachable (or there are some other ZK issues) causing the source and reconnect its peer.
But if we have this condition it gets nasty pretty quickly.


** Comment 21 **
[Comment excluded]
"
HBASE-11118,https://issues.apache.org/jira/browse/HBASE-11118,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifestV1.java,"non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString""",YES,"I am running into the problem described in https://issues.apache.org/jira/browse/HBASE-10304, while trying to use a newer version within cascading.hbase (https://github.com/cascading/cascading.hbase).

One of the features of cascading.hbase is that you can use it from lingual (http://www.cascading.org/projects/lingual/), our SQL layer for hadoop. lingual has a notion of providers, which are fat jars that we pull down dynamically at runtime. Those jars give users the ability to talk to any system or format from SQL. They are added to the classpath  programmatically before we submit jobs to a hadoop cluster.

Since lingual does not know upfront , which providers are going to be used in a given run, the HADOOP_CLASSPATH trick proposed in the JIRA above is really clunky and breaks the ease of use we had before. No other provider requires this right now.

It would be great to have a programmatical way to fix this, when using fat jars.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
I experimented a bit this morning with shade plugin. Performing the rewrite in hbase-protocol/pom.xml leads to errors building hbase-client.
 [file java]: error: method newBlockingStub in class MasterService cannot be applied to g
iven types;
   required: com.shaded.google.protobuf.BlockingRpcChannel
  found: com.google.protobuf.BlockingRpcChannel
  reason: actual argument com.google.protobuf.BlockingRpcChannel cannot be converted to com.shaded.google.protobuf.BlockingRpcChannel by method invocation conversion
We need the shade plugin to cascade bytecode rewrite down to the dependent modules in the project. I don't see a way to do that.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12650953
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting([file java]:3499)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 43 **
Retry.  The failure seems unrelated.  The findbugs is not mine.

** Comment 44 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12651183
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
bq. You mean the MR code should not import the class, hence it won't be loaded.
I mean these fat jars that want to talk to hbase won't be bundling hbase-server (unless by mistake) so they shouldn't be trying to load HBaseZeroCopyLiteralString.
But maybe I need to do more pruning and get it out of these MR utilities too, at least I'd have to to fix [link]
 What exception trace are you seeing?  Is it same as HBASE-10304?  i.e. Lingual wants to run mapreduce job?  It is making use of hbase mapreduce formats?
bq. Can we do a util class, which checks whether it can load up ZCLBS and uses it if so, otherwise defaults to BS.copyFrom()
Let me see.  Maybe if it loads before everything else...

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
This seems to work.  Verified using Nicks nice [link] project.
Adds new ByteStringer class that on class loading tries to make use of HBaseZeroCopyByteString.  If fails to load -- IllegalAccessError -- then we set flag and everafter, do ByteString.copyFrom instead.
Patch is big because lots of HBZCBS replacements.
My other patch moving HBZCBS to hbase-server wouldn't have worked given mr classes are in hbase-server (duh!) and these are the gateway used that brings on this problem (need to work on breaking out the hbase-mapreduce module).

** Comment 54 **
[Comment excluded]

** Comment 55 **
bq. Adds new ByteStringer class that on class loading tries to make use of HBaseZeroCopyByteString. If fails to load – IllegalAccessError – then we set flag and everafter, do ByteString.copyFrom instead.
This sounds like a good solution for 0.98.

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
 I figured out how where the master web ui is now, but I fail to put working jars in my local maven repo. I can't find a way to resolve ${compat.module} correctly. What is the exact invocation I need to get this working?

** Comment 62 **
master has dropped support for hadoop-1. Can you provide the commands you've used and the error you're seeing? Thanks.

** Comment 63 **
[Comment excluded]

** Comment 64 **
Here is what I did:
    mvn versions:set -DnewVersion=0.99-Cascading
    mvn install -DskipTests site assembly:single -Prelease
I then took the binary tarball to deploy a cluster. Now if I want to rebuild the cascading.hbase module, it always fails with an error related to the compat.module. It seems the variable hasn't been expanded and that confuses gradle:


** Comment 65 **
Sorry, forgot the gradle error:
{code}
 $ gradle cascading-hbase-hadoop2-mr1:build
The TaskContainer.add() method has been deprecated and is scheduled to be removed in Gradle 2.0. Please use the create() method instead.
:cascading-hbase-hadoop2-mr1:compileJava
FAILURE: Build failed with an exception.
* What went wrong:
Could not resolve all dependencies for configuration ':cascading-hbase-hadoop2-mr1:compile'.
> Could not resolve org.apache.hbase:${compat.module}:0.99-CASCADING.
  Required by:
      cascading-hbase:cascading-hbase-hadoop2-mr1:2.5.0-wip-dev > org.apache.hbase:hbase-server:0.99-CASCADING
      cascading-hbase:cascading-hbase-hadoop2-mr1:2.5.0-wip-dev > org.apache.hbase:hbase-server:0.99-CASCADING > org.apache.hbase:hbase-prefix-tree:0.99-CASCADING
   > java.lang.NullPointerException (no error message)
   > java.lang.IllegalArgumentException (no error message)
   > java.lang.IllegalArgumentException (no error message)
   > java.lang.IllegalArgumentException (no error message)
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
BUILD FAILED
Total time: 8.848 secs
{code}

** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
[Comment excluded]

** Comment 71 **
[Comment excluded]

** Comment 72 **
[Comment excluded]

** Comment 73 **
[Comment excluded]

** Comment 74 **
[Comment excluded]

** Comment 75 **
Hi . Taking 11118.[file txt] for a spin. I applied the patch to 0.98 and launched local mode. I'm seeing this in my log
2014-07-02 13:24:53,899 ERROR  client.AsyncProcess: #6, Caught throwable while calling. This is unexpected. Retrying. Server is 10.11.5.156,54722,1404332679793, tableName=hbase:meta
java.lang.RuntimeException: java.lang.StackOverflowError
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithoutRetries([file java]:188)
	at org.apache.hadoop.hbase.client.AsyncProcess$1.run([file java]:543)
	at java.util.concurrent.Executors$RunnableAdapter.call([file java]:471)
	at java.util.concurrent.FutureTask$Sync.innerRun([file java]:334)
	at java.util.concurrent.FutureTask.run([file java]:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker([file java]:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:615)
	at java.lang.Thread.run([file java]:724)
Caused by: java.lang.StackOverflowError
	at org.apache.hadoop.hbase.util.ByteStringer.wrap([file java]:65)
	at org.apache.hadoop.hbase.util.ByteStringer.wrap([file java]:65)
	at org.apache.hadoop.hbase.util.ByteStringer.wrap([file java]:65)
...
Attaching a fixed patch, simple interdiff:
diff -u [file java] [file java]
--- [file java]
+++ [file java]
@@ -62,7 +62,7 @@
    * Wraps a subset of a byte array in a {@link ByteString} without copying it.
    */
   public static ByteString wrap(final byte array, int offset, int length) {
-    return USE_ZEROCOPYBYTESTRING? ByteStringer.wrap(array, offset, length):
+    return USE_ZEROCOPYBYTESTRING? HBaseZeroCopyByteString.wrap(array, offset, length):
       ByteString.copyFrom(array, offset, length);
   }
 }
I also updated the hbase-fatjar to include the apache repo to make it easier to test snapshots.

** Comment 76 **
[Comment excluded]

** Comment 77 **
[Comment excluded]

** Comment 78 **
[Comment excluded]

** Comment 79 **
[Comment excluded]

** Comment 80 **
[Comment excluded]

** Comment 81 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654375
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 28 new or modified tests.
    -1 javac.  The patch appears to cause mvn compile goal to fail.
    Compilation errors resume:
     COMPILATION ERROR : 
 [file java]: error: package org.apache.commons.logging does not exist
 [file java]: error: package org.apache.commons.logging does not exist
 [file java]: error: cannot find symbol
   symbol:   class Log
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project hbase-protocol: Compilation failure: Compilation failure:
 [file java]: error: package org.apache.commons.logging does not exist
 [file java]: error: package org.apache.commons.logging does not exist
 [file java]: error: cannot find symbol
 symbol:   class Log
 location: class ByteStringer
 [file java]: error: cannot find symbol
 -> 
 To see the full stack trace of the errors, re-run Maven with the -e switch.
 Re-run Maven using the -X switch to enable full debug logging.
 For more information about the errors and possible solutions, please read the following articles:
  [link]
 After correcting the problems, you can resume the build with the command
   mvn <goals> -rf :hbase-protocol
Console output: [link]
This message is automatically generated.

** Comment 82 **
[Comment excluded]

** Comment 83 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654382
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 28 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestMultiParallel
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 84 **
[Comment excluded]

** Comment 85 **
[Comment excluded]

** Comment 86 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12654444
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 28 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 87 **
[Comment excluded]

** Comment 88 **
[Comment excluded]

** Comment 89 **
[Comment excluded]

** Comment 90 **
 no luck with the snapshot repository: 
    $ gradle clean build 
    The TaskContainer.add() method has been deprecated and is scheduled to be removed in Gradle 2.0. Please use the create() method instead.
    :cascading-hbase-hadoop2-mr1:clean UP-TO-DATE
    :cascading-hbase-hadoop2-mr1:compileJava
    Download [link]
    FAILURE: Build failed with an exception.
    * What went wrong:
    Could not resolve all dependencies for configuration ':cascading-hbase-hadoop2-mr1:compile'.
    > Could not resolve org.apache.hbase:${compat.module}:0.98.4-11118-SNAPSHOT.
      Required by: 
          cascading-hbase:cascading-hbase-hadoop2-mr1:2.5.0-wip-dev > org.apache.hbase:hbase-server:0.98.4-11118-SNAPSHOT
          cascading-hbase:cascading-hbase-hadoop2-mr1:2.5.0-wip-dev > org.apache.hbase:hbase-server:0.98.4-11118-SNAPSHOT > org.apache.hbase:hbase-prefix-tree:0.98.4-11118-SNAPSHOT
       > java.lang.NullPointerException (no error message)
       > Unable to load Maven meta-data from [link]{compat.module}/0.98.4-11118-SNAPSHOT/maven-metadata.xml.
          > java.lang.IllegalArgumentException (no error message)
       > Unable to load Maven meta-data from [link]{compat.module}/0.98.4-11118-SNAPSHOT/maven-metadata.xml.
          > java.lang.IllegalArgumentException (no error message)
       > Unable to load Maven meta-data from [link]{compat.module}/0.98.4-11118-SNAPSHOT/maven-metadata.xml.
          > java.lang.IllegalArgumentException (no error message)
       > Unable to load Maven meta-data from [link]{compat.module}/0.98.4-11118-SNAPSHOT/maven-metadata.xml.
          > java.lang.IllegalArgumentException (no error message)
    * Try:
    Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
    BUILD FAILED
    Total time: 18.433 secs
    

** Comment 91 **
[Comment excluded]

** Comment 92 **
Hi . I've ""published"" a built of this branch. Add the following repository info and give it another spin. Thanks
<repository>
  <id>apache.people.ndimiduk</id>
  <url>[link]~ndimiduk/repository</url>
  <snapshots>
    <enabled>true</enabled>
  </snapshots>
</repository>


** Comment 93 **
[Comment excluded]

** Comment 94 **
[Comment excluded]

** Comment 95 **
[Comment excluded]

** Comment 96 **
[Comment excluded]

** Comment 97 **
[Comment excluded]

** Comment 98 **
[Comment excluded]

** Comment 99 **
[Comment excluded]

** Comment 100 **
[Comment excluded]

** Comment 101 **
[Comment excluded]

** Comment 102 **
[Comment excluded]

** Comment 103 **
[Comment excluded]

** Comment 104 **
FAILURE: Integrated in HBase-0.98 #389 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"" (ndimiduk: rev 8884ad0444cada23dfbd4dbde9db9e2a20ae262a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 105 **
FAILURE: Integrated in HBase-TRUNK #5290 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"" (ndimiduk: rev c01e7e50c1047565da1b0c6ed6fe8bfdf25e03b4)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 106 **
FAILURE: Integrated in HBase-1.0 #31 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"" (ndimiduk: rev c3628579013d7f5e1dbfdf0b9ceca0221c1c1e66)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 107 **
SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #369 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"" (ndimiduk: rev 8884ad0444cada23dfbd4dbde9db9e2a20ae262a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 108 **
[Comment excluded]

** Comment 109 **
[Comment excluded]

** Comment 110 **
[Comment excluded]

** Comment 111 **
[Comment excluded]

** Comment 112 **
[Comment excluded]

** Comment 113 **
FAILURE: Integrated in HBase-1.0 #32 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"". -Addendum (anoopsamjohn: rev 15ba35b59330b408c76e18d9c8bb41329a11472b)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 114 **
[Comment excluded]

** Comment 115 **
FAILURE: Integrated in HBase-TRUNK #5293 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"". -Addendum (anoopsamjohn: rev f5e13c7460dabd6909146e79f511af5bf7f5f977)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 116 **
FAILURE: Integrated in HBase-0.98 #390 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"". -Addendum (anoopsamjohn: rev cedd53a75eebe507da220785cb6c44e97300092c)
* [file java]
* [file java]


** Comment 117 **
SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #370 (See )
HBASE-11118 non environment variable solution for ""IllegalAccessError: class com.google.protobuf.ZeroCopyLiteralByteString cannot access its superclass com.google.protobuf.LiteralByteString"". -Addendum (anoopsamjohn: rev cedd53a75eebe507da220785cb6c44e97300092c)
* [file java]
* [file java]


** Comment 118 **
FAILURE: Integrated in HBase-TRUNK #5304 (See )
Add note on HBASE-11118 and HBASE-10877 HBaseZeroCopyByteString woes to troubleshooting section (stack: rev bf2933e08ab65af3643bdadbc3d59c943d40602f)
* src/main/docbkx/troubleshooting.xml


** Comment 119 **
[Comment excluded]

** Comment 120 **
hi . Per the JIRA subject, after this commit, no environment variable manipulation is required. Are you seeing something different? Please send a note to the user@hbase list describing your hbase version, ooze, environment and any stack trace you're seeing in job launching. We'll help you get it resolved.

** Comment 121 **
Thanks Nick for the quick response. We are using CDH5.1.0 with HBase 0.98.1. It seems from HBASE-11118 that this issue is fixed as of hbase 0.98.4 . Our application works fine when submitting directly from commandline after setting the following environment variable but it fails when spawned via Oozie. We have set the env variable in all data nodes, hadoop-env.sh for all users but without luck(probably being overridden somewhere). Wondering if there is any workaround for 0.98.1 with Oozie 4.0.
export HADOOP_CLASSPATH=/usr/share/cmf/lib/cdh5/hbase-protocol-0.98.1-cdh5.1.0.jar:/etc/hbase/conf 

** Comment 122 **
[Comment excluded]
"
HBASE-7987,https://issues.apache.org/jira/browse/HBASE-7987,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSVisitor.java,Snapshot Manifest file instead of multiple empty files,NO,"Currently taking a snapshot means creating one empty file for each file in the source table directory, plus copying the .regioninfo file for each region, the table descriptor file and a snapshotInfo file.

during the restore or snapshot verification we traverse the filesystem (fs.listStatus()) to find the snapshot files, and we open the .regioninfo files to get the information.

to avoid hammering the NameNode and having lots of empty files, we can use a manifest file that contains the list of files and information that we need.
To keep the RS parallelism that we have, each RS can write its own manifest.

{code}
message SnapshotDescriptor {
  required string name;
  optional string table;
  optional int64 creationTime;
  optional Type type;
  optional int32 version;
}

message SnapshotRegionManifest {
  optional int32 version;
  required RegionInfo regionInfo;
  repeated FamilyFiles familyFiles;

  message StoreFile {
    required string name;
    optional Reference reference;
  }

  message FamilyFiles {
    required bytes familyName;
    repeated StoreFile storeFiles;
  }
}
{code}

{code}
/hbase/.snapshot/<snapshotName>
/hbase/.snapshot/<snapshotName>/snapshotInfo
/hbase/.snapshot/<snapshotName>/<tableName>
/hbase/.snapshot/<snapshotName>/<tableName>/tableInfo
/hbase/.snapshot/<snapshotName>/<tableName>/regionManifest(.n)
{code}
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
We have already versioning for snapshots in the SnapshotDescription. Jesse added it, i think when we have discussed this ""single"" manifest format.
In terms of ""it will give us a clearer view of the snapshot"" it depends on your tastes :)
currently, you can just do a ls -lR /hbase/.snapshot and you know what is in the snapshot... with the manifests you can't do that, you should use the SnapshotInfo tool... so, it's a trade off... the manifest it may be better because more is compact and you can extend it with more metadata... but if you don't have a tool you can't see it... and if you corrupt the manifest file you have lost all your snapshot, while with the current one you can restore with losing just some data (as today when hbck removes one hfile)
for me, this is a ""next gen"" format, not a urgent fix because the current one is broken.
{quote}There may be the empty files produced by current implementation of snapshots.{quote}
Not sure what you mean here...

** Comment 5 **
[Comment excluded]

** Comment 6 **
A snapshot is a set of empty files, since we don't need the content.
basically the restore uses only the name of the file to know what to restore.
(the only special case is a reference file)
{quote}What would be the recommended format when this optimization is in place ? Are we going to provide option for user to switch between the former and this optimization ?{quote}
again not sure what you mean, if we're going for a format2, there will be just format2 on write, and both on read like the HFile.
The format that I've proposed is the one in the description basically each RS dump a list of SnapshotRegionManifest (one file per RS)
The master writes as today the .snapshotInfo and the .tableInfo

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
I think the idea of manifest is applicable to online snapshot as well.
See the following code snippet from HRegion.addRegionToSnapshot():
{code}
    for (Store store : stores.values()) {
      // 2.1. build the snapshot reference directory for the store
      Path dstStoreDir = TakeSnapshotUtils.getStoreSnapshotDirectory(
        snapshotRegionFs.getRegionDir(), Bytes.toString(store.getFamily().getName()));
      List<StoreFile> storeFiles = new ArrayList<StoreFile>(store.getStorefiles());
      if (LOG.isDebugEnabled()) {
        LOG.debug(""Adding snapshot references for "" + storeFiles  + "" hfiles"");
      }
      // 2.2. iterate through all the store's files and create ""references"".
      int sz = storeFiles.size();
      for (int i = 0; i < sz; i++) {
        if (exnSnare != null) {
          exnSnare.rethrowException();
        }
        Path file = storeFiles.get(i).getPath();
        // create ""reference"" to this store file.  It is intentionally an empty file -- all
        // necessary infomration is captured by its fs location and filename.  This allows us to
        // only figure out what needs to be done via a single nn operation (instead of having to
        // open and read the files as well).
        LOG.debug(""Creating reference for file ("" + (i+1) + ""/"" + sz + "") : "" + file);
        Path referenceFile = new Path(dstStoreDir, file.getName());
        boolean success = fs.getFileSystem().createNewFile(referenceFile);
{code}
Looking at the last line, we create reference file for each store file.
I think manifest file should be used in the above case as well.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
don't get me wrong, I was the original proposer of this format and I was throwing to Jesse and Jon those numbers  months ago. 
having one file per region also means having ~80bytes files. if you have lots regions probably you should think at having the files not in a flat directory structure otherwise some filesystem may be slow... and you're increasing the complexity for what? possibility to have a file corruption? (We have the same problem if you have a corrupted log and the RS goes down)
my guess is that one manifest per RS is enough, or better having the file-tracking table... at least we have all the consistency of all the other data and we don't have to worry about it.

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
 The ""file-tracking table"" is described a bit in the pdf attached to HBASE-7806 (""future""  section) and has a completely different idea from the manifest, and is not just snapshot related.
anyway for the near term (.94/.96) I still haven't decided, I don't consider this one as super high priority since we have tested the multi-file for months and even on large cluster it was good enough. I'll probably make a patch for this by next week. but I prefer working on making everything working (e.g. merge, rename table, hbck) instead of saying ""you can't merge a region if you use snapshots, you can rename a table & co..."" and  also it will be nice having more metrics to knows the state, how long it takes how many time it fails (the current FlushSnapshot fail every time there's a split or a region move) 

** Comment 18 **
[Comment excluded]

** Comment 19 **
updated based on the first sketch. It seems to work, a couple of tests passes like the restore one that contains the full flow... but there are still lots of tests failing because they have fs.exists(new Path(xyz)) check...

** Comment 20 **
[Comment excluded]

** Comment 21 **
The snapshot viewer, cleaners and export should be fine, since they were using the SnapshotReferenceUtil that allows you iterate through the snapshot files... so if you change the format is just a problem of SnapshotReferenceUtil on how to parse it, but there's lots of stuff that relies on path (e.g. tests)
but I guess converting everything to the snapshotReferenceUtil is in the scope of this jira.
anyway, once converted... 
I guess we can add the compatibility with the old format. And at this point it should be just matter of adding an if snapshotInfo.getVersion and iterate over the fs instead of the manifest files.
for rolling upgrades, aside the fact that moving from 94 to 95 is not supported. We can just add to HRegion.addRegionToSnapshot() the same if snapshotInfo.getVersion() and use the multi file format as default (the master produce the SnapshotInfo with version 1)...
also, I'd like to have a benchmark to see how much faster is this one  (in theory you've fewer roundtrip the NN)
but what you think about the manifest format?
Do you think that is the right way to do it?
is there something else that we should consider putting in, or removing?
any other thoughts?

** Comment 22 **
Do we need a tableinfo record?  I believe the table schema is in there.

** Comment 23 **
currently we have a separate file ""tableinfo"" with the HTD serialized.
I was thinking to add a repeated field in the SnapshotDescriptor, 
since is another master operation. but I'm not sure...

** Comment 24 **
There seems to be some overlap between the following two methods:
{code}
+  public static SnapshotRegionManifest buildManifestFromRegion (final HRegion region) {
+    SnapshotRegionManifest.Builder manifest = SnapshotRegionManifest.newBuilder();
...
+  public static SnapshotRegionManifest buildManifestFromDisk (final Configuration conf,
+      final FileSystem fs, final Path tableDir, final HRegionInfo regionInfo) throws IOException {
{code}
Can we reuse some code ?

** Comment 25 **
[Comment excluded]

** Comment 26 **
, have you considered writing this manifest data to a snapshots hbase table instead of the file system? 
Pros: no small files, likely less need for an external snapshot info viewer, 
Cons: lose ability to export only looking at file system (but can be done with a single hbase read/scan)
It also seems to be a reasonable place to prototype the one row-one snapshot (later table), cols are regions layout.


** Comment 27 **
I don't like having a table for tracking snapshots alone.
We've already discussed about having a ""global"" file tracking table, that allows you to describe tables and snapshots. This will have the advantage of not having the half  fs or meta state on failures, and allows to remove all the references and link files that doesn't really make sense.
I see this jira more as a ""improve the current situation"", without having to change much of the current design. 
also as you mentioned we lose the ability to export a snapshot with hbase down, and we don't get any big advantage.

** Comment 28 **
[Comment excluded]

** Comment 29 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12639656
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 31 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      String group = stringIsNotEmpty(filesGroup) || refStat == null ? filesGroup : refStat.getGroup();
+    for (Map.Entry<String, List<SnapshotRegionManifest.StoreFile>> familyEntry: snapshotFiles.entrySet()) {
+      HFileLink link = HFileLink.create(conf, table, region.getEncodedName(), family, storeFile.getName());
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.migration.TestNamespaceUpgrade
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 30 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12639718
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 31 new or modified tests.
    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.testLogRollOnDatanodeDeath([file java]:368)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 31 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12639837
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 31 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12640115
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 31 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 35 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12640517
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 31 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12642669
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 40 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
The patch committed removes a field from a PB definition, and reintroduces it as another field. Sorry, I was not involved in the code review. Did this issue came up? We should not be doing that I believe. The serialized objects are very short lived and only persisted inside a mapreduce job, which means that it might not break. 
{code}
diff --git hbase-protocol/src/main/protobuf/MapReduce.proto hbase-protocol/src/main/protobuf/MapReduce.proto
index 0c4c29e..eeb1b66 100644
--- hbase-protocol/src/main/protobuf/MapReduce.proto
+++ hbase-protocol/src/main/protobuf/MapReduce.proto
@@ -30,6 +30,7 @@ message ScanMetrics {
 }
 message TableSnapshotRegionSplit {
-  optional RegionSpecifier region = 1;
   repeated string locations = 2;
+  optional TableSchema table = 3;
+  optional RegionInfo region = 4;
 }
{code}
The other issue is that if you compile the PB definitions from trunk, it shows uncommitted changes that did not make into the patch.  can you please provide an addendum. 

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #433 (See )
HBASE-11742 (Backport HBASE-7987 and HBASE-11185 to 0.98) (Esteban Gutierrez and Matteo Bertozzi) (apurtell: rev 2e978a165481c45c6a3d97b185c797a0425ddc44)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/MapReduce.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Snapshot.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 56 **
FAILURE: Integrated in HBase-0.98 #460 (See )
HBASE-11742 (Backport HBASE-7987 and HBASE-11185 to 0.98) (Esteban Gutierrez and Matteo Bertozzi) (apurtell: rev 2e978a165481c45c6a3d97b185c797a0425ddc44)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Snapshot.proto
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/MapReduce.proto
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 57 **
[Comment excluded]
"
HBASE-11604,https://issues.apache.org/jira/browse/HBASE-11604,https://github.com/apache/hbase/blob/0.99.0/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java,Disable co-locating meta/master by default,NO,"To avoid possible confusing, it's better to keep the original deployment scheme in 1.0. ZK-less region assignment is off by default in 1.0 already. We should, by default, not assign any region to master or backup master.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Attached v2 with minor changes. Verified that standalone/pseudo distributed modes work fine.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
Yeah, was running unit tests before commit. 
org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer and org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster failed for me. Did you fix those in 3.1 patch? 

** Comment 35 **
[Comment excluded]

** Comment 36 **
FAILURE: Integrated in HBase-1.0 #177 (See )
HBASE-11604 Disable co-locating meta/master by default (jxiang: rev d283818c51d8e69a77972c880369fdbd45b3297d)
* src/main/docbkx/getting_started.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 37 **
[Comment excluded]
"
HBASE-11474,https://issues.apache.org/jira/browse/HBASE-11474,https://github.com/apache/hbase/blob/0.99.0/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java,[Thrift2] support authentication/impersonation,NO,This is to do the same as HBASE-11349 for Thrift2.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12655267
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static TServer getTNonBlockingServer(TProtocolFactory protocolFactory, TProcessor processor,
+  private static TServer getTThreadPoolServer(TProtocolFactory protocolFactory, TProcessor processor,
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12655267
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static TServer getTNonBlockingServer(TProtocolFactory protocolFactory, TProcessor processor,
+  private static TServer getTThreadPoolServer(TProtocolFactory protocolFactory, TProcessor processor,
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in HBase-0.98 #392 (See )
HBASE-11474  support authentication/impersonation (jxiang: rev 9cf54eee53e184b78ff05b0c6d2485f062c8cb83)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 7 **
[Comment excluded]

** Comment 8 **
FAILURE: Integrated in HBase-1.0 #34 (See )
HBASE-11474  support authentication/impersonation (jxiang: rev 757ecdb14f75169b1c1a02e7b36fd9c463a7b8f7)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-TRUNK #5351 (See )
HBASE-11540 Document HBASE-11474 (Misty Stanley-Jones) (jxiang: rev 9cc2b0ae9d8f08e01cc703447994368596e9874a)
* src/main/docbkx/thrift_filter_language.xml
* src/main/docbkx/security.xml


** Comment 12 **
FAILURE: Integrated in HBase-1.0 #74 (See )
HBASE-11540 Document HBASE-11474 (Misty Stanley-Jones) (jxiang: rev 90eb08eda58f5d921f4c311cfd50ae55dbb1b7d6)
* src/main/docbkx/security.xml
* src/main/docbkx/thrift_filter_language.xml


** Comment 13 **
[Comment excluded]
"
HBASE-12189,https://issues.apache.org/jira/browse/HBASE-12189,https://github.com/apache/hbase/blob/0.99.1/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RpcClient.java,Fix new issues found by coverity static analysis,NO,"Since the paper about testing and failures, it's probably a good time to start another run of coverity and fix the issues there.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673472
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673507
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673525
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestSplitLogManager
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
Test failure looks legit.  I think the test is wrong but don't know this code... let me try and figure.

** Comment 10 **
Emit actual state if assert fails.  Test looks right afterall.

** Comment 11 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673715
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673780
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestZooKeeper
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 14 **
Review?  Its a boring patch. Failure seems unrelated.  Can't make it happen locally.  Will rerun in meantime.

** Comment 15 **
[Comment excluded]

** Comment 16 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12674026
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]
"
HBASE-12126,https://issues.apache.org/jira/browse/HBASE-12126,https://github.com/apache/hbase/blob/0.99.1/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java,Region server coprocessor endpoint,NO,Utility to make endpoint calls against region server,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673193
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 4 warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    + * be obtained by calling {@link org.apache.hadoop.hbase.client.HBaseAdmin#coprocessorService(ServerName)},
+       * <code>rpc ExecRegionServerService(.CoprocessorServiceRequest) returns (.CoprocessorServiceResponse);</code>
+     * <code>rpc ExecRegionServerService(.CoprocessorServiceRequest) returns (.CoprocessorServiceResponse);</code>
+      LOG.debug(""Registered regionserver coprocessor service: service="" + serviceDesc.getFullName());
+          this.regionServerServices.registerService(((SingletonCoprocessorService) impl).getService());
+  static class DummyRegionServerEndpoint extends DummyService implements Coprocessor, SingletonCoprocessorService {
+      return org.apache.hadoop.hbase.coprocessor.protobuf.generated.DummyRegionServerEndpointProtos.internal_static_DummyRequest_descriptor;
+      return org.apache.hadoop.hbase.coprocessor.protobuf.generated.DummyRegionServerEndpointProtos.internal_static_DummyRequest_fieldAccessorTable
+              org.apache.hadoop.hbase.coprocessor.protobuf.generated.DummyRegionServerEndpointProtos.DummyRequest.class, org.apache.hadoop.hbase.coprocessor.protobuf.generated.DummyRegionServerEndpointProtos.DummyRequest.Builder.class);
+      if (!(obj instanceof org.apache.hadoop.hbase.coprocessor.protobuf.generated.DummyRegionServerEndpointProtos.DummyRequest)) {
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #563 (See )
HBASE-12126 Region server coprocessor endpoint (Virag Kothari) (apurtell: rev 884b049ce127122a2d64de3f82340aa05f9c7158)
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Client.proto
* [file java]
* [file java]
* hbase-server/src/test/protobuf/DummyRegionServerEndpoint.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]
"
HBASE-12522,https://issues.apache.org/jira/browse/HBASE-12522,https://github.com/apache/hbase/blob/0.99.2/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Backport WAL refactoring to branch-1,NO,"backport HBASE-10378 to branch-1.

This will let us remove the Deprecated stuff in master, allow some baking time within the 1.x line, and will give us the option of pulling back follow on performance improvements.

Incorporates all master branch patches associated with these jiras:

* HBASE-4744
* HBASE-10378
* HBASE-12532
* HBASE-12535

Also fixes the handling of wals in the NamespaceUpgrade code, originally planned for HBASE-12612.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Let me go over the changes. From the release notes, most of the changes are ok except that I think Phoenix will break (due to secondary index stuff). If we can give them a way out, it should be fine for 1.0. 

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
 the WAL refactoring is already on the master branch, do you mean branch-1?
If you mean branch-1, I've been working on the cleanup in HBASE-11983 while waiting for  and the phoenix folks to take a look at the scope of impact.
If we're reasonably sure they're going to be fine I can get a branch-1 backport together in the first half of next week.

** Comment 10 **
[Comment excluded]

** Comment 11 **
{quote}
Or do you think Phoenix's secondary index needs to have WAL edits that span regions?
{quote}
WAL Edits can't span regions because our log SeqId is only guaranteed to monotonically increase by region. Local index doesn't span edits across regions. For transaction support, some high level support is needed but not at the WAL level.


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
patch ended up including HBASE-10378 (and addendum), HBASE-12532 (and addendum), HBASE-12535, and HBASE-4744 (to minimize a conflict. it just fixes how FSHLog handles a log event and enables a previously @Ignored test)
small tests passed locally. waiting for a run of full tests to finish on a remote box.
if anyone thinks the inclusion of HBASE-4744 needs review, let me know. it back ported with only a minor conflict on an import statement.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
patch rebased onto current branch-1.
I'm getting a failure in TestNamespaceUpgrade after applying the patch. This test is no longer present in master, so this might be a problem generally. Looking into it now.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
pushed to branch-1. I believe the release note for the combination of patches is the same as the one on HBASE-10378.
, would you prefer I copy those notes here or is it fine to just have the reference? I'm not sure how we make our user facing release notes.

** Comment 28 **
[Comment excluded]

** Comment 29 **
FAILURE: Integrated in HBase-1.0 #527 (See )
HBASE-12522 Backport of write-ahead-log refactoring and follow-ons. (busbey: rev 8959828fb560c0df7d1069ae63eb58af8b6ee35b)
* [file java]
* [file java]
* [file java]
* hbase-shell/src/main/ruby/shell/commands/hlog_roll.rb
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* src/main/docbkx/ops_mgt.xml
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Admin.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* bin/hbase.cmd
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* src/main/docbkx/book.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/WAL.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-shell/src/main/ruby/shell/commands/wal_roll.rb
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* bin/hbase
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* src/main/docbkx/performance.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-shell/src/main/ruby/shell.rb
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-common/src/main/resources/hbase-default.xml
* [file java]
* hbase-protocol/src/main/protobuf/ZooKeeper.proto
* [file java]
* [file java]
* [file java]
* [file java]
* src/main/docbkx/troubleshooting.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/RegionServerStatus.proto
* [file java]
* hbase-shell/src/main/ruby/hbase/admin.rb
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]
"
HBASE-12526,https://issues.apache.org/jira/browse/HBASE-12526,https://github.com/apache/hbase/blob/0.99.2/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java,Remove unused imports,NO,"Even if we relax the import checker to include javadocs in HBASE-12523, we still get ~250 remaining. Find and fix. Try to avoid reorganizing.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 58b6b24c2999511daefa0dff2e2ae745cba24e35.
  ATTACHMENT ID: 12684247
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 182 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
, this patch for branch-1 contains fix for unused imports and subsequent Javadoc Warnings generated due to removal of imports.

** Comment 6 **
[Comment excluded]

** Comment 7 **
FAILURE: Integrated in HBase-1.0 #525 (See )
HBASE-12526 Remove unused imports (Varun Saxena) (stack: rev a5169d422b0fa4e7c62d04187398a0a9aad0ade9)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 8 **
[Comment excluded]
"
HBASE-12782,https://issues.apache.org/jira/browse/HBASE-12782,https://github.com/apache/hbase/blob/1.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java,ITBLL fails for me if generator does anything but 5M per maptask,YES,"Anyone else seeing this?  If I do an ITBLL with generator doing 5M rows per maptask, all is good -- verify passes. I've been running 5 servers and had one splot per server.  So below works:


HADOOP_CLASSPATH=""/home/stack/conf_hbase:`/home/stack/hbase/bin/hbase classpath`"" ./hadoop/bin/hadoop --config ~/conf_hadoop org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList --monkey serverKilling Generator 5 5000000 g1.tmp

or if I double the map tasks, it works:

HADOOP_CLASSPATH=""/home/stack/conf_hbase:`/home/stack/hbase/bin/hbase classpath`"" ./hadoop/bin/hadoop --config ~/conf_hadoop org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList --monkey serverKilling Generator 10 5000000 g2.tmp

...but if I change the 5M to 50M or 25M, Verify fails.

Looking into it.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Turned off master killing and cleaned out all WALs so no chance we replay old stuff polluting our run but still fails (I noticed we are not killing the RS with meta).  Seems like basic dataloss when monkey's running.  Will keep digging.

** Comment 3 **
[Comment excluded]

** Comment 4 **
Script running MR job. 25M per slot. 5 servers/slots. 125M per map task seems to bring on the failure pretty reliably.
$ more bin/generator.sh
export HOME=/home/stack
export JAVA_HOME=${HOME}/bin/jdk1.7.0_67/
export HBASE_HOME=${HOME}/hbase
echo 'disable ""IntegrationTestBigLinkedList""; drop ""IntegrationTestBigLinkedList""'| ${HOME}/hbase/bin/hbase --config ${HOME}/conf_hbase shell
date=`date -u +""%Y%m%dT%H%M%SZ""`
export HADOOP_CLASSPATH=""${HOME}/conf_hbase:`${HOME}/hbase/bin/hbase classpath`""
${HOME}/hadoop/bin/hadoop --config ${HOME}/conf_hadoop org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList --monkey serverKilling Generator 5 25000000 g.$date
Here is how I run verify:
$ more bin/verify.sh
export HOME=/home/stack
export JAVA_HOME=${HOME}/bin/jdk1.7.0_67/
export HBASE_HOME=${HOME}/hbase
date=`date -u +""%Y%m%dT%H%M%SZ""`
export HADOOP_CLASSPATH=""${HOME}/conf_hbase:`${HOME}/hbase/bin/hbase classpath`""
${HOME}/hadoop/bin/hadoop --config ${HOME}/conf_hadoop org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList Verify v.$date 5
Bits of shell I've been using debugging:
hbase(main):021:0> java.util.Date.new(1420593779581).toString()
hbase(main):051:0> c = org.apache.hadoop.hbase.HBaseConfiguration.create
=> #<Java::OrgApacheHadoopConf::Configuration:0x3905ee13>
hbase(main):054:0> t = org.apache.hadoop.hbase.client.HTable.new(c, ""IntegrationTestBigLinkedList"")
=> #<Java::OrgApacheHadoopHbaseClient::HTable:0x787ce7d9>
hbase(main):056:0> t.getRegionLocation(""\xC0AqA\xEC\xF6\xFEd\xE6\xB3\xD6\xABs\xD9!w"")
=> #<Java::OrgApacheHadoopHbase::HRegionLocation:0x5b12e5ff>
hbase(main):057:0> rl = t.getRegionLocation(""\xC0AqA\xEC\xF6\xFEd\xE6\xB3\xD6\xABs\xD9!w"")
=> #<Java::OrgApacheHadoopHbase::HRegionLocation:0x5b12e5ff>
hbase(main):058:0> print rl
region=IntegrationTestBigLinkedList,\xE6ffffffX,1420593356701.20d5b9a6b5c4855ce61cb6db4f766767., hostname=c2025.halxg.cloudera.com,16020,1420590827340, seqNum=9928hbase(main):059:0>
hbase(main):002:0* org.apache.hadoop.hbase.util.Bytes.toLong(""\x00\x00\x00\x00\x00\xED\xAB\xE6"".to_java_bytes)
=> 15576038


** Comment 5 **
Does this happen in 0.98 and before?
Do any of the map tasks of the ITBLL fail?
Does it reproduce with the no-kill monkey?

** Comment 6 **
bq. Does this happen in 0.98 and before?
I have not tried. IT tests seem a bit broke until lately so assumed no one really running them and if they did, did it at small scale (25M or so) which seems to work.
Let me try this since easy enough to bring on the breakage.
bq. Do any of the map tasks of the ITBLL fail?
No
bq. Does it reproduce with the no-kill monkey?
No. Can't repro w/o the killers. It is the monkey's fault.
Thanks for keeping eye out 


** Comment 7 **
Seems harder getting 0.98 to fail. Ran twice at 125M/5slots and it passed.  Upped to 250M and 40 missing references which is also less than I normally see on 1.0.  Trying some more.  Will go back to 1.0 since easier repro there and hopefully same issue.  Will be back to 0.98 after to make sure any fix covers it too.

** Comment 8 **
Fourth run failed at 125M on 0.98 so 50% failure rate.

** Comment 9 **
Focusing on write side first.
Debugging, the emission on end of verify step is of no use. I find that I have to go into the reduce logging to find these log lines from ITBLL:
          LOG.error(""Linked List error: Key = "" + keyString + "" References = "" + refsSb.toString());
I then take the 'References' record, do a get on it.  It is the 'meta:previous' that is 'missing'.  This missing record will have been 'written' as part of the previous 1M writes at 'count' - 1M. The time on this record will be a timestamp that is '1M' ahead of when the 'missing' record would have been written (usually about 15seconds per 1M but if server down, can be minutes writing the 1M).
The ITBLL rows have too many unprintable characters -- quotes, single ticks, left braces, etc. -- to make for easy scripting.  Tried but its kinda tough bridging 'text' output -- escaped bytes -- jruby and java.  Spent some time trying to write rows with printable records but seems to make for more failures; need to spend time on this... as is its hard to script ITBLL failures so can get a 'bigger picture' on failure profile.  Another issue.
I've disabled killing master and splits to make things easier for myself. We still fail reliably.
I can triangulate a little looking at a few failed records and have identified suspicious-looking write periods as asyncprocess tries to cross over a failed regionserver.  The attached test reproduces the same logging sequence in a unit test (was trying to narrow the moving parts around a failure) that I see up in cluster but it looks like the asyncprocess is not the issue; it's accounting doesn't seem to be hiccuping.
Let me redo this test as an integrationtest to run against the cluster to be sure -- perhaps it a timing thing hard to repro in the one JVM -- but it doesn't look like write side is the issue.  Dang.

** Comment 10 **
Added IT version and ran it against the cluster.  Fails if numbers are large -- 100M.

** Comment 11 **
[Comment excluded]

** Comment 12 **
yeah, debugging ITBLL has proven to be very hard. What I had done previously was to keep all the files and WAL's and do custom search on top of that. 

** Comment 13 **
bq. yeah, debugging ITBLL has proven to be very hard. What I had done previously was to keep all the files and WAL's and do custom search on top of that.
Let me try and make some tools.  The failure only seems to come at scale which is pain debugging.
On my weekend messings, I was hoping my pointed replication of the set of failures during a 'suspicious' section of client retries would narrow the debug surface especially if I was able to do it in a unit test.  What I found was that a high fidelity reproduction of the exceptions thrown and with retries in extremis, in a unit test environment, it was still insufficient for dataloss. Taking my unit test and redoing as an IT test to get real cluster timings in the mix, again, no cigar, not unless the numbers large (100M+) -- but then I was back into the big original ITBLL space trying to trace the ghost of missing rows.
Let me do the WAL search tool.

** Comment 14 **
Stack, Lars, and I discussed this for a bit today, some debugging suggestions:
- Build the WAL search tool to determine if there's loss prior to WAL commit or after
- Change the code so log replay will replay all WALs we have, will determine if there's a bug deciding what WALs can be skipped. 
- If it turns out there is missing data in the WAL, the client is suspect but possibly also the new WAL write threading model introduced in 0.98. Check if the problem is reproducible with the head of 0.96 branch.


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
So looks like replay is at issue. So maybe switch off the logic to only replay the logs after a certain sequence number, and replay all logs, to see if that is at fault?

** Comment 18 **
All lost edits show in three WALs on three different machines and all come in during the same 40ms period. None of these three logs are replayed to recover edits for crashes on these machines. They are instead archived off. I think this means WAL replay is not the culprit.  Looking at where the missing edits lie in one of the WALs using WALPrettyPrinter, they are not clumped together but spread out over the log.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
There was a bug in my little search tool such that I was finding 'references' rather than the keys that were missing. It sent me on false trail.
After fixing bug, the 'good' news is that the 'lost' keys can still be found in WALs.
Following one trail, I can see -- using WALPrettyPrinter -- that a good clump of missing edits are contiguous in a particular WAL. I can also see that they are the bulk of a single WALEdit of 800+ cells.  All cells in this batch have the same sequenceid.  A portion of this WALEdit's edits made it in.
The server that received the missing edits soon after crashed. The edits are in the WAL. The server had not had a chance to flush.
On replay, I can see a recovered edits file that should have the edits that cover the missing block but while I can preserve hfiles and WALs with properties like those below, recovered.edits files are deleted when we are done.  Let me try and keep them around.
<property>
<name>hbase.master.logcleaner.ttl</name>
<value>600000000</value>
<description>Maximum time a WAL can stay in the .oldlogdir directory,
after which it will be cleaned by a Master thread.</description>
</property>
<property>
<name>hbase.master.hfilecleaner.ttl</name>
<value>600000000</value>
<description>Maximum time a WAL can stay in the .oldlogdir directory,
after which it will be cleaned by a Master thread.</description>
</property>
Other notes:
+ The next WAL entry in the WAL makes it in fine. Its like we dropped the bulk of a WAL entry in middle of the WAL.
+ 4 seconds to recover lease. We need to fix.
+ We report length on a log file before we recover lease. The length is < that final length. Might be worth trip to nn to find new length post lease recovery.
Patch is my search tool and other cleanup of logs and fixup for WALPrettyPrinter.


** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
Looks like this fix helps alot. I ran my rig and it passed (9 times out of ten it does not).  I then doubled up the counts so we did 250M instead of 125M and again it passed.  Will run some bigger tests over w/e.
Here is the patch I'd like to apply. It has the fix, an obnoxious unit test to verify the fix, and then the tooling I used to find the issue.  That patch is fat because it includes a big data file of recovered.edits to replay in the unit test.
Patch changes ITBLL to add better logging with more data around missing rows. It also amends the verify step in ITBLL to emit the binary missing along w/ the type of the missing data. This output is then useable by a new tool, a search, which takes the missing rows from verify and then goes off to search WALs and oldWALs. This latter tool was good for figuring where the edits had gone missing (ante- or post-WAL).
The search tool emits each time it finds a key.  This was useful narrowing in on the WALs that had the rows that  were missing.
I'd then take the name of the WAL that had the edits and then go look at its provenance.  In this case, the WALs were opened just before a crash and no flush had happened.  The WALs would then be split to produce recovered.edits.
The patch includes a means of having recovered.edits files moved to archive when done rather than delete (This is a change in HRegion).  This was useful for checking if the WAL split had actually moved the missing edits from WAL to recovered.edits. It had in this case, so then the replay of edits was suspect (of note, the recovered.edits files can be viewed with the WALPrettyPrinter -- which also has some improvements courtesy of this patch).
WALPlayer is used by the search tool in ITBLL.  Added a filter method so I could use the WALPlayer near directly when searching.
Made removing of files from archive or wherever DEBUG level rather than TRACE.
Made a minor improvement to recovered edits replay checking at the WALEdit level if the edit is for THIS region rather than doing the check per Cell. It will help some with the likes of the recovered.edits files I was seeing in my cluster testing where a single WALEdit had hundreds of Cells in it.
The actual fix in HRegion was a simple one-liner (see above).


** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit b08802a3e8e522f84519415b83455870b49bf8da.
  ATTACHMENT ID: 12695639
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 13 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      protected void setup(Reducer<BytesWritable, BytesWritable, BytesWritable, BytesWritable>.Context context)
+      protected void cleanup(Reducer<BytesWritable, BytesWritable, BytesWritable, BytesWritable>.Context context)
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestRecoveredEdits
                  org.apache.hadoop.hbase.mapreduce.TestWALPlayer
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
TestRecoveredEdits failed because the data file is not in place. Might have to commit that separately.

** Comment 48 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #786 (See )
HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask (stack: rev 1bb55d86ecbb4523e5ac5f08dc7ad7b2fbec68ac)
* [file java]


** Comment 49 **
FAILURE: Integrated in HBase-0.98 #827 (See )
HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask (stack: rev 1bb55d86ecbb4523e5ac5f08dc7ad7b2fbec68ac)
* [file java]


** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
FAILURE: Integrated in HBase-0.98 #828 (See )
HBASE-12782  Addendum fixes variable name (tedyu: rev fd498f18548b5dd37f45c2f3cdc46b11b11ecbd6)
* [file java]


** Comment 53 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit b08802a3e8e522f84519415b83455870b49bf8da.
  ATTACHMENT ID: 12695694
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 13 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      protected void setup(Reducer<BytesWritable, BytesWritable, BytesWritable, BytesWritable>.Context context)
+      protected void cleanup(Reducer<BytesWritable, BytesWritable, BytesWritable, BytesWritable>.Context context)
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestRecoveredEdits
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 54 **
[Comment excluded]

** Comment 55 **
This fix helps. The 125M and 250M tests pass where before they always failed. Looks like the 500M failed so some more stuff to fix it seems. Will open new issue for that.
 I should turn on DLR. I think I have tooling to figure any dataloss.  Should use it while it fresh.
We need to have IT tests running with regularity (stating the obvious).  Might have caught this bug at commit-time.

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
FAILURE: Integrated in HBase-1.1 #128 (See )
HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask (stack: rev e06be2060cf8449a732c7a8b024d6fcf0c5e3ef6)
* [file java]
* hbase-server/src/test/data/0000000000000016310
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 59 **
FAILURE: Integrated in HBase-1.0 #700 (See )
HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask (stack: rev fbbbf7e6d809c5c83c042ec5741a3d9b2fd712c6)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/test/data/0000000000000016310
* [file java]


** Comment 60 **
FAILURE: Integrated in HBase-TRUNK #6075 (See )
HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask (stack: rev 825871431ec48036fd3e3cd9625c451b50cbe308)
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/test/data/0000000000000016310
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 61 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #787 (See )
HBASE-12782  Addendum fixes variable name (tedyu: rev fd498f18548b5dd37f45c2f3cdc46b11b11ecbd6)
* [file java]


** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
FAILURE: Integrated in HBase-TRUNK #6076 (See )
    HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask: ADDENDUM -- ADD DATA FILE TO RAT EXCLUDES (noticed by Ted Yu) (stack: rev 86b8b8da0082bea9e8b9c43df917acd67a680cd1)
* pom.xml


** Comment 65 **
SUCCESS: Integrated in HBase-1.1 #131 (See )
    HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask: ADDENDUM -- ADD DATA FILE TO RAT EXCLUDES (noticed by Ted Yu) (stack: rev a69e1b67334e165658caa1c36dd368cc3dff32e6)
* pom.xml


** Comment 66 **
SUCCESS: Integrated in HBase-1.0 #703 (See )
    HBASE-12782 ITBLL fails for me if generator does anything but 5M per maptask: ADDENDUM -- ADD DATA FILE TO RAT EXCLUDES (noticed by Ted Yu) (stack: rev b0ea2fba424e5dba97b9ec1659000dcedc76ec4d)
* pom.xml


** Comment 67 **
[Comment excluded]

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
[Comment excluded]

** Comment 71 **
Here is a doc I wrote up a while ago on how to debug ITBLL, the tooling available, and examples on how to track problems. Might be of use to others.
"
HBASE-13853,https://issues.apache.org/jira/browse/HBASE-13853,https://github.com/apache/hbase/blob/1.0.2/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java,ITBLL improvements after HBASE-13811,NO,"After 2 days of log mining with ITBLL Search tool (thanks Stack, BTW for the tool), the sequence of events are like this: 

One of mappers from Search reportedly finds missing keys in some WAL file:
{code}
2015-06-07 06:49:24,573 INFO [main] org.apache.hadoop.mapred.MapTask: Processing split: hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/oldWALs/os-enis-dal-test-jun-4-4.openstacklocal%2C16020%2C1433636320201.default.1433637872643 (-9223372036854775808:9223372036854775807) length:132679657 2015-06-07 06:49:24,639 INFO [main] org.apache.hadoop.hbase.mapreduce.WALInputFormat: Opening reader for hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/oldWALs/os-enis-dal-test-jun-4-4.openstacklocal%2C16020%2C1433636320201.default.1433637872643 (-9223372036854775808:9223372036854775807) length:132679657
2015-06-07 06:50:16,383 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Loaded keys to find: count=2384870 2015-06-07 06:50:16,607 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC/meta:prev/1433637873293/Put/vlen=16/seqid=0 2015-06-07 06:50:16,663 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC/meta:count/1433637873293/Put/vlen=8/seqid=0
2015-06-07 06:50:16,664 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC/meta:client/1433637873293/Put/vlen=71/seqid=0 2015-06-07 06:50:16,671 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=$\x1A\x99\x06\x86\xE7\x07\xA2\xA7\xB2\xFB\xCEP\x12""\x04/meta:prev/1433637873293/Put/vlen=16/seqid=0
2015-06-07 06:50:16,672 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=$\x1A\x99\x06\x86\xE7\x07\xA2\xA7\xB2\xFB\xCEP\x12""\x04/meta:count/1433637873293/Put/vlen=8/seqid=0 2015-06-07 06:50:16,678 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=$\x1A\x99\x06\x86\xE7\x07\xA2\xA7\xB2\xFB\xCEP\x12""\x04/meta:client/1433637873293/Put/vlen=71/seqid=0
2015-06-07 06:50:16,679 INFO [main] org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList$Search: Found cell=\x1F\x80#\x95\xAE:i=)S\x01\x08 \xD6\xFF\xD5/meta:prev/1433637873293/Put/vlen=16/seqid=0
{code}

{{hlog -p}} confirms the missing keys are there in the file: 
{code}
Sequence=7276 , region=b086e29f909c9790446cd457c1ea7674 at write timestamp=Sun Jun 07 00:44:33 UTC 2015
row=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC, column=meta:prev
    value: \x1B\xF5\xF3^\x8D\xB4\x85\xE3\xF4wS\x9A]\x0D\xABe
row=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC, column=meta:count
    value: \x00\x00\x00\x00\x002\x87l
row=!+\xF1CB\x08\x13\xA0W\x94\xC4\x1C\xDA\x1D\x0D\xBC, column=meta:client
    value: Job: job_1433466891829_0002 Task: attempt_1433466891829_0002_m_000003_0
{code}

When the RS gets killing from CM, master does WAL splitting: 
{code}
./hbase-hbase-regionserver-os-enis-dal-test-jun-4-2.log:2015-06-07 00:46:12,581 INFO  [RS_LOG_REPLAY_OPS-os-enis-dal-test-jun-4-2:16020-0] wal.WALSplitter: Processed 2971 edits across 4 regions; edits skipped=740; log file=hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/WALs/os-enis-dal-test-jun-4-4.openstacklocal,16020,1433636320201-splitting/os-enis-dal-test-jun-4-4.openstacklocal%2C16020%2C1433636320201.default.1433637872643, length=132679657, corrupted=false, progress failed=false
{code}

The edits with Sequence=7276 should be in this recovered.edits file: 
{code}
2015-06-07 00:46:12,574 INFO  [split-log-closeStream-2] wal.WALSplitter: Closed wap hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/data/default/IntegrationTestBigLinkedList/b086e29f909c9790446cd457c1ea7674/recovered.edits/0000000000000007276.temp (wrote 739 edits in 3950ms)
2015-06-07 00:46:12,580 INFO  [split-log-closeStream-2] wal.WALSplitter: Rename hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/data/default/IntegrationTestBigLinkedList/b086e29f909c9790446cd457c1ea7674/recovered.edits/0000000000000007276.temp to hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/data/default/IntegrationTestBigLinkedList/b086e29f909c9790446cd457c1ea7674/recovered.edits/0000000000000008752
{code}

Notice that the file {{0000000000000008752}} should contain {{(wrote 739 edits in 3950ms)}}. 

When the region gets opened again, it replays the recovered.edits files:
{code}
2015-06-07 00:46:17,764 DEBUG [RS_OPEN_REGION-os-enis-dal-test-jun-4-5:16020-0] regionserver.HRegion: Found 4 recovered edits file(s) under hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/data/default/IntegrationTestBigLinkedList/b086e29f909c9790446cd457c1ea7674
{code}

However, it does not see ANY entry in the recovered.edits file  {{0000000000000008752}}: 
{code}
2015-06-07 00:46:17,796 DEBUG [RS_OPEN_REGION-os-enis-dal-test-jun-4-5:16020-0] regionserver.HRegion: Applied 0, skipped 0, firstSequenceIdInLog=-1, maxSequenceIdInLog=-1, path=hdfs://os-enis-dal-test-jun-4-1.openstacklocal:8020/apps/hbase/data/data/default/IntegrationTestBigLinkedList/b086e29f909c9790446cd457c1ea7674/recovered.edits/0000000000000008752
{code}

Looking at the length of the file, it is very small which means that the edits are not written. 

Now, If you are still with me, I think the reason why we do not write any edit to {{0000000000000008752}} although we say we have written 739 edits is due to HBASE-12405. 

Specifically, we pass {{FSHLog.getEarliestMemstoreSeqNum() - 1}} as the stores flush seqId, which gets saved in the master and used with {{LastSequenceId}}.  

The WALSplitter skips the cells per store using {{filterCellByStore()}} which is logical. However, the data loss happens, because   {{FSHLog.getEarliestMemstoreSeqNum()}} ignores flushing edits. For example, if we have seqId = 10 to 100 as flushing, and seqId 101 in the new memstore, and heartbeat to master during the flush will carry 101 as the earliest flush seqId. if the flush does not complete (due to RS getting killed) this results in incorrectly skipped edits. 

The WAL replay code also uses this kind of filtering so this may also explain some of the failures with DLR. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
And what's the failures with DLR? DLR doesn't get sequence id from master I think, it gets sequence id from zookeeper which is uploaded by the regionserver that holds the region? Thanks.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1.1 branch at commit 9f43a3bea6a996a93f3c960801a0200b52419b34.
  ATTACHMENT ID: 12738293
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
I extracted from Enis patch stuff that was not addressed by HBASE-13811 -- the changes to ITBLL and extra info output in WALSplitter. This at least should go in. Can do in a new issue or here.

** Comment 12 **
bq. I extracted from Enis patch stuff that was not addressed by HBASE-13811 – the changes to ITBLL and extra info output in WALSplitter. This at least should go in. Can do in a new issue or here.
Sounds good. Lets do it here. We can change the issue title. 

** Comment 13 **
[Comment excluded]

** Comment 14 **
I've pushed this to 1.0+ with the following addendum: 
{code}
diff --git [file java] [file java]
index c3751ae..df0c611 100644
--- [file java]
+++ [file java]
@@ -1278,7 +1278,7 @@ public class WALSplitter {
               return null;
             }
             if (LOG.isDebugEnabled()) {
-              LOG.debug(""Closed wap "" + wap.p + "" (wrote "" + (wap.editsWritten-wap.editsSkipped)
+              LOG.debug(""Closed wap "" + wap.p + "" (wrote "" + wap.editsWritten
{code}
The addendum is needed, since branch-1.1 and master was doing editsWritten counting differently. Now all 1.1+ are the same.
Summary for reference: We committed the better fix to the same root cause in HBASE-13811, and only committed small changes for better logging and ITBLL job in this patch. 
Thanks Stack and Duo. 


** Comment 15 **
FAILURE: Integrated in HBase-1.0 #951 (See )
HBASE-13853 ITBLL improvements after HBASE-13811 (enis: rev 8079ec504b5202d0d1b9196e8d47038d2246b41a)
* [file java]
* [file java]
* [file java]


** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 5c16b34e32256b2ca4667f1bd98a8bf7a8489a15.
  ATTACHMENT ID: 12738407
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestRegionRebalancing
     -1 core zombie tests.  There are 6 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting([file java]:3949)
	at org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders.testSeekingOnSample([file java]:204)
	at org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers.testEncodedSeeker([file java]:121)
	at org.apache.hadoop.hbase.io.encoding.TestChangingEncoding.testChangingEncoding([file java]:203)
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testStoreFileCacheOnWriteInternals([file java]:269)
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testStoreFileCacheOnWrite([file java]:487)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 17 **
SUCCESS: Integrated in HBase-1.1 #529 (See )
HBASE-13853 ITBLL improvements after HBASE-13811 (enis: rev 0f88746827290de350fe64188ff5c8e28cc130fb)
* [file java]
* [file java]
* [file java]
HBASE-13853 ITBLL improvements after HBASE-13811 (ADDENDUM to fix logging) (enis: rev 978c503d9b4e85a4014a41df847876ca15e316f5)
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-1.2 #138 (See )
HBASE-13853 ITBLL improvements after HBASE-13811 (enis: rev 26458b41ceab6bc4f524b355833020bdf7d8c529)
* [file java]
* [file java]
* [file java]
HBASE-13853 ITBLL improvements after HBASE-13811 (ADDENDUM to fix logging) (enis: rev cd71d37cb3799257239683e572c93bd183025e6e)
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-TRUNK #6552 (See )
HBASE-13853 ITBLL improvements after HBASE-13811 (enis: rev fe5712f9b4ba9c031042d861a41592183775f98a)
* [file java]
* [file java]
* [file java]
HBASE-13853 ITBLL improvements after HBASE-13811 (ADDENDUM to fix logging) (enis: rev 5f92b91e60c6217e668be596d99065de1a0e276e)
* [file java]


** Comment 20 **
FAILURE: Integrated in HBase-1.0 #952 (See )
HBASE-13853 ITBLL improvements after HBASE-13811 (ADDENDUM to fix logging) (enis: rev 0ec677bb73f2a334021bce29c2c82e218b08ce17)
* [file java]


** Comment 21 **
[Comment excluded]
"
HBASE-13374,https://issues.apache.org/jira/browse/HBASE-13374,https://github.com/apache/hbase/blob/1.1.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientSmallScanner.java,Small scanners (with particular configurations) do not return all rows,NO,"I recently ran into a couple data loss issues with small scans. Similar to HBASE-13262, these issues only appear when scans are configured in such a way that the max result size limit is reached before the caching limit is reached. As far as I can tell, this issue affects branches 0.98+

I should note that after investigation it looks like the root cause of these issues is not the same as HBASE-13262. Rather, these issue are caused by errors in the small scanner logic (I will explain in more depth below). 

Furthermore, I do know that the solution from HBASE-13262 has not made its way into small scanners (it is being addressed in HBASE-13335). As a result I made sure to test these issues with the patch from HBASE-13335 applied and I saw that they were still present.

The following two issues have been observed (both lead to data loss):

1. When a small scan is configured with a caching value of Integer.MAX_VALUE, and a maxResultSize limit that is reached before the region is exhausted, integer overflow will occur. This eventually leads to a preemptive skip of the regions.

2. When a small scan is configured with a maxResultSize that is smaller than the size of a single row, the small scanner will jump between regions preemptively. This issue seems to be because small scanners assume that, unless a region is exhausted, at least 2 rows will be returned from the server. This assumption isn't clearly state in the small scanners but is implied through the use of {{skipRowOfFirstResult}}.

Again, I would like to stress that the root cause of these issues is *NOT* related to the cause of HBASE-13262. These issues occur because of inappropriate assumption made in the small scanner logic. The inappropriate assumptions are:
1. Integer overflow will not occur when incrementing caching
2. At least 2 rows will be returned from the server unless the region has been exhausted

I am attaching a patch that contains tests to display these issues. If these issues should be split into separate JIRAs please let me know.","** Comment 1 **
Attaching patch that can be applied to branch-1.0+. This patch does not contain a fix. It contains the tests cases that allow us to see the failure modes.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Looks like there is an issue fetching from git. I see this in the console output of the precommit build:
{quote}
FATAL: Failed to fetch from [link]
{quote}

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 6c22333599b9910314f57d0b6a580fb69eb7aa2b.
  ATTACHMENT ID: 12709332
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 4 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.activemq.tests.integration.cluster.distribution.ClusterTestBase.stopServers([file java]:2231)
	at org.apache.activemq.tests.integration.cluster.distribution.SymmetricClusterWithBackupTest.stopServers([file java]:571)
	at org.apache.activemq.tests.integration.cluster.distribution.SymmetricClusterTest.tearDown([file java]:49)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit fef8ae9c70f47d87baa985a66e94d7b90b861f08.
  ATTACHMENT ID: 12709477
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 4 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
FAILURE: Integrated in HBase-1.0 #848 (See )
HBASE-13374 Small scanners (with particular configurations) do not return all rows (enis: rev 9ccf980f64ebf8ac05c7ce36771ee9cd774b606e)
* [file java]
* [file java]
* [file java]


** Comment 22 **
FAILURE: Integrated in HBase-TRUNK #6347 (See )
HBASE-13374 Small scanners (with particular configurations) do not return all rows (enis: rev 057499474c346b28ad5ac3ab7da420814eba547d)
* [file java]
* [file java]
* [file java]


** Comment 23 **
FAILURE: Integrated in HBase-1.1 #366 (See )
HBASE-13374 Small scanners (with particular configurations) do not return all rows (enis: rev 30f6d54cc8a335f6d8af865b61bbadc67118180a)
* [file java]
* [file java]
* [file java]


** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #889 (See )
HBASE-13374 Small scanners (with particular configurations) do not return all rows (enis: rev cddcc28fc1682bed32d0dd775d66db5ee7b92240)
* [file java]
* [file java]
* [file java]


** Comment 26 **
[Comment excluded]
"
HBASE-13216,https://issues.apache.org/jira/browse/HBASE-13216,https://github.com/apache/hbase/blob/1.1.0/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RpcClientImpl.java,Add version info in RPC connection header,YES,"In the operation of a cluster, we usually want to know which clients are using the HBase client with critical bugs or too old version we will not support in future.

By adding version info in RPC connection header, we can get these informations from audit log and promote them upgrade before a deadline.

Discussions and suggestions are welcomed. Thanks.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
This looks good to me. +1 Adding this info should just work even when going against old server? Have you tried it ? Only comment is you have setVersioInfo.... should it be setVersionInfo? (You have this down in the pb definition).

** Comment 4 **
[Comment excluded]

** Comment 5 **
Tested the patch in following cases and it works fine.
- Old client against new server
- New client against old server
- New client against new server

** Comment 6 **
Update the log when there is no version info in connection header

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ff8840acc3d3f258c933c91b275922d6528b6893.
  ATTACHMENT ID: 12704082
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1919 checkstyle errors (more than the master's current 1917 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      "" \002(\t\022\014\n\004user\030\004 \002(\t\022\014\n\004date\030\005 \002(\t\022\024\n\014src_"" +
+      ""\t\022\014\n\004port\030\004 \001(\005\022\024\n\014do_not_retry\030\005 \001(\010\""\246\001"" +
+              new java.lang.String { ""Version"", ""Url"", ""Revision"", ""User"", ""Date"", ""SrcChecksum"", });
+              new java.lang.String { ""UserInfo"", ""ServiceName"", ""CellBlockCodecClass"", ""CellBlockCompressorClass"", ""VersioInfo"", });
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster
                  org.apache.hadoop.hbase.mapreduce.TestImportExport
     -1 core zombie tests.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.testLogRollOnPipelineRestart([file java]:456)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ff8840acc3d3f258c933c91b275922d6528b6893.
  ATTACHMENT ID: 12704089
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1919 checkstyle errors (more than the master's current 1917 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      "" \002(\t\022\014\n\004user\030\004 \002(\t\022\014\n\004date\030\005 \002(\t\022\024\n\014src_"" +
+              new java.lang.String { ""Version"", ""Url"", ""Revision"", ""User"", ""Date"", ""SrcChecksum"", });
+              new java.lang.String { ""UserInfo"", ""ServiceName"", ""CellBlockCodecClass"", ""CellBlockCompressorClass"", ""VersionInfo"", });
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 10 **
Fix checkstyle errors in [file java]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ff8840acc3d3f258c933c91b275922d6528b6893.
  ATTACHMENT ID: 12704092
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1919 checkstyle errors (more than the master's current 1917 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      "" \002(\t\022\014\n\004user\030\004 \002(\t\022\014\n\004date\030\005 \002(\t\022\024\n\014src_"" +
+              new java.lang.String { ""Version"", ""Url"", ""Revision"", ""User"", ""Date"", ""SrcChecksum"", });
+              new java.lang.String { ""UserInfo"", ""ServiceName"", ""CellBlockCodecClass"", ""CellBlockCompressorClass"", ""VersionInfo"", });
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 12 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ff8840acc3d3f258c933c91b275922d6528b6893.
  ATTACHMENT ID: 12704111
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +      "" \002(\t\022\014\n\004user\030\004 \002(\t\022\014\n\004date\030\005 \002(\t\022\024\n\014src_"" +
+              new java.lang.String { ""Version"", ""Url"", ""Revision"", ""User"", ""Date"", ""SrcChecksum"", });
+              new java.lang.String { ""UserInfo"", ""ServiceName"", ""CellBlockCodecClass"", ""CellBlockCompressorClass"", ""VersionInfo"", });
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 13 **
This looks fine for 0.98 too, I can cherry pick it back when/if it goes in to branch-1

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
SUCCESS: Integrated in HBase-TRUNK #6276 (See )
HBASE-13216 Add version info in RPC connection header (Shaohui Liu) (liushaohui: rev 602e11cc74b5a0442a754d96bbbcd17fdd171931)
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/RPC.proto
* [file java]
* [file java]
* [file java]


** Comment 17 **
Let me backport this to branch-1. I tried both combinations of old client to new server and new client to old server and all worked fine as expected.

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
SUCCESS: Integrated in HBase-1.1 #354 (See )
HBASE-13216 Add version info in RPC connection header (Liu Shaohui) (stack: rev 7e1e5a60fbe5ace0ab5c71899268a6553e7d38aa)
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/RPC.proto
* [file java]
* [file java]


** Comment 21 **
I picked this back to 0.98 too. It's a safe compatible change. Useful as described for identifying remaining versions that need update in a staged/partial upgrade. While doing this I noticed we are not calculating a source checksum in 0.98 for the version annotation. The annotation is marked private and it's user, VersionInfo, is marked evolving, so I've added this to 0.98 as well.

** Comment 22 **
FAILURE: Integrated in HBase-0.98 #970 (See )
HBASE-13216 Add version info in RPC connection header (Shaohui Liu) (apurtell: rev 0170e79e1001b4ced27f7aff168cbe94b5ff9d25)
* hbase-common/src/saveVersion.sh
* [file java]
* hbase-protocol/src/main/protobuf/RPC.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 23 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #923 (See )
HBASE-13216 Add version info in RPC connection header (Shaohui Liu) (apurtell: rev 0170e79e1001b4ced27f7aff168cbe94b5ff9d25)
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-common/src/saveVersion.sh
* hbase-protocol/src/main/protobuf/RPC.proto
* [file java]
* [file java]


** Comment 24 **
[Comment excluded]
"
HBASE-11580,https://issues.apache.org/jira/browse/HBASE-11580,https://github.com/apache/hbase/blob/1.1.0/hbase-common/src/main/java/org/apache/hadoop/hbase/util/RetryCounter.java,Failover handling for secondary region replicas,YES,"With the async wal approach (HBASE-11568), the edits are not persisted (to wal) in the secondary region replicas. However this means that we have to deal with secondary region replica failures. 

We can seek to re-replicate the edits from primary to the secondary when the secondary region is opened in another server but this would mean to setup a replication queue again, and holding on to the wals for longer. 

Instead, we can design it so that the edits form the secondaries are not persisted to wal, and if the secondary replica fails over, it will not start serving reads until it has guaranteed that it has all the past data. 

For guaranteeing that the secondary replica has all the edits before serving reads, we can use flush and region opening markers. Whenever a region open event is seen, it writes all the files at the time of opening to wal (HBASE-11512). In case of flush, the flushed file is written as well, and the secondary replica can do a ls for the store files and pick up all the files before the seqId of the flushed file. So, in this design, the secodary replica will wait until it sees and replays a flush or region open marker from wal from primary. and then start serving. For speeding up replica opening time, we can trigger a flush to the primary whenever the secondary replica opens as an optimization. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
{quote}
As an optimization so that the secondary will sooner start serving data, the region server opening a secondary region replica will make an RPC to the RS serving the primary for a flush. This will result either a flush, which will asynchronously be replayed to the secondary, or a no-op because memstores are empty. In the latter case, we should still drop a WAL marker though.
{quote}
Would this be on by default or would this be an option?  It seems that in a failure situation we would hit a ""flush amplification"" problem which seems concerning.   
Let's say we have a 20 node cluster with each rs having 25 regions on them.  If those regions have 2 secondaries, each hosts would have 50 secondaries.  Let's say one rs goes down  When these secondaries gets rebalanced, they'd get spread around a bunch likely landing on every or almost every node in the cluster. If each secondary region reopening triggers a flush request we'd end up with a lot of flush requests, all around the same time all across the cluster, no?  This seems problematic.  We could probably coalesce some of the flushes (each rs receiving secondaries could consolidate all into one flush) but if we had 5 machines go down wouldn't we still get 5x the flushes?  

** Comment 4 **
bq. Would this be on by default or would this be an option? It seems that in a failure situation we would hit a ""flush amplification"" problem which seems concerning
I think we may want to turn this on by default, but we'll have to have some operational experience with the setting. You are right that there is a sync flush concern, but w/o making secondary replica edits durable in wal, there seems no other way other than waiting for a flush to start serving data from memstore. 
We can also add some jitter as well to cope with this. 

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit bec2b0d320554b0af8c891fddc147a953f35765f.
  ATTACHMENT ID: 12701535
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 23 new or modified tests.
		    -1 Anti-pattern.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:
             +        getRegionInfo(), -1, new TreeMap<byte, List<Path>>());.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 3 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 9 **
v3 addresses the unit test failure. 

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 74e36f8ddd03cf94c17bdb30ecd81cc5dff4d063.
  ATTACHMENT ID: 12702007
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 23 new or modified tests.
		    -1 Anti-pattern.  The patch appears to have anti-pattern where BYTES_COMPARATOR was omitted:
             +        getRegionInfo(), -1, new TreeMap<byte, List<Path>>());.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 3 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-TRUNK #6202 (See )
HBASE-11580 Failover handling for secondary region replicas (enis: rev 9899aab12b419144f7f8a8280bedbccc68ee7452)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/WAL.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Admin.proto
* [file java]
* [file java]
* [file java]


** Comment 13 **
SUCCESS: Integrated in HBase-1.1 #244 (See )
HBASE-11580 Failover handling for secondary region replicas (enis: rev 9e7ad99593f6ce6f4f99e4ad67d271de51176f8f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Admin.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/WAL.proto
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 14 **
this issue has introduced new javadoc warnings that are causing precommit checks for new patches to fail.
 Javadoc Warnings
 [file java]:1988: warning - Tag @see: can't find internalFlushcache(Collection, MonitoredTask) in org.apache.hadoop.hbase.regionserver.HRegion
 [file java]:1998: warning - Tag @see: can't find internalFlushcache(WAL, long, Collection, MonitoredTask) in org.apache.hadoop.hbase.regionserver.HRegion
 [file java]:2243: warning - @return tag has no arguments.


** Comment 15 **
Thanks Sean. I had searched the javadoc report before, but could not identify the warnings somehow. An oversight from my side. Will commit an addendum shortly. 

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-TRUNK #6206 (See )
HBASE-11580 Failover handling for secondary region replicas - ADDENDUM for javadoc fixes (enis: rev d1ca560ff72bd97faa94fce025bf126702bbdd1b)
* [file java]


** Comment 18 **
SUCCESS: Integrated in HBase-1.1 #248 (See )
HBASE-11580 Failover handling for secondary region replicas - ADDENDUM for javadoc fixes (enis: rev 07cb6d24130db15be303ca34e878bcf5d5411a42)
* [file java]


** Comment 19 **
[Comment excluded]
"
HBASE-13017,https://issues.apache.org/jira/browse/HBASE-13017,https://github.com/apache/hbase/blob/1.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStates.java,Backport HBASE-12035 Keep table state in Meta to branch-1,NO,Lets backport that feature to branch-1.0 adapting HBASE-12035 ,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 3dd220f8fdf6e34e11ffa309ff182172f6346091.
  ATTACHMENT ID: 12698166
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 74 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 12 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
retry, somehow patch process failed.

** Comment 14 **
[Comment excluded]

** Comment 15 **
What happened? 
It seems jenkins doesn't want to fetch branch correctly?
{code}
git checkout branch-1
Previous HEAD position was 02759f2... HBASE-13026: Wrong error message in case incorrect snapshot name OR Incorrect table name
Switched to branch 'branch-1'
Your branch is behind 'origin/branch-1' by 50 commits, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)
git status
On branch branch-1
Your branch is behind 'origin/branch-1' by 50 commits, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)
{code}

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 7561ae6d1257b51c0bb1ef46e52d8ede2c7c926f.
  ATTACHMENT ID: 12698752
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 83 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 13 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster
                  org.apache.hadoop.hbase.master.TestZKLessAMOnCluster
                  org.apache.hadoop.hbase.master.TestMasterFailover
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
I ran one of the above failed tests locally and got this:
Running org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster
2015-02-16 21:07:30.259 java Unable to load realm info from SCDynamicStore
Tests run: 21, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 618.282 sec <<< FAILURE! - in org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster
testSSHWhenDisablingTableRegionsInOpeningOrPendingOpenState(org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster)  Time elapsed: 60.087 sec  <<< ERROR!
java.lang.Exception: test timed out after 60000 milliseconds
	at java.lang.Thread.sleep(Native Method)
	at org.apache.hadoop.hbase.client.HBaseAdmin.deleteTable([file java]:727)
	at org.apache.hadoop.hbase.HBaseTestingUtility.deleteTable([file java]:1778)
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testSSHWhenDisablingTableRegionsInOpeningOrPendingOpenState([file java]:737)
Do you get this w/ the patch in place ?
I tried another test and similar:
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.master.TestZKLessAMOnCluster
2015-02-16 21:19:16.041 java Unable to load realm info from SCDynamicStore
Tests run: 21, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 616.783 sec <<< FAILURE! - in org.apache.hadoop.hbase.master.TestZKLessAMOnCluster
testSSHWhenDisablingTableRegionsInOpeningOrPendingOpenState(org.apache.hadoop.hbase.master.TestZKLessAMOnCluster)  Time elapsed: 60.088 sec  <<< ERROR!
java.lang.Exception: test timed out after 60000 milliseconds
	at java.lang.Thread.sleep(Native Method)
	at org.apache.hadoop.hbase.client.HBaseAdmin.deleteTable([file java]:727)
	at org.apache.hadoop.hbase.HBaseTestingUtility.deleteTable([file java]:1778)
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testSSHWhenDisablingTableRegionsInOpeningOrPendingOpenState([file java]:737)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:43)
	at java.lang.reflect.Method.invoke([file java]:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall([file java]:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run([file java]:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively([file java]:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate([file java]:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run([file java]:74)


** Comment 30 **
, Failed for me too. Will look deeper. Thanks.

** Comment 31 **
 I note that the TestDLR seems to be failing frequently now so may not be related. Suggest you check back in the precommit builds: e.g. [link]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit f64d63d24e0fa98eb5fc41b1c7bd73fd2b5fa012.
  ATTACHMENT ID: 12699404
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 83 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestMasterFailover
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 36 **
[Comment excluded]

** Comment 37 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 7b045d143ab91089c1c13f3095389fb5de4111f5.
  ATTACHMENT ID: 12699441
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 83 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
FAILURE: Integrated in HBase-1.1 #195 (See )
HBASE-13017 Backport HBASE-12035 Keep table state in Meta to 1.0 branch (Andrey Stepachev) (stack: rev f5e2a823284ebe610f8754f36135dd5290f93b06)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/HBase.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]
"
HBASE-13578,https://issues.apache.org/jira/browse/HBASE-13578,https://github.com/apache/hbase/blob/1.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java,Remove Arrays.asList().subList() from FSHLog.offer(),NO,"while doing a run with a profiler I noticed this:
{code}
FSHLog.java
void offer(final long sequence, final SyncFuture [] syncFutures, final int syncFutureCount) {
  ...
  this.syncFutures.addAll(Arrays.asList(syncFutures).subList(0, syncFutureCount));
}
{code}
it is creating an Arrays.ArrayList then a RandomAccessSubList, 
and then addAll() is using creating an iterator and call the syncFutures.add() for each item.

a simpler for loop adding the items directly is not too ugly and it will avoid all this stuff.
I've attached a simple test to compare the two, it will not make huge difference but since we are in the core path any tiny bit probably helps.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 75bb815d9954e538488c4c549f7261b5be80551b.
  ATTACHMENT ID: 12728755
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.TestJMXListener
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 2 **
+1
That is a weird failure. Can't see how related.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Test failure is because of my patch on HBASE-13564, not related to this. Sorry for that. 

** Comment 6 **
FAILURE: Integrated in HBase-1.1 #440 (See )
HBASE-13578 Remove Arrays.asList().subList() from FSHLog.offer() (matteo.bertozzi: rev 3fba9de03e63fbf4b60734c32a75b00e2f892411)
* [file java]


** Comment 7 **
FAILURE: Integrated in HBase-1.2 #37 (See )
HBASE-13578 Remove Arrays.asList().subList() from FSHLog.offer() (matteo.bertozzi: rev 3a9304e98f7e5a72649ad2aa45574a6f6e53db4d)
* [file java]


** Comment 8 **
FAILURE: Integrated in HBase-TRUNK #6429 (See )
HBASE-13578 Remove Arrays.asList().subList() from FSHLog.offer() (matteo.bertozzi: rev ee562faeb3cd0b7a49a1319fdc775f1d43e32341)
* [file java]


** Comment 9 **
[Comment excluded]
"
HBASE-12987,https://issues.apache.org/jira/browse/HBASE-12987,https://github.com/apache/hbase/blob/1.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java,HBCK should print status while scanning over many regions,NO,Running simple commands like hbck -summary on a large table can take some time. We should print some information to let it be known how things are progressing.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
First stab at some extra output. Tried to find what were the ""expensive"" things to compute, ensuring a log message before running that check (for the summary case) and also using the {{progress()}} built into the ErrorReporter for the non-summary case.
I can't make up my mind if the minimal things I added are sufficient for the summary case or if the verbosity in the non-summary case is now too much. I defer to you all who have opinions :).
To get a feeling, I made a few tables with 5k regions. Attached the output from running {{hbase hbck}} and {{hbase hbck -summary}} to outline things.

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 80dbf06651e527ec0421ce51e4712ffb2f1d078b.
  ATTACHMENT ID: 12724234
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Still confused why the old patch failed to apply, but let's try this one.

** Comment 15 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 4f151444b58ae85b93f76254961358932e0ffb9b.
  ATTACHMENT ID: 12725427
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-TRUNK #6380 (See )
HBASE-12987 Pare repeated hbck output and increase verbosity in long-running tasks. (ndimiduk: rev 682a29a57f73b836859b3d3e1048fc82d64e8fe3)
* [file java]
* [file java]


** Comment 21 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against 0.98 branch at commit 682a29a57f73b836859b3d3e1048fc82d64e8fe3.
  ATTACHMENT ID: 12725740
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 26 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 22 **
Ran the javadoc build locally with and without patch, their diff is empty. I think the buildbot's warning count is wrong.

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-0.98 #950 (See )
HBASE-12987 Pare repeated hbck output and increase verbosity in long-running tasks. (ndimiduk: rev ede7b03c350c9b09647085aa1ade136766bac78f)
* [file java]
* [file java]


** Comment 26 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #903 (See )
HBASE-12987 Pare repeated hbck output and increase verbosity in long-running tasks. (ndimiduk: rev ede7b03c350c9b09647085aa1ade136766bac78f)
* [file java]
* [file java]


** Comment 27 **
[Comment excluded]
"
HBASE-12405,https://issues.apache.org/jira/browse/HBASE-12405,https://github.com/apache/hbase/blob/1.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java,WAL accounting by Store,NO,"HBASE-10201 has made flush decisions per Store, but has not done enough work on HLog, so there are two problems:
1. We record minSeqId both in HRegion and FSHLog, which is a duplication.
2. There maybe holes in WAL accounting.
    For example, assume family A with sequence id 1 and 3, family B with seqId 2. If we flush family A, we can only record that WAL before sequence id 1 can be removed safely. If we do a replay at this point, sequence id 3 will also be replayed which is unnecessary.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Addressing the remain issue for HBASE-10201 that log split should skip edit earlier.

** Comment 3 **
Skip edit cells by store sequence id when splitting log and some minor improvements.
The patch is large because of the change of proto files.

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e267db45ac1dca0b56ca562d6407f16ee1f68ab2.
  ATTACHMENT ID: 12688562
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
fix testcase error
And there is a bug introduced by HBASE-10201, I think we need to make an addendum to fix it rather than fix it in this patch.
In FSHLog.getOrCreateOldestUnflushedStoreSequenceIdsOfRegion, just change
{code}
ConcurrentMap<byte, Long> alreadyPut =
       oldestUnflushedStoreSequenceIds.put(encodedRegionName,
          oldestUnflushedStoreSequenceIdsOfRegion);
{code}
to
{code}
ConcurrentMap<byte, Long> alreadyPut =
       oldestUnflushedStoreSequenceIds.putIfAbsent(encodedRegionName,
          oldestUnflushedStoreSequenceIdsOfRegion);
{code}

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e267db45ac1dca0b56ca562d6407f16ee1f68ab2.
  ATTACHMENT ID: 12688568
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 7 **
Setup a cluster with 3 regionservers, 1 without patch, 2 with patch.
Run IntegrationTestIngest, and then kill regionserver randomly with kill -9(didn't use chaos monkey, I did it manually) and restart. And when kill master, restart it with patch and without patch in turn.
There was no exception in log which is related to WAL, and IntegrationTestIngest is exited normally without error.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ac95cc1fbb951bb9db96f2738f621d1d7cd45739.
  ATTACHMENT ID: 12689975
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit b4367732c8318153c4ba407384e6b70fab5cd51d.
  ATTACHMENT ID: 12702963
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1935 checkstyle errors (more than the master's current 1933 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""LastMajorCompactionTs"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.io.TestHeapSize
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 17 **
Fix TestHeapSize and the checkstyle warnings

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 8449251fb647a93c3c6f66295a5bfd770f1031d3.
  ATTACHMENT ID: 12702978
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""LastMajorCompactionTs"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 95fc53f1056238e0b5f65df7f3015f2aec3d0a20.
  ATTACHMENT ID: 12703207
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 8 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +          storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+            storeCompleteSequenceId_ = java.util.Collections.unmodifiableList(storeCompleteSequenceId_);
+              new java.lang.String { ""RegionSpecifier"", ""Stores"", ""Storefiles"", ""StoreUncompressedSizeMB"", ""StorefileSizeMB"", ""MemstoreSizeMB"", ""StorefileIndexSizeMB"", ""ReadRequestsCount"", ""WriteRequestsCount"", ""TotalCompactingKVs"", ""CurrentCompactedKVs"", ""RootIndexSizeKB"", ""TotalStaticIndexSizeKB"", ""TotalStaticBloomSizeKB"", ""CompleteSequenceId"", ""DataLocality"", ""LastMajorCompactionTs"", ""StoreCompleteSequenceId"", });
+          storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
+            storeLastFlushedSequenceId_ = java.util.Collections.unmodifiableList(storeLastFlushedSequenceId_);
    -1 site.  The patch appears to cause mvn site goal to fail.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
FAILURE: Integrated in HBase-1.1 #266 (See )
HBASE-12405 WAL accounting by Store (zhangduo: rev 5ff108d0e1b7545fb3956ceab926040a2e002ff8)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/ClusterStatus.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/ZooKeeper.proto
* [file java]
* hbase-protocol/src/main/protobuf/RegionServerStatus.proto


** Comment 32 **
resolved dependencies error...
Downloading: [link]
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
Downloading: [link]
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
Downloading: [link]
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
Downloading: [link]
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
Downloading: [link]~garyh/mvn/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
Downloading: [link]
 Failed to create parent directories for resolution tracking file /home/jenkins/.m2/repository/org/jmock/jmock-junit4/2.6.0/jmock-junit4-2.6.0.pom.lastUpdated
No space on device or disk error?

** Comment 33 **
[Comment excluded]

** Comment 34 **
FAILURE: Integrated in HBase-TRUNK #6231 (See )
HBASE-12405 WAL accounting by Store (zhangduo: rev 9b53a1c214f87bd0a38b12e8d308e7e3bde6de84)
* hbase-protocol/src/main/protobuf/ClusterStatus.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/RegionServerStatus.proto
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/ZooKeeper.proto


** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
FAILURE: Integrated in HBase-1.1 #268 (See )
HBASE-12405 addendum fix HRegion heap size (zhangduo: rev ce1a5eeda30dac941f5f1b8129f9b42d227d6b99)
* [file java]


** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]
"
HBASE-13675,https://issues.apache.org/jira/browse/HBASE-13675,https://github.com/apache/hbase/blob/1.1.1/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java,ProcedureExecutor completion report should be at DEBUG log level,YES,"Example:
{noformat}
2015-05-12 12:05:03,445 INFO  [ProcedureExecutorThread-0] procedure2.ProcedureExecutor: Procedure completed in 838msec: EnableTableProcedure (table=cluster_test) user=apurtell (auth:SIMPLE) id=5 state=FINISHED
{noformat}

The procedures themselves are already emitting task specific information at INFO level. This doesn't add much information besides the elapsed time, so probably should be at DEBUG level. I assume if a procedure fails there will be additional logging at WARN level, but if not, that could be a consideration.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Changed the log level to DEBUG besides some minor nits.

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f49111e5f8a2db8f3065188f03c7ad6d4411bd10.
  ATTACHMENT ID: 12733432
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 4 **
lgtm.
one minor nit,
Can we enclose this within isDebugEnabled check, as it involves some computation.
{code}
676	        LOG.debug(""Procedure completed in "" +
677	            StringUtils.humanTimeDiff(proc.elapsedTime()) + "": "" + proc);
{code}


** Comment 5 **
[Comment excluded]

** Comment 6 **
+1 on the patch and on adding the elapsedTime() log under isDebugEnabled(). 

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 92e66ef5222391d106bc8adb7afe7d96a7dafac2.
  ATTACHMENT ID: 12733641
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in HBase-TRUNK #6491 (See )
HBASE-13675 ProcedureExecutor completion report should be at DEBUG log level (ssrungarapu: rev 901714d75dd6da9c3b7dca3f48046119c6f08905)
* [file java]


** Comment 10 **
FAILURE: Integrated in HBase-1.1 #492 (See )
HBASE-13675 ProcedureExecutor completion report should be at DEBUG log level (ssrungarapu: rev 71bfcfded7bcc261a426adf1288f1f484dc003cc)
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-1.2 #86 (See )
HBASE-13675 ProcedureExecutor completion report should be at DEBUG log level (ssrungarapu: rev 796e74dfe51d517625caf527ed28a5d25c3987ce)
* [file java]

"
HBASE-13673,https://issues.apache.org/jira/browse/HBASE-13673,https://github.com/apache/hbase/blob/1.1.1/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,WALProcedureStore procedure is chatty,NO,"Lots of procedure logging at INFO level which should be at DEBUG, especially ""Remove all state logs with ID less then 0"". ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
INFO log level will be used only when
- Starting/stopping the WAL store.
- Starting the lease recovery.
- Acquisition of lease.

** Comment 4 **
[Comment excluded]

** Comment 5 **
looks good to me.
you can probably change the below
{code}
LOG.debug(""Remove all state logs with ID less than "" + lastLogId);
while (!logs.isEmpty()) {
{code}
with an if (logs.isEmpty()) return which should be the most common case.
{code}
if (logs.size() <= 1) {
  // we only have the active log running
  assert logs.size() > 0;
  return;
}
LOG.debug(""Remove all state logs with ID less than "" + lastLogId);
do {
  ..
} while (!logs.isEmpty())
{code}


** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f49111e5f8a2db8f3065188f03c7ad6d4411bd10.
  ATTACHMENT ID: 12733431
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 7 **
Addressing feedback along with using {{LOG.isDebugEnabled()}} while using debug level.

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 92e66ef5222391d106bc8adb7afe7d96a7dafac2.
  ATTACHMENT ID: 12733640
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-TRUNK #6491 (See )
HBASE-13673 WALProcedureStore procedure is chatty (ssrungarapu: rev bc189d0497e4052159242b9a358e8d6e2f4a2f2b)
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-1.1 #492 (See )
HBASE-13673 WALProcedureStore procedure is chatty (ssrungarapu: rev 356fd25e84c4ad81d2f1b29ac397a9ddc0bd692a)
* [file java]

"
HBASE-13732,https://issues.apache.org/jira/browse/HBASE-13732,https://github.com/apache/hbase/blob/1.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java,TestHBaseFsck#testParallelWithRetriesHbck fails intermittently,YES,"TestHBaseFsck#testParallelWithRetriesHbck failed intermittently (especially in Windows environment) with ""java.io.IOException: Duplicate hbck - Abort""

{noformat}
java.util.concurrent.ExecutionException: java.io.IOException: Duplicate hbck - Abort
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252)
	at java.util.concurrent.FutureTask.get(FutureTask.java:111)
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testParallelWithRetriesHbck(TestHBaseFsck.java:644)
Caused by: java.io.IOException: Duplicate hbck - Abort
	at org.apache.hadoop.hbase.util.HBaseFsck.connect(HBaseFsck.java:484)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:53)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:43)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:38)
	at org.apache.hadoop.hbase.util.TestHBaseFsck$2RunHbck.call(TestHBaseFsck.java:635)
	at org.apache.hadoop.hbase.util.TestHBaseFsck$2RunHbck.call(TestHBaseFsck.java:628)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
{noformat}

HBASE-13591 tried to address this issue.  It did improve the pass rate in Linux environment (after the fix, I could not repro in my machine); however, the test still failed intermittently in Windows environment during testing of 1.1 release.

Looking at the code, it uses the ExponentialBackoffPolicy (starting with 200ms sleep time after first failed attempt to acquire the lock in ZK, then 400ms, then 800ms, etc.) in between retries.  Therefore, even the first hbck run completes, the second hbck run would still fail due to long sleep time.  

the proposal to fix the problem is to use ExponentialBackoffPolicyWithLimit and cap the max sleep time to some small number (eg. 5 seconds, it should be configurable).  This would make the test more robust.  ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e1e8434340f02907976f20566c3e55d8d627d4c4.
  ATTACHMENT ID: 12734285
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 4 **
The failed test TEST-org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.xml.<init> has nothing to do with the patch.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in HBase-1.1 #506 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang) (enis: rev ccf5556e1f02d5e22f287f2bdbbc83b258f49eaf)
* [file java]
* [file java]
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-TRUNK #6518 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang) (enis: rev ef18d75d001370ae43a6462491b3aae7ccce0703)
* [file java]
* [file java]
* [file java]


** Comment 12 **
SUCCESS: Integrated in HBase-1.2 #106 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang) (enis: rev 2ba61ee1ab1a02a1d13b774a25b0ff16404bfbdb)
* [file java]
* [file java]
* [file java]


** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Addendum in this ticket for both master and branch-1/branch-1.1 - this is to fix the problem introduced by HADOOP-2.6 (in HADOOP-2.6, the test is not fail intermittently, it fails constantly.) - thanks the investigation from HBASE-13574

** Comment 16 **
[Comment excluded]

** Comment 17 **
SUCCESS: Integrated in HBase-1.1 #520 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang, ADDENDUM for failing tests) (enis: rev 262a410db0e0a1c31bc3bf789ba687626a4fac9a)
* [file java]
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang, ADDENDUM for failing tests) (enis: rev 6088fd527df0b4916e044efb85392ea206ab1aca)
* [file java]
* [file java]


** Comment 18 **
SUCCESS: Integrated in HBase-1.2 #129 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang, ADDENDUM for failing tests) (enis: rev 4e5535a156e885d1a8400346288abffe5294c869)
* [file java]
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang, ADDENDUM for failing tests) (enis: rev 41bfe40cf8cfd603671dc2075397a622c78b41af)
* [file java]
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-TRUNK #6541 (See )
HBASE-13732 TestHBaseFsck#testParallelWithRetriesHbck fails intermittently (Stephen Yuan Jiang, ADDENDUM for failing tests) (enis: rev de01553bc480a13b5a9a3c788ca065724522ddae)
* [file java]
* [file java]

"
HBASE-13626,https://issues.apache.org/jira/browse/HBASE-13626,https://github.com/apache/hbase/blob/1.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKTableStateManager.java,ZKTableStateManager logs table state changes at WARN,YES,"Noticed while spinning the 1.1.0RC0 bits. These should be {{INFO}} at highest, and perhaps {{DEBUG}}.

{noformat}
# cat logs/hbase-root-master-ndimiduk-apache-1-1-dist-6.log | grep WARN
...
2015-05-05 23:40:43,417 WARN  [ndimiduk-apache-1-1-dist-6:33596.activeMasterManager] zookeeper.ZKTableStateManager: Moving table hbase:meta state from null to ENABLED
2015-05-05 23:40:44,860 WARN  [ProcedureExecutorThread-0] zookeeper.ZKTableStateManager: Moving table hbase:namespace state from null to ENABLING
2015-05-05 23:40:44,897 WARN  [ProcedureExecutorThread-0] zookeeper.ZKTableStateManager: Moving table hbase:namespace state from ENABLING to ENABLED
2015-05-05 23:44:04,127 WARN  [ProcedureExecutorThread-1] zookeeper.ZKTableStateManager: Moving table cluster_test state from null to ENABLING
2015-05-05 23:44:04,232 WARN  [ProcedureExecutorThread-1] zookeeper.ZKTableStateManager: Moving table cluster_test state from ENABLING to ENABLED
2015-05-05 23:44:05,168 WARN  [ProcedureExecutorThread-2] zookeeper.ZKTableStateManager: Moving table cluster_test state from DISABLING to DISABLING
2015-05-05 23:44:06,401 WARN  [ProcedureExecutorThread-2] zookeeper.ZKTableStateManager: Moving table cluster_test state from DISABLING to DISABLED
2015-05-05 23:44:08,325 WARN  [ProcedureExecutorThread-0] zookeeper.ZKTableStateManager: Moving table cluster_test state from DISABLED to ENABLING
2015-05-05 23:44:08,883 WARN  [ProcedureExecutorThread-0] zookeeper.ZKTableStateManager: Moving table cluster_test state from ENABLING to ENABLED
{noformat}","** Comment 1 **
[Comment excluded]

** Comment 2 **
yeah, that should be debug

** Comment 3 **
I think INFO is good - as we want to know the state change in the log.
Note: this is not new code - so priority-wise, it is not high.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
SUCCESS: Integrated in HBase-1.2 #65 (See )
HBASE-13626 ZKTableStateManager logs table state changes at WARN (Stephen Jiang) (tedyu: rev 37ac28ea5b6126bacff5cd7d61daf85311985648)
* [file java]


** Comment 8 **
SUCCESS: Integrated in HBase-1.1 #473 (See )
HBASE-13626 ZKTableStateManager logs table state changes at WARN (Stephen Jiang) (tedyu: rev 4c4d6949091e467697349105fe3ac7323c9532b5)
* [file java]

"
HBASE-15295,https://issues.apache.org/jira/browse/HBASE-15295,https://github.com/apache/hbase/blob/rel/1.1.5/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/MasterCoprocessorRpcChannel.java,MutateTableAccess.multiMutate() does not get high priority causing a deadlock,NO,"We have seen this in a cluster with Phoenix secondary indexes leading to a deadlock. All handlers are busy waiting on the index updates to finish:
{code}
""B.defaultRpcServer.handler=50,queue=0,port=16020"" #91 daemon prio=5 os_prio=0 tid=0x00007f29f64ba000 nid=0xab51 waiting on condition [0x00007f29a8762000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000124f1d5c8> (a com.google.common.util.concurrent.AbstractFuture$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
	at com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:275)
	at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:111)
	at org.apache.phoenix.hbase.index.parallel.BaseTaskRunner.submit(BaseTaskRunner.java:66)
	at org.apache.phoenix.hbase.index.parallel.BaseTaskRunner.submitUninterruptible(BaseTaskRunner.java:99)
	at org.apache.phoenix.hbase.index.write.ParallelWriterIndexCommitter.write(ParallelWriterIndexCommitter.java:194)
	at org.apache.phoenix.hbase.index.write.IndexWriter.write(IndexWriter.java:179)
	at org.apache.phoenix.hbase.index.write.IndexWriter.writeAndKillYourselfOnFailure(IndexWriter.java:144)
	at org.apache.phoenix.hbase.index.write.IndexWriter.writeAndKillYourselfOnFailure(IndexWriter.java:134)
	at org.apache.phoenix.hbase.index.Indexer.doPostWithExceptions(Indexer.java:457)
	at org.apache.phoenix.hbase.index.Indexer.doPost(Indexer.java:406)
	at org.apache.phoenix.hbase.index.Indexer.postBatchMutate(Indexer.java:401)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost$36.call(RegionCoprocessorHost.java:1006)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost$RegionOperation.call(RegionCoprocessorHost.java:1673)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.execOperation(RegionCoprocessorHost.java:1748)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.execOperation(RegionCoprocessorHost.java:1705)
	at org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.postBatchMutate(RegionCoprocessorHost.java:1002)
	at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:3162)
	at org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2801)
	at org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:2743)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:692)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:654)
	at org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2031)
	at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:32213)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2114)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:101)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:107)
	at java.lang.Thread.run(Thread.java:745)
{code}


And the index region is trying to split, and is trying to do a meta update: 
{code}
""regionserver/<hostaname>/10.132.70.191:16020-splits-1454693389669"" #1779 prio=5 os_prio=0 tid=0x00007f29e149c000 nid=0x5107 in Object.wait() [0x00007f1f136d6000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        at org.apache.hadoop.hbase.ipc.RpcClientImpl.call(RpcClientImpl.java:1215)
        - locked <0x000000010b72bc20> (a org.apache.hadoop.hbase.ipc.Call)
        at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:213)
        at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:287)
        at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$BlockingStub.execService(ClientProtos.java:32675)
        at org.apache.hadoop.hbase.protobuf.ProtobufUtil.execService(ProtobufUtil.java:1618)
        at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel$1.call(RegionCoprocessorRpcChannel.java:92)
        at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel$1.call(RegionCoprocessorRpcChannel.java:89)
        at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:126)
        at org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel.callExecService(RegionCoprocessorRpcChannel.java:95)
        at org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel.callBlockingMethod(CoprocessorRpcChannel.java:73)
        at org.apache.hadoop.hbase.protobuf.generated.MultiRowMutationProtos$MultiRowMutationService$BlockingStub.mutateRows(MultiRowMutationProtos.java:2149)
        at org.apache.hadoop.hbase.MetaTableAccessor.multiMutate(MetaTableAccessor.java:1339)
        at org.apache.hadoop.hbase.MetaTableAccessor.splitRegion(MetaTableAccessor.java:1309)
        at org.apache.hadoop.hbase.regionserver.SplitTransactionImpl.createDaughters(SplitTransactionImpl.java:296)
        at org.apache.hadoop.hbase.regionserver.SplitTransactionImpl.execute(SplitTransactionImpl.java:509)
        at org.apache.hadoop.hbase.regionserver.SplitRequest.run(SplitRequest.java:85)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
{code}

The issue is that the RPC to the meta is using a coprocessor endpoint, thus does not get a high priority from AnnotationReadingPriorityFunction. Because of this, a deadlock happens because all handlers are already busy waiting on the index updates.  ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 10 new or modified test files.  |
| +1 |  mvninstall  |  3m 0s  |  master passed  |
| +1 |  compile  |  0m 59s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 6s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  6m 13s  |  master passed  |
| +1 |  mvneclipse  |  0m 43s  |  master passed  |
| +1 |  findbugs  |  2m 43s  |  master passed  |
| +1 |  javadoc  |  0m 46s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 4s  |  master passed with JDK v1.7.0_95  |
| -1 |  mvninstall  |  0m 25s  |  hbase-server in the patch failed.  |
| -1 |  compile  |  0m 23s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| -1 |  javac  |  0m 23s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| -1 |  compile  |  0m 25s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| -1 |  javac  |  0m 25s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| -1 |  checkstyle  |  1m 51s  |  Patch generated 60 new checkstyle issues in hbase-client (total was 507, now 565).  |
| +1 |  mvneclipse  |  0m 40s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  0m 57s  |  Patch causes 17 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  1m 49s  |  Patch causes 17 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  2m 42s  |  Patch causes 17 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  3m 34s  |  Patch causes 17 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  4m 30s  |  Patch causes 17 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  5m 24s  |  Patch causes 17 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  6m 18s  |  Patch causes 17 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  7m 11s  |  Patch causes 17 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  8m 4s  |  Patch causes 17 errors with Hadoop v2.7.1.  |
| -1 |  findbugs  |  0m 20s  |  hbase-server in the patch failed.  |
| +1 |  javadoc  |  0m 46s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 2s  |  the patch passed with JDK v1.7.0_95  |
| -1 |  unit  |  0m 45s  |  hbase-client in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  0m 13s  |  hbase-it in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  0m 24s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| -1 |  unit  |  0m 50s  |  hbase-client in the patch failed with JDK v1.7.0_95.  |
| +1 |  unit  |  0m 17s  |  hbase-it in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  0m 26s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  0m 23s  |  Patch does not generate ASF License warnings.  |
|  |   |  55m 3s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hbase.client.TestSnapshotFromAdmin |
| JDK v1.7.0_95 Failed junit tests | hadoop.hbase.client.TestSnapshotFromAdmin |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-22 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 9c26ca3d872f 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 2966eee |
| findbugs | v3.0.0 |
| mvninstall | [link] |
| compile | [link] |
| javac | [link] |
| compile | [link] |
| javac | [link] |
| checkstyle | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 186MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 16 new or modified test files.  |
| +1 |  mvninstall  |  4m 25s  |  master passed  |
| +1 |  compile  |  2m 6s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 43s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  8m 4s  |  master passed  |
| +1 |  mvneclipse  |  1m 6s  |  master passed  |
| +1 |  findbugs  |  4m 18s  |  master passed  |
| +1 |  javadoc  |  1m 42s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 40s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  2m 5s  |  the patch passed  |
| +1 |  compile  |  2m 2s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  2m 2s  |  the patch passed  |
| +1 |  compile  |  1m 45s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  1m 45s  |  the patch passed  |
| -1 |  checkstyle  |  2m 27s  |  Patch generated 64 new checkstyle issues in hbase-client (total was 532, now 594).  |
| +1 |  mvneclipse  |  1m 6s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  36m 44s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| -1 |  findbugs  |  3m 17s  |  hbase-server introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  1m 40s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 41s  |  the patch passed with JDK v1.7.0_95  |
| -1 |  unit  |  1m 27s  |  hbase-client in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  0m 29s  |  hbase-it in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  26m 8s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| -1 |  unit  |  1m 19s  |  hbase-client in the patch failed with JDK v1.7.0_95.  |
| +1 |  unit  |  0m 28s  |  hbase-it in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  23m 55s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  0m 40s  |  Patch does not generate ASF License warnings.  |
|  |   |  140m 49s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Possible null pointer dereference of null in new org.apache.hadoop.hbase.master.ServerManager(Server, MasterServices, boolean)  Dereferenced at [file java]:null in new org.apache.hadoop.hbase.master.ServerManager(Server, MasterServices, boolean)  Dereferenced at [file java]: |
| JDK v1.8.0_72 Failed junit tests | hadoop.hbase.client.TestSnapshotFromAdmin |
|   | hadoop.hbase.ipc.TestRpcMetrics |
|   | hadoop.hbase.regionserver.TestMetricsRegion |
|   | hadoop.hbase.regionserver.TestMetricsRegionServer |
| JDK v1.7.0_95 Failed junit tests | hadoop.hbase.client.TestSnapshotFromAdmin |
|   | hadoop.hbase.ipc.TestSimpleRpcScheduler |
|   | hadoop.hbase.ipc.TestRpcMetrics |
|   | hadoop.hbase.regionserver.TestMetricsRegion |
|   | hadoop.hbase.regionserver.TestMetricsRegionServer |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-25 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux b9daad9ae1a5 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 6e9d355 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 185MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 18 new or modified test files.  |
| +1 |  mvninstall  |  4m 56s  |  master passed  |
| +1 |  compile  |  2m 2s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 44s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  7m 55s  |  master passed  |
| +1 |  mvneclipse  |  1m 7s  |  master passed  |
| +1 |  findbugs  |  4m 33s  |  master passed  |
| +1 |  javadoc  |  1m 40s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 40s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  2m 14s  |  the patch passed  |
| +1 |  compile  |  2m 9s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  2m 9s  |  the patch passed  |
| +1 |  compile  |  1m 47s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  1m 47s  |  the patch passed  |
| -1 |  checkstyle  |  2m 18s  |  Patch generated 5 new checkstyle issues in hbase-client (total was 532, now 470).  |
| +1 |  mvneclipse  |  1m 4s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  37m 0s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 45s  |  the patch passed  |
| +1 |  javadoc  |  1m 40s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 38s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  unit  |  1m 27s  |  hbase-client in the patch passed with JDK v1.8.0_72.  |
| +1 |  unit  |  0m 29s  |  hbase-it in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  170m 18s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  1m 27s  |  hbase-client in the patch passed with JDK v1.7.0_95.  |
| +1 |  unit  |  0m 33s  |  hbase-it in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  145m 39s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  1m 5s  |  Patch does not generate ASF License warnings.  |
|  |   |  407m 56s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hbase.TestStochasticBalancerJmxMetrics |
|   | hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
|   | hadoop.hbase.TestMetaTableLocator |
|   | hadoop.hbase.regionserver.TestRegionServerMetrics |
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient |
| JDK v1.7.0_95 Failed junit tests | hadoop.hbase.TestStochasticBalancerJmxMetrics |
|   | hadoop.hbase.mapreduce.TestRowCounter |
|   | hadoop.hbase.TestMetaTableLocator |
|   | hadoop.hbase.regionserver.TestRegionServerMetrics |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-26 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 8f203fe9db41 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / bf4fcc3 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 445MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 10 **
v4 fixes a test. The other failures does not seem related. 
Any interest in reviewing this? It is a mostly mechanical patch. 

** Comment 11 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| +1 |  mvninstall  |  3m 44s  |  master passed  |
| +1 |  compile  |  1m 3s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 11s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  6m 32s  |  master passed  |
| +1 |  mvneclipse  |  0m 44s  |  master passed  |
| -1 |  findbugs  |  1m 55s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 52s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 3s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  1m 26s  |  the patch passed  |
| +1 |  compile  |  1m 3s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  1m 3s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| -1 |  checkstyle  |  1m 58s  |  Patch generated 1 new checkstyle issues in hbase-client (total was 532, now 466).  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 2s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 12s  |  the patch passed  |
| +1 |  javadoc  |  0m 51s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 4s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  unit  |  0m 58s  |  hbase-client in the patch passed with JDK v1.8.0_72.  |
| +1 |  unit  |  0m 14s  |  hbase-it in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  68m 0s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  1m 28s  |  hbase-client in the patch passed with JDK v1.7.0_95.  |
| +1 |  unit  |  0m 33s  |  hbase-it in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  108m 46s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  0m 59s  |  Patch does not generate ASF License warnings.  |
|  |   |  260m 11s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay |
|   | org.apache.hadoop.hbase.client.TestReplicasClient |
|   | org.apache.hadoop.hbase.regionserver.TestSplitLogWorker |
|   | org.apache.hadoop.hbase.regionserver.TestRowTooBig |
|   | org.apache.hadoop.hbase.regionserver.TestCorruptedRegionStoreFile |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface |
|   | org.apache.hadoop.hbase.mapreduce.TestWALPlayer |
|   | org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy |
|   | org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence |
|   | org.apache.hadoop.hbase.coprocessor.TestHTableWrapper |
|   | org.apache.hadoop.hbase.mapreduce.TestTableInputFormat |
|   | org.apache.hadoop.hbase.client.TestFromClientSide |
|   | org.apache.hadoop.hbase.client.TestMultipleTimestamps |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics |
|   | org.apache.hadoop.hbase.regionserver.TestRemoveRegionMetrics |
|   | org.apache.hadoop.hbase.regionserver.TestTags |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionObserverScannerOpenHook |
|   | org.apache.hadoop.hbase.TestHBaseTestingUtility |
|   | org.apache.hadoop.hbase.TestFullLogReconstruction |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckOneRS |
|   | org.apache.hadoop.hbase.regionserver.wal.TestWALReplay |
|   | org.apache.hadoop.hbase.wal.TestWALFiltering |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLablesWithGroups |
|   | org.apache.hadoop.hbase.security.visibility.TestEnforcingScanLabelGenerator |
|   | org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint |
|   | org.apache.hadoop.hbase.regionserver.TestScannerHeartbeatMessages |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionServerObserver |
|   | org.apache.hadoop.hbase.filter.TestFilterWrapper |
|   | org.apache.hadoop.hbase.security.access.TestAccessController2 |
|   | org.apache.hadoop.hbase.mapreduce.TestCellCounter |
|   | org.apache.hadoop.hbase.mapreduce.TestRowCounter |
|   | org.apache.hadoop.hbase.wal.TestWALSplitCompressed |
|   | org.apache.hadoop.hbase.constraint.TestConstraint |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicas |
|   | org.apache.hadoop.hbase.filter.TestFilterWithScanLimits |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerNoMaster |
|   | org.apache.hadoop.hbase.client.TestClientScannerRPCTimeout |
|   | org.apache.hadoop.hbase.client.TestMultiRespectsLimits |
|   | org.apache.hadoop.hbase.mob.compactions.TestPartitionedMobCompactor |
|   | org.apache.hadoop.hbase.filter.TestScanRowPrefix |
|   | org.apache.hadoop.hbase.coprocessor.TestMasterObserver |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort |
|   | org.apache.hadoop.hbase.regionserver.TestCompactSplitThread |
|   | org.apache.hadoop.hbase.client.TestMetaWithReplicas |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService |
|   | org.apache.hadoop.hbase.ipc.TestRpcClientLeaks |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckEncryption |
|   | org.apache.hadoop.hbase.coprocessor.TestWALObserver |
|   | org.apache.hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes |
|   | org.apache.hadoop.hbase.TestRegionServerMetrics |
|   | org.apache.hadoop.hbase.client.TestFromClientSide3 |
|   | org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepReducer |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithCustomVisLabService |
|   | org.apache.hadoop.hbase.TestClusterBootOrder |
|   | org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster |
|   | org.apache.hadoop.hbase.client.TestScannerTimeout |
|   | org.apache.hadoop.hbase.mob.compactions.TestMobCompactor |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerReportForDuty |
|   | org.apache.hadoop.hbase.client.TestSplitOrMergeStatus |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRolling |
|   | org.apache.hadoop.hbase.client.TestPutWithDelete |
|   | org.apache.hadoop.hbase.coprocessor.TestClassLoading |
|   | org.apache.hadoop.hbase.TestJMXListener |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestCompactionWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush |
|   | org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster |
|   | org.apache.hadoop.hbase.client.TestIncrementFromClientSideWithCoprocessor |
|   | org.apache.hadoop.hbase.client.TestAdmin2 |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerOnlineConfigChange |
|   | org.apache.hadoop.hbase.client.TestAdmin1 |
|   | org.apache.hadoop.hbase.coprocessor.TestCoprocessorTableEndpoint |
|   | org.apache.hadoop.hbase.regionserver.TestJoinedScanners |
|   | org.apache.hadoop.hbase.regionserver.TestScannerWithBulkload |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestDeleteMobTable |
|   | org.apache.hadoop.hbase.mob.TestExpiredMobFileCleaner |
|   | org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint |
|   | org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint |
|   | org.apache.hadoop.hbase.security.access.TestAccessControlFilter |
|   | org.apache.hadoop.hbase.client.TestSnapshotMetadata |
|   | org.apache.hadoop.hbase.TestGlobalMemStoreSize |
|   | org.apache.hadoop.hbase.backup.TestHFileArchiving |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithACL |
|   | org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster |
|   | org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor |
|   | org.apache.hadoop.hbase.client.TestCheckAndMutate |
|   | org.apache.hadoop.hbase.regionserver.TestEncryptionRandomKeying |
|   | org.apache.hadoop.hbase.coprocessor.TestOpenTableInCoprocessor |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes |
|   | org.apache.hadoop.hbase.mob.TestMobDataBlockEncoding |
|   | org.apache.hadoop.hbase.mapreduce.TestHashTable |
|   | org.apache.hadoop.hbase.mapreduce.TestCopyTable |
|   | org.apache.hadoop.hbase.mapreduce.TestSyncTable |
|   | org.apache.hadoop.hbase.client.TestReplicaWithCluster |
|   | org.apache.hadoop.hbase.security.access.TestCellACLWithMultipleVersions |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelReplicationWithExpAsString |
|   | org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache |
|   | org.apache.hadoop.hbase.client.TestClientOperationInterrupt |
|   | org.apache.hadoop.hbase.filter.TestMultiRowRangeFilter |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsReplication |
|   | org.apache.hadoop.hbase.security.access.TestCellACLs |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityWithCheckAuths |
|   | org.apache.hadoop.hbase.client.TestRpcControllerFactory |
|   | org.apache.hadoop.hbase.client.TestLeaseRenewal |
|   | org.apache.hadoop.hbase.filter.TestColumnRangeFilter |
|   | org.apache.hadoop.hbase.security.visibility.TestWithDisabledAuthorization |
|   | org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpointNoMaster |
|   | org.apache.hadoop.hbase.client.TestTimestampsFilter |
|   | org.apache.hadoop.hbase.regionserver.TestHRegion |
|   | org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |
|   | org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint |
|   | org.apache.hadoop.hbase.TestIOFencing |
|   | org.apache.hadoop.hbase.regionserver.TestDefaultMemStore |
|   | org.apache.hadoop.hbase.client.TestHCM |
|   | org.apache.hadoop.hbase.mapreduce.TestImportExport |
|   | org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed |
|   | org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol |
|   | org.apache.hadoop.hbase.security.access.TestWithDisabledAuthorization |
|   | org.apache.hadoop.hbase.security.visibility.TestDefaultScanLabelGeneratorStack |
|   | org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove |
|   | org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed |
|   | org.apache.hadoop.hbase.client.TestMobRestoreSnapshotFromClient |
|   | org.apache.hadoop.hbase.mob.TestDefaultMobStoreFlusher |
|   | org.apache.hadoop.hbase.regionserver.TestClusterId |
|   | org.apache.hadoop.hbase.regionserver.TestMobStoreScanner |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerHostname |
|   | org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass |
|   | org.apache.hadoop.hbase.coprocessor.TestAggregateProtocol |
|   | org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles |
|   | org.apache.hadoop.hbase.TestHColumnDescriptorDefaultVersions |
|   | org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.TestTableSnapshotScanner |
|   | org.apache.hadoop.hbase.security.access.TestScanEarlyTermination |
|   | org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager |
|   | org.apache.hadoop.hbase.TestServerSideScanMetricsFromClientSide |
|   | org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction |
|   | org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas |
|   | org.apache.hadoop.hbase.client.TestFromClientSideNoCodec |
|   | org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels |
|   | org.apache.hadoop.hbase.wal.TestDefaultWALProvider |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.regionserver.TestEncryptionKeyRotation |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | org.apache.hadoop.hbase.client.TestBlockEvictionFromClient |
|   | org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient |
|   | org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove |
|   | org.apache.hadoop.hbase.mapreduce.TestImportTSVWithTTLs |
|   | org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher |
|   | org.apache.hadoop.hbase.replication.TestMultiSlaveReplication |
|   | org.apache.hadoop.hbase.coprocessor.TestDoubleColumnInterpreter |
|   | org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery |
|   | org.apache.hadoop.hbase.wal.TestWALFactory |
|   | org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingStrategy |
|   | org.apache.hadoop.hbase.quotas.TestQuotaAdmin |
|   | org.apache.hadoop.hbase.client.TestIncrementsFromClientSide |
|   | org.apache.hadoop.hbase.client.TestMobSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.TestHTableMultiplexer |
|   | org.apache.hadoop.hbase.regionserver.TestCompactionState |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollPeriod |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad |
|   | org.apache.hadoop.hbase.client.TestSnapshotFromClientWithRegionReplicas |
|   | org.apache.hadoop.hbase.coprocessor.TestCoprocessorStop |
|   | org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.regionserver.TestMobStoreCompaction |
|   | org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed |
|   | org.apache.hadoop.hbase.client.TestScannersFromClientSide |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
|   | org.apache.hadoop.hbase.regionserver.TestAtomicOperation |
|   | org.apache.hadoop.hbase.client.TestSnapshotFromClient |
|   | org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithAbort |
|   | org.apache.hadoop.hbase.client.TestResultSizeEstimation |
|   | org.apache.hadoop.hbase.regionserver.TestMajorCompaction |
|   | org.apache.hadoop.hbase.regionserver.TestScannerRetriableFailure |
|   | org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery |
|   | org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence |
|   | org.apache.hadoop.hbase.mapreduce.TestImportTsv |
|   | org.apache.hadoop.hbase.wal.TestWALSplit |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hbase.regionserver.wal.TestSecureWALReplay |
|   | org.apache.hadoop.hbase.regionserver.TestSplitLogWorker |
|   | org.apache.hadoop.hbase.regionserver.TestRowTooBig |
|   | org.apache.hadoop.hbase.regionserver.TestCorruptedRegionStoreFile |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics |
|   | org.apache.hadoop.hbase.regionserver.TestRemoveRegionMetrics |
|   | org.apache.hadoop.hbase.regionserver.wal.TestWALReplay |
|   | org.apache.hadoop.hbase.regionserver.TestScannerHeartbeatMessages |
|   | org.apache.hadoop.hbase.constraint.TestConstraint |
|   | org.apache.hadoop.hbase.quotas.TestQuotaTableUtil |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort |
|   | org.apache.hadoop.hbase.TestRegionServerMetrics |
|   | org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRolling |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestCompactionWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush |
|   | org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerOnlineConfigChange |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster |
|   | org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache |
|   | org.apache.hadoop.hbase.regionserver.TestHRegion |
|   | org.apache.hadoop.hbase.regionserver.TestDefaultMemStore |
|   | org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol |
|   | org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed |
|   | org.apache.hadoop.hbase.regionserver.TestClusterId |
|   | org.apache.hadoop.hbase.regionserver.TestMobStoreScanner |
|   | org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction |
|   | org.apache.hadoop.hbase.regionserver.TestEncryptionKeyRotation |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | org.apache.hadoop.hbase.quotas.TestQuotaAdmin |
|   | org.apache.hadoop.hbase.regionserver.TestCompactionState |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollPeriod |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad |
|   | org.apache.hadoop.hbase.regionserver.TestMobStoreCompaction |
|   | org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed |
|   | org.apache.hadoop.hbase.regionserver.TestAtomicOperation |
|   | org.apache.hadoop.hbase.regionserver.TestMajorCompaction |
|   | org.apache.hadoop.hbase.regionserver.TestScannerRetriableFailure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:yetus/hbase:date2016-02-29 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 9ac930f72c07 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / bc11288 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 194MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| +1 |  mvninstall  |  4m 40s  |  master passed  |
| +1 |  compile  |  1m 42s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 41s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  7m 46s  |  master passed  |
| +1 |  mvneclipse  |  1m 0s  |  master passed  |
| +1 |  findbugs  |  4m 12s  |  master passed  |
| +1 |  javadoc  |  1m 22s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 31s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  1m 49s  |  the patch passed  |
| +1 |  compile  |  1m 41s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  1m 41s  |  the patch passed  |
| +1 |  compile  |  1m 41s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  1m 41s  |  the patch passed  |
| -1 |  checkstyle  |  2m 24s  |  Patch generated 1 new checkstyle issues in hbase-client (total was 532, now 465).  |
| +1 |  mvneclipse  |  1m 2s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  34m 42s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 48s  |  the patch passed  |
| +1 |  javadoc  |  1m 8s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 15s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  unit  |  1m 11s  |  hbase-client in the patch passed with JDK v1.8.0_72.  |
| +1 |  unit  |  0m 19s  |  hbase-it in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  116m 36s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  1m 20s  |  hbase-client in the patch passed with JDK v1.7.0_95.  |
| +1 |  unit  |  0m 25s  |  hbase-it in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  69m 6s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  1m 45s  |  Patch does not generate ASF License warnings.  |
|  |   |  270m 21s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hbase.coprocessor.TestAggregateProtocol |
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.snapshot.TestSnapshotClientRetries |
|   | org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
|   | org.apache.hadoop.hbase.master.TestAssignmentListener |
|   | org.apache.hadoop.hbase.master.cleaner.TestSnapshotFromMaster |
|   | org.apache.hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster |
|   | org.apache.hadoop.hbase.master.TestMasterRestartAfterDisablingTable |
|   | org.apache.hadoop.hbase.master.TestSplitLogManager |
|   | org.apache.hadoop.hbase.master.TestDistributedLogSplitting |
|   | org.apache.hadoop.hbase.master.snapshot.TestSnapshotFileCache |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.replication.TestReplicationAdminWithClusters |
|   | org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hbase.master.procedure.TestCreateTableProcedure |
|   | org.apache.hadoop.hbase.master.procedure.TestModifyTableProcedure |
|   | org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure |
|   | org.apache.hadoop.hbase.regionserver.TestRowTooBig |
|   | org.apache.hadoop.hbase.regionserver.TestCorruptedRegionStoreFile |
|   | org.apache.hadoop.hbase.regionserver.TestSplitLogWorker |
|   | org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy |
|   | org.apache.hadoop.hbase.master.TestGetLastFlushedSequenceId |
|   | org.apache.hadoop.hbase.regionserver.TestCompaction |
|   | org.apache.hadoop.hbase.snapshot.TestSnapshotClientRetries |
|   | org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
|   | org.apache.hadoop.hbase.master.TestMasterFailover |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics |
|   | org.apache.hadoop.hbase.master.TestGetInfoPort |
|   | org.apache.hadoop.hbase.master.TestAssignmentListener |
|   | org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence |
|   | org.apache.hadoop.hbase.master.cleaner.TestSnapshotFromMaster |
|   | org.apache.hadoop.hbase.regionserver.TestColumnSeeking |
|   | org.apache.hadoop.hbase.quotas.TestQuotaTableUtil |
|   | org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole |
|   | org.apache.hadoop.hbase.client.TestMetaWithReplicas |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort |
|   | org.apache.hadoop.hbase.regionserver.TestCompactSplitThread |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckEncryption |
|   | org.apache.hadoop.hbase.ipc.TestRpcClientLeaks |
|   | org.apache.hadoop.hbase.master.TestMasterMetrics |
|   | org.apache.hadoop.hbase.master.TestTableStateManager |
|   | org.apache.hadoop.hbase.master.TestTableLockManager |
|   | org.apache.hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
|   | org.apache.hadoop.hbase.master.TestMasterRestartAfterDisablingTable |
|   | org.apache.hadoop.hbase.master.TestSplitLogManager |
|   | org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS |
|   | org.apache.hadoop.hbase.master.TestRollingRestart |
|   | org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
|   | org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildOverlap |
|   | org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | org.apache.hadoop.hbase.master.TestDistributedLogSplitting |
|   | org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadEncoded |
|   | org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders |
|   | org.apache.hadoop.hbase.master.TestDeadServer |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerReportForDuty |
|   | org.apache.hadoop.hbase.master.TestMasterShutdown |
|   | org.apache.hadoop.hbase.util.TestFanOutOneBlockAsyncDFSOutput |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRolling |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestCompactionWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush |
|   | org.apache.hadoop.hbase.io.hfile.TestScannerSelectionUsingTTL |
|   | org.apache.hadoop.hbase.regionserver.TestJoinedScanners |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |
|   | org.apache.hadoop.hbase.master.TestMaster |
|   | org.apache.hadoop.hbase.mob.TestExpiredMobFileCleaner |
|   | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
|   | org.apache.hadoop.hbase.TestAcidGuarantees |
|   | org.apache.hadoop.hbase.regionserver.TestCompactionWithCoprocessor |
|   | org.apache.hadoop.hbase.io.hfile.TestSeekBeforeWithInlineBlocks |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster |
|   | org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter |
|   | org.apache.hadoop.hbase.io.hfile.TestHFileBlockIndex |
|   | org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks |
|   | org.apache.hadoop.hbase.regionserver.TestRecoveredEdits |
|   | org.apache.hadoop.hbase.util.TestRegionSplitter |
|   | org.apache.hadoop.hbase.master.snapshot.TestSnapshotFileCache |
|   | org.apache.hadoop.hbase.master.TestMasterNoCluster |
|   | org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase |
|   | org.apache.hadoop.hbase.util.TestMergeTool |
|   | org.apache.hadoop.hbase.util.TestRegionMover |
|   | org.apache.hadoop.hbase.util.TestMergeTable |
|   | org.apache.hadoop.hbase.TestHBaseOnOtherDfsCluster |
|   | org.apache.hadoop.hbase.master.TestRestartCluster |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel |
|   | org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | org.apache.hadoop.hbase.regionserver.TestHRegion |
|   | org.apache.hadoop.hbase.regionserver.TestDefaultMemStore |
|   | org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk |
|   | org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite |
|   | org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner |
|   | org.apache.hadoop.hbase.master.TestMasterFileSystem |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckMOB |
|   | org.apache.hadoop.hbase.regionserver.TestFSErrorsExposed |
|   | org.apache.hadoop.hbase.regionserver.TestClusterId |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerHostname |
|   | org.apache.hadoop.hbase.client.TestTableSnapshotScanner |
|   | org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionReplayEvents |
|   | org.apache.hadoop.hbase.master.handler.TestCreateTableHandler |
|   | org.apache.hadoop.hbase.master.handler.TestEnableTableHandler |
|   | org.apache.hadoop.hbase.util.TestConnectionCache |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | org.apache.hadoop.hbase.io.hfile.TestHFileBlock |
|   | org.apache.hadoop.hbase.replication.TestMultiSlaveReplication |
|   | org.apache.hadoop.hbase.regionserver.TestStore |
|   | org.apache.hadoop.hbase.client.TestIncrementsFromClientSide |
|   | org.apache.hadoop.hbase.master.procedure.TestModifyColumnFamilyProcedure |
|   | org.apache.hadoop.hbase.master.procedure.TestDeleteColumnFamilyProcedure |
|   | org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad |
|   | org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
|   | org.apache.hadoop.hbase.regionserver.TestAtomicOperation |
|   | org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas |
|   | org.apache.hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure |
|   | org.apache.hadoop.hbase.io.TestFileLink |
|   | org.apache.hadoop.hbase.util.TestFSUtils |
|   | org.apache.hadoop.hbase.regionserver.TestMajorCompaction |
|   | org.apache.hadoop.hbase.io.encoding.TestBufferedDataBlockEncoder |
|   | org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery |
|   | org.apache.hadoop.hbase.master.procedure.TestTruncateTableProcedure |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckTwoRS |
|   | org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-03-02 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 51f5fcc1718a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / bab8d15 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 189MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| +1 |  mvninstall  |  4m 31s  |  master passed  |
| +1 |  compile  |  2m 45s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  1m 46s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  8m 2s  |  master passed  |
| +1 |  mvneclipse  |  0m 53s  |  master passed  |
| +1 |  findbugs  |  3m 53s  |  master passed  |
| +1 |  javadoc  |  1m 36s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 24s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 49s  |  the patch passed  |
| +1 |  compile  |  2m 19s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  2m 19s  |  the patch passed  |
| +1 |  compile  |  1m 27s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 27s  |  the patch passed  |
| -1 |  checkstyle  |  2m 22s  |  Patch generated 1 new checkstyle issues in hbase-client (total was 532, now 465).  |
| +1 |  mvneclipse  |  1m 20s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  38m 37s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 36s  |  the patch passed  |
| +1 |  javadoc  |  1m 57s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 31s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 52s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  0m 38s  |  hbase-it in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  115m 20s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 38s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  0m 32s  |  hbase-it in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  138m 7s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  1m 25s  |  Patch does not generate ASF License warnings.  |
|  |   |  346m 54s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
| JDK v1.8.0 Timed out junit tests | org.apache.hadoop.hbase.client.TestReplicasClient |
|   | org.apache.hadoop.hbase.snapshot.TestSnapshotClientRetries |
|   | org.apache.hadoop.hbase.wal.TestWALFiltering |
|   | org.apache.hadoop.hbase.wal.TestDefaultWALProviderWithHLogKey |
|   | org.apache.hadoop.hbase.wal.TestWALSplitCompressed |
|   | org.apache.hadoop.hbase.client.TestMultiRespectsLimits |
|   | org.apache.hadoop.hbase.client.TestMetaWithReplicas |
|   | org.apache.hadoop.hbase.client.TestAdmin1 |
|   | org.apache.hadoop.hbase.TestGlobalMemStoreSize |
|   | org.apache.hadoop.hbase.zookeeper.lock.TestZKInterProcessReadWriteLock |
|   | org.apache.hadoop.hbase.TestRegionRebalancing |
|   | org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelReplicationWithExpAsString |
|   | org.apache.hadoop.hbase.mapreduce.TestWALRecordReader |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsReplication |
|   | org.apache.hadoop.hbase.TestHBaseOnOtherDfsCluster |
|   | org.apache.hadoop.hbase.TestLocalHBaseCluster |
|   | org.apache.hadoop.hbase.fs.TestBlockReorder |
|   | org.apache.hadoop.hbase.client.TestTableSnapshotScanner |
|   | org.apache.hadoop.hbase.wal.TestDefaultWALProvider |
|   | org.apache.hadoop.hbase.wal.TestBoundedRegionGroupingStrategy |
|   | org.apache.hadoop.hbase.wal.TestWALFactory |
|   | org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | org.apache.hadoop.hbase.client.TestSnapshotFromClient |
|   | org.apache.hadoop.hbase.wal.TestWALSplit |
| JDK v1.7.0_79 Timed out junit tests | org.apache.hadoop.hbase.mapreduce.TestHRegionPartitioner |
|   | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
|   | org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles |
|   | org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux pietas.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 5e395c4 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-it hbase-server U: . |
| Max memory used | 208MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 18 **
[Comment excluded]

** Comment 19 **
bq. Thoughts on this one fellas? Would be good for 1.1.4.
Thanks Nick for taking a look. It is a bug fix, so we should have it in all applicable I think. The patch is big, but somewhat mechanical mostly.  
The bad thing is that if you are running with default number of handlers (30) and sending 100 client threads to a phoenix table with secondary index, this is easily reproducible. 
I think the test failures are not related, but I'll look into it. 

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| 0 |  mvndep  |  0m 25s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  4m 57s  |  master passed  |
| +1 |  compile  |  5m 6s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  3m 53s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  15m 39s  |  master passed  |
| +1 |  mvneclipse  |  2m 5s  |  master passed  |
| +1 |  findbugs  |  9m 0s  |  master passed  |
| +1 |  javadoc  |  3m 52s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  3m 25s  |  master passed with JDK v1.7.0_79  |
| 0 |  mvndep  |  0m 16s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  4m 19s  |  the patch passed  |
| +1 |  compile  |  4m 4s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  4m 4s  |  the patch passed  |
| +1 |  compile  |  2m 43s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  2m 43s  |  the patch passed  |
| -1 |  checkstyle  |  2m 12s  |  hbase-client: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| -1 |  checkstyle  |  2m 4s  |  hbase-client: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| -1 |  checkstyle  |  1m 49s  |  hbase-server: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| -1 |  checkstyle  |  1m 56s  |  hbase-server: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| -1 |  checkstyle  |  2m 5s  |  hbase-it: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| -1 |  checkstyle  |  1m 56s  |  hbase-it: patch generated 48 new + 1296 unchanged - 207 fixed = 1344 total (was 1503)  |
| +1 |  mvneclipse  |  1m 40s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  30m 58s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  8m 29s  |  the patch passed  |
| +1 |  javadoc  |  2m 55s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  2m 25s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 3s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  1m 3s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  118m 36s  |  hbase-server in the patch failed.  |
| -1 |  unit  |  121m 56s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 27s  |  hbase-it in the patch passed.  |
| +1 |  unit  |  0m 26s  |  hbase-it in the patch passed.  |
| -1 |  asflicense  |  1m 27s  |  Patch generated 1 ASF License warnings.  |
|  |   |  365m 43s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestBlocksRead |
|   | hadoop.hbase.regionserver.TestBlocksRead |
| Timed out junit tests | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
|   | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux pomona.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 8af9ed7 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| asflicense | [link] |
| modules | C:  hbase-client   hbase-client   hbase-server   hbase-server   hbase-it   hbase-it  U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.0   [link] |
This message was automatically generated.


** Comment 29 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| 0 |  mvndep  |  0m 44s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  5m 34s  |  master passed  |
| +1 |  compile  |  0m 43s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 30s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  3m 25s  |  master passed  |
| +1 |  mvneclipse  |  0m 19s  |  master passed  |
| +1 |  hbaseprotoc  |  0m 14s  |  the patch passed  |
| +1 |  findbugs  |  1m 35s  |  master passed  |
| +1 |  javadoc  |  0m 38s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 28s  |  master passed with JDK v1.7.0_79  |
| 0 |  mvndep  |  0m 17s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 31s  |  the patch passed  |
| +1 |  compile  |  0m 42s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 27s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 27s  |  the patch passed  |
| -1 |  checkstyle  |  3m 16s  |  hbase-client: patch generated 16 new + 432 unchanged - 69 fixed = 448 total (was 501)  |
| +1 |  mvneclipse  |  0m 16s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  37m 17s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 12s  |  the patch passed  |
| +1 |  findbugs  |  1m 36s  |  the patch passed  |
| +1 |  javadoc  |  0m 45s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 24s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 7s  |  hbase-client in the patch passed.  |
| +1 |  asflicense  |  0m 9s  |  Patch does not generate ASF License warnings.  |
|  |   |  61m 53s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15295 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux pomona.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 5fcadb8 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| checkstyle | [link] |
|  Test Results | [link] |
| modules | C:  hbase-client   hbase-server   hbase-it  U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0-SNAPSHOT   [link] |
This message was automatically generated.


** Comment 30 **
First, nice digging . Good one.
RPC while holding a lock is always going to be fun. Should we open an issue to undo this? It is always going to be problematic. This fixes one means by which the RPC can fail but there'll be others to follow?
Agree on backport. Phoenix installs are hosed w/o it.
Here is some review to help that along.
What do you mean by this:
{code}// TODO: How come Meta regions still do not have encoded region names? Fix.{code}
Are you referring to the fact that hbase:meta still has the old-style encoding? Yeah, would need a migration step to move from old to new. Could clean up some code that does the check for old vs new encoding if this were done.
I was going to comment  on whether we should propagate RpcController at all? It is a concept that comes up from RPC Service, a DOA notion (since there was/is no RPC implementation that came along w/ PB) that was present in the PB Service Stubs only. Because of expediency -- Service provided a narrow channel between application and the RPC transport -- we just kept it up... and I was going to say we don't use it in RPC other than to pass 'extra info' -- i.e. cellblocks -- skirting the bottleneck enforced by Service where you are only allowed pass a Message to describe the request and then another for payload, but it seems we are passing priority and timeout now.... That seems like 'proper' use of an RPC 'controller' type object.... So, ignore this comment (smile). We'll need an RPC-type controller thing whatever our RPC. And it seems like it is all over our client code already. I suppose you are just formalizing the 'damage' done already.
I like the way it used in HBaseAdmin.
When we pass in an RpcController, it means we can't carry 'payloads'? I haven't checked. It is probably fine for Admin calls. We won't be trying to pass CellBlocks here.
On ConnectionConfiguration, was looking at old install recently and loads of contention just getting the backing Properties object... so yeah, we need this synopsis of configs.... Agree on renaming. Makes more sense.
Ugh on the below:
43	@InterfaceAudience.LimitedPrivate({HBaseInterfaceAudience.COPROC, HBaseInterfaceAudience.PHOENIX})
44	@InterfaceStability.Evolving
I suppose it ok for now but in general , doing secondary indices by doing an RPC from a CP is not tenable (especially when there is an mvcc outstanding at the time  --- the region is 'locked' while this rpc is going on). Doing secondary indices with transactions is not holding locks (I've not looked)? This secondary indexing mechanism should be deprecated/discouraged?
+1 on the patch.


** Comment 31 **
Thanks Stack for the review. I was trying to commit this last week, but had to adjust for branch-1, 1.2, run unit tests, etc which takes some time. 
bq. RPC while holding a lock is always going to be fun. Should we open an issue to undo this? It is always going to be problematic. This fixes one means by which the RPC can fail but there'll be others to follow?
Phoenix defines its own RPCScheduler and controller which adds a handler pool for the index updates versus regular updates. The rpc scheduler + rpc controller used properly should in-theory make it so that this kind of deadlocks do not happen. In this particular case, it is an HBase bug that the coprocessor call to update meta is not routed with the high priority. But I agree on the general statement that we may have to re-think how secondary indexes work in Phoenix. Did not check how the transactional stuff works with secondary indexes. Without looking at the code, I am assuming that we do not block the handlers / MVCC for the secondary index updates. 
There is  one more issue that I did not open a jira for, which is that due to the fact that we have to replay the secondary index updates when recovering regions for the data table, there is a soft deadlock that can happen in the region opening. We have seen this recently in a cluster where region opener threads are blocked waiting on index regions to come online, but index regions are just sitting in the same region opening queue waiting for the data regions to be opened. Will create the jira. 
bq. Are you referring to the fact that hbase:meta still has the old-style encoding? Yeah, would need a migration step to move from old to new. Could clean up some code that does the check for old vs new encoding if this were done.
Yep. I don't have the context for why we did not update the meta to have an encoded name, but now we have to handle the non-encoded regions and encoded regions differently. A pity we did not realize this in singularity. 
bq. That seems like 'proper' use of an RPC 'controller' type object.... So, ignore this comment (smile). We'll need an RPC-type controller thing whatever our RPC. And it seems like it is all over our client code already. I suppose you are just formalizing the 'damage' done already.
Agreed. my understanding is that the RPCController is now passed around via the factory, and we are controlling the priority, deadline, etc with the controller. The patch just follows the same thing that we do elsewhere (other admin methods, htable methods, etc). 
Will commit shortly. 


** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
FAILURE: Integrated in HBase-Trunk_matrix #811 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev 05200976110135abb60f9b879b9b830671c07141)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 36 **
FAILURE: Integrated in HBase-1.3 #625 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev fc47cc38b7efe5d2750a019016c4cec6d5f31465)
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 37 **
FAILURE: Integrated in HBase-1.1-JDK7 #1691 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev c1f0204e77ab9000f1ed45cb8d4792eb20707e0b)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 38 **
FAILURE: Integrated in HBase-1.1-JDK8 #1777 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev c1f0204e77ab9000f1ed45cb8d4792eb20707e0b)
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 39 **
FAILURE: Integrated in HBase-1.4 #58 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev 5202d3c25b394cac3a00a5afc0693ad221fad9d6)
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 40 **
FAILURE: Integrated in HBase-1.2 #589 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev 6a80087f4612c01b7591f15f73586f2d0eeea31f)
* [file java]
* [file java]
* hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl.jamon
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 41 **
[Comment excluded]

** Comment 42 **
This patch causes TestMasterNoCluster#testFailover to fail always.

** Comment 43 **
bq. This patch causes TestMasterNoCluster#testFailover to fail always.
Let me take a look. Above qa runs did not report this interestingly. 

** Comment 44 **
{code}
mvn clean test -Dtest=TestMasterNoCluster
....
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0
Running org.apache.hadoop.hbase.master.TestMasterNoCluster
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.738 sec - in org.apache.hadoop.hbase.master.TestMasterNoCluster
Results :
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0
{code}

** Comment 45 **
Understood  Tests passed when you tried the patch but it fails for me reliably:
{code}
-------------------------------------------------------
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0
Running org.apache.hadoop.hbase.master.TestMasterNoCluster
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 23.36 sec <<< FAILURE! - in org.apache.hadoop.hbase.master.TestMasterNoCluster
testFailover(org.apache.hadoop.hbase.master.TestMasterNoCluster)  Time elapsed: 22.3 sec  <<< ERROR!
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /hbase/region-in-transition/1588230740
	at org.apache.zookeeper.KeeperException.create([file java]:127)
	at org.apache.zookeeper.KeeperException.create([file java]:51)
	at org.apache.zookeeper.ZooKeeper.getData([file java]:1155)
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.getData([file java]:359)
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.getDataNoWatch([file java]:713)
	at org.apache.hadoop.hbase.zookeeper.ZKAssign.transitionNode([file java]:814)
	at org.apache.hadoop.hbase.zookeeper.ZKAssign.transitionNode([file java]:795)
	at org.apache.hadoop.hbase.zookeeper.ZKAssign.transitionNodeClosed([file java]:566)
	at org.apache.hadoop.hbase.master.TestMasterNoCluster.testFailover([file java]:244)
Results :
Tests in error:
  TestMasterNoCluster.testFailover:244 » SessionExpired KeeperErrorCode = Sessio...
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
{code}
kalashnikov:hbase.git.commit stack$ java -version
java version ""1.8.0_65""
Java(TM) SE Runtime Environment (build 1.8.0_65-b17)
Java HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)
On an old mac osx.
At this point:
commit 547095ab7325cab84f41f18dd64d22c2922e4727
Author: Sean Busbey <busbey@apache.org>
Date:   Mon Mar 28 21:54:05 2016 -0500
    HBASE-15500 update version to 1.2.1 for RC.
If I back out to the change after yours, still fails:
Author: chenheng <chenheng@apache.org>
Date:   Thu Mar 24 15:19:02 2016 +0800
    HBASE-15384 Avoid using '/tmp' directory in TestBulkLoad
If I back out to just before this commit, it passes:
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0
Running org.apache.hadoop.hbase.master.TestMasterNoCluster
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.617 sec - in org.apache.hadoop.hbase.master.TestMasterNoCluster
Results :
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
On linux box, at head of 1.2, I get this when I run the test:
Tests in error:
  TestMasterNoCluster.testFailover:156->Object.wait:502->Object.wait:-2 » TestTimedOut
  TestMasterNoCluster.testStopDuringStart:130->Object.wait:502->Object.wait:-2 » TestTimedOut
Tests run: 3, Failures: 0, Errors: 2, Skipped: 0


** Comment 46 **
[Comment excluded]

** Comment 47 **
Test only fails in branch-1 and below, not in master it seems. 
Will push this one-liner addendum shortly. Thanks  for noticing. 

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
FAILURE: Integrated in HBase-1.2 #591 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev 8d8a7107dc4ccbf36a92f64675dc60392f85c015)
* [file java]


** Comment 51 **
FAILURE: Integrated in HBase-1.3 #626 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev c33330b9d00ee3d8e27fde39b20ed9c53c882e79)
* [file java]


** Comment 52 **
FAILURE: Integrated in HBase-1.4 #61 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev 1e44dd82eb593d1d385ea52e7132c05f9405a5b1)
* [file java]


** Comment 53 **
FAILURE: Integrated in HBase-Trunk_matrix #813 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev afdfd1bd9c938fa4b5c2aa9346e559167d550785)
* [file java]


** Comment 54 **
[Comment excluded]

** Comment 55 **
FAILURE: Integrated in HBase-1.1-JDK7 #1692 (See )
HBASE-15295 MutateTableAccess.multiMutate() does not get high priority (enis: rev e5c395db3dc58d650ec5e5c3778d16d1e09ac9cf)
* [file java]

"
HBASE-16012,https://issues.apache.org/jira/browse/HBASE-16012,https://github.com/apache/hbase/blob/rel/1.1.6/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java,Major compaction can't work due to obsolete scanner read point in RegionServer,NO,"When new RegionScanner, it will add a scanner read point in scannerReadPoints. But if we got a exception after add read point, the read point will keep in regions server and the delete after this mvcc number will never be compacted.

Our hbase version is base 0.94. If it throws other exception when initialize RegionScanner, the master branch has this bug, too.

ERROR org.apache.hadoop.hbase.regionserver.HRegionServer: Failed openScanner java.io.IOException: Could not seek StoreFileScanner
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seek(StoreFileScanner.java:160)
  at org.apache.hadoop.hbase.regionserver.StoreScanner.seekScanners(StoreScanner.java:268)
  at org.apache.hadoop.hbase.regionserver.StoreScanner.<init>(StoreScanner.java:168)
  at org.apache.hadoop.hbase.regionserver.Store.getScanner(Store.java:2232)
  at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.<init>(HRegion.java:4026)
  at org.apache.hadoop.hbase.regionserver.HRegion.instantiateRegionScanner(HRegion.java:1895)
  at org.apache.hadoop.hbase.regionserver.HRegion.getScanner(HRegion.java:1879)
  at org.apache.hadoop.hbase.regionserver.HRegion.getScanner(HRegion.java:1854)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.internalOpenScanner(HRegionServer.java:3032)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.openScanner(HRegionServer.java:2995)
  at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.apache.hadoop.hbase.ipc.SecureRpcEngine$Server.call(SecureRpcEngine.java:338)
  at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1595)
Caused by: org.apache.hadoop.hbase.ipc.CallerDisconnectedException: Aborting call openScanner, since caller disconnected
  at org.apache.hadoop.hbase.ipc.HBaseServer$Call.throwExceptionIfCallerDisconnected(HBaseServer.java:475)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$AbstractFSReader.readAtOffset(HFileBlock.java:1443)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderV2.readBlockDataInternal(HFileBlock.java:1902)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderV2.readBlockData(HFileBlock.java:1766)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2.readBlock(HFileReaderV2.java:345)
  at org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader.loadDataBlockWithScanInfo(HFileBlockIndex.java:254)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo(HFileReaderV2.java:499)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo(HFileReaderV2.java:520)
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seekAtOrAfter(StoreFileScanner.java:235)
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seek(StoreFileScanner.java:148)
  ... 14 more","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
From [link] :
| Vote |       Subsystem |  Runtime   | Comment
============================================================================
|  +1  |      hbaseanti  |  0m 0s     | Patch does not have any anti-patterns. 
|  +1  |        @author  |  0m 0s     | The patch does not contain any @author 
|      |                 |            | tags.
|  -1  |     test4tests  |  0m 0s     | The patch doesn't appear to include any 
|      |                 |            | new or modified tests. Please justify
|      |                 |            | why no new tests are needed for this
|      |                 |            | patch. Also please list what manual
|      |                 |            | steps were performed to verify this
|      |                 |            | patch.
|  +1  |     mvninstall  |  2m 57s    | master passed 
|  +1  |        compile  |  0m 44s    | master passed with JDK v1.8.0 
|  +1  |        compile  |  0m 32s    | master passed with JDK v1.7.0_79 
|  +1  |     checkstyle  |  0m 57s    | master passed 
|  +1  |     mvneclipse  |  0m 15s    | master passed 
|  +1  |       findbugs  |  1m 54s    | master passed 
|  +1  |        javadoc  |  0m 26s    | master passed with JDK v1.8.0 
|  +1  |        javadoc  |  0m 32s    | master passed with JDK v1.7.0_79 
|  +1  |     mvninstall  |  0m 42s    | the patch passed 
|  +1  |        compile  |  0m 48s    | the patch passed with JDK v1.8.0 
|  +1  |          javac  |  0m 48s    | the patch passed 
|  +1  |        compile  |  0m 32s    | the patch passed with JDK v1.7.0_79 
|  +1  |          javac  |  0m 32s    | the patch passed 
|  +1  |     checkstyle  |  0m 59s    | the patch passed 
|  +1  |     mvneclipse  |  0m 15s    | the patch passed 
|  +1  |     whitespace  |  0m 0s     | Patch has no whitespace issues. 
|  +1  |    hadoopcheck  |  26m 4s    | Patch does not cause any errors with 
|      |                 |            | Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2
|      |                 |            | 2.6.1 2.6.2 2.6.3 2.7.1.
|  +1  |       findbugs  |  2m 12s    | the patch passed 
|  +1  |        javadoc  |  0m 26s    | the patch passed with JDK v1.8.0 
|  +1  |        javadoc  |  0m 33s    | the patch passed with JDK v1.7.0_79 
|  +1  |           unit  |  77m 45s   | hbase-server in the patch passed. 
|  +1  |     asflicense  |  0m 16s    | Patch does not generate ASF License 
|      |                 |            | warnings.
|      |                 |  119m 13s  | 
|| Subsystem || Report/Notes ||
============================================================================
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16012 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / e486d27 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 14s  |  master passed  |
| +1 |  compile  |  0m 47s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 34s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 59s  |  master passed  |
| +1 |  mvneclipse  |  0m 16s  |  master passed  |
| +1 |  findbugs  |  2m 0s  |  master passed  |
| +1 |  javadoc  |  0m 30s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 32s  |  the patch passed  |
| +1 |  checkstyle  |  0m 59s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 50s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 12s  |  the patch passed  |
| +1 |  javadoc  |  0m 27s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  16m 26s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 10s  |  Patch does not generate ASF License warnings.  |
|  |   |  59m 19s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestKeepDeletes |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16012 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / db234bf |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 18 **
The following test failure can be reproduced locally:
{code}
testRawScanWithColumns(org.apache.hadoop.hbase.regionserver.TestKeepDeletes)  Time elapsed: 2.16 sec  <<< ERROR!
java.io.IOException: org.apache.hadoop.hbase.DoNotRetryIOException: Cannot specify any column for a raw scan
	at org.apache.hadoop.hbase.regionserver.StoreScanner.<init>([file java]:197)
	at org.apache.hadoop.hbase.regionserver.HStore.createScanner([file java]:1890)
	at org.apache.hadoop.hbase.regionserver.HStore.getScanner([file java]:1880)
	at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.<init>([file java]:5641)
	at org.apache.hadoop.hbase.regionserver.HRegion.instantiateRegionScanner([file java]:2647)
	at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2633)
	at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2614)
	at org.apache.hadoop.hbase.regionserver.TestKeepDeletes.testRawScanWithColumns([file java]:305)
{code}

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 0s  |  master passed  |
| +1 |  compile  |  0m 40s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 54s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| +1 |  findbugs  |  1m 59s  |  master passed  |
| +1 |  javadoc  |  0m 26s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 42s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 32s  |  the patch passed  |
| +1 |  checkstyle  |  0m 53s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 21s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 19s  |  the patch passed  |
| +1 |  javadoc  |  0m 42s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 45s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  97m 51s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 15s  |  Patch does not generate ASF License warnings.  |
|  |   |  140m 8s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16012 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 158568e |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 23 **
[Comment excluded]

** Comment 24 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 50s  |  master passed  |
| +1 |  compile  |  0m 46s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 54s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| +1 |  findbugs  |  1m 52s  |  master passed  |
| +1 |  javadoc  |  0m 27s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 32s  |  the patch passed  |
| +1 |  checkstyle  |  0m 55s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 29s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 11s  |  the patch passed  |
| +1 |  javadoc  |  0m 27s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  77m 14s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 14s  |  Patch does not generate ASF License warnings.  |
|  |   |  117m 53s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16012 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f19f1d9 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 14s  |  master passed  |
| +1 |  compile  |  0m 43s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 34s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 53s  |  master passed  |
| +1 |  mvneclipse  |  0m 16s  |  master passed  |
| +1 |  findbugs  |  1m 57s  |  master passed  |
| +1 |  javadoc  |  0m 28s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 34s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 34s  |  the patch passed  |
| +1 |  checkstyle  |  0m 52s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 16s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 32s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 9s  |  the patch passed  |
| +1 |  javadoc  |  0m 27s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  73m 2s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 16s  |  Patch does not generate ASF License warnings.  |
|  |   |  115m 11s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16012 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / ef90ecc |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
FAILURE: Integrated in HBase-Trunk_matrix #1093 (See )
HBASE-16012 Major compaction can't work due to obsolete scanner read (tedyu: rev 2846113b5974fe7f2305fadcdbb48cdc588c2476)
* [file java]
* [file java]


** Comment 40 **
[Comment excluded]

** Comment 41 **
FAILURE: Integrated in HBase-1.4 #236 (See )
HBASE-16012 Major compaction can't work due to obsolete scanner read (tedyu: rev ba631b4d920c77532990f16d12b538b90b22611e)
* [file java]
* [file java]


** Comment 42 **
FAILURE: Integrated in HBase-1.3 #753 (See )
HBASE-16012 Major compaction can't work due to obsolete scanner read (tedyu: rev d9c07fd4e4a0e407a8504daf24ab133ea81c1bef)
* [file java]
* [file java]


** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1230 (See )
HBASE-16012 Major compaction can't work due to obsolete scanner read (tedyu: rev 4a37af5db902f8866f13b6ad23cccd4e8893f17b)
* [file java]
* [file java]


** Comment 48 **
[Comment excluded]
"
HBASE-16649,https://issues.apache.org/jira/browse/HBASE-16649,https://github.com/apache/hbase/blob/rel/1.1.7/hbase-server/src/main/java/org/apache/hadoop/hbase/master/CatalogJanitor.java,Truncate table with splits preserved can cause both data loss and truncated data appeared again,NO,"Since truncate table with splits preserved will delete hfiles and use the previous regioninfo. It can cause odd behaviors

- Case 1: *Data appeared after truncate*
reproduce procedure：
1. create a table, let's say 'test'
2. write data to 'test', make sure memstore of 'test' is not empty
3. truncate 'test' with splits preserved
4. kill the regionserver hosting the region(s) of 'test'
5. start the regionserver, now it is the time to witness the miracle! the truncated data appeared in table 'test'

- Case 2: *Data loss*
reproduce procedure:
1. create a table, let's say 'test'
2. write some data to 'test', no matter how many
3. truncate 'test' with splits preserved
4. restart the regionserver to reset the seqid
5. write some data, but less than 2 since we don't want the seqid to run over the one in 2
6. kill the regionserver hosting the region(s) of 'test'
7. restart the regionserver. Congratulations! the data writen in 4 is now all lost

*Why?*
for case 1
Since preserve splits in truncate table procedure will not change the regioninfo, when log replay happens, the 'unflushed' data will restore back to the region
for case 2
since the flushedSequenceIdByRegion are stored in Master in a map with the region's encodedName. Although the table is truncated, the region's name is not changed since we chose to preserve the splits. So after truncate the table, the region's sequenceid is reset in the regionserver, but not reset in master. When flush comes and report to master, master will reject the update of sequenceid since the new one is smaller than the old one. The same happens in log replay, all the edits writen in 4 will be skipped since they have a smaller seqid","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
current implementation we drop the fs dirs, and recreate them. 
we can just regenerate the regionInfo, so they will get a new encodedName

** Comment 5 **
not sure why we have always ignored the server manager containing region info, but that will also be a good thing to throw away on region remove. not just as fix for this. I think creating new name for truncate will result easier for debug.
attached a v0 draft that does both

** Comment 6 **
[Comment excluded]

** Comment 7 **
Shouldn't data structures involving the obsolete region info be cleaned in master ?

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Another thing is that we should change the seqid in master even if the new one is smaller than the old one, better have some redundant data when replay than lose them, right?
if (existingValue == null || (l != HConstants.NO_SEQNUM && l > existingValue)) {
        flushedSequenceIdByRegion.put(encodedRegionName, l);
      } else if (l != HConstants.NO_SEQNUM && l < existingValue) {
        flushedSequenceIdByRegion.put(encodedRegionName, l);  //update the seqid but log a warning
        LOG.warn(""RegionServer "" + sn + "" indicates a last flushed sequence id (""
            + l + "") that is less than the previous last flushed sequence id (""
            + existingValue + "") for region "" + Bytes.toString(entry.getKey()) + "" Ignoring."");
      }
{code}

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 20s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 36s  |  master passed  |
| +1 |  compile  |  0m 41s  |  master passed  |
| +1 |  checkstyle  |  0m 51s  |  master passed  |
| +1 |  mvneclipse  |  0m 14s  |  master passed  |
| +1 |  findbugs  |  1m 55s  |  master passed  |
| +1 |  javadoc  |  0m 30s  |  master passed  |
| +1 |  mvninstall  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 40s  |  the patch passed  |
| +1 |  javac  |  0m 40s  |  the patch passed  |
| +1 |  checkstyle  |  0m 48s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  29m 0s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 15s  |  the patch passed  |
| +1 |  findbugs  |  2m 7s  |  the patch passed  |
| +1 |  javadoc  |  0m 32s  |  the patch passed  |
| -1 |  unit  |  15m 5s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 12s  |  The patch does not generate ASF License warnings.  |
|  |   |  58m 7s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.TestCatalogJanitor |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16649 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 51e5ae5b0817 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b2eac0d |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 14 **
[Comment excluded]

** Comment 15 **
{code}
private static List<HRegionInfo> recreteRegionInfo(final List<HRegionInfo> regions) {
{code}
Typo? recreate?

** Comment 16 **
Theoretically this should not happen? I mean a smaller flush sequence id. And remove this can not solve all the problems as you may do log replay before the new sequence id reported.

** Comment 17 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 47s  |  master passed  |
| +1 |  compile  |  0m 39s  |  master passed  |
| +1 |  checkstyle  |  0m 50s  |  master passed  |
| +1 |  mvneclipse  |  0m 16s  |  master passed  |
| +1 |  findbugs  |  1m 56s  |  master passed  |
| +1 |  javadoc  |  0m 28s  |  master passed  |
| +1 |  mvninstall  |  0m 47s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  checkstyle  |  0m 48s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 30s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 13s  |  the patch passed  |
| +1 |  findbugs  |  2m 7s  |  the patch passed  |
| +1 |  javadoc  |  0m 28s  |  the patch passed  |
| -1 |  unit  |  80m 42s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 14s  |  The patch does not generate ASF License warnings.  |
|  |   |  123m 9s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.TestZooKeeper |
|   | org.apache.hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster |
|   | org.apache.hadoop.hbase.master.TestRollingRestart |
|   | org.apache.hadoop.hbase.master.TestDistributedLogSplitting |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16649 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 24fe8c64ed9b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b2eac0d |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  1m 45s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  6m 50s  |  master passed  |
| +1 |  compile  |  0m 53s  |  master passed  |
| +1 |  checkstyle  |  0m 57s  |  master passed  |
| +1 |  mvneclipse  |  0m 19s  |  master passed  |
| +1 |  findbugs  |  2m 8s  |  master passed  |
| +1 |  javadoc  |  0m 42s  |  master passed  |
| +1 |  mvninstall  |  1m 10s  |  the patch passed  |
| +1 |  compile  |  0m 54s  |  the patch passed  |
| +1 |  javac  |  0m 54s  |  the patch passed  |
| +1 |  checkstyle  |  0m 55s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 16s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  39m 22s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 18s  |  the patch passed  |
| +1 |  findbugs  |  2m 13s  |  the patch passed  |
| +1 |  javadoc  |  0m 39s  |  the patch passed  |
| -1 |  unit  |  115m 54s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 39s  |  The patch does not generate ASF License warnings.  |
|  |   |  177m 33s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestRegionServerMetrics |
| Timed out junit tests | org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence |
|   | org.apache.hadoop.hbase.client.TestMetaWithReplicas |
|   | org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.0 Server=1.12.0 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16649 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 19f0c4fcffcc 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4082424 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 20 **
[Comment excluded]

** Comment 21 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1679 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev f06c0060aa13a2b5b18edeb66b7479bdd3c6fdc8)


** Comment 22 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1787 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 88512be52b8707fb87ab2c5979fd71664a417a90)


** Comment 23 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1871 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 88512be52b8707fb87ab2c5979fd71664a417a90)


** Comment 24 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #23 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 1441b7c795292ce5b056ff9e3b5b2443ecd8e8cb)


** Comment 25 **
FAILURE: Integrated in Jenkins build HBase-1.2-JDK7 #33 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 2733e24d3f2f110ac98d8876ee1de1fd9740b51e)


** Comment 26 **
FAILURE: Integrated in Jenkins build HBase-1.2-JDK8 #30 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 2733e24d3f2f110ac98d8876ee1de1fd9740b51e)


** Comment 27 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #24 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 1441b7c795292ce5b056ff9e3b5b2443ecd8e8cb)


** Comment 28 **
FAILURE: Integrated in Jenkins build HBase-1.4 #432 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 4566e4df58bdd176228aab2cd3cfd80dd983072f)


** Comment 29 **
FAILURE: Integrated in Jenkins build HBase-0.98-matrix #404 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 1bdf05b1fa1c3d09b9e3c4fb43957c5ff32ac701)


** Comment 30 **
FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1277 (See )
HBASE-16649 Truncate table with splits preserved can cause both data (matteo.bertozzi: rev 1bdf05b1fa1c3d09b9e3c4fb43957c5ff32ac701)

"
HBASE-16815,https://issues.apache.org/jira/browse/HBASE-16815,https://github.com/apache/hbase/blob/rel/1.1.8/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java,Low scan ratio in RPC queue tuning triggers divide by zero exception,NO,"Trying the following settings:

{noformat}
<property>
  <name>hbase.ipc.server.callqueue.handler.factor</name>
  <value>0.5</value>
</property>
<property>
  <name>hbase.ipc.server.callqueue.read.ratio</name>
  <value>0.5</value>
</property>
<property>
  <name>hbase.ipc.server.callqueue.scan.ratio</name>
  <value>0.1</value>
</property>
{noformat}

With 30 default handlers, this means 15 queues. Further, it means 8 write queues and 7 read queues. 10% of that is {{0.7}} which is then floor'ed to {{0}}. The debug log confirms it, as the tertiary check omits the scan details when they are zero:

{noformat}
2016-10-12 12:50:27,305 INFO  [main] ipc.SimpleRpcScheduler: Using fifo as user call queue, count=15
2016-10-12 12:50:27,311 DEBUG [main] ipc.RWQueueRpcExecutor: FifoRWQ.default writeQueues=7 writeHandlers=15 readQueues=8 readHandlers=14
{noformat}

But the code in {{RWQueueRpcExecutor}} calls {{RpcExecutor.startHandler()}} nevertheless and that does this:

{code}
    for (int i = 0; i < numHandlers; i++) {
      final int index = qindex + (i % qsize);
      String name = ""RpcServer."" + threadPrefix + "".handler="" + handlers.size() + "",queue="" +
          index + "",port="" + port;
{code}

The modulo triggers then 

{noformat}
2016-10-12 11:41:22,810 ERROR [main] master.HMasterCommandLine: Master exiting
java.lang.RuntimeException: Failed construction of Master: class org.apache.hadoop.hbase.master.HMasterCommandLine$LocalHMaster
        at org.apache.hadoop.hbase.util.JVMClusterUtil.createMasterThread(JVMClusterUtil.java:145)
        at org.apache.hadoop.hbase.LocalHBaseCluster.addMaster(LocalHBaseCluster.java:220)
        at org.apache.hadoop.hbase.LocalHBaseCluster.(LocalHBaseCluster.java:155)
        at org.apache.hadoop.hbase.master.HMasterCommandLine.startMaster(HMasterCommandLine.java:222)
        at org.apache.hadoop.hbase.master.HMasterCommandLine.run(HMasterCommandLine.java:137)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
        at org.apache.hadoop.hbase.util.ServerCommandLine.doMain(ServerCommandLine.java:126)
        at org.apache.hadoop.hbase.master.HMaster.main(HMaster.java:2524)
Caused by: java.lang.ArithmeticException: / by zero
        at org.apache.hadoop.hbase.ipc.RpcExecutor.startHandlers(RpcExecutor.java:125)
        at org.apache.hadoop.hbase.ipc.RWQueueRpcExecutor.startHandlers(RWQueueRpcExecutor.java:178)
        at org.apache.hadoop.hbase.ipc.RpcExecutor.start(RpcExecutor.java:78)
        at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.start(SimpleRpcScheduler.java:272)
        at org.apache.hadoop.hbase.ipc.RpcServer.start(RpcServer.java:2212)
        at org.apache.hadoop.hbase.regionserver.RSRpcServices.start(RSRpcServices.java:1143)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.(HRegionServer.java:615)
        at org.apache.hadoop.hbase.master.HMaster.(HMaster.java:396)
        at org.apache.hadoop.hbase.master.HMasterCommandLine$LocalHMaster.(HMasterCommandLine.java:312)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
        at org.apache.hadoop.hbase.util.JVMClusterUtil.createMasterThread(JVMClusterUtil.java:140)
        ... 7 more
{noformat}

That causes the server to not even start. I would suggest we either skip the {{startHandler()}} call altogether, or make it zero aware.

Another possible option is to reserve at least _one_ scan handler/queue when the scan ratio is greater than zero, but only of there is more than one read handler/queue to begin with. Otherwise the scan handler/queue should be zero and share the one read handler/queue.

Makes sense?","** Comment 1 **
If queue's number is 0, skip startHandler() maybe better?
2016-10-12 12:50:27,311 DEBUG  ipc.RWQueueRpcExecutor: FifoRWQ.default writeQueues=7 writeHandlers=15 readQueues=8 readHandlers=14
I thought that we can change log level to INFO and log scan queues number, scan handlers count, too.

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 11s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 11s  |  master passed  |
| +1 |  compile  |  0m 34s  |  master passed  |
| +1 |  checkstyle  |  0m 45s  |  master passed  |
| +1 |  mvneclipse  |  0m 13s  |  master passed  |
| -1 |  findbugs  |  1m 40s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 25s  |  master passed  |
| +1 |  mvninstall  |  0m 43s  |  the patch passed  |
| +1 |  compile  |  0m 34s  |  the patch passed  |
| +1 |  javac  |  0m 34s  |  the patch passed  |
| +1 |  checkstyle  |  0m 44s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 13s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 33s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 11s  |  the patch passed  |
| +1 |  findbugs  |  1m 48s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed  |
| -1 |  unit  |  80m 58s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 14s  |  The patch does not generate ASF License warnings.  |
|  |   |  119m 41s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestHRegionWithInMemoryFlush |
| Timed out junit tests | org.apache.hadoop.hbase.io.encoding.TestDataBlockEncoders |
|   | org.apache.hadoop.hbase.io.encoding.TestChangingEncoding |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.tool.TestCanaryTool |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16815 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 46c16fb3dee1 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 9a94dc9 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-1.4 #489 (See )
HBASE-16815 Low scan ratio in RPC queue tuning triggers divide by zero (matteo.bertozzi: rev e395bf91dbafc7d892966122972e70c5446f3a09)


** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1885 (See )
HBASE-16815 Low scan ratio in RPC queue tuning triggers divide by zero (matteo.bertozzi: rev 9b03a6b339c8e69de9d5c9a9ddcd660c35220ae9)


** Comment 13 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1801 (See )
HBASE-16815 Low scan ratio in RPC queue tuning triggers divide by zero (matteo.bertozzi: rev 9b03a6b339c8e69de9d5c9a9ddcd660c35220ae9)


** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #373 (See )
HBASE-18937 Backport HBASE-16815(Low scan ratio in RPC queue tuning (chia7712: rev 1ae312f270c71f7ccbc2c4c8560035e3418ccc92)


** Comment 17 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #353 (See )
HBASE-18937 Backport HBASE-16815(Low scan ratio in RPC queue tuning (chia7712: rev 1ae312f270c71f7ccbc2c4c8560035e3418ccc92)


** Comment 18 **
[Comment excluded]
"
HBASE-17540,https://issues.apache.org/jira/browse/HBASE-17540,https://github.com/apache/hbase/blob/rel/1.1.9/hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java,Change SASL server GSSAPI callback log line from DEBUG to TRACE in RegionServer to reduce log volumes in DEBUG mode,YES,"For every client connect call to RS we are logging below log line in DEBUG mode which is causing too many logs in RegionServer.  

2017-01-18 17:51:40,739 DEBUG [.reader=4,port=60020] security.HBaseSaslRpcServer - SASL server GSSAPI callback: setting canonicalized client ID: hbase/hostname-xxx@KDC","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  8m 5s  |  branch-1.1 passed  |
| +1 |  compile  |  0m 54s  |  branch-1.1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  0m 38s  |  branch-1.1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 34s  |  branch-1.1 passed  |
| +1 |  mvneclipse  |  0m 22s  |  branch-1.1 passed  |
| -1 |  findbugs  |  2m 9s  |  hbase-server in branch-1.1 has 80 extant Findbugs warnings.  |
| -1 |  javadoc  |  0m 36s  |  hbase-server in branch-1.1 failed with JDK v1.8.0_121.  |
| +1 |  javadoc  |  0m 36s  |  branch-1.1 passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 47s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  compile  |  0m 38s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 38s  |  the patch passed  |
| +1 |  checkstyle  |  0m 22s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 17s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  13m 37s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 16s  |  the patch passed  |
| +1 |  findbugs  |  2m 26s  |  the patch passed  |
| -1 |  javadoc  |  0m 29s  |  hbase-server in the patch failed with JDK v1.8.0_121.  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  101m 54s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 34s  |  The patch does not generate ASF License warnings.  |
|  |   |  137m 22s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestMetaWithReplicas |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:8012383 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17540 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 9c9d08d3e859 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.1 / cc9b471 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javadoc | [link] |
| javadoc | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 3 **
[Comment excluded]

** Comment 4 **
FAILURE: Integrated in Jenkins build HBase-1.2-IT #586 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 466cc9f624647b1e1fdb84eb0b5e9fd20068c195)


** Comment 5 **
FAILURE: Integrated in Jenkins build HBase-1.4 #606 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev c937e9786431dac7f9dc313e6f9eef08db994a42)


** Comment 6 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK7 #90 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 466cc9f624647b1e1fdb84eb0b5e9fd20068c195)


** Comment 7 **
FAILURE: Integrated in Jenkins build HBase-1.3-IT #820 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 466cc9f624647b1e1fdb84eb0b5e9fd20068c195)


** Comment 8 **
SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #2398 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev bd8a4d5fadec1dd804aa7eb0a185a492a6f5805a)


** Comment 9 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK7 #88 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev f0c2cf938cdbd1172faef2ef646a601882ae5400)


** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK8 #84 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 466cc9f624647b1e1fdb84eb0b5e9fd20068c195)


** Comment 11 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK8 #101 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev f0c2cf938cdbd1172faef2ef646a601882ae5400)


** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1920 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 9d86434ddeb219dac5879d1d4736063040fdb965)


** Comment 13 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1836 (See )
HBASE-17540 Change SASL server GSSAPI callback log line from DEBUG to (apurtell: rev 9d86434ddeb219dac5879d1d4736063040fdb965)


** Comment 14 **
[Comment excluded]
"
HBASE-17780,https://issues.apache.org/jira/browse/HBASE-17780,https://github.com/apache/hbase/blob/rel/1.1.10/hbase-common/src/main/java/org/apache/hadoop/hbase/io/BoundedByteBufferPool.java,"BoundedByteBufferPool ""At capacity"" messages are not actionable",NO,"This comment in BoundedByteBufferPool talks about ""At capacity ..."" warnings from this class that may appear in logs when under load:

{code}
 * If a ByteBuffer is bigger than the configured threshold, we will just let the ByteBuffer go
 * rather than add it to the pool. If more ByteBuffers than the configured maximum instances,
 * we will not add the passed ByteBuffer to the pool; we will just drop it
 * (we will log a WARN in this case that we are at capacity).
{code}

First, dropping buffers when the pool is full is obviously an expected and normal condition. Second, there is nothing actionable about that warning. Might be useful for developers, perhaps. Drop it to DEBUG. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 18s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  1m 38s  |  branch-1 passed  |
| +1 |  compile  |  0m 14s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  0m 16s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 21s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 12s  |  branch-1 passed  |
| +1 |  findbugs  |  0m 42s  |  branch-1 passed  |
| +1 |  javadoc  |  0m 12s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  0m 18s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 18s  |  the patch passed  |
| +1 |  compile  |  0m 13s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javac  |  0m 13s  |  the patch passed  |
| +1 |  compile  |  0m 16s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 16s  |  the patch passed  |
| +1 |  checkstyle  |  0m 22s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 11s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  14m 12s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 11s  |  the patch passed  |
| +1 |  findbugs  |  0m 53s  |  the patch passed  |
| +1 |  javadoc  |  0m 13s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  0m 18s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 50s  |  hbase-common in the patch passed.  |
| +1 |  asflicense  |  0m 8s  |  The patch does not generate ASF License warnings.  |
|  |   |  23m 45s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17780 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux a0f9a39db501 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / c97905a |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-common U: hbase-common |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1938 (See )
HBASE-17780 BoundedByteBufferPool ""At capacity"" messages are not (apurtell: rev 3ced5e4c5e64b18519aa99d950ac2c0599e49b1f)


** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]
"
HBASE-18036,https://issues.apache.org/jira/browse/HBASE-18036,https://github.com/apache/hbase/blob/rel/1.1.11/hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java,HBase 1.x : Data locality is not maintained after cluster restart or SSH,NO,"After HBASE-2896 / HBASE-4402, we think data locality is maintained after cluster restart.  However, we have seem some complains about data locality loss when cluster restart (eg. HBASE-17963).  

Examining the AssignmentManager#processDeadServersAndRegionsInTransition() code,  for cluster start, I expected to hit the following code path:
{code}
    if (!failover) {
      // Fresh cluster startup.
      LOG.info(""Clean cluster startup. Assigning user regions"");
      assignAllUserRegions(allRegions);
    }
{code}
where assignAllUserRegions would use retainAssignment() call in LoadBalancer; however, from master log,  we usually hit the failover code path:
{code}
    // If we found user regions out on cluster, its a failover.
    if (failover) {
      LOG.info(""Found regions out on cluster or in RIT; presuming failover"");
      // Process list of dead servers and regions in RIT.
      // See HBASE-4580 for more information.
      processDeadServersAndRecoverLostRegions(deadServers);
    }
{code}
where processDeadServersAndRecoverLostRegions() would put dead servers in SSH and SSH uses roundRobinAssignment() in LoadBalancer.  That is why we would see loss locality more often than retaining locality during cluster restart.

Note: the code I was looking at is close to branch-1 and branch-1.1.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
The V1 patch has minor change based on 's feedback.  Also add some logging to make the change clear.
The V1 change was tested in a small cluster.  I used Ambari to restart cluster and saw the new code path got hit and regions assigned back to its original region server and locality is preserved.
Next up: I will use the same logic in branch-1 and other child branches.  Base on 's offline feedback, I will remove the newly introduced ""hbase.master.retain.assignment"" config in branch-1; but keep the config in other branches (this config is just for in case of regression, user has a way to revert back to original round robin behavior; as patch releases usually don't have full testing)

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 39s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  11m 30s  |  branch-1.1 passed  |
| +1 |  compile  |  1m 13s  |  branch-1.1 passed  |
| +1 |  checkstyle  |  0m 48s  |  branch-1.1 passed  |
| +1 |  mvneclipse  |  0m 32s  |  branch-1.1 passed  |
| -1 |  findbugs  |  4m 3s  |  hbase-server in branch-1.1 has 80 extant Findbugs warnings.  |
| -1 |  javadoc  |  1m 2s  |  hbase-server in branch-1.1 failed.  |
| +1 |  mvninstall  |  1m 20s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| +1 |  checkstyle  |  0m 41s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 49s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 19s  |  the patch passed  |
| +1 |  findbugs  |  3m 45s  |  the patch passed  |
| -1 |  javadoc  |  0m 45s  |  hbase-server in the patch failed.  |
| -1 |  unit  |  158m 27s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 35s  |  The patch does not generate ASF License warnings.  |
|  |   |  213m 47s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestReplicationSmallTests |
|   | hadoop.hbase.replication.TestReplicationEndpoint |
|   | hadoop.hbase.client.TestMultiParallel |
|   | hadoop.hbase.master.TestAssignmentManager |
| Timed out junit tests | org.apache.hadoop.hbase.mapreduce.TestRowCounter |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.03.0-ce Server=17.03.0-ce Image:yetus/hbase:de9b245 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-18036 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 101aa0c262d2 4.8.3-std-1 #1 SMP Fri Oct 21 11:15:43 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.1 / 7d820db |
| Default Java | 1.8.0_131 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javadoc | [link] |
| javadoc | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 8 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 34s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  2m 46s  |  branch-1.1 passed  |
| +1 |  compile  |  1m 1s  |  branch-1.1 passed  |
| +1 |  checkstyle  |  0m 35s  |  branch-1.1 passed  |
| +1 |  mvneclipse  |  0m 21s  |  branch-1.1 passed  |
| -1 |  findbugs  |  3m 20s  |  hbase-server in branch-1.1 has 80 extant Findbugs warnings.  |
| -1 |  javadoc  |  0m 47s  |  hbase-server in branch-1.1 failed.  |
| +1 |  mvninstall  |  1m 10s  |  the patch passed  |
| +1 |  compile  |  1m 1s  |  the patch passed  |
| +1 |  javac  |  1m 1s  |  the patch passed  |
| +1 |  checkstyle  |  0m 34s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 0s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 19s  |  the patch passed  |
| +1 |  findbugs  |  3m 42s  |  the patch passed  |
| -1 |  javadoc  |  0m 44s  |  hbase-server in the patch failed.  |
| -1 |  unit  |  148m 59s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 27s  |  The patch does not generate ASF License warnings.  |
|  |   |  192m 22s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | hadoop.hbase.master.handler.TestEnableTableHandler |
| Timed out junit tests | org.apache.hadoop.hbase.mapreduce.TestTableInputFormat |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.03.0-ce Server=17.03.0-ce Image:yetus/hbase:de9b245 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-18036 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 47644c8f9a24 4.8.3-std-1 #1 SMP Fri Oct 21 11:15:43 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.1 / 7d820db |
| Default Java | 1.8.0_131 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javadoc | [link] |
| javadoc | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 9 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 26s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 5s  |  branch-1 passed  |
| +1 |  compile  |  1m 6s  |  branch-1 passed  |
| +1 |  checkstyle  |  1m 30s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 23s  |  branch-1 passed  |
| -1 |  findbugs  |  3m 36s  |  hbase-server in branch-1 has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 47s  |  branch-1 passed  |
| +1 |  mvninstall  |  1m 14s  |  the patch passed  |
| +1 |  compile  |  1m 5s  |  the patch passed  |
| +1 |  javac  |  1m 5s  |  the patch passed  |
| +1 |  checkstyle  |  1m 33s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 8s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 22s  |  the patch passed  |
| +1 |  findbugs  |  4m 1s  |  the patch passed  |
| +1 |  javadoc  |  0m 48s  |  the patch passed  |
| -1 |  unit  |  141m 1s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 22s  |  The patch does not generate ASF License warnings.  |
|  |   |  190m 29s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
|   | hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | hadoop.hbase.replication.TestReplicationKillSlaveRS |
|   | hadoop.hbase.regionserver.TestCompactionInDeadRegionServer |
|   | hadoop.hbase.regionserver.TestScannerHeartbeatMessages |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.03.0-ce Server=17.03.0-ce Image:yetus/hbase:58c504e |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-18036 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux f4eec39326f4 4.8.3-std-1 #1 SMP Fri Oct 21 11:15:43 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 0a45282 |
| Default Java | 1.8.0_131 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #184 (See )
HBASE-18036 Data locality is not maintained after cluster restart or SSH (syuanjiangdev: rev 2fb68f5046a5c5dd54070148a80882ece5c9b8a1)


** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in Jenkins build HBase-1.4 #780 (See )
HBASE-18036 Data locality is not maintained after cluster restart or SSH (syuanjiangdev: rev 532e0dda16f3c5034aa337201bf6d733cc0a1c7b)


** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]
"
HBASE-13825,https://issues.apache.org/jira/browse/HBASE-13825,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/MasterCoprocessorRpcChannel.java,Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name,NO,"When performing a get operation on a column family with more than 64MB of data, the operation fails with:

Caused by: Portable(java.io.IOException): Call to host:port failed on local exception: com.google.protobuf.InvalidProtocolBufferException: Protocol message was too large.  May be malicious.  Use CodedInputStream.setSizeLimit() to increase the size limit.
        at org.apache.hadoop.hbase.ipc.RpcClient.wrapException(RpcClient.java:1481)
        at org.apache.hadoop.hbase.ipc.RpcClient.call(RpcClient.java:1453)
        at org.apache.hadoop.hbase.ipc.RpcClient.callBlockingMethod(RpcClient.java:1653)
        at org.apache.hadoop.hbase.ipc.RpcClient$BlockingRpcChannelImplementation.callBlockingMethod(RpcClient.java:1711)
        at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$BlockingStub.get(ClientProtos.java:27308)
        at org.apache.hadoop.hbase.protobuf.ProtobufUtil.get(ProtobufUtil.java:1381)
        at org.apache.hadoop.hbase.client.HTable$3.call(HTable.java:753)
        at org.apache.hadoop.hbase.client.HTable$3.call(HTable.java:751)
        at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:120)
        at org.apache.hadoop.hbase.client.HTable.get(HTable.java:756)
        at org.apache.hadoop.hbase.client.HTable.get(HTable.java:765)
        at org.apache.hadoop.hbase.client.HTablePool$PooledHTable.get(HTablePool.java:395)

This may be related to https://issues.apache.org/jira/browse/HBASE-11747 but that issue is related to cluster status. 

Scan and put operations on the same data work fine

Tested on a 1.0.0 cluster with both 1.0.1 and 1.0.0 clients.


","** Comment 1 **
[Comment excluded]

** Comment 2 **
Thanks for the suggestion  , this is what the stack trace suggests but please can you help with a code snippet? When you say ""change it in the client"" do you mean the Hbase client or the application client calling the ""get"". I am only able/permitted to use pre-built Hbase jars from maven so cannot change Hbase code in any way.
CodedInputStream.setSizeLimit() suggests using a static method which does not exist. Furthermore I have no instances of CodedInputStream in by application client so where should I set this size limit?
Is it work adding a HBase parameter for this?  

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Wondering if you have regionserver logs for that event by chance? Also curious if you have hbase.table.max.rowsize property set in the config.

** Comment 6 **
Hi , we don't have hbase.table.max.rowsize set but we also don't see any RowTooBigExceptions being thrown either in the region server logs (which I cannot send out unfortunately)

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 931e77d4507e1650c452cefadda450e0bf3f0528.
  ATTACHMENT ID: 12748597
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 4 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 3828 checkstyle errors (more than the master's current 3825 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 931e77d4507e1650c452cefadda450e0bf3f0528.
  ATTACHMENT ID: 12748724
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 4 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 3826 checkstyle errors (more than the master's current 3825 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-1.3 #93 (See )
HBASE-13825 Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name (apurtell: rev b194052ec09f8519660b472fc447c20eacdf1bbd)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 26 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1023 (See )
HBASE-13825 Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name (apurtell: rev 0dd330b170e3ec24c7d856377bf67c07775a8787)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 27 **
FAILURE: Integrated in HBase-1.2 #95 (See )
HBASE-13825 Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name (apurtell: rev 0ec323ffaa3347c2bd00592e0ecccdc7541d6d8b)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 28 **
FAILURE: Integrated in HBase-TRUNK #6703 (See )
HBASE-13825 Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name (apurtell: rev f06daaf010e8e1941946de131a11f018b8419307)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 29 **
FAILURE: Integrated in HBase-0.98 #1070 (See )
HBASE-13825 Use ProtobufUtil#mergeFrom and ProtobufUtil#mergeDelimitedFrom in place of builder methods of same name (apurtell: rev 0dd330b170e3ec24c7d856377bf67c07775a8787)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 30 **
[Comment excluded]
"
HBASE-12865,https://issues.apache.org/jira/browse/HBASE-12865,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueuesZKImpl.java,WALs may be deleted before they are replicated to peers,NO,"By design, ReplicationLogCleaner guarantee that the WALs  being in replication queue can't been deleted by the HMaster. The ReplicationLogCleaner gets the WAL set from zookeeper by scanning the replication zk node. But it may get uncompleted WAL set during replication failover for the scan operation is not atomic.

For example: There are three region servers: rs1, rs2, rs3, and peer id 10.  The layout of replication zookeeper nodes is:
{code}
/hbase/replication/rs/rs1/10/wals
                     /rs2/10/wals
                     /rs3/10/wals
{code}
- t1: the ReplicationLogCleaner finished scanning the replication queue of rs1, and start to scan the queue of rs2.
- t2: region server rs3 is down, and rs1 take over rs3's replication queue. The new layout is

{code}
/hbase/replication/rs/rs1/10/wals
                     /rs1/10-rs3/wals
                     /rs2/10/wals
                     /rs3
{code}
- t3, the ReplicationLogCleaner finished scanning the queue of rs2, and start to scan the node of rs3. But the the queue has been moved to  ""replication/rs1/10-rs3/WALS""

So the  ReplicationLogCleaner will miss the WALs of rs3 in peer 10 and the hmaster may delete these WALs before they are replicated to peer clusters.

We encountered this problem in our cluster and I think it's a serious bug for replication.

Suggestions are welcomed to fix this bug. thx~","** Comment 1 **
[Comment excluded]

** Comment 2 **
Hmm... Couple of thoughts:
# Can we do simple optimistic concurrency control here? In the beginning of the method we check the parent node's cversion (that is the number of changes to the children of this znode), in the end we check it again. If it changed we start over inside the method, or simply say that no files can be deleted and try again during the next call.
# Maybe when an RS takes over a queue, should it touch all involved logs first, so they all get a new timestamps? In that case they would not be eligible for deletion until they expire again. That would need to be done *before* the queues are moved in ZK.
# Or, since this is only an issue when the *same* region server enumerates the queues and adds a queue from another RS we only need coordination between the threads doing this. That is: Block the NodeFailoverWorker from claiming any new queues while there's a cleanup or check in process.
# There might also be a more complex problem. Queues could be moved *after* we checked, but before we get to the delete code. So we would need to make sure queues are not moved until after we finished a delete cycle.
#1 seems simple enough. #2 should work, but there's no guarantee and it means NN actions. #3 should also work fine.
#4 is a concern with all these approaches; we need to avoid changes to the queue from the point we start checking to the queues to the point where we finish the current delete cycle. And so that cannot be handled 100% in a LogCleaner alone (we might need to add begin() and end() hooks to the cleaners... Ugh.)

** Comment 3 **
Actually #3 can work. We can be lame and take a lock in CleanerChore.checkAndDeleteFiles, and ReplicationSourceManager.NodeFailoverWorker.run(). That way we have a transactionally safe check and delete w.r.t. stuff the the NodeFailoverWorkder can add.
The downside is that the cleaner chore is also doing HFiles, etc.
We can work around that by adding some hooks into CleanerChore that are called before and after checkAndDeleteFiles, or we make checkAndDeleteFiles in CleanerChore protected and then override and wrap that in the ReplicationLogCleaner.


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Made fix for 0.94 with optimistic locking:
1. update /hbase/replication/rs/ with empty data in the batch operation of copyQueuesFromRSUsingMulti, so the version will change when the queue is transferred
2. check version before and after search hlogs in log cleaner, if not found and version is changed, continue

** Comment 11 **
The re-verification only happens in failure case, instead of in the normal path. So the cost is fine.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f8bd578b80b4e656d799c82ca1b6191e35bb0ae4.
  ATTACHMENT ID: 12742805
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 15 **
Looks good overall
{code}
+      // but they won't be get deleted because they're not in the checking set.
{code}
'be get deleted' -> 'be deleted'
{code}
+      LOG.info(String.format(""Replication queue node cversion changed from %d to %d, retry"",
+          v0, v1));
+    } while (true);
{code}
Should we add a pause between the retries ?
Suggest logging retry count in the above message.


** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 85c278a6a8b25ff86e22c254ffec35e945cd7c66.
  ATTACHMENT ID: 12743047
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 6 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster
                  org.apache.hadoop.hbase.mapreduce.TestImportExport
                  org.apache.hadoop.hbase.TestRegionRebalancing
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
Sorry this has sat for a while.
Handles KeeperExceptions better. The new unit test testFailoverDeadServerCversionChange verifies the ZK behavior we are expecting. Could go in as an improvement. Nice to have: a unit test that confirms we use the queues znode cversion correctly.


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-1.0 #1008 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev bc4498a2663ad230298c738b98f38adc594cb954)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 26 **
FAILURE: Integrated in HBase-1.1 #604 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev e00caff3b301d178dfa9b3fbe8bfafd74dc1250e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 27 **
FAILURE: Integrated in HBase-1.3 #95 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 68cb53d1512411e91c864b29da0a4f9fb1c3e69a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 28 **
FAILURE: Integrated in HBase-TRUNK #6705 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev ea8833fd63c9ef35292766f646b1e507577e46f5)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 29 **
FAILURE: Integrated in HBase-0.98 #1071 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 3bf9957d9dfa59c87b6f920fdad256a59030a845)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 30 **
FAILURE: Integrated in HBase-1.3-IT #77 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 68cb53d1512411e91c864b29da0a4f9fb1c3e69a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 31 **
FAILURE: Integrated in HBase-1.2-IT #80 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 7abb12be26115eda7341b82b9860990a14bc6040)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 32 **
FAILURE: Integrated in HBase-1.2 #97 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 7abb12be26115eda7341b82b9860990a14bc6040)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 33 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1025 (See )
HBASE-12865 WALs may be deleted before they are replicated to peers (He Liangliang) (apurtell: rev 3bf9957d9dfa59c87b6f920fdad256a59030a845)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 34 **
[Comment excluded]
"
HBASE-13778,https://issues.apache.org/jira/browse/HBASE-13778,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-common/src/main/java/org/apache/hadoop/hbase/io/BoundedByteBufferPool.java,BoundedByteBufferPool incorrectly increasing runningAverage buffer length,NO,"I was testing HBASE-13158 and noticed this. In BoundedByteBufferPool, we are having an intial value for 'runningAverage' which defaults to 16K. So the pool will make initial buffers of this size. This buffer may grow while used in ByteBufferOuputStream as the data has to be written is getting more. On return back the BB to the pool, we try to adjust this 'runningAverage' size by considering the capacity of the returned BB. We lack proper synchronization here and this makes this runningAverage to grow till its max (1 MB)

I am testing with PE tool with randomRead and having 20 client threads. So each get op returns one cell with almost like 1KB data. The default size of the BB created by Pool is 16K and ideally there is no room for getting this resized.
{code}
2015-05-26 20:12:21,965 INFO  [PriorityRpcServer.handler=5,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=2
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=2,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=4
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=8,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=6
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=12,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=9
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=13,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=10
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=18,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=12
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=16,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=14
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=7,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=5
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=19,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=15
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=1,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=4
2015-05-26 20:12:21,965 INFO  [PriorityRpcServer.handler=11,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=2
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=3,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=13
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=9,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=11
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=6,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=8
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=15,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=7
2015-05-26 20:12:21,966 INFO  [PriorityRpcServer.handler=4,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=16
2015-05-26 20:12:21,967 INFO  [PriorityRpcServer.handler=10,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=17
2015-05-26 20:12:21,967 INFO  [PriorityRpcServer.handler=14,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=19
2015-05-26 20:12:21,967 INFO  [PriorityRpcServer.handler=17,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=0, count=0, alloctions=18
2015-05-26 20:12:22,146 INFO  [PriorityRpcServer.handler=18,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=16384, totalCapacity=-16384, count=2, alloctions=20
2015-05-26 20:12:22,707 INFO  [PriorityRpcServer.handler=9,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=212992, totalCapacity=-32768, count=4, alloctions=21
2015-05-26 20:12:23,208 INFO  [PriorityRpcServer.handler=3,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=212992, totalCapacity=-81920, count=1, alloctions=22
2015-05-26 20:12:29,567 INFO  [PriorityRpcServer.handler=0,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=234837, totalCapacity=-49152, count=6, alloctions=23
2015-05-26 20:12:29,974 INFO  [PriorityRpcServer.handler=0,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=311296, totalCapacity=442368, count=6, alloctions=24
2015-05-26 20:12:31,356 INFO  [PriorityRpcServer.handler=7,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=606208, totalCapacity=1054037, count=9, alloctions=25
2015-05-26 20:12:31,894 INFO  [PriorityRpcServer.handler=3,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=901120, totalCapacity=742741, count=1, alloctions=26
2015-05-26 20:12:32,961 INFO  [PriorityRpcServer.handler=11,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=920234, totalCapacity=2479445, count=12, alloctions=27
2015-05-26 20:12:36,965 INFO  [PriorityRpcServer.handler=2,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1037653, totalCapacity=3836586, count=18, alloctions=28
2015-05-26 20:12:42,212 INFO  [PriorityRpcServer.handler=6,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048120, totalCapacity=11203921, count=12, alloctions=29
2015-05-26 20:12:45,387 INFO  [PriorityRpcServer.handler=13,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048302, totalCapacity=10174915, count=1, alloctions=30
2015-05-26 20:12:46,171 INFO  [PriorityRpcServer.handler=1,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048302, totalCapacity=14177342, count=7, alloctions=31
2015-05-26 20:12:52,401 INFO  [PriorityRpcServer.handler=13,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048495, totalCapacity=19454171, count=8, alloctions=32
2015-05-26 20:12:52,541 INFO  [PriorityRpcServer.handler=2,queue=0,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048495, totalCapacity=16778574, count=1, alloctions=33
2015-05-26 20:12:56,631 INFO  [PriorityRpcServer.handler=5,queue=1,port=16020] io.BoundedByteBufferPool: Allocated new BB runningAverage=1048495, totalCapacity=28925990, count=2, alloctions=34
...
..
{code}

getBuffer()  on 1st line removes the BB from the Queue. putBuffer() put it back 1st and then in next line checks the size of the buffer. During this time period many other threads might have taken buffers. 
putBuffer(ByteBuffer bb)
{code}
	int size = this.buffers.size(); // This size may be inexact.
	this.totalReservoirCapacity += bb.capacity();
	int average = 0;
	if (size != 0) {
	  average = this.totalReservoirCapacity / size;
	}
	if (average > this.runningAverage && average < this.maxByteBufferSizeToCache) {
	  this.runningAverage = average;
	}
{code}
getBuffer() 
{code}
	ByteBuffer bb = this.buffers.poll();
    if (bb != null) {
      // Clear sets limit == capacity.  Postion == 0.
      bb.clear();
      this.totalReservoirCapacity -= bb.capacity();
    } 
{code}
totalReservoirCapacity might not have reduced while do above division for calc avg.  From above log lines it is clear.

As a result we will create much bigger sized buffers and we will not allow GC it as we keep them in pool.","** Comment 1 **
The log comes from a temp patching I have done
{code}
if (bb != null) {
      // Clear sets limit == capacity.  Postion == 0.
      bb.clear();
      this.totalReservoirCapacity -= bb.capacity();
    } else {
      bb = ByteBuffer.allocate(this.runningAverage);
      this.allocations.incrementAndGet();
      if(LOG.isInfoEnabled()) {
        LOG.info(""Allocated new BB runningAverage="" + this.runningAverage + "", totalCapacity=""
            + this.totalReservoirCapacity + "", count="" + this.buffers.size() + "", alloctions=""
            + this.allocations.get());
      }
    }
{code}

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
bq. You mean HBASE-13694 right?
Yes.
bq. We call done on Call once the response is sent by Responder.. Then only we return back BB to pool.
Ok. Good.
Did you figure then how handlers are able to outrun responders?
Think we need a test for this new queue and reproducing the scenario that failed before this patch to prove this patch fixes my messup?
Otherwise, patch looks good.
Any idea of perf implications?


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
bq.Think we need a test for this new queue and reproducing the scenario that failed before this patch to prove this patch fixes my messup?
Sure Stack.

** Comment 17 **
[Comment excluded]

** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 19a57f1e7e57b83e17e0ef91e35b02dfd5af2893.
  ATTACHMENT ID: 12735660
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 5 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 6529d8833d965fb201b9fe6927eed425bf31607f.
  ATTACHMENT ID: 12735713
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 5 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 21 **
bq.-1 core tests. The patch failed these unit tests:
But the test results say 0 failures/errors
Also the new tests passed
|Class|Duration|Fail|(diff)|Skip|(diff)|Pass|(diff)|Total|(diff)|
|TestBoundedByteBufferPool|	2.1 sec|	0| |0|	|	3|	+1|	3|	+1|
|TestBoundedArrayQueue|	0.14 sec|	0|	|	0|	|	1|	+1|	1|	+1|


** Comment 22 **
[Comment excluded]

** Comment 23 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ef18d75d001370ae43a6462491b3aae7ccce0703.
  ATTACHMENT ID: 12735763
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 5 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in HBase-1.2 #108 (See )
HBASE-13778 BoundedByteBufferPool incorrectly increasing runningAverage buffer length. (anoopsamjohn: rev 21332418499469e4affd48731f31c55c3d2cf2a7)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 29 **
[Comment excluded]

** Comment 30 **
FAILURE: Integrated in HBase-0.98 #1007 (See )
HBASE-13778 BoundedByteBufferPool incorrectly increasing runningAverage buffer length. (anoopsamjohn: rev c0aca94f6a91282bf1db69cac6690b897db2ca70)
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 31 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #958 (See )
HBASE-13778 BoundedByteBufferPool incorrectly increasing runningAverage buffer length. (anoopsamjohn: rev c0aca94f6a91282bf1db69cac6690b897db2ca70)
* [file java]
* [file java]
* [file java]
* [file java]

"
HBASE-15100,https://issues.apache.org/jira/browse/HBASE-15100,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java,Master WALProcs still never clean up,NO,"{code}
bin/hdfs dfs -ls /hbase/MasterProcWALs | wc -l
218631
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
can I get the wals? it will be quicker to debug. the problem here is not ""never clean"" it is just a time pattern. 
last time I did a quick workaround that should have fixed this problem, but maybe I should spend time to finish up the todos and get rid of this problem once and for all.

** Comment 4 **
I can't get all of the logs there are too many of them. Let me get the first few though.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
still looking to see if I found other stuff, but I think the main problem was a wal deleted too early. (see TestWALProcedureStore#testNoTrailerDoubleRestart).
The patch also resolves one of the pending TODOs where on replay of completed procedures we avoid the conversion to the Procedure instance going directly to the ProcedureInfo (used to track the result). This should also provide some speedup on replay and allow downgrades (when a clean restart/shutdown is done).
there is another TODO about rewriting long waiting procs to the new WAL which will be the one that will avoid a large amount of WALs kept around even in case of bugs, but maybe I'll open another jira for that. since at the moment we don't have procs with a long life span.

** Comment 8 **
The long running TestWalProcedure attached simulate a lot of procedure running, and lots of logs created but they seems to always cleanup quickly. keeping around few logs

** Comment 9 **
 attaching some relevant logs from my test cluster that seems related to this issue. 
I had branch-1 code running for some time which seems that it left over some ~300 proc wals left uncleaned. When I restarted with 1.1.3 bits on the same data, master decided to delete these proc wals. 

** Comment 10 **
[Comment excluded]

** Comment 11 **
Some more info from the logs. I think the first left entry was 168.log and last is 280.log. 
Seems 279 is not complete: 
{code}
2016-01-20 11:31:52,741 INFO   util.FSHDFSUtils: recoverLease=true, attempt=0 on file=hdfs://cn017.l42scl.hortonworks.com:8020/apps/hbase/data/MasterProcWALs/state-00000000000000000279.log after 1ms
2016-01-20 11:31:52,744 WARN   wal.WALProcedureStore: Unable to read tracker for hdfs://cn017.l42scl.hortonworks.com:8020/apps/hbase/data/MasterProcWALs/state-00000000000000000279.log - Missing trailer: size=10 startPos=10
2016-01-20 11:31:52,800 INFO   wal.WALProcedureStore: Lease acquired for flushLogId: 280
2016-01-20 11:31:52,805 WARN   wal.ProcedureWALFormatReader: nothing left to decode. exiting with missing EOF
2016-01-20 11:31:52,805 INFO   wal.ProcedureWALFormatReader: No active entry found in state log hdfs://cn017.l42scl.hortonworks.com:8020/apps/hbase/data/MasterProcWALs/state-00000000000000000279.log. removing it
{code}
After these all logs between 168 and 280 got deleted, but not 168 and 280. Although the master says that it is deleting: 
{code}
2016-01-20 11:31:53,757 INFO   wal.WALProcedureStore: Remove log: hdfs://cn017.l42scl.hortonworks.com:8020/apps/hbase/data/MasterProcWALs/state-00000000000000000169.log
2016-01-20 11:31:53,757 INFO   wal.WALProcedureStore: Removed logs: 
{code}
The logs are still there: 
{code}
# hadoop fs -ls /apps/hbase/data/MasterProcWALs 
Found 2 items
-rw-r--r--   3 hbase hdfs       9572 2016-01-15 20:27 /apps/hbase/data/MasterProcWALs/state-00000000000000000168.log
-rw-r--r--   3 hbase hdfs         39 2016-01-20 11:31 /apps/hbase/data/MasterProcWALs/state-00000000000000000280.log
{code}
Is it normal that logs are deleted out of order?  
For what it is worth, 168 contains ServerCrashProcedure, so maybe that is something to look at. 


** Comment 12 **
[Comment excluded]

** Comment 13 **
that ""removed logs: "" is a bad log message it is fixed now. that is the list of ""active logs""
the out of order deletion is a bug which is fixed by the patch attached. which should be the problem of the lots of logs staying around.
The ServerCrashProcedure is something else I was looking at, especially in case where we fail an assignment or something like that. unsure if that procedure may hang forever spinning in a retry assign, but that should be easy to catch by listing the procedures running from the shell.

** Comment 14 **
Attaching the logs from master in case you find it useful. It also contains the proc WALS for flush id=168 and 280. The other WALs are not in HDFS thrash, so I was not able to recover. Also the master logs from the earlier instance (branch-1) is deleted, so I don't have those as well. 


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
I didn't know if Enis logs changed anything.
+1 lgtm

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
FAILURE: Integrated in HBase-1.3 #510 (See )
HBASE-15100 Master WALProcs are deleted out of order ending up with (matteo.bertozzi: rev 931e1b03ab67182e1f60ca497b7f99e3b2b65d33)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 25 **
FAILURE: Integrated in HBase-1.2 #519 (See )
HBASE-15100 Master WALProcs are deleted out of order ending up with (matteo.bertozzi: rev 8a34c14129758adcea62299dfaaeb193d0279758)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 26 **
FAILURE: Integrated in HBase-1.1-JDK8 #1732 (See )
HBASE-15100 Master WALProcs are deleted out of order ending up with (matteo.bertozzi: rev 20d5577d2e1b8e395e66be88a66a70bec8665f4f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
Is it possible to mark a class public because we want to use the getters, but mark the constructor and few other methods as private? if so, how?
there is no incompatible change here. no one is will ever use the constructor of the ProcInfo class aside internal calls.

** Comment 30 **
, yes, you can.  There are some examples in ProcedureInfo file already:
[link]#L163
If you look at the generated javadoc, methods marked private (ex: hasClientAckTime) are not present.
[link]


** Comment 31 **
[Comment excluded]

** Comment 32 **
SUCCESS: Integrated in HBase-1.2 #552 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 5e39d2e3a283ed9c553906ac6cb8df20c4d1d508)
* [file java]


** Comment 33 **
SUCCESS: Integrated in HBase-1.3 #557 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 455e09c325cc63151893e77f43ecf472c4a5786a)
* [file java]


** Comment 34 **
SUCCESS: Integrated in HBase-1.3-IT #504 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 455e09c325cc63151893e77f43ecf472c4a5786a)
* [file java]


** Comment 35 **
SUCCESS: Integrated in HBase-1.2-IT #440 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 5e39d2e3a283ed9c553906ac6cb8df20c4d1d508)
* [file java]


** Comment 36 **
FAILURE: Integrated in HBase-Trunk_matrix #716 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev e0fa176f0b3aef8f70e99eca752309810f6eb811)
* [file java]


** Comment 37 **
What about the removal of {{ProcedureInfo.setNonceKey}}? It was a public method in 1.1.3.

** Comment 38 **
there is no point of setting that unless you are the proc framework.
ProcedureInfo is an object used to list the procedures on the server. so only the getter are useful

** Comment 39 **
[Comment excluded]

** Comment 40 **
FAILURE: Integrated in HBase-1.1-JDK8 #1752 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 346e906cc8374fcc8d6897aa935678ebb10a3ca4)
* [file java]


** Comment 41 **
FAILURE: Integrated in HBase-1.1-JDK7 #1665 (See )
HBASE-15100 ProcedureInfo constructor should be (matteo.bertozzi: rev 346e906cc8374fcc8d6897aa935678ebb10a3ca4)
* [file java]

"
HBASE-14107,https://issues.apache.org/jira/browse/HBASE-14107,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-procedure/src/test/java/org/apache/hadoop/hbase/procedure2/TestProcedureReplayOrder.java,Procedure V2 - Administrative Task: Provide an API to List all procedures ,NO,"With Procedure V2 in production since HBASE 1.1 release, there is a need to list all procedures (running, queued, recently completed) from HBASE shell (or Web UI).  

This JIRA is to track the work to add a API to list all procedures.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 5e26ae043dde217aeda29d9b67e290728adade89.
  ATTACHMENT ID: 12761991
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 51 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1810 checkstyle errors (more than the master's current 1807 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +       * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
+     * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportExport
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 4 **
The line lengths are from generated file - no control from me
the core tests failures are unrelated.
The 3 additional check style errors from the unused import.  Fix them and attach the V2 patch.

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 5e26ae043dde217aeda29d9b67e290728adade89.
  ATTACHMENT ID: 12762035
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 51 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)
    -1 javac.  The applied patch generated 26 javac compiler warnings (more than the master's current 24 warnings).
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +       * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
+     * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.mapreduce.TestImportExport
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 6 **
none of the javac warnings coming from this patch.

** Comment 7 **
FAILURE: Integrated in HBase-TRUNK #6835 (See )
HBASE-14107 Administrative Task: Provide an API to List all procedures (Stephen Yuan Jiang) (syuanjiangdev: rev 5b7894f92ba3e9ff700da1e9194ebb4774d8b71e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Master.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit 5b7894f92ba3e9ff700da1e9194ebb4774d8b71e.
  ATTACHMENT ID: 12762071
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 51 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +       * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
+     * <code>rpc ListProcedures(.hbase.pb.ListProceduresRequest) returns (.hbase.pb.ListProceduresResponse);</code>
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 8 zombie test(s): 	at org.apache.phoenix.end2end.ClientTimeArithmeticQueryIT.testDateDateSubtract([file java]:623)
	at org.apache.hadoop.hbase.client.TestFastFail.testFastFail([file java]:244)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in HBase-1.3 #198 (See )
HBASE-14107 Administrative Task: Provide an API to List all procedures (Stephen Yuan Jiang) (syuanjiangdev: rev e38fd84d3f4f54f82054fbdc67d9f94b6c774ff6)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Master.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in HBase-1.1-JDK8 #1721 (See )
HBASE-14107 Procedure V2 - Administrative Task: Provide an API to List (syuanjiangdev: rev 68b4c7493557eca519ecb19cb4a2cf08c4cfb17a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Master.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-1.1-JDK7 #1634 (See )
HBASE-14107 Procedure V2 - Administrative Task: Provide an API to List (syuanjiangdev: rev 68b4c7493557eca519ecb19cb4a2cf08c4cfb17a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-protocol/src/main/protobuf/Master.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 17 **
[Comment excluded]
"
HBASE-12197,https://issues.apache.org/jira/browse/HBASE-12197,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingUtil.java,Move REST,NO,Lets move Rest to it's own module like thrift. That should allow us to remove some dependencies from the class path when running MR tests.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Looks like there are two test failures in the rest module with that patch. Looking into it.

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12673729
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 321 new or modified tests.
    -1 javac.  The applied patch generated 53 javac compiler warnings (more than the trunk's current 45 warnings).
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +         xsi:schemaLocation=""[link] [link]"">
+      @DefaultValue(Integer.MAX_VALUE + """") @QueryParam(Constants.SCAN_LIMIT) int userRequestedLimit,
+   * @throws IOEXception if the endpoint does not exist, there is a timeout, or some other general failure mode
+   * @param value true if HFile blocks should be cached on the servers for this scan, false otherwise
+name=""Y29udGVudCwsMTI0NDg1MTk5OTE4Nw==""/&gt;&lt;/Node&gt;&lt;/LiveNodes&gt;&lt;/ClusterStatus&gt;<br>
+% curl -H ""Accept: text/xml"" [link]
+% curl -H ""Accept: application/json"" [link]
+% curl -H ""Accept: application/x-protobuf"" [link]
+% curl -H ""Accept: application/octet-stream"" [link]
+% curl -H ""Accept: application/json"" [link]
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Tests pass for hbase-rest and other modules. I just re-checked the bin/hbase script and everything looks good.  Let me get the branch-1 patch ready.
{code}
8:41:32 elliott@elliott-mbp hbase HBASE-12197 bin/start-hbase.sh
starting master, logging to /Users/elliott/Code/Public/hbase/bin/../logs/hbase-elliott-master-elliott-mbp.out
8:43:05 elliott@elliott-mbp hbase HBASE-12197 bin/hbase rest -p 8080 start                                                                                                                              1 ↵
2014-10-10 08:43:08,851 INFO   util.VersionInfo: HBase 2.0.0-SNAPSHOT
2014-10-10 08:43:08,851 INFO   util.VersionInfo: Source code repository git://elliott-mbp/Users/elliott/Code/Public/hbase -r 36e6c7f76dff150a06c8bc836ebd30b1fd5f2a66
2014-10-10 08:43:08,851 INFO   util.VersionInfo: Compiled by elliott on Fri Oct 10 08:40:54 PDT 2014
2014-10-10 08:43:08,851 INFO   util.VersionInfo: From source with checksum 138e66033a79a86b16ef04873326b9e8
2014-10-10 08:43:09,187 WARN   util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2014-10-10 08:43:09,249 INFO   impl.MetricsConfig: loaded properties from hadoop-metrics2-hbase.properties
2014-10-10 08:43:09,304 INFO   impl.MetricsSystemImpl: Scheduled snapshot period at 10 second(s).
2014-10-10 08:43:09,304 INFO   impl.MetricsSystemImpl: HBase metrics system started
2014-10-10 08:43:09,377 INFO   mortbay.log: Logging to org.slf4j.impl.Log4jLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
2014-10-10 08:43:09,409 INFO   http.HttpRequestLog: Http request log for http.requests.rest is not defined
2014-10-10 08:43:09,416 INFO   http.HttpServer: Added global filter 'safety' (class=org.apache.hadoop.hbase.http.HttpServer$QuotingInputFilter)
2014-10-10 08:43:09,419 INFO   http.HttpServer: Added filter static_user_filter (class=org.apache.hadoop.hbase.http.lib.StaticUserWebFilter$StaticUserFilter) to context rest
2014-10-10 08:43:09,419 INFO   http.HttpServer: Added filter static_user_filter (class=org.apache.hadoop.hbase.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2014-10-10 08:43:09,419 INFO   http.HttpServer: Added filter static_user_filter (class=org.apache.hadoop.hbase.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2014-10-10 08:43:09,426 INFO   http.HttpServer: Jetty bound to port 8085
2014-10-10 08:43:09,427 INFO   mortbay.log: jetty-6.1.26
2014-10-10 08:43:09,448 INFO   mortbay.log: Extract jar:file:/Users/elliott/Code/Public/hbase/hbase-rest/target/hbase-rest-2.0.0-SNAPSHOT.jar!/hbase-webapps/rest to /var/folders/tn/pyvx59yd0dz6td198ys7ffhj_pvvgm/T/Jetty_0_0_0_0_8085_rest____nu924e/webapp
2014-10-10 08:43:09,659 INFO   mortbay.log: Started SelectChannelConnector@0.0.0.0:8085
2014-10-10 08:43:09,659 INFO   mortbay.log: jetty-6.1.26
2014-10-10 08:43:09,660 INFO   mortbay.log: Started SelectChannelConnector@0.0.0.0:8080
{code}


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
SUCCESS: Integrated in HBase-TRUNK #5647 (See )
HBASE-12197 Move rest to it's on module (eclark: rev 6ddb2f196544e98918730be513e7a10d431d496f)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-site.xml
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/log4j.properties
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* hbase-server/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/hbase-site.xml
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* hbase-rest/src/test/resources/zoo.cfg
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* hbase-rest/src/test/resources/mapred-queues.xml
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/hdfs-site.xml
* hbase-assembly/pom.xml
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* hbase-thrift/pom.xml
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* [file java]


** Comment 18 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12674200
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 321 new or modified tests.
    -1 javac.  The applied patch generated 53 javac compiler warnings (more than the trunk's current 45 warnings).
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +         xsi:schemaLocation=""[link] [link]"">
+      @DefaultValue(Integer.MAX_VALUE + """") @QueryParam(Constants.SCAN_LIMIT) int userRequestedLimit,
+   * @throws IOEXception if the endpoint does not exist, there is a timeout, or some other general failure mode
+   * @param value true if HFile blocks should be cached on the servers for this scan, false otherwise
+name=""Y29udGVudCwsMTI0NDg1MTk5OTE4Nw==""/&gt;&lt;/Node&gt;&lt;/LiveNodes&gt;&lt;/ClusterStatus&gt;<br>
+% curl -H ""Accept: text/xml"" [link]
+% curl -H ""Accept: application/json"" [link]
+% curl -H ""Accept: application/x-protobuf"" [link]
+% curl -H ""Accept: application/octet-stream"" [link]
+% curl -H ""Accept: application/json"" [link]
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 19 **
FAILURE: Integrated in HBase-0.98 #590 (See )
HBASE-12197 Move rest to it's on module (eclark: rev 876617bd32865885293ea6b28d096a3d911419a3)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/log4j.properties
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* hbase-server/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* hbase-rest/pom.xml
* [file java]
* [file java]
* hbase-rest/src/test/resources/hdfs-site.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/hbase-site.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-site.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-queues.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/zoo.cfg
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* [file java]
* [file java]


** Comment 20 **
SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #561 (See )
HBASE-12197 Move rest to it's on module (eclark: rev 876617bd32865885293ea6b28d096a3d911419a3)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* hbase-server/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/zoo.cfg
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-queues.xml
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-site.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/hbase-site.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* hbase-rest/src/test/resources/log4j.properties
* [file java]
* hbase-rest/src/test/resources/hdfs-site.xml
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 21 **
SUCCESS: Integrated in HBase-1.0 #297 (See )
HBASE-12197 Move rest to it's on module (eclark: rev 052a6f0702ba1cdec30ff73563a8df4902d94265)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* hbase-rest/src/test/resources/zoo.cfg
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellMessage.proto
* pom.xml
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* hbase-rest/src/test/resources/mapred-site.xml
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/java/org/apache/hadoop/hbase/rest/package.html
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ColumnSchemaMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/mapred-queues.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* hbase-rest/src/test/resources/hdfs-site.xml
* [file java]
* [file java]
* hbase-rest/pom.xml
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/hbase-webapps/rest/index.html
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/hbase-site.xml
* [file java]
* [file java]
* [file java]
* hbase-rest/src/test/resources/log4j.properties
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/StorageClusterStatusMessage.proto
* [file java]
* [file java]
* hbase-server/src/main/resources/hbase-webapps/rest/rest.jsp
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/ScannerMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableListMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/CellSetMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/VersionMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableInfoMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* [file java]
* hbase-server/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/TableSchemaMessage.proto
* [file java]


** Comment 22 **
[Comment excluded]
"
HBASE-12736,https://issues.apache.org/jira/browse/HBASE-12736,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RegionsResource.java,Let MetaScanner recycle a given Connection,NO,"It is very heavy to create a Connection on each meta scan. Connections create RpcClients, RpcClients create RPC connections and all cannot be recycled.

Tests with a lot of metascans are very heavy with the async client.

This issue is to make anything that uses metaScans reuse the same connection.","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e267db45ac1dca0b56ca562d6407f16ee1f68ab2.
  ATTACHMENT ID: 12688521
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
                -1 checkstyle.  The applied patch generated 2086 checkstyle errors (more than the master's current 2085 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestClientNoCluster
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
- Fixed test fail
- Let all tests use the connection of the mini cluster in it.
- Fix check style issue
Can't see javadoc issues that this patch is causing.

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e267db45ac1dca0b56ca562d6407f16ee1f68ab2.
  ATTACHMENT ID: 12688538
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
You don't need to pass a configuration if you are passing a Connection in below?
  public static void metaScan(Configuration configuration, Connection connection,
74	      MetaScannerVisitor visitor) throws IOException {
.. but if it makes the patch smaller, just leave it as is.
We don't do this in codebase: import org.apache.hadoop.hbase.client.*;
We explicitly import needed classes.
Are all Connections and Tables being closed?
On the failing test, if you can't figure it, you can punt to me and I'll dig since it is probably testing arcania, stuff I've had my head in this last few weeks.
Nice patch

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e267db45ac1dca0b56ca562d6407f16ee1f68ab2.
  ATTACHMENT ID: 12688556
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
                  org.apache.hadoop.hbase.client.TestMetaScanner
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
- Fixes test fails (Seemed to want to fix this issue too fast this weekend)

** Comment 9 **
[Comment excluded]

** Comment 10 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 4d53fe5dcd7b3bd8ca59e2a0683697e2cddaecfc.
  ATTACHMENT ID: 12688671
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 4d53fe5dcd7b3bd8ca59e2a0683697e2cddaecfc.
  ATTACHMENT ID: 12688671
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    -1 release audit.  The applied patch generated 1 release audit warnings (more than the master's current 0 warnings).
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 0d5f967c7ff4809ca782f68a9e48896dd04b16f6.
  ATTACHMENT ID: 12688862
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 24 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-1.0 #612 (See )
HBASE-12736 Let MetaScanner recycle a given Connection (Jurriaan Mous) (stack: rev cabae4b580cdad7436bac7913f925debb89ae994)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]
"
HBASE-14147,https://issues.apache.org/jira/browse/HBASE-14147,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RootResource.java,REST Support for Namespaces,NO,"Expand REST services to include addition features:

* Create namespace
* Alter namespace
* Describe namespace
* Drop namespace
* List tables in a specific namespace
* List all namespaces.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit c7065c4c40e94bcce2035b8ea9813cfc6124a7e0.
  ATTACHMENT ID: 12749527
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 16 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 5 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
     -1 core zombie tests.  There are 1 zombie test(s): 
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
bq. Manipulating namespace from REST is a little on the exotic side though I'd say. 
This seems fine. We already create table schema and modify it with POST or PUT to /<table>/schema. Adding the ability to define namespaces is missing in that respect. REST predated namespaces. There are some minor formatting issues with the patch, missing spaces between keywords and open braces, missing spaces between 'if' and conditional expression, and such, nothing major. Nice contribution. Let's get it in.

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit a11f5c55b4d247c3ac0950398624383ec38e6f1b.
  ATTACHMENT ID: 12754315
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 16 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 5 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.regionserver.TestWALLockup
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager.test([file java]:186)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit bada19bb54a358233db2b3e23c86d215ac2dc29b.
  ATTACHMENT ID: 12754329
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 16 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 5 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-TRUNK #6787 (See )
HBASE-14147 REST Support for Namespaces (Matt Warhaftig) (stack: rev fa730f89c3ed9244384951f7442163b6d860c215)
* [file java]
* hbase-rest/pom.xml
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-1.3 #153 (See )
HBASE-14147 REST Support for Namespaces (Matt Warhaftig) (stack: rev 39ec06e5acc8b60b69473abd95489d894256aec2)
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* hbase-rest/pom.xml


** Comment 14 **
FAILURE: Integrated in HBase-1.3-IT #137 (See )
HBASE-14147 REST Support for Namespaces (Matt Warhaftig) (stack: rev 39ec06e5acc8b60b69473abd95489d894256aec2)
* hbase-rest/pom.xml
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-1.3 #154 (See )
Revert ""HBASE-14147 REST Support for Namespaces (Matt Warhaftig); DOES NOT COMPILE"" (stack: rev 48ab0923c991bafe29eb204a9cd290a41fb90592)
* [file java]
* hbase-rest/pom.xml
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd


** Comment 18 **
FAILURE: Integrated in HBase-TRUNK #6788 (See )
Revert ""HBASE-14147 REST Support for Namespaces (Matt Warhaftig); DOES NOT COMPILE"" (stack: rev 27d3ab43efeabe2a0e1173858b6994b17b5c355b)
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* hbase-rest/pom.xml
* [file java]
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-1.3-IT #138 (See )
Revert ""HBASE-14147 REST Support for Namespaces (Matt Warhaftig); DOES NOT COMPILE"" (stack: rev 48ab0923c991bafe29eb204a9cd290a41fb90592)
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* hbase-rest/pom.xml


** Comment 20 **
 I believe the compilation errors are due to a bad patch merge into source.  If you compare my patch attached to this ticket versus what was committed in fa730f all of the new files are missing (e.g. [file java]).
Please try committing again.

** Comment 21 **
[Comment excluded]

** Comment 22 **
FAILURE: Integrated in HBase-1.2-IT #133 (See )
HBASE-14147 Add namespace CRUD functionality to REST. (stack: rev 790b15b34fdbb0da8e13ae9f0feb6c157811fbf9)
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 23 **
Reopening. Reverted from branch-1 and branch-1.2. I left it in master branch. When I build branch-1, I get this:
 ------------------------------------------------------------------------
 BUILD FAILURE
 ------------------------------------------------------------------------
 Total time: 56.256s
 Finished at: Wed Sep 09 21:36:40 PDT 2015
 Final Memory: 133M/1603M
 ------------------------------------------------------------------------
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-rest: Compilation failure: Compilation failure:
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol:   class RestTests
 location: package org.apache.hadoop.hbase.testclassification
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol:   class RestTests
 location: package org.apache.hadoop.hbase.testclassification
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol:   class RestTests
 location: package org.apache.hadoop.hbase.testclassification
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol:   class RestTests
 location: package org.apache.hadoop.hbase.testclassification
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol: class RestTests
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol: class RestTests
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 symbol: class RestTests
 /Users/stack/checkouts/hbase.git.[file java]: error: cannot find symbol
 -> 


** Comment 24 **
FAILURE: Integrated in HBase-1.2 #157 (See )
HBASE-14147 Add namespace CRUD functionality to REST. (stack: rev 790b15b34fdbb0da8e13ae9f0feb6c157811fbf9)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* hbase-rest/pom.xml
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
Revert ""HBASE-14147 Add namespace CRUD functionality to REST."" (stack: rev 807accae48b09c2cf08ef12c3e58401ebaa9d44b)
* hbase-rest/pom.xml
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 25 **
FAILURE: Integrated in HBase-1.3 #157 (See )
HBASE-14147 Add namespace CRUD functionality to REST. (stack: rev e1f594c69598a654e451acac346a938ef3a09b6f)
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]


** Comment 26 **
On branch-1,  I'm getting the following compilation error:
{code}
"" -------------------------------------------------------------
 COMPILATION ERROR :
 -------------------------------------------------------------
 [file java]: error: cannot find symbol
   symbol:   class RestTests
  location: package org.apache.hadoop.hbase.testclassification
[file java]: error: cannot find symbol
   symbol:   class RestTests
  location: package org.apache.hadoop.hbase.testclassification
[file java]: error: cannot find symbol
   symbol:   class RestTests
  location: package org.apache.hadoop.hbase.testclassification
[file java]: error: cannot find symbol
   symbol:   class RestTests
  location: package org.apache.hadoop.hbase.testclassification
[file java]: error: cannot find symbol
   symbol: class RestTests
[file java]: error: cannot find symbol
   symbol: class RestTests
[file java]: error: cannot find symbol
   symbol: class RestTests
[file java]: error: cannot find symbol
{code}
Is this related?

** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in HBase-1.3-IT #141 (See )
HBASE-14147 Add namespace CRUD functionality to REST. (stack: rev e1f594c69598a654e451acac346a938ef3a09b6f)
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
FAILURE: Integrated in HBase-1.3 #159 (See )
Revert ""HBASE-14147 Add namespace CRUD functionality to REST."" (stack: rev 0bcaa165adeace7dfa8e3ccff330e0bef8e20e5a)
* hbase-rest/pom.xml
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 32 **
I'll take this up, and will fix up for each branch while picking back. The compile errors above are a known detail with test annotations. There might be others. I'm familiar with them. 

** Comment 33 **
[Comment excluded]

** Comment 34 **
FAILURE: Integrated in HBase-1.3 #191 (See )
HBASE-14147 Add namespace CRUD functionality to REST (apurtell: rev 05bd89b9b781d7c108858d883aae7f08fe1fce32)
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* [file java]
* hbase-rest/pom.xml


** Comment 35 **
FAILURE: Integrated in HBase-TRUNK #6826 (See )
HBASE-14147 Add namespace CRUD functionality to REST (apurtell: rev 783e20e1a7ca2c796b8d9c9e938e5c5779aa30c7)
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* [file java]
* [file java]
* hbase-rest/pom.xml


** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
FAILURE: Integrated in HBase-1.2 #190 (See )
HBASE-14147 Add namespace CRUD functionality to REST (apurtell: rev cb57ebaa8a4c1b783df230785e1b6a584d078896)
* hbase-rest/pom.xml
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd


** Comment 39 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1081 (See )
HBASE-14147 Add namespace CRUD functionality to REST (apurtell: rev 75356f2d49aeb4d532705ca922b7fe9416e66883)
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacePropertiesMessage.proto
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/XMLSchema.xsd
* hbase-rest/src/main/resources/org/apache/hadoop/hbase/rest/protobuf/NamespacesMessage.proto
* [file java]
* hbase-rest/pom.xml
* [file java]
* [file java]
* [file java]


** Comment 40 **
[Comment excluded]

** Comment 41 **
Hey , looks like this patch is failing unit tests on jdk8. Please have a look at HBASE-14584.

** Comment 42 **
Hey  and , I cannot get the POST endpoint to work and create a namespace. I'm using this syntax:
{code}
curl -vi -X POST -H ""Accept: text/xml"" -H ""Content-Type: text/xml""  ""[link]""
{code}
I have tried with and without the trailing slash. The response I get is:
{code}
< HTTP/1.1 400 Bad Request
HTTP/1.1 400 Bad Request
< Content-Type: text/html; charset=iso-8859-1
Content-Type: text/html; charset=iso-8859-1
< Cache-Control: must-revalidate,no-cache,no-store
Cache-Control: must-revalidate,no-cache,no-store
< Content-Length: 1387
Content-Length: 1387
{code}
I'm going to try this on Vanilla HBase tomorrow, as this is on CDH that I'm seeing the error. I'll let you know, but in the meantime, if you could spot what I'm doing wrong that would be helpful. I don't seem to be getting any helpful logs anywhere either.  was helping me out and we didn't get anywhere.

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]
"
HBASE-12728,https://issues.apache.org/jira/browse/HBASE-12728,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResource.java,buffered writes substantially less useful after removal of HTablePool,NO,"In previous versions of HBase, when use of HTablePool was encouraged, HTable instances were long-lived in that pool, and for that reason, if autoFlush was set to false, the table instance could accumulate a full buffer of writes before a flush was triggered. Writes from the client to the cluster could then be substantially larger and less frequent than without buffering.

However, when HTablePool was deprecated, the primary justification seems to have been that creating HTable instances is cheap, so long as the connection and executor service being passed to it are pre-provided. A use pattern was encouraged where users should create a new HTable instance for every operation, using an existing connection and executor service, and then close the table. In this pattern, buffered writes are substantially less useful; writes are as small and as frequent as they would have been with autoflush=true, except the synchronous write is moved from the operation itself to the table close call which immediately follows.

More concretely :
```
// Given these two helpers ...

private HTableInterface getAutoFlushTable(String tableName) throws IOException {
  // (autoflush is true by default)
  return storedConnection.getTable(tableName, executorService);
}

private HTableInterface getBufferedTable(String tableName) throws IOException {
  HTableInterface table = getAutoFlushTable(tableName);
  table.setAutoFlush(false);
  return table;
}

// it's my contention that these two methods would behave almost identically,
// except the first will hit a synchronous flush during the put call,
and the second will
// flush during the (hidden) close call on table.

private void writeAutoFlushed(Put somePut) throws IOException {
  try (HTableInterface table = getAutoFlushTable(tableName)) {
    table.put(somePut); // will do synchronous flush
  }
}

private void writeBuffered(Put somePut) throws IOException {
  try (HTableInterface table = getBufferedTable(tableName)) {
    table.put(somePut);
  } // auto-close will trigger synchronous flush
}
```

For buffered writes to actually provide a performance benefit to users, one of two things must happen:

- The writeBuffer itself shouldn't live, flush and die with the lifecycle of it's HTableInstance. If the writeBuffer were managed elsewhere and had a long lifespan, this could cease to be an issue. However, if the same writeBuffer is appended to by multiple tables, then some additional concurrency control will be needed around it.
- Alternatively, there should be some pattern for having long-lived HTable instances. However, since HTable is not thread-safe, we'd need multiple instances, and a mechanism for leasing them out safely -- which sure sounds a lot like the old HTablePool to me.

See discussion on mailing list here : http://mail-archives.apache.org/mod_mbox/hbase-user/201412.mbox/%3CCAPdJLkEzmUQZ_kvD%3D8mrxi4V%3DhCmUp3g9MUZsddD%2Bmon%2BAvNtg%40mail.gmail.com%3E","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
If my previous comment seems a little heavy-handed, a less radical approach may be the earlier suggestion of a buffered delegator.   points out above that the client is already buffered, but my argument is 1) that's not the best place for this relatively heavy logic, and 2) Java's polymorphism makes it quite easy to extend the core behavior without baking it into a single mega-class.  The new interfaces actually make this fairly simple.  And most importantly, a user won't need to change any code except at instantiation.
We could create a class called BufferedTable that implements Table and delegates to an underlying Table instance.  We surface the buffer-related methods from the core client here.  Something like this:
/**
 * Javadoc here warning about the possibility of losing writes on client crash.
 *
 * Also, emphasize the need to always close, probably inside a finally{}.
 **/
public class BufferedTable implements Table {
    // This constructor will be familiar for people who know BufferedWriter
    pubic BufferedTable(Table table) {...}  
    // All methods except Put pass through.  Put calls a singleton that handles buffering.
    ...
    // Remove setAutoFlush and isAutoFlush since that's implicit in using this class.
    /* snip */
    // Change these to statics since they need to talk to an underlying singleton.
    public static void flushCommits() {...}
    public static void setWriteBufferSize(long writeBufferSize) {...}
    // Maybe use reference counting here to force a flush on the last close.
    public void close();
}
{code}


** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
 and I have been discussing this offline for a couple of days and have come up with the following proposal.  It will require a few JIRA sub-tasks, but it's probably only a week's worth of work, plus reviews.  In a nutshell:
# Deprecate autoFlush methods (ie Put buffering) in {{HTable}}
# Remove all autoFlush methods from {{Table}}
# Create {{BufferedTable}} (outlined below), which will buffer Puts using {{HTableMultiplexer}}
# Create {{BufferedConnection}} as a new factory class
# Have {{HTableMultiplexer}} implement {{Closeable}} (just fixing bad behavior)
# _Behavior change_: {{HTableMultiplexer}} flushes Puts by having {{FlushWorker}} threads...
#* _OLD_: implement low-level logic against {{AsyncProcess}}
#* _NEW_: call {{Table#put<List<Put>>}}, thus removing duplicate code and improving encapsulation
# _Behavior change_: When its queue is full, {{HTableMultiplexer}}...
#* _OLD_: immediately rejects all Puts
#* _NEW_: blocks for a configurable time in ms (can be 0) before rejecting Puts
# _Behavior change_: When an async Put fails...
#* _OLD_: the exception is thrown during a unrelated future Put operation (confusing)
#* _NEW_: an exception is sent to the a listener provided by the client, following the Observer pattern
These are the new classes:
public class BufferedConnection implements Connection {
    private Connection c;
    private HTableMultiplexer htm;
    /* If listener is null, will log but won't notify an async exceptions */
    public BufferedConnection(Connection c, ExceptionListener l) {
        this.c = c;
        this.htm = new HTableMultiplexer(..., c, l);
    }
    public BufferedTable getTable(TableName tn) {
        return new BufferedTable(c.getTable(tn), htm);
    }
    /* getAdmin() and getRegionLocator(...) methods delegate to Connection */
}
public class BufferedTable implements Table {
    private Table t;
    private HTableMultiplexer htm;
    public BufferedTable(Table t, HTableMultiplexer htm) { ... }
    /* Puts go to htm.doPut(...), all methods delegate to t */
}
public interface ExceptionListener {
    public void onException(RetriesExhaustedWithDetailsException e);
}
{code}
From a user standpoint it looks like this:
*Before*
Connection conn = ConnectionFactory.createConnection();
Table t = conn.getTable(TableName.valueOf(""mytable""));
t.setAutoFlushTo(false);
/* do stuff */
t.close();
conn.close();
{code}
*After*
Connection conn = new BufferedConnection(ConnectionFactory.createConnection());
Table t = conn.getTable(TableName.valueOf(""mytable""));
/* do stuff */
t.close();
conn.close();
{code}
In essence, a few new classes, a moderate amount of work in HTableMultiplexer, and a few deprecation annotations in HTable.  Let us know if this looks acceptable and we'll create some subtasks and make it so.


** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
bq.Is HTableMultiplexer a good existing solution to replace the functionality of HTable without autoflush?
No. It was first used to speed up puts across multiple connections and multiple tcp streams for things that value speed over correctness. There's no way to check on which puts fail and which succeed.
IMO it shouldn't be recommended. I would even go so far as to say that it's use should be discouraged.

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
Okay, here's another pass, scratching out the HTableMultiplexer idea.  Instead we'll create a new class called {{AsyncPutter}}. (Not a huge fan of the name, so if you have a better one, please share.)
First off, here are our basic requirements in this refactor:
# Handle the M/R case where a user wants to batch and flush in a single thread
# Handle the case Aaron described where we batch across multiple threads
# Provide a way to do this through the new Table interface for convenience
# Buffering/batching limits based on size in bytes, not queue length
# Move towards 's suggestion of ""HTable as cheap proxies to tables only""
# While durability can't be guaranteed in case of a crash, avoid losing data otherwise.
So here are our classes:
// BufferedTable is lightweight and single-threaded.  Many of them can share a single AsyncPutter.
public class BufferedTable implements Table {
    public BufferedTable(Table t, AsyncPutter ap);
    public void flush();
}
// Thread-safe handler of puts for one or more BufferedTable instances.
public class AsyncPutter implements Closeable {
    public AsyncPutter(Connection c, ExecutorService pool, ExceptionListener e, PutBuffer pb);
    public synchronized add(Put put);  // Synchronization adds nanoseconds in the single-threaded case.  No biggie.
    public synchronized flush();
    public synchronized close();
}
// Simple single-threaded data holder.
public class PutBuffer {
    public PutBuffer(long maxBufferSize);  // In bytes.  This makes more sense than queue length for memory management.
    // maxBufferSize = totalBufferMem / numberOfExecutorPoolThreads
    public void add(Put p);
    public boolean isBatchAvailable();
    public List<Put> removeBatch();
}
// To make sure exceptions don't get swallowed.
public interface ExceptionListener {
    void onException(RetriesExhaustedWithDetailsException e);
}
{code}
We also proposed a {{BufferedConnection}} factory, simply to make it easier to switch between Table and BufferTable implementations without much refactoring.  When used, it would own the AsyncPutter.  Pros/cons for this idea?  It's not essential.
Asynchronous exception handling takes place through an {{ExceptionListener}} observer provided by the user.  This means that exceptions are not thrown for simple put failures; they are passed to the listener.  The thought here is I find the current behavior non-deterministic:
table.put(put1);  // This put causes an exception
table.put(put2);  // But we don't see the exception until we get here ...
table.put(put3);  // ... or maybe(?) here.  put3 succeeded, but I got an exception thrown.  That's counter-intuitive.
{code}
An ExceptionListener is a pretty standard pattern for asynchronous error handling.  M/R or other cases might rely on an exception being thrown synchronously to rollback appropriately, but it's easy enough to mimic that behavior with the listener approach.
{{BufferedTable#close}} does not flush since we need to support batching across multiple threads.  {{AsyncPutter#close}} does flush.  (Will JavaDoc this.)  If we decide to provide a BufferedConnection, then closing that would also flush, since it owns the AsyncPutter.
Do we need a timeout-based flush?  I don't see one in the current HTable implementation, but if it's important we could add it to the AsyncPutter.  Seems a good way to limit lost mutations during slow periods of writes into a big buffer.


** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
I think API wise, what Carter proposes above makes sense with a couple of comments. 
 - I think {{BufferedTable}} should be an interface still with {{flush()}} or {{flushCommits()}} method. 
 - {{ExceptionListener}} should also get the original {{Put}} so that it can learn about which operation has failed (not just the exception). 
 - Do we want AsyncPutter, etc to be client-public API at all? I like the {{BufferedConnection}} route where we can have getBufferedTable() method to construct this and not worry about any class. However do we want to address doing puts() with flush and doing async flush by the same client? Does the client maintain two Connection objects? 
 - Should the interfaces be {{Put}} based or {{Mutation}} based? We can make it generic in case of we add Delete's later on, but may not be worth the extra cost. 
bq. BufferedTable#close does not flush since we need to support batching across multiple threads. AsyncPutter#close does flush. 
Seems a bit unintuitive. If we do the BufferedConnection route, the only way to flush everything is to 
bq. Do we need a timeout-based flush?
It makes sense, but this can be added later I say. 

** Comment 41 **
[Comment excluded]

** Comment 42 **
Feedback.
On AsyncPutter, will we ever want to buffer Increments or Appends or Deletes (Increments we might want to aggregate client-side but that is something different from AsyncPutter i suppose); if so, AsyncMutator instead? (An uglier name!).
Async is probably good to have in the name since it conveys detachment between invocation and when the op actually happens but on other hand, we could just call it Buffer<Put> or recast the PutBuffer you have above and do away with an extra moving part?
Ditto, do we even need to expose BufferedTable? Just add to Connection a #getTable(TableName, PutBuffer) that takes a PutBuffer -- the implementation behind the scenes would use the passed PutBuffer. I suppose this would mean you'd have to ask Connection for a PutBuffer instance (Connection#getPutBuffer(maxsize, executor) or maybe this is just where your BufferedConnection comes in; it adds these methods.
Having the PutBuffer detached from Table is clean but what is to prevent me adding a Put for TableA to TableB's PutBuffer?  There'd be no protection against this? (That'd probably be fine)
The flush on BufferedTable is a noop, right?
BufferedTable shouldn't have a close if its not going to do anything?
The ExceptionListener seems good but should it supply more info than just the exception? For example, where we are in the processing of the buffer -- what edits have succeeded and which have failed (or would that just be TMI?)
Good stuff 

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
Lots of great comments/questions.  Solomon can dig into some of the grittier implementation trade-offs, as this is largely his design.  I can answer some initial questions to keep the ball rolling:
{quote}
{{ExceptionListener}} should also get the original {{Put}}
{quote}
We were planning to return {{RetriesExhaustedWithDetailsException}} whenever possible, which contains the Put.  That’s more consistent with calling Put synchronously.
{quote}
all these API's should accept Mutation as the argument
{quote}
Figuring that’s where we should head eventually, but doesn’t seem we need to be there immediately, right?  Probably makes sense to follow Stack’s idea and make a more general name, e.g. s/AsyncPutter/AsyncMutator/
{quote}
AsyncPutter looks a lot like HTable's internal AsyncProcess
{quote}
Yeah, worth making sure we’re not reinventing the wheel, but also don’t want to inherit unnecessary complexity.  I'll leave this one to Solomon, and maybe it can be debated further in a patch review.
{quote}
does BufferedTable.flush() block the calling thread?
{quote}
Absolutely.  It’s a way to guarantee that previous writes are persisted, when such confidence is needed.
{quote}
Isn't PutBuffer just an implementation detail…
{quote}
PutBuffer is an implementation detail, and it’s probably confusing that I surfaced it in the last straw man.  Just disregard it and focus on the AsyncPutter, which is the long-lived owner of the buffered mutation mechanism and all that entails.
{quote}
In the event of a BufferedTable that does not share it's PutBuffer with any other instances, can it just defer back to the current implementation in HTable?
{quote}
If it makes sense to have a different AsyncPutter for single-threaded situations than multi-threaded, then I’d suggest another implementation rather than trying to make it guess for itself.  But why do you think we should have multiple implementations?  Synchronization locks should be insignificant compared to even very fast wire latencies.
{quote}
On AsyncPutter, will we ever want to buffer Increments or Appends or Deletes?
{quote}
I think deletes make sense.  Appends make me nervous because we’re already breaking sequence guarantees.  I think if we do a solution which supports puts, and can be extended to any other mutation, then we can decide at another time.  Using {[AsyncMutator}} as a name would hint at such extensibility.
{quote}
do we even need to expose BufferedTable?
{quote}
Yes, need it for flush(), which I described more above.
Re: stack’s concern on ExceptionListener, returning RetriesExhaustedWithDetailsException should provide enough info, no?
{quote}
BufferedTable shouldn't have a close
{quote}
I agree, but if it implements Table, then it has to have a nop close.
We’re generally still in alignment with Lars’ comments.  Table implementations become lightweight.  BufferedConnection might be a bit of a misnomer, since it’s more a factory than a “buffered connection”.  But it seems easier for a developer to understand rather than minting a new factory concept.
{quote}
Just add a Connection.getBufferedTable
{quote}
But Connection is an interface.  BufferedConnection is intended as an implementation of that interface, something like:
public class BufferedConnection implements Connection {
    public BufferedConnection(Connection conn, ExceptionListener l);
}
{code}
The idea is that given any implementation of conn, BufferedConnection will wrap the encapsulated tables that are created with buffering logic.  If we put it in Connection, then we make buffering first-class functionality again, rather than extended functionality.
{quote}
Because in the proposal, the BufferedTable is not the owner of the put buffer
{quote}
BufferedTable#flush would be a synchronous pass-through to AsyncPutter#flush.  It doesn't need to own it to do so.
Some more comments...
Was not planning to have BufferedTable to be heavy or thread safe.  Doing that makes it less interchangeable with HTable — which is not thread safe, and would be lighter after this refactor.
Basically the lifecycle revolves around the {{AsyncMutator}}, which is the only heavy thing here.  BufferedConnection constructs and owns it, and injects the mutator into new BufferedTable objects, which will be cheap to construct.  Calling BufferedConnection#close would close AsyncMutator, which in turn would flush its buffers and shutdown its worker threads.  (And throw IllegalStateException if any other operations come through, except for another close, which should be idempotent.)
There was also a question about the need for two Connection objects.  There only needs to be one Connection object, which BufferedConnection would wrap.  All operations, synchronous and asynchronous would go through it.


** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
[Comment excluded]

** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
[Comment excluded]

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 4ac457a7bc909cc92e0a1a0cab21ed0ce6bae893.
  ATTACHMENT ID: 12692039
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 102 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 13 warning messages.
                -1 checkstyle.  The applied patch generated 2080 checkstyle errors (more than the master's current 2075 errors).
    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 66 **
[Comment excluded]

** Comment 67 **
[Comment excluded]

** Comment 68 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 1a21c1684c5d68cb2d1da8ed33500993b0965f8a.
  ATTACHMENT ID: 12692239
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 96 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 14 warning messages.
                -1 checkstyle.  The applied patch generated 2081 checkstyle errors (more than the master's current 2074 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    -1 release audit.  The applied patch generated 2 release audit warnings (more than the master's current 0 warnings).
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    + * An implementation of {@link Lock} that doesn't actually lock anything. {@link BufferedMutatorImpl} uses
+  public static void loadData(final HBaseTestingUtility util, final BufferedMutator mutator, int rows,
    -1 site.  The patch appears to cause mvn site goal to fail.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release audit warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 69 **
Nice doc on BufferedMutator.
This bit of doc is incomplete:
100	   * This method gets called once automatically for every {@link Put} or batch
101	   * of {@link Put}s (when <code>put(List<Put>)</code> is used) when
And we don't want the above either? Right? It was from asyncflush?
s/instantiating/instantiating/
We need to expose threadsafe as an option?  Why not just threadsafe all the time?  One less thing for the user to worry about (Minor cost when uncontended crossing of synchronization barrier)
The config class has wrong tab sizing.
This class is a bit of an odd bird (particularly so because all the rest of your changes are elegant). Let me read the rest of the patch.... OK.  Back again.  I see how it is intended to be used.  Yeah, what Enis says, can we do Builder... and perhaps Fluent pattern (e.g. [link] so instead of a method name thatIsMultithreaded, it'd be multhreaded and instead of withPool, it'd be just pool.  Not a deal-breaker. Just a suggestion.
Public constructor on BufferedMutatorImpl needs to be shutdown... private.
This is interesting:
164	    // This behavior is highly non-intuitive... it does not protect us against
165	    // 94-incompatible behavior, which is a timing issue because hasError, the below code
166	    // and setter of hasError are not synchronized. Perhaps it should be removed.
I got a little lost (because it non-intuitive I suppose -- smile) We are flushing out writes that were buffered before the error showed up?
Can the lock be an internal detail rather than passed on construction? (the less options the user has the better)
s/CachingConnection/BufferingConnection/ to highlight the connection between BufferedMutator and this new Connection type?
Is user supposed to be able to create their own CachingConnection?  Should this be package protected to force folks via the ConnectionFactory?
The redo of HTable to use the new stuff and the changes in Interfaces look great.
Very nice work 


** Comment 70 **
bq. This bit of doc is incomplete: ...
I'll update the comments .  I wanted to get the code out for review.  The documentation can definitely use more work
b1. We need to expose threadsafe as an option? Why not just threadsafe all the time? One less thing for the user to worry about (Minor cost when uncontended crossing of synchronization barrier)
I'm fine either way.  I'll make it all synchronized.
{quote}
This class is a bit of an odd bird (particularly so because all the rest of your changes are elegant). Let me read the rest of the patch.... OK. Back again. I see how it is intended to be used. Yeah, what Enis says, can we do Builder... and perhaps Fluent pattern (e.g. [link] so instead of a method name thatIsMultithreaded, it'd be multhreaded and instead of withPool, it'd be just pool. Not a deal-breaker. Just a suggestion.
{quote}
I'll defer to the wisdom of the crowd here.  I added in a lot of options which could result in a proliferation of Connection.getBufferedMutator() methods.  I'll remove the Config, since we're removing the number of optiosn.
bq. Public constructor on BufferedMutatorImpl needs to be shutdown... private.
OK.
{quote}
This is interesting:
164	// This behavior is highly non-intuitive... it does not protect us against
165	// 94-incompatible behavior, which is a timing issue because hasError, the below code
166	// and setter of hasError are not synchronized. Perhaps it should be removed.
I got a little lost (because it non-intuitive I suppose – smile) We are flushing out writes that were buffered before the error showed up?
{quote}
That bit was copied directly from HTable.  I'm impartial about the correct algorithm in this case, I just didn't want to rock the boat.  This issue is definitely worth a discussion, but I'd ask that if we want to change the algorithm, we do it in another JIRA issue.  
bq. Can the lock be an internal detail rather than passed on construction? (the less options the user has the better)
If everything is synchronized, then sure.  We can even rely on plain old synchronized methods instead of fancy Lock objects.
{quote}
s/CachingConnection/BufferingConnection/ to highlight the connection between BufferedMutator and this new Connection type?
Is user supposed to be able to create their own CachingConnection? Should this be package protected to force folks via the ConnectionFactory?
{quote}
I got a bit fancy for the sake of MultiTableOutputFormat which puts Tables into a Map<String, Table>.  I needed to add a Map<String, BufferedMutator> so I moved that functionality into a separate class for potential reusability.  It looks like it would be better to KISS and move the CachingConnection functionality back into MultiTableOutputFormat.
{quote}
The redo of HTable to use the new stuff and the changes in Interfaces look great.
Very nice work Solomon Duskis
{quote}
:)

** Comment 71 **
[Comment excluded]

** Comment 72 **
[Comment excluded]

** Comment 73 **
[Comment excluded]

** Comment 74 **
[Comment excluded]

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
After this last exchange I've thoroughly convinced myself that HTable is mostly fine as it is.  The problem that the original poster presented is a case where I think that HBase ought not provide a coded solution, since the use cases require a lot of knowledge about the nuances of the situation.  The problem  is trying to solve for is for a long lived service that wants to use asynchronous puts across a lot of requests.  The assumption is that Tables are by short lived objects.  From what I see, the only limitation of short-lived-ness is conceptual.  There's nothing in the HTable codebase that I see any reason to not keep it around for the lifecycle of the service.  Here's my preferred implementation:
{code}
public class MyService {
  private HTableInterface table;
  private ExecutorService executor;
  ...
  public void initialize(..) {
     table = storedConnection.getTable(tableName);
     Runnable r = new Runnable() {
        public void run() {
           synchronize(table) {
             try {
                table.flushCommits();
             } ...
           }
        }
     }
     // somehow use the executor to invoke r every 100 ms. or so
  }
  private void writeBuffered(Put somePut) throws IOException {
     synchronize(table) {
       table.put(somePut); 
     }
  }
  public void close() throws IOException {
     table.close()
  }
}
{code}
I've come to the conclusion that the problem is in the documentation, not the implementation.  All of my work in the patch should be thrown away and I'll consider it a learning experience.
It could be that my analysis about short-lived-ness is way off base, but if it is, then my implementation of BufferedMutator will have the same problems as HTable.
There still is the problem of exception handling, and an async exception listener would be a good idea, but one for a different JIRA ticket.
I feel like I could have missed something critical in my analysis... Thoughts on this?

** Comment 78 **
[Comment excluded]

** Comment 79 **
bq. The problem that the original poster presented is a case where I think that HBase ought not provide a coded solution, since the use cases require a lot of knowledge about the nuances of the situation.
Right or wrong, we have been steering the likes of the original poster awry by providing a 'solution' up to this with table pool and an HTable having a write buffer. We could add your suggestion to the doc for those trying to figure what to do now pool has been deprecated/removed (though it would be better if the synchronization and background writing was done for them internal to HTable rather than have every user implement the background thread anew), but what for those up on the new Interfaces who would do buffered mutating?  Here, don't we want your nice, new, clean BufferedMutator with listening for errors, etc?
bq. ...but if it is, then my implementation of BufferedMutator will have the same problems as HTable.
Which problems? Is it that BM won't have ""...a lot of knowledge about the nuances of the situation""?
BM is synchronized. HT is not.
BM has listener for exceptions. HT does not.
With BM the intent is plain. HT is a bucket.
BM nicely compliments the new Table Interface.  HT is amorphous legacy.
Thanks 

** Comment 80 **
[Comment excluded]

** Comment 81 **
[Comment excluded]

** Comment 82 **
[Comment excluded]

** Comment 83 **
[Comment excluded]

** Comment 84 **
[Comment excluded]

** Comment 85 **
[Comment excluded]

** Comment 86 **
[Comment excluded]

** Comment 87 **
I think it's better to cover the multi-threaded coordination on behalf of the user than expect them to do the synchronizing themselves. The train rolling here is a good one -- it's nice cleanup, it's consistent with previous behaviors, and it makes things more obvious for users. Accompany this with thoughtful javadoc review and a fat example that we can dump into the online book and this will be a fine resolution.
I still like better having a {{Table}},{{BufferedTable}} instead of {{Table}},{{BufferedMutator}}. I think having a drop-in buffering option will make the most sense for a usable API. I hear the argument of maybe it's not the place of our client out-of-the-box, but we have a solution to this today that some folks depend on, so I think it's irresponsible to omit it for 1.0. If  is truly fed up with us ( ::smile:: ) I'm happy to pick up the patch in this direction.
I also think splitting the {{Table}} concept into a reader and a writer is something worth exploring, but not for 1.0. I'm hoping by 2.0 we'll have a valid story for an async (or ?) client and maybe even something that operates on top of a C/native implementation so we can close the gap for folks who aren't on the JVM. For now, let's get 1.0 release unblocked.

** Comment 88 **
BM IMO is a step beyond BT in terms of API cleanup but if a step too far, I'd be fine w/ BT for 1.0. I like the way you characterize what has been going on here as a 'train'  and that we were going to a better place.

** Comment 89 **
[Comment excluded]

** Comment 90 **
[Comment excluded]

** Comment 91 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 53815afc1023a624d6b6069f4111692951a78848.
  ATTACHMENT ID: 12693172
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 3 warning messages.
                -1 checkstyle.  The applied patch generated 2084 checkstyle errors (more than the master's current 2073 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    + * <p>BufferedMutator can also be used on more exotic circumstances. Map/Reduce batch jobs will have a
+ * single BufferedMutator per thread. A single BufferedMutator can also be effectively used in high volume
+  private void doMutate(Mutation m) throws InterruptedIOException, RetriesExhaustedWithDetailsException {
+   * This is used for legacy purposes in {@link HTable} only. This ought not be called for production
+ * An implementation of {@link Lock} that doesn't actually lock anything. {@link BufferedMutatorImpl} uses
+  public static void loadData(final HBaseTestingUtility util, final BufferedMutator mutator, int rows,
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 92 **
Let me track down these hygiene issues.
Running locally, I'm seeing these two tests are being flaky, I'm surprised to see Jenkins pass them
TestFastFail.testFastFail
TestFromClientSide.testCheckAndDeleteWithCompareOp


** Comment 93 **
Cleanup style errors, remove unused class DoNothingLock.

** Comment 94 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 9bdb81f0a1db308a8a452379455b6bbfe70ea20d.
  ATTACHMENT ID: 12693458
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 95 **
[Comment excluded]

** Comment 96 **
[Comment excluded]

** Comment 97 **
[Comment excluded]

** Comment 98 **
[Comment excluded]

** Comment 99 **
[Comment excluded]

** Comment 100 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 9bdb81f0a1db308a8a452379455b6bbfe70ea20d.
  ATTACHMENT ID: 12693688
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 101 **
[Comment excluded]

** Comment 102 **
[Comment excluded]

** Comment 103 **
[Comment excluded]

** Comment 104 **
[Comment excluded]

** Comment 105 **
[Comment excluded]

** Comment 106 **
[Comment excluded]

** Comment 107 **
[Comment excluded]

** Comment 108 **
[Comment excluded]

** Comment 109 **
[Comment excluded]

** Comment 110 **
[Comment excluded]

** Comment 111 **
[Comment excluded]

** Comment 112 **
[Comment excluded]

** Comment 113 **
[Comment excluded]

** Comment 114 **
[Comment excluded]

** Comment 115 **
[Comment excluded]

** Comment 116 **
[Comment excluded]

** Comment 117 **
[Comment excluded]

** Comment 118 **
[Comment excluded]

** Comment 119 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 5fbf80ee5ecb288804d2d2d042199dcd834ae848.
  ATTACHMENT ID: 12694075
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 126 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 120 **
[Comment excluded]

** Comment 121 **
FAILURE: Integrated in HBase-1.1 #101 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (Solomon Duskis and Nick Dimiduk) (ndimiduk: rev 8556e2598e6885b15ce44843aa52589e53d2e601)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 122 **
FAILURE: Integrated in HBase-1.0 #678 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (Solomon Duskis and Nick Dimiduk) (ndimiduk: rev 7bbbaaeb53295d3a50b9d863f3c01801df0a78b4)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 123 **
FAILURE: Integrated in HBase-TRUNK #6049 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (Solomon Duskis and Nick Dimiduk) (ndimiduk: rev ab18158e6001a7f15a35679ca8fc7ff772f90e25)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 124 **
[Comment excluded]

** Comment 125 **
Some of these failures look related. Let me cleanup.

** Comment 126 **
[Comment excluded]

** Comment 127 **
Sorry for the delay. This fixes the failing TestAssignmentManager.

** Comment 128 **
I'm not sure about TestFSErrorsExposed.testFullSystemBubblesFSErrors

** Comment 129 **
[Comment excluded]

** Comment 130 **
FAILURE: Integrated in HBase-1.1 #103 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (addendum) (ndimiduk: rev 4b9eaf585124094f02db41cc4f84805e936417b3)
* [file java]


** Comment 131 **
Addendum for 1.0 allows TestFSErrorsExposed to pass.

** Comment 132 **
FAILURE: Integrated in HBase-1.0 #680 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (addendum) (ndimiduk: rev baf879967a41151293e780bc32092046a3aa7af2)
* [file java]


** Comment 133 **
bq. Addendum for 1.0 allows TestFSErrorsExposed to pass
That's extremely subtle; I'd have thought those lines equivalent. Why does it allow the test to pass?

** Comment 134 **
[Comment excluded]

** Comment 135 **
After doing a clean build, the test doesn't pass with addendum 2.
Though there're a lot of exceptions:
{code}
2015-01-23 18:56:53,209 WARN   hdfs.DFSInputStream(1078): Connection failure: Failed to connect to /127.0.0.1:52369 for file /    user/tyu/test-data/58b7b2ea-9919-4535-baf5-c3ed27fce466/data/hbase/meta/1588230740/info/517adf8439d34234bf13b9c98d8ebdfd for block BP-1225607801-192.168.0.19-1422068063192:      blk_1073741838_1014:java.net.ConnectException: Connection refused
java.net.ConnectException: Connection refused
  at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
  at sun.nio.ch.SocketChannelImpl.finishConnect([file java]:739)
...
  at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2118)
  at org.apache.hadoop.hbase.regionserver.RSRpcServices.scan([file java]:2033)
{code}
the exceptions are not bubbled up to caller.
Debugging.

** Comment 136 **
Placing a breakpoint on the following line in StoreFileScanner :
{code}
      throw new IOException(""Could not seek "" + this + "" to key "" + key, ioe);
{code}
I found that it was in hbase:meta scanning where the above breakpoint got hit.
However, this IOE was not delivered to TestFSErrorsExposed.

** Comment 137 **
I think the problem is that, because of the retries in branch-1.0 is done 3 times for the region lookup, where each lookup does 3 retries of its own from DFSInputStream causing a timeout on the original scan RPC so causing a SocketTimeout (60 sec) instead of IOException as expected from the test. 
Notice that we set the retries number in 2 places in the test: 
{code}
      // We set it not to run or it will trigger server shutdown while sync'ing
      // because all the datanodes are bad
      util.getConfiguration().setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER, 3);
     ...
      util.getConfiguration().setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER, 1);
{code}
Notice that the Connection in util is created before the second set, so it gets the retries number from the initial set, which is 3. That is why the test fails in branch-1.0. In branch-1 and master, the connection still have retries of 3, but due to HBASE-12761, the scanner initialization have changed, making the first try throw the exception. 
Attached patch fixes the problem. We can commit it to all 3 branches (it does not affect branch-1 and master but good to have). 

** Comment 138 **
[Comment excluded]

** Comment 139 **
I think addendum 3 should only be applied to branch-1.0 - due to the limitation cited above.
For branch-1 and master, let's keep the current test code - when TestFSErrorsExposed#testFullSystemBubblesFSErrors times out, we know there is a regression.

** Comment 140 **
[Comment excluded]

** Comment 141 **
[Comment excluded]

** Comment 142 **
SUCCESS: Integrated in HBase-TRUNK #6052 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (addendum for failing test in branch-1.0) (enis: rev e05341d01d3d1a5bac08359babfdd9cfad05052e)
* [file java]


** Comment 143 **
SUCCESS: Integrated in HBase-1.1 #104 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (addendum for failing test in branch-1.0) (enis: rev e180f0bdd1534910a20da0b02894249537628a7a)
* [file java]


** Comment 144 **
SUCCESS: Integrated in HBase-1.0 #681 (See )
HBASE-12728 buffered writes substantially less useful after removal of HTablePool (addendum for failing test in branch-1.0) (enis: rev 1f0eb701dfc2794654c130f600a1614572155f17)
* [file java]


** Comment 145 **
[Comment excluded]
"
HBASE-12991,https://issues.apache.org/jira/browse/HBASE-12991,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/SchemaResource.java,Use HBase 1.0 interfaces in hbase-rest,NO,hbase-rest uses HTable and HBaseAdmin under the covers.  They should use the new hbase 1.0 interfaces instead.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f97c00fd99609214830e68f52c1ec48c4e506c1c.
  ATTACHMENT ID: 12697512
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 1941 checkstyle errors (more than the master's current 1940 errors).
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 2 zombie test(s): 	at org.apache.reef.tests.taskresubmit.TaskResubmitTest.testTaskResubmission([file java]:67)
	at org.apache.hadoop.hbase.TestAcidGuarantees.testScanAtomicity([file java]:354)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit a3f495f20d492ab491f2af4759b2aef5d5c3bd74.
  ATTACHMENT ID: 12697803
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache.testOnRegionChange([file java]:113)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit a7d93155f10184942ffc146f0694e5da83c78cd4.
  ATTACHMENT ID: 12697903
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 15 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.TestDistributedLogSplitting
     -1 core zombie tests.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.master.TestTableLockManager.testLockTimeoutException([file java]:132)
	at org.apache.hadoop.hbase.coprocessor.TestMasterObserver.testRegionTransitionOperations([file java]:1604)
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in HBase-TRUNK #6119 (See )
HBASE-12991 Use HBase 1.0 interfaces in hbase-rest (Solomon Duskis) (enis: rev d5a2830777fb1b3c5e8d319f1928c30013fb04b1)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
FAILURE: Integrated in HBase-1.1 #168 (See )
HBASE-12991 Use HBase 1.0 interfaces in hbase-rest (Solomon Duskis) (enis: rev f886fbed799dca065235d165e4a224be046f60f1)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-1.0 #730 (See )
HBASE-12991 Use HBase 1.0 interfaces in hbase-rest (Solomon Duskis) (enis: rev cda791de174012c608f813e99c71855489c123b6)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 13 **
[Comment excluded]
"
HBASE-14928,https://issues.apache.org/jira/browse/HBASE-14928,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java,Start row should be set for query through HBase REST gateway involving globbing option,NO,"As Ben Sutton reported in the thread, Slow response on HBase REST api using globbing option, query through the Rest API with a globbing option i.e. http://<HBase_Rest>:<HBase_Rest_Port>/table/key\* executes extremely slowly.

Jerry He pointed out that PrefixFilter is used for query involving globbing option.

This issue is to fix this bug by setting start row for such queries.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 8b3d1f144408e4a7a014c5ac46418c9e91b9b0db.
  ATTACHMENT ID: 12775755
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
    +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
    +1 zombies. No zombie tests found running at the end of the build.
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
I wonder if it is fine to go back to the old behavior completely.
In the new code, 
{code}
@Path(""{suffixglobbingspec: .*\\*/.+}"")
{code}
{code}
@Path(""{scanspec: .*$}"")
{code}
The url path table/rowkey* will be handled by the scanspec.  Should it be handled by the suffixglobbingspec? Notice that the suffixglobbingspec needs table/rowkey*/column
The workaround I had is to table/rowkey*/family1.  Then it would go back to the old behavior.


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-1.3-IT #355 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev 7bd3b94db1011a0f5742e22dd48af3e298c5dfe4)
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-1.1-JDK8 #1701 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev fe7a0a2d51eabd7f210bcc9f4944de75ea304795)
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-1.1-JDK7 #1613 (See )
HBASE-14928 Start row should be set for query through HBase REST (tedyu: rev fe7a0a2d51eabd7f210bcc9f4944de75ea304795)
* [file java]


** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in HBase-1.3 #416 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev 7bd3b94db1011a0f5742e22dd48af3e298c5dfe4)
* [file java]


** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-Trunk_matrix #532 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev d18c1af3bb12d6bf1800f22a5289bcb71020bb65)
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1141 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev 5ab7ac15180ad4d5acb255715e6389565afd3c4e)
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-0.98-matrix #268 (See )
HBASE-14928 Start row should be set for query through HBase REST gateway (tedyu: rev 5ab7ac15180ad4d5acb255715e6389565afd3c4e)
* [file java]


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]
"
HBASE-14594,https://issues.apache.org/jira/browse/HBASE-14594,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/AuthFilter.java,Use new DNS API introduced in HADOOP-12437,NO,"HADOOP-12437 introduced a new API to {{org.apache.hadoop.net.DNS}}: {{getDefaultHost(String, String, boolean)}}.

The purpose of this method (the boolean argument really) is to change the functionality so that when rDNS fails, {{InetAddress#getCanonicalHostName()}} is consulted which includes resolution via the hosts file.

The direct application of this new method is relevant on hosts with multiples NICs and Kerberos enabled.

Sadly, this method only exists in 2.8.0-SNAPSHOT, so to benefit from the fix without great pain, some reflection is required.","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 2ff6d0fe4789857ab51685949711d755dedd459a.
  ATTACHMENT ID: 12766257
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
                -1 checkstyle.  The applied patch generated 1755 checkstyle errors (more than the master's current 1754 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer
     -1 core zombie tests.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd.testEndToEnd([file java]:143)
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 3 **
Try to fix checkstyle and javadoc warnings.

** Comment 4 **
[Comment excluded]

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 6323cd95442bf6c2617b7e8267e0c0b76e4c47eb.
  ATTACHMENT ID: 12766351
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in HBase-TRUNK #6911 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev 8c69b0f7514974856d8190a755b3950d8d38ce8e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 10 **
FAILURE: Integrated in HBase-1.1 #707 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev 2b46e3c260075e18a11e5758c0a1d9272819104d)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-1.3 #266 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev be04ede5b925cb0b771b33ade14380a1a126b168)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in HBase-1.2-IT #211 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev eba181ec5e9293266a95867c5d91665e32b63b04)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1.0 branch at commit 46f2877381afefd1b7c838e10a80776b043854ae.
  ATTACHMENT ID: 12766708
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 17 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1110 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev 200faa1b8eb9fa3bef6a5a556d6a2ac3150f5e73)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-1.0 #1082 (See )
HBASE-14594 Use new DNS API introduced in HADOOP-12437 (Josh Elser) (tedyu: rev 7064f10842f83eb0c90762a7fcae9278fdf2500d)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]
"
HBASE-15118,https://issues.apache.org/jira/browse/HBASE-15118,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java,Fix findbugs complaint in hbase-server,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Thank you sir for taking care of this, the -1 in current report is really annoying...
I opened HBASE-15117 to simply resolve ICAST warnings, maybe could be merged into this one, so JFYI.

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 21s  |  master passed  |
| +1 |  compile  |  0m 49s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 31s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 6s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| -1 |  findbugs  |  1m 51s  |  hbase-server in master has 82 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 25s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 46s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 46s  |  the patch passed  |
| +1 |  compile  |  0m 33s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 33s  |  the patch passed  |
| -1 |  checkstyle  |  4m 24s  |  Patch generated 6 new checkstyle issues in hbase-server (total was 1534, now 1533).  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  1m 22s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 44s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  4m 4s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  5m 26s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  6m 48s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  8m 12s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  9m 33s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  10m 54s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  12m 18s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| +1 |  findbugs  |  2m 5s  |  the patch passed  |
| +1 |  javadoc  |  0m 25s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 30s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  14m 57s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  unit  |  16m 4s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 9s  |  Patch does not generate ASF License warnings.  |
|  |   |  64m 22s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.coprocessor.TestCoprocessorConfiguration |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.coprocessor.TestCoprocessorConfiguration |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15118 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 47fc696 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 191MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 5 **
Fix checkstyle and the unit test failure was legit (an assert I'd added to satisfy FindBugs check was throwing... bad assert)

** Comment 6 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 27s  |  master passed  |
| +1 |  compile  |  0m 39s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 24s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| -1 |  findbugs  |  1m 50s  |  hbase-server in master has 82 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 25s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 31s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  compile  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 32s  |  the patch passed  |
| +1 |  checkstyle  |  4m 2s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  1m 20s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 39s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  3m 58s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  5m 18s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  6m 39s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  8m 0s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  9m 21s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  10m 43s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  12m 3s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| +1 |  findbugs  |  1m 58s  |  the patch passed  |
| +1 |  javadoc  |  0m 23s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  82m 52s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  unit  |  82m 57s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 15s  |  Patch does not generate ASF License warnings.  |
|  |   |  198m 31s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.master.TestSplitLogManager |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.master.TestSplitLogManager |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15118 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 47fc696 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 189MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 7 **
[Comment excluded]

** Comment 8 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  2m 13s  |  master passed  |
| +1 |  compile  |  0m 47s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 5s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| -1 |  findbugs  |  1m 47s  |  hbase-server in master has 82 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 36s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 31s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 38s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 38s  |  the patch passed  |
| +1 |  compile  |  0m 32s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 32s  |  the patch passed  |
| +1 |  checkstyle  |  4m 19s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  1m 19s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 37s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  3m 56s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  5m 16s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  6m 34s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  7m 54s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  9m 15s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  10m 35s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  11m 55s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| +1 |  findbugs  |  2m 0s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 31s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  87m 17s  |  hbase-server in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  90m 42s  |  hbase-server in the patch passed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 13s  |  Patch does not generate ASF License warnings.  |
|  |   |  210m 38s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15118 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 47fc696 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 189MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in HBase-Trunk_matrix #641 (See )
HBASE-15118 Fix findbugs complaint in hbase-server (stack: rev 9bf26f46d1959e732a68d4e057c9a99701e5a047)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 13 **
FAILURE: Integrated in HBase-1.2-IT #400 (See )
HBASE-15118 Fix findbugs complaint in hbase-server (stack: rev c4bcaa3f65da98c7f513c028d6e3639c8016c2f8)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 14 **
FAILURE: Integrated in HBase-1.2 #511 (See )
HBASE-15118 Fix findbugs complaint in hbase-server (stack: rev c4bcaa3f65da98c7f513c028d6e3639c8016c2f8)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
FAILURE: Integrated in HBase-1.2 #512 (See )
 HBASE-15118 Fix findbugs complaint in hbase-server; ADDENDUM TO FIX (stack: rev b9450687ce5a6ad524e7a9bca351bef43622f527)
* [file java]

"
HBASE-15146,https://issues.apache.org/jira/browse/HBASE-15146,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java,Don't block on Reader threads queueing to a scheduler queue,NO,"Blocking on the epoll thread is awful. The new rpc scheduler can have lots of different queues. Those queues have different capacity limits. Currently the dispatch method can block trying to add the the blocking queue in any of the schedulers.

This causes readers to block, tcp acks are delayed, and everything slows down.","** Comment 1 **
[Comment excluded]

** Comment 2 **
when logging the exception saying the queue might be too small, is it possible to print its current size?

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 18s  |  master passed  |
| +1 |  compile  |  0m 35s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 23s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| -1 |  findbugs  |  1m 46s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 26s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 32s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 43s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 43s  |  the patch passed  |
| +1 |  compile  |  0m 30s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 30s  |  the patch passed  |
| -1 |  checkstyle  |  4m 6s  |  Patch generated 12 new checkstyle issues in hbase-server (total was 105, now 117).  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  20m 45s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  1m 58s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  15m 12s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  unit  |  16m 3s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 8s  |  Patch does not generate ASF License warnings.  |
|  |   |  72m 29s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.ipc.TestAsyncIPC |
|   | hadoop.hbase.ipc.TestIPC |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.ipc.TestAsyncIPC |
|   | hadoop.hbase.ipc.TestIPC |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4bf6f83 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 191MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 15s  |  master passed  |
| +1 |  compile  |  0m 51s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 30s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 16s  |  master passed  |
| +1 |  mvneclipse  |  0m 14s  |  master passed  |
| -1 |  findbugs  |  1m 49s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 46s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 46s  |  the patch passed  |
| +1 |  compile  |  0m 30s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 30s  |  the patch passed  |
| -1 |  checkstyle  |  4m 11s  |  Patch generated 12 new checkstyle issues in hbase-server (total was 105, now 117).  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  20m 12s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  1m 59s  |  the patch passed  |
| +1 |  javadoc  |  0m 32s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  103m 42s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| -1 |  unit  |  87m 39s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 18s  |  Patch does not generate ASF License warnings.  |
|  |   |  232m 41s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.security.token.TestGenerateDelegationToken |
|   | hadoop.hbase.ipc.TestDelayedRpc |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.ipc.TestDelayedRpc |
| JDK v1.7.0_79 Timed out junit tests | org.apache.hadoop.hbase.TestZooKeeper |
|   | org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 1d2b0d8 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 394MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
In AsyncProcess$AsyncRequestFutureImpl.receiveGlobalFailure(), we don't pass along the Throwable when calling updateCachedLocations().  Still looking into where receiveGlobalFailure() is called from, but I'm concerned this could be another hole for clearing meta cache, while could cause some unnecessary load re-scanning meta.  Seems like we need closer checking of the multi-action results, so that if we _only_ get non-cache busting exception(s), then we pass that along to updateCacheLocations so we don't unnecessarily clear.
We can drop the IllegalStateExceptions that were previously added to method signatures, since we're now using offer() on the queue.
FifoRpcScheduler needs to decrement queueSize in the runnable that is submitted.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  4m 34s  |  master passed  |
| +1 |  compile  |  0m 43s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  0m 51s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  6m 2s  |  master passed  |
| +1 |  mvneclipse  |  0m 32s  |  master passed  |
| -1 |  findbugs  |  1m 49s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 41s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  0m 50s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 3s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| -1 |  checkstyle  |  1m 51s  |  Patch generated 7 new checkstyle issues in hbase-client (total was 44, now 51).  |
| -1 |  checkstyle  |  3m 59s  |  Patch generated 12 new checkstyle issues in hbase-server (total was 105, now 117).  |
| +1 |  mvneclipse  |  0m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  21m 54s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 4s  |  the patch passed  |
| +1 |  javadoc  |  0m 38s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  0m 49s  |  the patch passed with JDK v1.7.0_91  |
| -1 |  unit  |  0m 44s  |  hbase-client in the patch failed with JDK v1.8.0_66.  |
| -1 |  unit  |  13m 51s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| -1 |  unit  |  0m 58s  |  hbase-client in the patch failed with JDK v1.7.0_91.  |
| -1 |  unit  |  15m 59s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| -1 |  asflicense  |  0m 19s  |  Patch generated 1 ASF License warnings.  |
|  |   |  95m 53s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.hbase.TestInterfaceAudienceAnnotations |
|   | hadoop.hbase.security.TestSecureIPC |
|   | hadoop.hbase.security.TestAsyncSecureIPC |
| JDK v1.7.0_91 Failed junit tests | hadoop.hbase.TestInterfaceAudienceAnnotations |
|   | hadoop.hbase.security.TestSecureIPC |
|   | hadoop.hbase.security.TestAsyncSecureIPC |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-01-22 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux b19f4218792c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4681827 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] [link] [link] |
| JDK v1.7.0_91  Test Results | [link] |
| asflicense | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 176MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 17 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| +1 |  mvninstall  |  4m 27s  |  master passed  |
| +1 |  compile  |  2m 28s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 38s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  7m 49s  |  master passed  |
| +1 |  mvneclipse  |  0m 44s  |  master passed  |
| -1 |  findbugs  |  3m 36s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 18s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 53s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 52s  |  the patch passed  |
| +1 |  compile  |  2m 5s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  2m 5s  |  the patch passed  |
| +1 |  compile  |  1m 13s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  1m 13s  |  the patch passed  |
| -1 |  checkstyle  |  1m 57s  |  Patch generated 3 new checkstyle issues in hbase-client (total was 44, now 47).  |
| -1 |  checkstyle  |  4m 10s  |  Patch generated 12 new checkstyle issues in hbase-server (total was 105, now 117).  |
| +1 |  mvneclipse  |  0m 35s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  29m 48s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 11s  |  the patch passed  |
| +1 |  javadoc  |  1m 18s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 16s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  1m 16s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  172m 26s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 37s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  161m 9s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| -1 |  asflicense  |  0m 42s  |  Patch generated 1 ASF License warnings.  |
|  |   |  413m 31s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.hbase.mapreduce.TestImportExport |
|   | hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.hbase.client.TestBlockEvictionFromClient |
| JDK v1.7.0_91 Failed junit tests | hadoop.hbase.ipc.TestDelayedRpc |
|   | hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
| JDK v1.7.0_91 Timed out junit tests | org.apache.hadoop.hbase.TestMultiVersions |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-01-25 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2041014256c1 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / d6b3d83 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_91  Test Results | [link] |
| asflicense | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 404MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| +1 |  mvninstall  |  4m 3s  |  master passed  |
| +1 |  compile  |  1m 26s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 19s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  7m 12s  |  master passed  |
| +1 |  mvneclipse  |  0m 36s  |  master passed  |
| -1 |  findbugs  |  2m 32s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 9s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 11s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 26s  |  the patch passed  |
| +1 |  compile  |  1m 17s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  1m 17s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| +1 |  checkstyle  |  7m 20s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 37s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  29m 31s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 13s  |  the patch passed  |
| +1 |  javadoc  |  1m 13s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 15s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  1m 16s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  110m 15s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 38s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  0m 25s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  0m 23s  |  Patch does not generate ASF License warnings.  |
|  |   |  183m 43s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.hbase.client.TestFromClientSide |
|   | org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor |
|   | org.apache.hadoop.hbase.TestHBaseOnOtherDfsCluster |
|   | org.apache.hadoop.hbase.TestMetaTableAccessor |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-01-26 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 15185365d3e9 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / de62ad1 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 387MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 21 **
[Comment excluded]

** Comment 22 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| +1 |  mvninstall  |  3m 32s  |  master passed  |
| +1 |  compile  |  1m 28s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 6s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  6m 16s  |  master passed  |
| +1 |  mvneclipse  |  0m 35s  |  master passed  |
| -1 |  findbugs  |  2m 27s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 21s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 12s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 27s  |  the patch passed  |
| +1 |  compile  |  1m 29s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  1m 29s  |  the patch passed  |
| +1 |  compile  |  1m 8s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  1m 8s  |  the patch passed  |
| +1 |  checkstyle  |  6m 32s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 36s  |  the patch passed  |
| +1 |  whitespace  |  0m 1s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  29m 33s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 22s  |  the patch passed  |
| +1 |  javadoc  |  1m 18s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 14s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  1m 17s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  149m 14s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 15s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  131m 54s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  2m 52s  |  Patch does not generate ASF License warnings.  |
|  |   |  354m 33s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.hbase.mapreduce.TestImportExport |
|   | hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.hbase.snapshot.TestMobSecureExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot |
| JDK v1.7.0_91 Failed junit tests | hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
|   | hadoop.hbase.client.TestBlockEvictionFromClient |
| JDK v1.7.0_91 Timed out junit tests | org.apache.hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint |
|   | org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS |
|   | org.apache.hadoop.hbase.replication.regionserver.TestReplicationWALReaderManager |
|   | org.apache.hadoop.hbase.replication.TestPerTableCFReplication |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-01-27 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15146 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 3f554eb64f94 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / d4610df |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 399MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in HBase-Trunk_matrix #664 (See )
HBASE-15146 Don't block on Reader threads queueing to a scheduler queue (eclark: rev 138b754671d51d3f494adc250ab0cb9e085c858a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
If all clients are well-behaved and patiently wait their response, blocking reader threads doesn't become a vicious circle. The latency becomes bad depending on how congestion is there, and that is expected as a part of gradually reducing performance. It would be true that the latency becomes unacceptable one in heavy load, but who knows whether blocked tasks can't be answered in a reasonable time? The preceding tasks might be quite light. These days there is a plan to adopt AdaptiveLifoCoDelCallQueue, and the task might be immediately executed after release.
When I think about a full-queue error response, I don't image what a client should do when it receives the error response, even if the latency is much low. Such clients probably send again and again their request until they draw a winning ticket, and the whole latency to get a fruitful result will be unpredictably longer. The reader threads continue to rob worker threads of CPU time, with excessive overhead of context switches, and the worker threads would hardly execute tasks and resolve the full-queue condition. Ironically that becomes harder when the response is quicker.
BTW, in the first place, I'm now doubting the queue should be bounded. If all clients are well-behaved and wait their response, the number of requests are naturally bounded under the number of connections, and the native resources of sockets will be run out in front of running out heap. AdaptiveLifoCoDelCallQueue also seems under the assumption that all requests can be queued.
There are some cheat clients that don't wait their response and send multiple requests to simultaneously execute. I think we can count the number of simultaneous requests for each connection, and roughly cap it probably depending on the number of the connections (excluding idle connections who have no request?) and the number of the queued requests with some threshold, etc.

** Comment 37 **
[Comment excluded]
"
HBASE-15211,https://issues.apache.org/jira/browse/HBASE-15211,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/CatalogJanitor.java,Don't run the CatalogJanitor if there are regions in transition,NO,This could make things a little safer to make sure that CatalogJanitor doesn't do something weird while a cluster is starting up.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  4m 20s  |  master passed  |
| +1 |  compile  |  1m 10s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  0m 55s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  5m 8s  |  master passed  |
| +1 |  mvneclipse  |  0m 26s  |  master passed  |
| +1 |  findbugs  |  2m 51s  |  master passed  |
| +1 |  javadoc  |  0m 50s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  0m 52s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  0m 59s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  0m 59s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  5m 19s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 24s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  32m 24s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 57s  |  the patch passed  |
| +1 |  javadoc  |  0m 49s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  0m 49s  |  the patch passed with JDK v1.7.0_91  |
| -1 |  unit  |  155m 4s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  144m 30s  |  hbase-server in the patch passed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  0m 28s  |  Patch does not generate ASF License warnings.  |
|  |   |  363m 7s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hbase.client.TestAdmin1 |
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-04 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15211 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 43df8f907ac9 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 2f57673 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Max memory used | 406MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
FAILURE: Integrated in HBase-Trunk_matrix #679 (See )
HBASE-15211 Don't run the CatalogJanitor if there are regions in (eclark: rev f5fba2ba0d5ed9717d3a6439a24235710ac0886b)
* [file java]


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-1.3 #534 (See )
HBASE-15211 Don't run the CatalogJanitor if there are regions in (eclark: rev 908e5a66208c1f0cda76fb4f8674e104275fb17e)
* [file java]


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in HBase-0.98-matrix #295 (See )
HBASE-15211 Don't run the CatalogJanitor if there are regions in (apurtell: rev 49c8c259fd30b703ac444e77aa8dbde508327c08)
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1169 (See )
HBASE-15211 Don't run the CatalogJanitor if there are regions in (apurtell: rev 49c8c259fd30b703ac444e77aa8dbde508327c08)
* [file java]

"
HBASE-14706,https://issues.apache.org/jira/browse/HBASE-14706,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java,RegionLocationFinder should return multiple servernames by top host,NO,"Multiple RS can run on the same host. But in current RegionLocationFinder, mapHostNameToServerName map one host to only one server. This will make LocalityCostFunction get wrong locality about region.
{code}
    // create a mapping from hostname to ServerName for fast lookup
    HashMap<String, ServerName> hostToServerName = new HashMap<String, ServerName>();
    for (ServerName sn : regionServers) {
      hostToServerName.put(sn.getHostname(), sn);
    }
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit bdf11be6af046e99cff9985968903d983d7ff10f.
  ATTACHMENT ID: 12769677
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 2 new or modified tests.
    -1 javac.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.
    Compilation errors resume:
     COMPILATION ERROR : 
 [file java]: cannot find symbol
 Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:testCompile (default-testCompile) on project hbase-server: Compilation failure
 [file java]: cannot find symbol
 symbol: class Category
 -> 
 To see the full stack trace of the errors, re-run Maven with the -e switch.
 Re-run Maven using the -X switch to enable full debug logging.
 For more information about the errors and possible solutions, please read the following articles:
  [link]
 After correcting the problems, you can resume the build with the command
   mvn <goals> -rf :hbase-server
Console output: [link]
This message is automatically generated.

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit bdf11be6af046e99cff9985968903d983d7ff10f.
  ATTACHMENT ID: 12769688
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 2 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.master.balancer.TestRegionLocationFinder
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 4 **
Test results in my local machine.
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.master.balancer.TestRegionLocationFinder
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 26.342 sec - in org.apache.hadoop.hbase.master.balancer.TestRegionLocationFinder
Results :
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0

** Comment 5 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit e8d6bf7d461fd9428ec55009ce1c24d8f3f65485.
  ATTACHMENT ID: 12770028
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 2 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit ceddec9141b658c790d2fb995c970982ab082028.
  ATTACHMENT ID: 12770509
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 2 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
From QA run:
{code}
Running org.apache.hadoop.hbase.master.balancer.TestRegionLocationFinder
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.319 sec - in org.apache.hadoop.hbase.master.balancer.TestRegionLocationFinder
{code}

** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in HBase-1.1-JDK8 #1672 (See )
HBASE-14706 RegionLocationFinder should return multiple servernames by (tedyu: rev daeb03aa46332f3a65cb70b7b998cf547a4b8713)
* [file java]
* [file java]


** Comment 12 **
FAILURE: Integrated in HBase-1.1-JDK7 #1585 (See )
HBASE-14706 RegionLocationFinder should return multiple servernames by (tedyu: rev daeb03aa46332f3a65cb70b7b998cf547a4b8713)
* [file java]
* [file java]


** Comment 13 **
There was compilation error in [file java] in branch-1.1

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
SUCCESS: Integrated in HBase-1.1-JDK7 #1586 (See )
HBASE-14706 Revert due to compilation error in TestRegionLocationFinder (tedyu: rev e18c10846a234a2562a467b9dc6ad44df4df2e00)
* [file java]
* [file java]


** Comment 17 **
FAILURE: Integrated in HBase-Trunk_matrix #434 (See )
HBASE-14706 RegionLocationFinder should return multiple servernames by (tedyu: rev 9fc7858c6bb2d0356267cd7bc4aac9e38294c40c)
* [file java]
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-1.2 #348 (See )
HBASE-14706 RegionLocationFinder should return multiple servernames by (tedyu: rev 1cc234768cbdf024598b6f71ae34286009c55f32)
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
FAILURE: Integrated in HBase-1.1-JDK8 #1673 (See )
HBASE-14706 Revert due to compilation error in TestRegionLocationFinder (tedyu: rev e18c10846a234a2562a467b9dc6ad44df4df2e00)
* [file java]
* [file java]


** Comment 22 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1.1 branch at commit bfa36891901b96b95d82f5307642c35fd2b9f534.
  ATTACHMENT ID: 12770751
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 2 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 23 **
FAILURE: Integrated in HBase-1.1-JDK8 #1675 (See )
HBASE-14706 RegionLocationFinder should return multiple servernames by (tedyu: rev 7098e8112202fd855e13dc69dec21a7d3006c4b6)
* [file java]
* [file java]


** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]
"
HBASE-15214,https://issues.apache.org/jira/browse/HBASE-15214,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java,Valid mutate Ops fail with RPC Codec in use and region moves across,YES,"Test failures in HBASE-15198 lead to this bug. Till now we are not doing cell block (codec usage) for write requests. (Client -> server)  Once we enabled Codec usage by default, aw this issue.
A multi request came to RS with mutation for different regions. One of the region which was in this RS got unavailable now.  In RsRpcServices#multi, we will fail that entire RegionAction (with N mutations in it) in that MultiRequest.  Then we will continue with remaining RegionActions.  Those Regions might be available.  (The failed RegionAction will get retried from client after fetching latest region location).  This all works fine in pure PB requests world. When a Codec is used, we wont convert the Mutation Cell to PB Cells and pack them in PB Message. Instead we will pass all Cells serialized into one byte[] cellblock. Using Decoder we will iterate over these cells at server side. Each Mutation PB will know only the number of cells associated with it.  As in above case when an entire RegionAction was skipped, there might be N Mutations under that which might have corresponding Cells in the cellblock. We are not doing the skip in that Iterator. This makes the later Mutations (for other Regions) to refer to invalid Cells and try to put those into the a different region. This will make HRegion#checkRow() to throw  which will be treated as Sanity check failure and so throwing back a DNRIOE to client. So the op will get failed for the user code.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  2m 41s  |  master passed  |
| +1 |  compile  |  0m 53s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  0m 49s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  5m 40s  |  master passed  |
| +1 |  mvneclipse  |  0m 26s  |  master passed  |
| -1 |  findbugs  |  0m 58s  |  hbase-client in master has 4 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 48s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  0m 51s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  1m 2s  |  the patch passed  |
| +1 |  compile  |  0m 54s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  0m 54s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  5m 48s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  21m 51s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 2s  |  the patch passed  |
| +1 |  javadoc  |  0m 50s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  0m 52s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  unit  |  0m 51s  |  hbase-client in the patch passed with JDK v1.8.0_72.  |
| +1 |  unit  |  109m 40s  |  hbase-server in the patch passed with JDK v1.8.0_72.  |
| +1 |  unit  |  1m 15s  |  hbase-client in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  110m 56s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  0m 31s  |  Patch does not generate ASF License warnings.  |
|  |   |  274m 26s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-04 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15214 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 74e0489f9c03 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 2cf8af5 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 174MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 1s  |  master passed  |
| +1 |  compile  |  1m 3s  |  master passed with JDK v1.8.0_72  |
| +1 |  compile  |  1m 4s  |  master passed with JDK v1.7.0_95  |
| +1 |  checkstyle  |  6m 25s  |  master passed  |
| +1 |  mvneclipse  |  0m 28s  |  master passed  |
| -1 |  findbugs  |  1m 1s  |  hbase-client in master has 4 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 53s  |  master passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  0m 53s  |  master passed with JDK v1.7.0_95  |
| +1 |  mvninstall  |  1m 6s  |  the patch passed  |
| +1 |  compile  |  0m 58s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javac  |  0m 58s  |  the patch passed  |
| +1 |  compile  |  0m 52s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  javac  |  0m 52s  |  the patch passed  |
| -1 |  checkstyle  |  4m 12s  |  Patch generated 2 new checkstyle issues in hbase-server (total was 138, now 140).  |
| +1 |  mvneclipse  |  0m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  23m 52s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 57s  |  the patch passed  |
| +1 |  javadoc  |  1m 9s  |  the patch passed with JDK v1.8.0_72  |
| +1 |  javadoc  |  1m 6s  |  the patch passed with JDK v1.7.0_95  |
| +1 |  unit  |  1m 8s  |  hbase-client in the patch passed with JDK v1.8.0_72.  |
| -1 |  unit  |  86m 49s  |  hbase-server in the patch failed with JDK v1.8.0_72.  |
| +1 |  unit  |  1m 29s  |  hbase-client in the patch passed with JDK v1.7.0_95.  |
| -1 |  unit  |  103m 30s  |  hbase-server in the patch failed with JDK v1.7.0_95.  |
| +1 |  asflicense  |  0m 30s  |  Patch does not generate ASF License warnings.  |
|  |   |  250m 32s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.hbase.util.TestHBaseFsckOneRS |
|   | org.apache.hadoop.hbase.util.TestHBaseFsckTwoRS |
| JDK v1.7.0_95 Failed junit tests | hadoop.hbase.regionserver.TestRegionServerHostname |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster |
|   | org.apache.hadoop.hbase.coprocessor.TestClassLoading |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionObserverBypass |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-04 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15214 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 6c3e0c1bd786 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f5fba2b |
| findbugs | v3.0.0 |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_95  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 446MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 10s  |  master passed  |
| +1 |  compile  |  1m 5s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 1s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  6m 42s  |  master passed  |
| +1 |  mvneclipse  |  0m 28s  |  master passed  |
| +1 |  findbugs  |  2m 58s  |  master passed  |
| +1 |  javadoc  |  0m 49s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  0m 53s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 10s  |  the patch passed  |
| +1 |  compile  |  0m 57s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  0m 57s  |  the patch passed  |
| +1 |  compile  |  0m 55s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  0m 55s  |  the patch passed  |
| +1 |  checkstyle  |  5m 59s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 28s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  23m 37s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 50s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  0m 56s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  0m 57s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  104m 1s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 6s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  92m 9s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  0m 28s  |  Patch does not generate ASF License warnings.  |
|  |   |  254m 56s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_91 Failed junit tests | hadoop.hbase.replication.TestReplicationChangingPeerRegionservers |
|   | hadoop.hbase.replication.TestReplicationSource |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-05 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15214 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux bed1ee8e6359 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 8f20bc7 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 174MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 9 **
Ran the timed out/ error tests multiple times on local linux box.  All passed.   Not able to get logs of the test run of the timed out test.  (Say here  [link]  Any idea how we can get it   , ?

** Comment 10 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| -1 |  docker  |  7m 32s  |  Docker failed to build yetus/hbase:date2016-02-05.  |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15214 |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 49s  |  master passed  |
| +1 |  compile  |  1m 39s  |  master passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 21s  |  master passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  7m 0s  |  master passed  |
| +1 |  mvneclipse  |  0m 36s  |  master passed  |
| +1 |  findbugs  |  3m 44s  |  master passed  |
| +1 |  javadoc  |  1m 7s  |  master passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 9s  |  master passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 24s  |  the patch passed  |
| +1 |  compile  |  1m 18s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  1m 18s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| +1 |  checkstyle  |  7m 48s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 44s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  33m 18s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 31s  |  the patch passed  |
| +1 |  javadoc  |  1m 13s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 14s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  1m 18s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  107m 52s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 26s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  0m 19s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  0m 25s  |  Patch does not generate ASF License warnings.  |
|  |   |  186m 0s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.hbase.regionserver.wal.TestWALReplay |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRolling |
|   | org.apache.hadoop.hbase.regionserver.TestCompoundBloomFilter |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | org.apache.hadoop.hbase.regionserver.wal.TestDurability |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-02-05 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15214 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux bf08e8d2b684 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4265bf2 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 370MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 17 **
SUCCESS: Integrated in HBase-1.3-IT #483 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 64c87f2476b07dce2ed9ef429a182d470e415594)
* [file java]
* [file java]
* [file java]


** Comment 18 **
SUCCESS: Integrated in HBase-1.2-IT #422 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region (anoopsamjohn: rev 96e8e32228bccf1bd0d0a3a550fc28ba1bab1324)
* [file java]
* [file java]
* [file java]


** Comment 19 **
FAILURE: Integrated in HBase-Trunk_matrix #685 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 7239056c78cc6eb2867c8865ab45821d3e51328a)
* [file java]
* [file java]
* [file java]


** Comment 20 **
SUCCESS: Integrated in HBase-1.2 #532 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 96e8e32228bccf1bd0d0a3a550fc28ba1bab1324)
* [file java]
* [file java]
* [file java]


** Comment 21 **
FAILURE: Integrated in HBase-1.3 #541 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 64c87f2476b07dce2ed9ef429a182d470e415594)
* [file java]
* [file java]
* [file java]


** Comment 22 **
[Comment excluded]

** Comment 23 **
FAILURE: Integrated in HBase-1.0 #1142 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev eb9af81f67ecc95b1b5fe2ee70f5142c1b29bc50)
* [file java]
* [file java]
* [file java]


** Comment 24 **
FAILURE: Integrated in HBase-1.1-JDK8 #1742 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 30707a55ef8a8047b076ddb1fe4cac1e017fda97)
* [file java]
* [file java]
* [file java]


** Comment 25 **
FAILURE: Integrated in HBase-1.1-JDK7 #1655 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev 30707a55ef8a8047b076ddb1fe4cac1e017fda97)
* [file java]
* [file java]
* [file java]


** Comment 26 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1167 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev b3fe2556641ad5b36caded1a995f09443d88ab5d)
* [file java]
* [file java]
* [file java]


** Comment 27 **
ABORTED: Integrated in HBase-0.98-matrix #293 (See )
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves (anoopsamjohn: rev b3fe2556641ad5b36caded1a995f09443d88ab5d)
* [file java]
* [file java]
* [file java]

"
HBASE-15091,https://issues.apache.org/jira/browse/HBASE-15091,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java,"Forward-port to 1.2+ HBASE-15031 ""Fix merge of MVCC and SequenceID performance regression in branch-1.0 for Increments""",NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 5 new or modified test files.  |
| +1 |  mvninstall  |  4m 59s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 9s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  0m 45s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 31s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 32s  |  branch-1.2 passed  |
| -1 |  findbugs  |  0m 54s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 44s  |  hbase-server in branch-1.2 has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 2s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 46s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 57s  |  the patch passed  |
| +1 |  compile  |  0m 59s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 59s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| -1 |  checkstyle  |  0m 16s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 70, now 70).  |
| +1 |  mvneclipse  |  0m 24s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 5 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| -1 |  hadoopcheck  |  1m 13s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 20s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  3m 26s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  4m 33s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  5m 40s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  6m 48s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  7m 56s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  9m 6s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  10m 14s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| -1 |  findbugs  |  1m 57s  |  hbase-server introduced 2 new FindBugs issues.  |
| +1 |  javadoc  |  0m 50s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 45s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 29s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  70m 17s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 36s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  70m 27s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| -1 |  asflicense  |  0m 28s  |  Patch generated 24 ASF License warnings.  |
|  |   |  175m 32s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Redundant nullcheck of walEdits which is known to be null in org.apache.hadoop.hbase.regionserver.HRegion.fastAndNarrowConsistencyIncrement(Increment, long, long)  Redundant null check at [file java]:is known to be null in org.apache.hadoop.hbase.regionserver.HRegion.fastAndNarrowConsistencyIncrement(Increment, long, long)  Redundant null check at [file java]: |
|  |  Redundant nullcheck of walEdits which is known to be null in org.apache.hadoop.hbase.regionserver.HRegion.slowButConsistentIncrement(Increment, long, long)  Redundant null check at [file java]:is known to be null in org.apache.hadoop.hbase.regionserver.HRegion.slowButConsistentIncrement(Increment, long, long)  Redundant null check at [file java]: |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.regionserver.wal.TestDurability |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.regionserver.wal.TestDurability |
|   | hadoop.hbase.mapreduce.TestTableInputFormatScan1 |
|   | hadoop.hbase.mapreduce.TestTableInputFormatScan2 |
|   | hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / 4b9f8f4 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| whitespace | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| asflicense | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 144MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 3 **
Fix failed testcase

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
bq. Fine. Let's use your patch. I didn't know you already had a patch when i saw this issue. Sorry for disturbing you...
Pardon me. It was my fault for not claiming this issue as one I was working on; I didn't have a complete patch when I opened the issue. Sorry for the confusion 

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 11 new or modified test files.  |
| +1 |  mvninstall  |  4m 55s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 26s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 40s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 40s  |  branch-1.2 passed  |
| -1 |  findbugs  |  1m 1s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 43s  |  hbase-common in branch-1.2 has 11 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 53s  |  hbase-server in branch-1.2 has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 29s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 5s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 18s  |  the patch passed  |
| +1 |  compile  |  1m 26s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 26s  |  the patch passed  |
| +1 |  compile  |  1m 6s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 6s  |  the patch passed  |
| -1 |  checkstyle  |  0m 17s  |  Patch generated 2 new checkstyle issues in hbase-server (total was 78, now 78).  |
| +1 |  mvneclipse  |  0m 33s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 5 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| +1 |  hadoopcheck  |  12m 2s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| -1 |  findbugs  |  0m 56s  |  hbase-common introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  1m 27s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 3s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 32s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  1m 43s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  14m 46s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 30s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  1m 50s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  15m 59s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 26s  |  Patch does not generate ASF License warnings.  |
|  |   |  77m 8s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-common |
|  |  Class org.apache.hadoop.hbase.io.compress.Compression$Algorithm defines non-transient non-serializable instance field conf  In [file java]:instance field conf  In [file java] |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / e15389f |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| whitespace | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 147MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 19 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 5 new or modified test files.  |
| +1 |  mvninstall  |  5m 17s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 11s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  0m 52s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 36s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 35s  |  branch-1.2 passed  |
| -1 |  findbugs  |  1m 6s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  2m 8s  |  hbase-server in branch-1.2 has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 11s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 55s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  1m 22s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 22s  |  the patch passed  |
| +1 |  compile  |  0m 53s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 53s  |  the patch passed  |
| +1 |  checkstyle  |  0m 29s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 5 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| +1 |  hadoopcheck  |  13m 2s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 24s  |  the patch passed  |
| +1 |  javadoc  |  1m 9s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 53s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 38s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  85m 38s  |  hbase-server in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  2m 36s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  95m 5s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| -1 |  asflicense  |  0m 27s  |  Patch generated 24 ASF License warnings.  |
|  |   |  222m 38s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.mapreduce.TestTableInputFormatScan1 |
|   | hadoop.hbase.mapreduce.TestTableInputFormatScan2 |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / e15389f |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| whitespace | [link] |
| unit | [link] |
| unit test logs |  [link] |
| JDK v1.7.0_79  Test Results | [link] |
| asflicense | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 146MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
Fix whitespace and failing test.

** Comment 23 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 11 new or modified test files.  |
| +1 |  mvninstall  |  4m 36s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 19s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 37s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 42s  |  branch-1.2 passed  |
| -1 |  findbugs  |  1m 1s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 42s  |  hbase-common in branch-1.2 has 11 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 49s  |  hbase-server in branch-1.2 has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 29s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 20s  |  the patch passed  |
| +1 |  compile  |  1m 33s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 33s  |  the patch passed  |
| +1 |  compile  |  1m 3s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 3s  |  the patch passed  |
| -1 |  checkstyle  |  0m 15s  |  Patch generated 2 new checkstyle issues in hbase-server (total was 78, now 78).  |
| +1 |  mvneclipse  |  0m 34s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 5 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| -1 |  hadoopcheck  |  1m 12s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 22s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  3m 31s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  4m 42s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  5m 54s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  7m 6s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  8m 18s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  9m 30s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  10m 41s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| -1 |  findbugs  |  0m 57s  |  hbase-common introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  1m 23s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 3s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 32s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  1m 42s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  14m 8s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 31s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  1m 52s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  15m 22s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 25s  |  Patch does not generate ASF License warnings.  |
|  |   |  74m 9s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-common |
|  |  Class org.apache.hadoop.hbase.io.compress.Compression$Algorithm defines non-transient non-serializable instance field conf  In [file java]:instance field conf  In [file java] |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / e4140b6 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| whitespace | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 150MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 24 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  5m 23s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 48s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 11s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 44s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 47s  |  branch-1.2 passed  |
| -1 |  findbugs  |  1m 12s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 52s  |  hbase-common in branch-1.2 has 11 extant Findbugs warnings.  |
| -1 |  findbugs  |  2m 10s  |  hbase-server in branch-1.2 has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 57s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 26s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 31s  |  the patch passed  |
| +1 |  compile  |  2m 22s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  2m 22s  |  the patch passed  |
| +1 |  compile  |  1m 13s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 13s  |  the patch passed  |
| -1 |  checkstyle  |  0m 20s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 78, now 77).  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  13m 28s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| -1 |  findbugs  |  1m 6s  |  hbase-common introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  2m 10s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 19s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 54s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  2m 13s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  19m 49s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 37s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  1m 58s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  17m 39s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 27s  |  Patch does not generate ASF License warnings.  |
|  |   |  92m 25s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-common |
|  |  Class org.apache.hadoop.hbase.io.compress.Compression$Algorithm defines non-transient non-serializable instance field conf  In [file java]:instance field conf  In [file java] |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.regionserver.TestResettingCounters |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / fd72340 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 148MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  13m 18s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 33s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 1s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 40s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 43s  |  branch-1.2 passed  |
| -1 |  findbugs  |  0m 55s  |  hbase-client in branch-1.2 has 17 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 41s  |  hbase-common in branch-1.2 has 1 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 46s  |  hbase-server in branch-1.2 has 84 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 27s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 15s  |  the patch passed  |
| +1 |  compile  |  1m 21s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 21s  |  the patch passed  |
| +1 |  compile  |  1m 1s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 1s  |  the patch passed  |
| -1 |  checkstyle  |  0m 16s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 78, now 77).  |
| +1 |  mvneclipse  |  0m 34s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 2 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| +1 |  hadoopcheck  |  11m 30s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| -1 |  findbugs  |  0m 53s  |  hbase-common introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  1m 24s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 4s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 31s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  1m 41s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  69m 25s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 38s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  1m 53s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  70m 11s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 39s  |  Patch does not generate ASF License warnings.  |
|  |   |  193m 33s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-common |
|  |  Class org.apache.hadoop.hbase.io.compress.Compression$Algorithm defines non-transient non-serializable instance field conf  In [file java]:instance field conf  In [file java] |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.regionserver.TestAtomicOperation |
|   | hadoop.hbase.client.TestMultiParallel |
|   | hadoop.hbase.regionserver.TestHRegion |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.regionserver.TestAtomicOperation |
|   | hadoop.hbase.client.TestMultiParallel |
|   | hadoop.hbase.regionserver.TestHRegion |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / 36d1adb |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| whitespace | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 149MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 32 **
[Comment excluded]

** Comment 33 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  1m 30s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 28s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 33s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 35s  |  branch-1.2 passed  |
| -1 |  findbugs  |  0m 58s  |  hbase-client in branch-1.2 has 7 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 43s  |  hbase-common in branch-1.2 has 1 extant Findbugs warnings.  |
| -1 |  findbugs  |  2m 22s  |  hbase-server in branch-1.2 has 84 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 52s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 34s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 34s  |  the patch passed  |
| +1 |  compile  |  1m 49s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 50s  |  the patch passed  |
| +1 |  compile  |  1m 15s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 15s  |  the patch passed  |
| -1 |  checkstyle  |  0m 19s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 110, now 109).  |
| +1 |  mvneclipse  |  0m 41s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  1m 21s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  2m 38s  |  Patch causes 11 errors with Hadoop v2.4.1.  |
| -1 |  hadoopcheck  |  4m 4s  |  Patch causes 11 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  5m 35s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  7m 3s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| -1 |  hadoopcheck  |  8m 28s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  10m 0s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  11m 31s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  13m 5s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| -1 |  findbugs  |  1m 11s  |  hbase-common introduced 1 new FindBugs issues.  |
| +1 |  javadoc  |  1m 38s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 17s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 40s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  2m 10s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  79m 47s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 46s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  2m 6s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  75m 30s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 35s  |  Patch does not generate ASF License warnings.  |
|  |   |  204m 51s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-common |
|  |  Class org.apache.hadoop.hbase.io.compress.Compression$Algorithm defines non-transient non-serializable instance field conf  In [file java]:instance field conf  In [file java] |
| JDK v1.8.0 Failed junit tests | hadoop.hbase.master.TestTableLockManager |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.client.TestMultiParallel |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / 5a280c9 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| findbugs | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 149MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 34 **
[Comment excluded]

** Comment 35 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  5m 29s  |  branch-1.2 passed  |
| +1 |  compile  |  2m 21s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 13s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 45s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 46s  |  branch-1.2 passed  |
| -1 |  findbugs  |  1m 8s  |  hbase-client in branch-1.2 has 7 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 54s  |  hbase-common in branch-1.2 has 1 extant Findbugs warnings.  |
| -1 |  findbugs  |  2m 12s  |  hbase-server in branch-1.2 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 16s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 18s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 26s  |  the patch passed  |
| +1 |  compile  |  2m 24s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  2m 24s  |  the patch passed  |
| +1 |  compile  |  1m 17s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 17s  |  the patch passed  |
| -1 |  checkstyle  |  0m 21s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 110, now 109).  |
| +1 |  mvneclipse  |  0m 39s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  13m 47s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  5m 8s  |  the patch passed  |
| +1 |  javadoc  |  2m 9s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 30s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  2m 5s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  2m 25s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| -1 |  unit  |  115m 41s  |  hbase-server in the patch failed with JDK v1.8.0.  |
| +1 |  unit  |  1m 44s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  2m 11s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| -1 |  unit  |  83m 37s  |  hbase-server in the patch failed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 35s  |  Patch does not generate ASF License warnings.  |
|  |   |  256m 44s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0 Failed junit tests | hadoop.hbase.mapreduce.TestImportTsv |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
|   | hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels |
|   | hadoop.hbase.TestFullLogReconstruction |
|   | hadoop.hbase.regionserver.TestHRegion |
|   | hadoop.hbase.regionserver.TestFailedAppendAndSync |
|   | hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes |
| JDK v1.8.0 Timed out junit tests | org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner |
| JDK v1.7.0_79 Failed junit tests | hadoop.hbase.mapreduce.TestImportTsv |
|   | hadoop.hbase.regionserver.TestAtomicOperation |
|   | hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels |
|   | hadoop.hbase.mapreduce.TestImportTSVWithOperationAttributes |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / 5ff6545 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 396MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 36 **
I'd removed a wait on sequenceid in append so TestAtomicOperation was failing.
The FindBugs complaints are fixed in this patch... As said before, the checkstyle is a complaint about the length of an unrelated method... not going to fix (can't really w/o radical change .... which is done in master version of this patch).

** Comment 37 **
Here is diagram of slow vs fast using v9 of patch attached here using the included IncrementPerformanceTest.
Difference is not dramatic. Diagram shows 'fast path' doing 50% more ops. 
Here is output from the two runs:
slow path
2016-01-19 10:54:58,675 INFO   hbase.IncrementPerformanceTest: 75th=13.71780375, 95th=18.151336949999997, 99th=22.91885279000001
real	1m51.259s
user	1m31.020s
sys	0m39.621s
'fast' path (with hbase.increment.fast.but.narrow.consistency set to true in config)
2016-01-19 10:45:29,390 INFO   hbase.IncrementPerformanceTest: 75th=8.748498, 95th=11.46681715, 99th=18.067521050000085
real	1m10.096s
user	1m32.368s
sys	0m38.271s


** Comment 38 **
[Comment excluded]

** Comment 39 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  5m 13s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 14s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  compile  |  1m 1s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 37s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 39s  |  branch-1.2 passed  |
| -1 |  findbugs  |  0m 54s  |  hbase-client in branch-1.2 has 7 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 41s  |  hbase-common in branch-1.2 has 1 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 44s  |  hbase-server in branch-1.2 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  1m 25s  |  branch-1.2 passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 4s  |  branch-1.2 passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 15s  |  the patch passed  |
| +1 |  compile  |  1m 32s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 32s  |  the patch passed  |
| +1 |  compile  |  1m 0s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  1m 0s  |  the patch passed  |
| -1 |  checkstyle  |  0m 16s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 113, now 112).  |
| +1 |  mvneclipse  |  0m 33s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  11m 24s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  4m 1s  |  the patch passed  |
| +1 |  javadoc  |  1m 31s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  1m 8s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  1m 30s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  1m 43s  |  hbase-common in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  72m 23s  |  hbase-server in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  1m 35s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  1m 53s  |  hbase-common in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  70m 36s  |  hbase-server in the patch passed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 40s  |  Patch does not generate ASF License warnings.  |
|  |   |  188m 40s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.2 / c6de188 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 143MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 40 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 0s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 12 new or modified test files.  |
| +1 |  mvninstall  |  1m 43s  |  branch-1.2 passed  |
| +1 |  compile  |  1m 5s  |  branch-1.2 passed with JDK v1.8.0_66  |
| +1 |  compile  |  1m 7s  |  branch-1.2 passed with JDK v1.7.0_91  |
| +1 |  checkstyle  |  0m 35s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 37s  |  branch-1.2 passed  |
| -1 |  findbugs  |  0m 56s  |  hbase-client in branch-1.2 has 7 extant Findbugs warnings.  |
| -1 |  findbugs  |  0m 40s  |  hbase-common in branch-1.2 has 1 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 47s  |  hbase-server in branch-1.2 has 3 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 54s  |  branch-1.2 passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 8s  |  branch-1.2 passed with JDK v1.7.0_91  |
| +1 |  mvninstall  |  1m 21s  |  the patch passed  |
| +1 |  compile  |  0m 55s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javac  |  0m 55s  |  the patch passed  |
| +1 |  compile  |  1m 6s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  javac  |  1m 6s  |  the patch passed  |
| -1 |  checkstyle  |  0m 15s  |  Patch generated 1 new checkstyle issues in hbase-server (total was 113, now 112).  |
| +1 |  mvneclipse  |  0m 36s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  4m 12s  |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.0.  |
| +1 |  findbugs  |  3m 49s  |  the patch passed  |
| +1 |  javadoc  |  0m 55s  |  the patch passed with JDK v1.8.0_66  |
| +1 |  javadoc  |  1m 9s  |  the patch passed with JDK v1.7.0_91  |
| +1 |  unit  |  1m 23s  |  hbase-client in the patch passed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 33s  |  hbase-common in the patch passed with JDK v1.8.0_66.  |
| -1 |  unit  |  73m 47s  |  hbase-server in the patch failed with JDK v1.8.0_66.  |
| +1 |  unit  |  1m 36s  |  hbase-client in the patch passed with JDK v1.7.0_91.  |
| +1 |  unit  |  1m 52s  |  hbase-common in the patch passed with JDK v1.7.0_91.  |
| -1 |  unit  |  78m 30s  |  hbase-server in the patch failed with JDK v1.7.0_91.  |
| +1 |  asflicense  |  0m 39s  |  Patch does not generate ASF License warnings.  |
|  |   |  223m 48s  |   |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.hbase.mapreduce.TestImportExport |
| JDK v1.7.0_91 Failed junit tests | hadoop.hbase.mapreduce.TestImportExport |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.9.1 Server=1.9.1 Image:yetus/hbase:date2016-01-20 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15091 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux e90c57cec264 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.2 / c6de188 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| findbugs | [link] |
| checkstyle | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
| JDK v1.7.0_91  Test Results | [link] |
| modules | C: hbase-client hbase-common hbase-server U: . |
| Max memory used | 124MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 41 **
Can I have a +1 please?
On the above failures, the checkstyle is a complaint about a method being too long (can't do anything more about this unrelated method in this patch), the findbugs are mostly addressed in this patch... there may be one outlier, and the failed tests are permissions problems... which do not repro locally. Notion is get this in as is and then if issues still remaining post commit I can work on them separately (findbugs or perms).

** Comment 42 **
+1, sorry meant to comment with it last night. extant findbugs warnings certainly not your problem.

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
FAILURE: Integrated in HBase-1.2 #514 (See )
HBASE-15091 Forward-port to 1.2 HBASE-15031 ""Fix merge of MVCC and (stack: rev eb71c34ec1a9dd8d5b680ab6bc83dda44168014a)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
FAILURE: Integrated in HBase-1.3 #506 (See )
HBASE-15091 Forward-port to 1.2 HBASE-15031 ""Fix merge of MVCC and (stack: rev a9c008344f7555322c96f193519eefcca308dd7c)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 52 **
[Comment excluded]
"
HBASE-11677,https://issues.apache.org/jira/browse/HBASE-11677,https://github.com/apache/hbase/blob/rel/1.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java,Make Logger instance modifiers consistent,YES,"We have some instances of Logger that are missing one of being private, static, and final.

ex from HealthChecker.java, missing final

{code}
    private static Log LOG = LogFactory.getLog(HealthChecker.class);
{code}

* Clean up where possible by making {{private static final}}
* If we can't, add a non-javadoc note about why

One way to look for problematic instances is to grep for initial assignment for the commonly used LOG member, e.g.

* missing final: {{grep -r ""LOG ="" * | grep -v ""final""}}
* missing static: {{grep -r ""LOG ="" * | grep -v ""static""}}
* missing private: {{grep -r ""LOG ="" * | grep -v ""private""}}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Hi, When building the code after fixing the logger instances, I get the below test errors. Could someone help me fix these?
Tests in error: 
  testGenerateAndLoad(org.apache.hadoop.hbase.mapreduce.IntegrationTestImportTsv): File does not exist: hdfs://localhost:58859/home/ukuchibhotla/.m2/repository/org/apache/hbase/hbase-client/0.99.0-SNAPSHOT/hbase-client-0.99.0-SNAPSHOT.jar
  testRunFromOutputCommitter(org.apache.hadoop.hbase.mapreduce.IntegrationTestImportTsv): File does not exist: hdfs://localhost:58859/home/ukuchibhotla/.m2/repository/org/apache/hbase/hbase-hadoop-compat/0.99.0-SNAPSHOT/hbase-hadoop-compat-0.99.0-SNAPSHOT.jar
  testRestartRsHoldingTable(org.apache.hadoop.hbase.mttr.IntegrationTestMTTR): java.lang.NullPointerException
  testLoadAndVerify(org.apache.hadoop.hbase.test.IntegrationTestWithCellVisibilityLoadAndVerify): File does not exist: hdfs://localhost:46182/home/ukuchibhotla/.m2/repository/org/apache/hbase/hbase-client/0.99.0-SNAPSHOT/hbase-client-0.99.0-SNAPSHOT.jar
  testLoadAndVerify(org.apache.hadoop.hbase.test.IntegrationTestLoadAndVerify): File does not exist: hdfs://localhost:33476/home/ukuchibhotla/.m2/repository/org/apache/hbase/hbase-client/0.99.0-SNAPSHOT/hbase-client-0.99.0-SNAPSHOT.jar
  testContinuousIngest(org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList): File does not exist: hdfs://localhost:33232/home/ukuchibhotla/.m2/repository/org/apache/hbase/hbase-client/0.99.0-SNAPSHOT/hbase-client-0.99.0-SNAPSHOT.jar
Thanks,
Usha

** Comment 4 **
Changed the logger instance modifiers to private static final where ever possible.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit c8362a7bb2876e5b4aeb2b979458179b3a650115.
  ATTACHMENT ID: 12685308
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 511 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    -1 lineLengths.  The patch introduces the following lines longer than 100:
    +  private static final Log LOG = LogFactory.getLog(TestRegionServerCoprocessorExceptionWithAbort.class);
+  private static final Log LOG = LogFactory.getLog(TestVisibilityLabelsWithDefaultVisLabelService.class);
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.ipc.TestDelayedRpc
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 9 **
Hi , thanks for working on this.
The test reported by the QA bot fails for me locally once this patch is applied, and doesn't fail prior to it. Can you take a look at fixing that? To run just that test you can use
{code}
$> mvn -Dtest=TestDelayedRpc clean package
{code}
Please also wrap the two lines that end up over 100 columns.
For Log objects that are shared with test code, please make a new Log reference in the test class and restrict the access of the non-test Log to private.
When you have things changed, leave the current patch in place and upload an additional one named ""HBASE-11677.2.patch""
For Logs that end up shared amongst non-test classes, what are people's thoughts? Worth the trouble to transition to independent loggers? Just change without deprecation? Only do that in 1.0+? Double log to the current logger and the eventual logger with a note in release notes that the former is going away?

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
bq. For Logs that end up shared amongst non-test classes, what are people's thoughts? Worth the trouble to transition to independent loggers? 
Sure
bq. Just change without deprecation? 
If I recall correctly generally it's fine but there are a couple of special cases, for example trace logging in RPC. 
bq. Double log to the current logger and the eventual logger with a note in release notes that the former is going away?
Overkill?

** Comment 13 **
Fixed the test case failure.

** Comment 14 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 0d5f967c7ff4809ca782f68a9e48896dd04b16f6.
  ATTACHMENT ID: 12688801
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 507 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 15 **
>> For Log objects that are shared with test code, please make a new Log reference in the test class and restrict the access of the non-test Log to private.
The log object is not being shared with test code, the logger level is being changed for testing.

** Comment 16 **
We shouldn't be setting log levels programmatically in test code  (unless
the test in question is specifically checking some log activity). I think
in other instances we've commented out such settings and pointed people to
using src/test/resources/log4j.properties.


** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
Made logger modifiers consistent including the cases where logger level was being changed for testing.

** Comment 22 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 7774f964e62842806d849cae1a6af830c137d737.
  ATTACHMENT ID: 12690327
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 23 **
Patch looks good, thanks for the effort . Some feedback
{code}
diff --git a/hbase-server/src/test/resources/log4j.properties b/hbase-server/src/test/resources/log4j.properties
index 6ee91ef..add4193 100644
--- a/hbase-server/src/test/resources/log4j.properties
+++ b/hbase-server/src/test/resources/log4j.properties
@@ -57,6 +57,11 @@ log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p  %C{2}(%L):
 log4j.logger.org.apache.hadoop=WARN
 log4j.logger.org.apache.zookeeper=ERROR
 log4j.logger.org.apache.hadoop.hbase=DEBUG
+log4j.logger.org.apache.hadoop.hbase.client.ScannerCallable=ALL
+log4j.logger.org.apache.hadoop.hbase.client.RpcRetryingCallerImpl=ALL
+log4j.logger.org.apache.hadoop.hbase.ipc.RpcServer=ALL
+log4j.logger.org.apache.hadoop.hbase.AbstractRpcClient=ALL
+log4j.logger.org.apache.hadoop.hbase.fs.HFileSystem=ALL
{code}
Please leave these commented out with a note that they should be uncommented if folks need more detail (ideally with the name of the test that set them in the first place)
----
We'll have to do a deprecation cycle on changing the following from public/protected to private because they're marked InterfaceAudience.Public. For now, you should just mark them @deprecated in master. If we get the change into the next 1.0 RC, then we can change them in master as a follow on.
* ImportTsv
* hbase.mapreduce.TableSplit
* CodecPerformance


** Comment 24 **
[Comment excluded]

** Comment 25 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 5b850caa801d033d800bf6c1bea32aa2c7bda273.
  ATTACHMENT ID: 12691611
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
I actually don't like the changes like: 
{code}
-    ((Log4JLogger)RpcServer.LOG).getLogger().setLevel(Level.ALL);
-    ((Log4JLogger)AbstractRpcClient.LOG).getLogger().setLevel(Level.ALL);
-    ((Log4JLogger)ScannerCallable.LOG).getLogger().setLevel(Level.ALL);
{code} but instead adding them commented out back in log4.properties for tests. These are enabled by default because when a test fails it is easier to grab the logs rather than enabling the extensive logging and trying to reproduce the problem again (which proves harder on some cases). 

** Comment 29 **
I can empathize with needing logs for flakey failures.
Would it be a problem to enable those via log4j so that we don't need programmatic tuning? We could leave a comment that the verbosity is for particular tests, similar to how we call out when they might be needed currently.
It would mean more logs when running some subsets of tests, but the current code in master is turning those on for all following tests once one of the test cases runs. (I think @stack and  recently fixed problems with too much logging, maybe they have an idea)

** Comment 30 **
Can you clarify which solution you favor over just removing/commenting out the setLevel calls, ? Back in HBASE-12285, we commented out some of these because they were leading to an absurd amount of output, but I can revisit this if you think there's a better way to go. 
For what it's worth, we should balance adequate logging for debugging (specifically, around tests that fail at least sometimes), with the problem of overly verbose tests. We still have the problem to some degree--the last successful build of master shows that hbase-server has 67 tests that output more than a megabyte and at least a couple printing 20+ MB during every single run--but at least it's not causing build failures anymore.

** Comment 31 **
[Comment excluded]

** Comment 32 **
I did not inspect case by case basis for what logs we might need for debugging. The first time I saw this in the patch was TestIPCUtil removing logging from IPCUtil which seems counter-intuitive. 
Can we keep this issue focussed only on modifier changes, and do a follow up for reducing logging if needed so that it is reviewable. 

** Comment 33 **
{quote}
Can we keep this issue focussed only on modifier changes, and do a follow up for reducing logging if needed so that it is reviewable.
{quote}
I presumed that we were going to keep logging. My question is wether we do that via setting in log4j.properties so that we can properly scope the loggers in question (they're non-private ATM so that these tests can change their level).

** Comment 34 **
bq. I presumed that we were going to keep logging. 
It should be fine if we can do it. But the patch disables those by default from what I can see. 

** Comment 35 **
, would you mind making an updated patch that uncomments the verbose logging? The additional comments around them that explains which tests need them is still good to keep.

** Comment 36 **
Uncommented the verbose logging.
FYI 

** Comment 37 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f71b980d3715c94478930b614e63250ebb678899.
  ATTACHMENT ID: 12693254
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 38 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f71b980d3715c94478930b614e63250ebb678899.
  ATTACHMENT ID: 12693277
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 39 **
bq. would you mind making an updated patch that uncomments the verbose logging? The additional comments around them that explains which tests need them is still good to keep.
Would that work? Now we will log a lot of stuff for every test, not just selected tests, no? 

** Comment 40 **
bq. Would that work? Now we will log a lot of stuff for every test, not just selected tests, no?
I'm not sure how much more logging we'll do. The other case never stepped the logging back down, so we'd already be keeping the log level up whenever JVMs get reused. (But I don't know how much we're reusing JVMs)
Before we take measurements, does anyone have an acceptable amount of additional logging in mind? Or should we just find a way to alter the impacted log levels programmatically that doesn't involve those members being visible?

** Comment 41 **
Could you do this in two phases? We push in a patch which makes LOG modifiers consistent, except for cases where logger level is being changed for testing. We could handle the case where logger level is being modified as part of test cases in a separate jira.
 Please let me know. I will update a new patch accordingly.

** Comment 42 **
[Comment excluded]

** Comment 43 **
Created the patch making the LOG modifiers consistent, except for cases where logger level is being changed for testing.

** Comment 44 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 40a80c1fe0b4cf8d64ada406f256e0e289bc9ebc.
  ATTACHMENT ID: 12727895
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 45 **
Thanks for sticking through things .
{code}
--- [file java]
+++ [file java]
@@ -43,7 +43,9 @@ import org.apache.hadoop.mapreduce.InputSplit;
 @InterfaceStability.Evolving
 public class TableSplit extends InputSplit
 implements Writable, Comparable<TableSplit> {
-  public static final Log LOG = LogFactory.getLog(TableSplit.class);
+  /** @deprecated LOG variable would be made private. */
+  @Deprecated
+  private static final Log LOG = LogFactory.getLog(TableSplit.class);
{code}
I think this one was supposed to stay public while being deprecated?

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit f2e1238f9812ebe0257ad4b3af1200230231529a.
  ATTACHMENT ID: 12728359
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestHBaseFsck
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 50 **
Updated the master branch and verified that the test case is not failing now.

** Comment 51 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 75bb815d9954e538488c4c549f7261b5be80551b.
  ATTACHMENT ID: 12728766
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 545 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle.  The applied patch does not increase the total number of checkstyle errors
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 52 **
I don't think the failure is related to this patch. Pushed to branch-1 and master.
Thanks again!

** Comment 53 **
SUCCESS: Integrated in HBase-1.2 #35 (See )
HBASE-11677 Making Logger instance modifiers consistent. (busbey: rev 0dbbc8b8dee89e7cc649aec20f6bef10c9b19617)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 54 **
FAILURE: Integrated in HBase-TRUNK #6427 (See )
HBASE-11677 Making Logger instance modifiers consistent. (busbey: rev 94a00bea07b71f2383805e966748e504b406b95d)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 55 **
[Comment excluded]
"
HBASE-15870,https://issues.apache.org/jira/browse/HBASE-15870,https://github.com/apache/hbase/blob/rel/1.2.2/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java,Specify columns in REST multi gets,NO,The REST multi-gets feature currently does not allow specifying only certain columns or column families. Adding support for these should be quite simple and improve the usability of the multi-gets feature.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 21s  |  master passed  |
| +1 |  compile  |  0m 23s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 17s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  0m 23s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| -1 |  findbugs  |  0m 46s  |  hbase-rest in master has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 28s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 19s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 19s  |  the patch passed  |
| +1 |  compile  |  0m 21s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 21s  |  the patch passed  |
| +1 |  compile  |  0m 17s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 17s  |  the patch passed  |
| +1 |  checkstyle  |  0m 26s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  8m 32s  |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.0.  |
| -1 |  findbugs  |  1m 1s  |  hbase-rest generated 1 new + 2 unchanged - 0 fixed = 3 total (was 2)  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 18s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  4m 47s  |  hbase-rest in the patch passed.  |
| +1 |  asflicense  |  0m 8s  |  Patch does not generate ASF License warnings.  |
|  |   |  23m 28s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-rest |
|  |  Exception is caught when Exception is not thrown in org.apache.hadoop.hbase.rest.MultiRowResource.get(UriInfo)  At [file java]:is not thrown in org.apache.hadoop.hbase.rest.MultiRowResource.get(UriInfo)  At [file java]: |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15870 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/test_framework/yetus-0.2.1/lib/precommit/personality/hbase.sh |
| git revision | master / ae42c65 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
|  Test Results | [link] |
| modules | C: hbase-rest U: hbase-rest |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 3 **
It looks like the FindBug warning were for preexisting issues.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in HBase-Trunk_matrix #1084 (See )
HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig) (jerryjch: rev 4ca4cd856ef5b4596aa43c048e2a8478d08dc773)
* [file java]
* [file java]
* [file java]


** Comment 18 **
FAILURE: Integrated in HBase-1.4 #230 (See )
HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig) (jerryjch: rev 541b9ff25c24cf566b45c7b3c054b82e509d2ac6)
* [file java]
* [file java]
* [file java]


** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in HBase-1.3 #750 (See )
HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig) (jerryjch: rev d91e42b8407dd68dce702c76fb4843326c8e38e4)
* [file java]
* [file java]
* [file java]


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
FAILURE: Integrated in HBase-1.2-IT #537 (See )
Revert ""HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig)"" (jerryjch: rev 65738a8353cd4b65b5204e42048ef484bd7ca8f3)
* [file java]
* [file java]
* [file java]


** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in HBase-1.2 #656 (See )
Revert ""HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig)"" (jerryjch: rev 65738a8353cd4b65b5204e42048ef484bd7ca8f3)
* [file java]
* [file java]
* [file java]


** Comment 29 **
FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1231 (See )
HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig) (apurtell: rev 0fd4c1dcdc00d70820d9e816cad0a43c6b039c11)
* [file java]
* [file java]
* [file java]


** Comment 30 **
FAILURE: Integrated in HBase-0.98-matrix #359 (See )
HBASE-15870 Specify columns in REST multi gets (Matt Warhaftig) (apurtell: rev 0fd4c1dcdc00d70820d9e816cad0a43c6b039c11)
* [file java]
* [file java]
* [file java]


** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]
"
HBASE-15328,https://issues.apache.org/jira/browse/HBASE-15328,https://github.com/apache/hbase/blob/rel/1.2.5/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Unvalidated Redirect in HMaster,NO,"See OWASP page on why we should clean it up someday:

https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet

Here is where we do the redirect:

{code}
    @Override
    public void doGet(HttpServletRequest request,
        HttpServletResponse response) throws ServletException, IOException {
      String redirectUrl = request.getScheme() + ""://""
        + request.getServerName() + "":"" + regionServerInfoPort
        + request.getRequestURI();
      response.sendRedirect(redirectUrl);
    }
  }
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
-00
  - check if the request hostname is local for our node
  - provide override config in case deployment doesn't allow for above
  - small refactor to cleanup how we get the needed info to the redirect servlet

** Comment 3 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 6s  |  master passed  |
| +1 |  compile  |  0m 35s  |  master passed  |
| +1 |  checkstyle  |  0m 45s  |  master passed  |
| +1 |  mvneclipse  |  0m 15s  |  master passed  |
| +1 |  findbugs  |  1m 41s  |  master passed  |
| +1 |  javadoc  |  0m 27s  |  master passed  |
| +1 |  mvninstall  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  checkstyle  |  0m 45s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 46s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha2.  |
| +1 |  findbugs  |  1m 51s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed  |
| -1 |  unit  |  92m 51s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 15s  |  The patch does not generate ASF License warnings.  |
|  |   |  131m 46s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestZKAsyncRegistry |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15328 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 570aff916351 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / d2c083d |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 4 **
test failure is unrelated.

** Comment 5 **
Just a quick comment:
{code}
+        if(!Addressing.isLocalAddress(InetAddress.getByName(redirectHost))) {
+          LOG.warn(""Couldn't resolve '"" + redirectHost + ""' as an address local to this node and '"" +
+              REGION_SERVER_INFO_REDIRECT_HOST + ""' is not set; client will get a HTTP 400 response. If "" +
+              ""your HBase deployment relies on client accessible names that the region server process "" +
+              ""can't resolve locally, then you should set the previously mentioned configuration variable "" +
+              ""to an appropriate hostname."");
{code}
When {{hbase.master.hostname}} or {{hbase.region.hostname}} is present shouldn't we use that for {{hbase.regionserver.info.redirect.hostname}}?


** Comment 6 **
good question. I had searched for but failed to find something like hbase.*.hostname.
In this case, I would think the correct one would be {{hbase.region.hostname}}, set on the master's configs, but it looks like the embedded regionserver in the master makes use of the hbase.master.hostname instead?

** Comment 7 **
the only reason I can think of to make this a different config is that {{hbase.region.hostname}} and {{hbase.master.hostname}} are used to advertise in ZK, which means setting it once someone runs into this error message means effectively doing a server rename. Anyone else have a concern with that? I think it's fine.

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 27s  |  master passed  |
| +1 |  compile  |  0m 40s  |  master passed  |
| +1 |  checkstyle  |  0m 47s  |  master passed  |
| +1 |  mvneclipse  |  0m 16s  |  master passed  |
| +1 |  findbugs  |  1m 48s  |  master passed  |
| +1 |  javadoc  |  0m 31s  |  master passed  |
| +1 |  mvninstall  |  0m 46s  |  the patch passed  |
| +1 |  compile  |  0m 40s  |  the patch passed  |
| +1 |  javac  |  0m 40s  |  the patch passed  |
| +1 |  checkstyle  |  0m 50s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 15s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 40s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha2.  |
| +1 |  findbugs  |  1m 48s  |  the patch passed  |
| +1 |  javadoc  |  0m 27s  |  the patch passed  |
| +1 |  unit  |  95m 28s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 16s  |  The patch does not generate ASF License warnings.  |
|  |   |  135m 15s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-15328 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 21a3dfb54333 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b392de3 |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 10 **
[Comment excluded]

** Comment 11 **
SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #2543 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev d7ffa0013bde592bb035ce5306c09883a192989f)


** Comment 12 **
[Comment excluded]

** Comment 13 **
SUCCESS: Integrated in Jenkins build HBase-1.4 #637 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev cdb38830d7a711970a9c1c8acf34899674827a93)


** Comment 14 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #834 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev fdb7655c6826cc2bcb5003b4d15385fee1388343)


** Comment 15 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK7 #108 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev 44d9bbe223f34d9e7a85a1b16cd6608234909f4f)


** Comment 16 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK8 #96 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev fdb7655c6826cc2bcb5003b4d15385fee1388343)


** Comment 17 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK7 #103 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev fdb7655c6826cc2bcb5003b4d15385fee1388343)


** Comment 18 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK8 #118 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev 44d9bbe223f34d9e7a85a1b16cd6608234909f4f)


** Comment 19 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1929 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev daf2dc9a8a07caee646bf5f97c451e062075d4a7)


** Comment 20 **
SUCCESS: Integrated in Jenkins build HBase-1.1-JDK7 #1845 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev daf2dc9a8a07caee646bf5f97c451e062075d4a7)


** Comment 21 **
FAILURE: Integrated in Jenkins build HBase-1.2-IT #602 (See )
HBASE-15328 sanity check the redirect used to send master info requests (busbey: rev fdb7655c6826cc2bcb5003b4d15385fee1388343)

"
HBASE-21076,https://issues.apache.org/jira/browse/HBASE-21076,https://github.com/apache/hbase/blob/rel/1.2.7/hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java,TestTableResource fails with NPE,YES,"The following can be observed in master branch:
{code}
java.lang.NullPointerException
	at org.apache.hadoop.hbase.rest.TestTableResource.setUpBeforeClass(TestTableResource.java:134)
{code}
The NPE comes from the following in TestEndToEndSplitTransaction :
{code}
        compactAndBlockUntilDone(TEST_UTIL.getAdmin(),
          TEST_UTIL.getMiniHBaseCluster().getRegionServer(0), daughterA.getRegionName());
{code}
Initial check of the code shows that TestEndToEndSplitTransaction uses TEST_UTIL instance which is created within TestEndToEndSplitTransaction. However, TestTableResource creates its own instance of HBaseTestingUtility.
Meaning TEST_UTIL.getMiniHBaseCluster() would return null, since the instance created by TestEndToEndSplitTransaction has hbaseCluster as null.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
note that due to HBASE-19265, precommit isn't going to run TestTableResource (it's in the untrusted list because it fails 100% of the time before this patch). reviewers should manually run the test locally to confirm it works. Doing this while doing a minimum of other things: {{mvn -Dtest=TestTableResource -pl hbase-rest -am package}}

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 28s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m 39s |  master passed  || +1 |  compile  |   1m 15s |  master passed  || +1 |  checkstyle  |   0m 44s |  master passed  || +1 |  shadedjars  |   6m 50s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 34s |  master passed  || +1 |  javadoc  |   0m 53s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m 53s |  the patch passed  || +1 |  compile  |   1m 19s |  the patch passed  || +1 |  javac  |   1m 19s |  the patch passed  || -1 |  checkstyle  |   0m 46s |  hbase-rest: The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m 57s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 59s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 49s |  the patch passed  || +1 |  javadoc  |   0m 18s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 49s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  52m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21076 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c145ce8bdffe 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bb3494134e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 2206 (vs. ulimit of 10000) || modules | C: hbase-rest U: hbase-rest || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
both of those checkstyle warnings are easy fixes. Can do on commit or will post a new patch if anyone wants some other change.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 20 **
Results for branch branch-1.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 21 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 23 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20665,https://issues.apache.org/jira/browse/HBASE-20665,https://github.com/apache/hbase/blob/rel/1.2.7/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java,"""Already cached block XXX"" message should be DEBUG",YES,"Testing a local cluster that relies on the LruBlockCache for a scan-heavy workload and I'm getting a bunch of log entries at WARN

{code}
2018-05-30 12:28:47,192 WARN org.apache.hadoop.hbase.io.hfile.LruBlockCache: Cached an already cached block: df01f5bf6a244f6bb1a626b927377fff_54780812 cb:df01f5bf6a244f6bb1a626b927377fff_54780812. This is harmless and can happen in rare cases (see HBASE-8547)
{code}

As the log message notes (and the code confirms) this is a harmless result of contention for getting a block into the CHM. the message should be at DEBUG.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  0s |  Docker mode activated.  || -1 |  docker  |   1m 21s |  Docker failed to build yetus/hbase:d8b550f.  |\\\\|| Subsystem || Report/Notes ||| JIRA Issue | HBASE-20665 || JIRA Patch URL | [link] || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 29s |  master passed  || +1 |  compile  |   1m 33s |  master passed  || +1 |  checkstyle  |   1m  0s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 48s |  master passed  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 17s |  the patch passed  || +1 |  compile  |   1m 36s |  the patch passed  || +1 |  javac  |   1m 36s |  the patch passed  || +1 |  checkstyle  |   0m 59s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 51s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 47s |  the patch passed  || +1 |  javadoc  |   0m 34s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 112m 38s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 156m  1s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20665 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9bba1f105544 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b002b0b8b0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4370 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
{quote}-1	test4tests	0m 0s	The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.{quote}Sadly we have no easy way to add tests of logging, so I don't think we need one here.+1. will merge later today based on PR#77 (for e.g. authorship).

** Comment 8 **
[Comment excluded]

** Comment 9 **
For clarity on why this was being ""refixed"": * HBASE-20447 is what originally added this log message at debug * 2.x and master seem to have different version of HBASE-20447 which has this message at warn * 1.4 and 1.5 have the log message at debug (thus we don't need this change on those branches) * 1.3 has HBASE-20447 and needs this change * 1.2 does not have HBASE-20447 but still needs this change

** Comment 10 **
[Comment excluded]

** Comment 11 **
SUCCESS: Integrated in Jenkins build HBase-1.2-IT #1121 (See )
HBASE-20665: Changed log level of HBASE-8547 warning to debug (elserj: rev cb6990e0d05340e535ae804619863713bc240417)


** Comment 12 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #420 (See )
HBASE-20665: Changed log level of HBASE-8547 warning to debug (elserj: rev 4cb2378c1b1829465354cbc066aed16ff281e18f)


** Comment 13 **
Results for branch branch-1.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 17 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-17224,https://issues.apache.org/jira/browse/HBASE-17224,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-common/src/main/java/org/apache/hadoop/hbase/io/BoundedByteBufferPool.java,There are lots of spelling errors in the HBase logging and exception messages,YES,"Found a bunch of spelling errors in log messages and exception messages such as ""Stoping"" instead of ""Stopping"", ""alligned"" instead of ""aligned"".","** Comment 1 **
Lots of spelling errors in logging and exceptions.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 11s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 40s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 1s  |  master passed  |
| +1 |  compile  |  1m 4s  |  master passed  |
| +1 |  checkstyle  |  0m 56s  |  master passed  |
| +1 |  mvneclipse  |  0m 30s  |  master passed  |
| +1 |  findbugs  |  2m 58s  |  master passed  |
| +1 |  javadoc  |  0m 56s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 11s  |  the patch passed  |
| +1 |  compile  |  1m 4s  |  the patch passed  |
| +1 |  javac  |  1m 4s  |  the patch passed  |
| +1 |  checkstyle  |  0m 57s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 31s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 35s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  3m 22s  |  the patch passed  |
| +1 |  javadoc  |  0m 55s  |  the patch passed  |
| +1 |  unit  |  1m 41s  |  hbase-common in the patch passed.  |
| +1 |  unit  |  0m 54s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  88m 40s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 39s  |  The patch does not generate ASF License warnings.  |
|  |   |  136m 39s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17224 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 4cadcef9b987 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 540ede3 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-common hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 6 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #2054 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (jmhsieh: rev eeaea4aea3dcd3e9e2ec5a05d77fd1dd0f06382b)


** Comment 7 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK8 #81 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (jmhsieh: rev 8e0b8052ed9554b5f9552fc61ea7547001ab43cb)


** Comment 8 **
SUCCESS: Integrated in Jenkins build HBase-1.4 #556 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (jmhsieh: rev 9da0d5d00ed9a776643dc4d9faed1570edcbd3b9)


** Comment 9 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK7 #70 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (jmhsieh: rev 8e0b8052ed9554b5f9552fc61ea7547001ab43cb)


** Comment 10 **
FAILURE: Integrated in Jenkins build HBase-0.98-matrix #423 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (apurtell: rev b9e9f05374f02b8d3f7a86661e2b92a58fdd8ce6)


** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-0.98-on-Hadoop-1.1 #1294 (See )
HBASE-17224 Fix lots of spelling errors in HBase logging and exception (apurtell: rev b9e9f05374f02b8d3f7a86661e2b92a58fdd8ce6)

"
HBASE-16068,https://issues.apache.org/jira/browse/HBASE-16068,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,Procedure v2 - use consts for conf properties in tests ,NO,"replace the hardcoded properties string conf.set(""foo.key"", v) in the tests with the use of the configuration property constants that we already have","** Comment 1 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 5 new or modified test files.  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 59s  |  master passed  |
| +1 |  compile  |  0m 56s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 45s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 21s  |  master passed  |
| +1 |  mvneclipse  |  0m 26s  |  master passed  |
| +1 |  findbugs  |  2m 23s  |  master passed  |
| +1 |  javadoc  |  0m 46s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 44s  |  master passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 55s  |  the patch passed  |
| +1 |  compile  |  1m 4s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 4s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  checkstyle  |  0m 21s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 28s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 49s  |  the patch passed  |
| +1 |  javadoc  |  0m 47s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 44s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 46s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  75m 57s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 26s  |  Patch does not generate ASF License warnings.  |
|  |   |  122m 52s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.mapreduce.TestMultithreadedTableMapper |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16068 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 01684c3 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
FAILURE: Integrated in HBase-Trunk_matrix #1099 (See )
HBASE-16068 Procedure v2 - use consts for conf properties in tests (matteo.bertozzi: rev d66316fd80fbcdf8d978a22de50783d03d8860e8)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 7 **
[Comment excluded]
"
HBASE-16287,https://issues.apache.org/jira/browse/HBASE-16287,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java,LruBlockCache size should not exceed acceptableSize too many,NO,"Our regionserver has a configuation as bellow：
  -Xmn4g -Xms32g -Xmx32g -XX:SurvriorRatio=2 -XX:+UseConcMarkSweepGC 
also we only use blockcache,and set hfile.block.cache.size = 0.3 in hbase_site.xml,so under this configuration, the lru block cache size will be(32g-1g)*0.3=9.3g. but in some scenarios，some of the rs will occur continuous FullGC  for hours and most importantly, after FullGC most of the object in old will not be GCed. so we dump the heap and analyse with MAT and we observed a obvious memory leak in LruBlockCache, which occpy about 16g memory, then we set set class LruBlockCache log level to TRACE and observed this in log:

{quote}
2016-07-22 12:17:58,158 INFO  [LruBlockCacheStatsExecutor] hfile.LruBlockCache: totalSize=15.29 GB, freeSize=-5.99 GB, max=9.30 GB, blockCount=628182, accesses=101799469125, hits=93517800259, hitRatio=91.86%, , cachingAccesses=99462650031, cachingHits=93468334621, cachingHitsRatio=93.97%, evictions=238199, evicted=4776350518, evictedPerRun=20051.93359375{quote}

we can see blockcache size has exceeded acceptableSize too many, which will cause the FullGC more seriously. 
Afterfter some investigations, I found in this function:

{code:borderStyle=solid}
  public void cacheBlock(BlockCacheKey cacheKey, Cacheable buf, boolean inMemory,
      final boolean cacheDataInL1) {
{code}


No matter the blockcache size has been used, just put the block into it. but if the evict thread is not fast enough, blockcache size will increament significantly.
So here I think we should have a check, for example, if the blockcache size > 1.2 * acceptableSize(), just return and dont put into it until the blockcache size if under watrmark. if this is reasonable, I can make a small patch for this.","** Comment 1 **
[Comment excluded]

** Comment 2 **
This issue happens in our online system, and I believe we should add some protection mechanism for such blockcache overload. Please upload a patch so others could better understand the issue by checking the code, thanks. 

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
bq. Why -1g? We calc the BC size by conf xmx value * BC percentage.
Not actually... In CacheConfig#instantiateBlockCache, we use {{ManagementFactory.getMemoryMXBean().getHeapMemoryUsage()}} as the base, and JVM will return {{Xmx-survivorSize}} for this. We could also confirm this from the TRACE log: ""totalSize=15.29 GB, freeSize=-5.99 GB, max=9.30 GB""
bq. Why the eviction thread is so slow?
It's possible that the loading speed is higher than eviction in some cases like with PCIe SSD, according to our observation.
bq. The keypoint is ""hard capacity limit"". We need a buffer, 1.2x is good
Yep, that's why I suggest to attache the patch, codes are easier to read than words for us, I guess. :-)

** Comment 8 **
[Comment excluded]

** Comment 9 **
bq.It's possible that the loading speed is higher than eviction in some cases like with PCIe SSD, according to our observation.
I agree to this. In case of L2 cache when configured  in FileMode -  with HDD the caching is not fast enough and because of that the RAMQueue fills up and so no new blocks are added to it. So the failedInsertion rate seems to be higher whereas in case of PCIe SSDs the failed insertion rate is lower (in both cases the Writer Thread counts were increased).
bq.Then those are moved to buckets. I had noticed this issue and thought of handling it but kept forgetting.. Now remember again..
I think here in case of L2 the caching depends on how much faster the draining happens from the RAMQueue. Also if the block cannot be cached by the writer threads the code already tries handles cache full exception by trying to free some space?

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Ya it is related to speed of drain to BC op.   So it can so happen that the RAMQ put was success and writer offer() call also fine.  But the actual drain by writers are slow.. So we may end up in consuming for heap memory (temp may be)..  So there should be some sort of guard here as well.


** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  4m 54s  |  master passed  |
| +1 |  compile  |  0m 52s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 40s  |  master passed with JDK v1.7.0_25  |
| +1 |  checkstyle  |  0m 56s  |  master passed  |
| +1 |  mvneclipse  |  0m 25s  |  master passed  |
| +1 |  findbugs  |  2m 8s  |  master passed  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_25  |
| +1 |  mvninstall  |  0m 50s  |  the patch passed  |
| +1 |  compile  |  0m 48s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 39s  |  the patch passed with JDK v1.7.0_25  |
| +1 |  javac  |  0m 39s  |  the patch passed  |
| +1 |  checkstyle  |  0m 56s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  36m 5s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| -1 |  findbugs  |  2m 38s  |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  |
| +1 |  javadoc  |  0m 39s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 37s  |  the patch passed with JDK v1.7.0_25  |
| -1 |  unit  |  19m 21s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 14s  |  Patch does not generate ASF License warnings.  |
|  |   |  74m 38s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Dead store to newSize in org.apache.hadoop.hbase.io.hfile.LruBlockCache.cacheBlock(BlockCacheKey, Cacheable, boolean, boolean)  At [file java]:org.apache.hadoop.hbase.io.hfile.LruBlockCache.cacheBlock(BlockCacheKey, Cacheable, boolean, boolean)  At [file java]: |
| Failed junit tests | hadoop.hbase.io.hfile.TestLruBlockCache |
|   | hadoop.hbase.io.TestHeapSize |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux penates.apache.org 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 00c2a5d |
| Default Java | 1.7.0_25 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_25-64:1.7.0_25 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 17 **
Current patch has some logic error and causing UT failure, please check and do necessary fix , thanks.

** Comment 18 **
attach patch v2 to fix ut failed error
this patch also contains a fix to org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testStoreFileCacheOnWrite() failed due to this patch. its simply set LruBlockCache.LRU_HARD_CAPACITY_LIMIT_FACTOR_CONFIG_NAME, to 2.0f, and  if we dont apply this change, estCacheOnWrite.testStoreFileCacheOnWrite() will failed and the output log is:
{quote}
2016-07-28 23:02:49,801 INFO   hfile.CacheConfig(285): blockCache=LruBlockCache{blockCount=0, currentSize=159452224, f
reeSize=-25234496, maxSize=134217728, heapSize=159452224, minSize=127506840, minFactor=0.95, multiSize=63753420, multiFactor
=0.5, singleSize=31876710, singleFactor=0.25}, cacheDataOnRead=true, cacheDataOnWrite=false, cacheIndexesOnWrite=true, cache
BloomsOnWrite=false, cacheEvictOnClose=false, cacheDataCompressed=true, prefetchOnOpen=false
2016-07-28 23:02:49,807 DEBUG  hfile.HFile$WriterFactory(345): Unable to set drop behind on /home/hongxi.sy/hbase/hbas
e-server/target/test-data/b1c99d85-27e3-4796-a66b-324feb06c620/test_cache_on_write/9174b12e141143acb9d4be7b6e7165a9
{quote}
from the log above we can see: currentSize  > 1.2f * maxSize * DEFAULT_ACCEPTABLE_FACTOR, that is 159452224 > 159450660.864, so the block beening read is not put into LruCache, the assert failed.  here i just increment hard limt factor to make the lur cache large enough for all the blocks of the file beening read.

** Comment 19 **
[Comment excluded]

** Comment 20 **
will attach patch v3 after {{HBASE-16300}} commited, or TestHeapSize will failed while add new filed of type float to LruBlockCache.

** Comment 21 **
[Comment excluded]

** Comment 22 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  4m 58s  |  master passed  |
| +1 |  compile  |  1m 2s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 42s  |  master passed with JDK v1.7.0_25  |
| +1 |  checkstyle  |  0m 59s  |  master passed  |
| +1 |  mvneclipse  |  0m 27s  |  master passed  |
| +1 |  findbugs  |  2m 27s  |  master passed  |
| +1 |  javadoc  |  0m 38s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.7.0_25  |
| +1 |  mvninstall  |  0m 54s  |  the patch passed  |
| +1 |  compile  |  1m 0s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 0s  |  the patch passed  |
| +1 |  compile  |  0m 41s  |  the patch passed with JDK v1.7.0_25  |
| +1 |  javac  |  0m 41s  |  the patch passed  |
| +1 |  checkstyle  |  0m 58s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 25s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  37m 36s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 41s  |  the patch passed  |
| +1 |  javadoc  |  0m 40s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 36s  |  the patch passed with JDK v1.7.0_25  |
| -1 |  unit  |  118m 57s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 20s  |  Patch does not generate ASF License warnings.  |
|  |   |  177m 5s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
|   | hadoop.hbase.replication.TestReplicationKillMasterRSCompressed |
| Timed out junit tests | org.apache.hadoop.hbase.security.access.TestAccessController2 |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithCustomVisLabService |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf910.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 2b1cbeb |
| Default Java | 1.7.0_25 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_25-64:1.7.0_25 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 23 **
the faileure ut seems has no relateion with the changes I made and i also cant reproduce the failure ut in my local machine. so resubmit the patch for  further check.

** Comment 24 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  4m 5s  |  master passed  |
| +1 |  compile  |  0m 42s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 39s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 57s  |  master passed  |
| +1 |  mvneclipse  |  0m 24s  |  master passed  |
| +1 |  findbugs  |  2m 14s  |  master passed  |
| +1 |  javadoc  |  0m 29s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 51s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  checkstyle  |  1m 4s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 25s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  2m 4s  |  Patch causes 11 errors with Hadoop v2.4.0.  |
| -1 |  hadoopcheck  |  9m 21s  |  Patch causes 10 errors with Hadoop v2.5.0.  |
| -1 |  hadoopcheck  |  11m 26s  |  Patch causes 11 errors with Hadoop v2.5.1.  |
| -1 |  hadoopcheck  |  13m 34s  |  Patch causes 11 errors with Hadoop v2.5.2.  |
| +1 |  findbugs  |  2m 30s  |  the patch passed  |
| +1 |  javadoc  |  0m 29s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  18m 30s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 13s  |  Patch does not generate ASF License warnings.  |
|  |   |  65m 27s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 69d1700 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 25 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 29s  |  master passed  |
| +1 |  compile  |  0m 43s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 37s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 52s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  1m 59s  |  master passed  |
| +1 |  javadoc  |  0m 26s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 46s  |  the patch passed  |
| +1 |  compile  |  0m 41s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 37s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 37s  |  the patch passed  |
| +1 |  checkstyle  |  0m 53s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| -1 |  hadoopcheck  |  19m 54s  |  Patch causes 11 errors with Hadoop v2.6.1.  |
| -1 |  hadoopcheck  |  22m 45s  |  Patch causes 11 errors with Hadoop v2.6.2.  |
| -1 |  hadoopcheck  |  25m 36s  |  Patch causes 11 errors with Hadoop v2.6.3.  |
| -1 |  hadoopcheck  |  28m 27s  |  Patch causes 11 errors with Hadoop v2.7.1.  |
| +1 |  findbugs  |  2m 14s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  95m 9s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 16s  |  Patch does not generate ASF License warnings.  |
|  |   |  139m 50s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b35cf8f |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 39s  |  master passed  |
| +1 |  compile  |  0m 42s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 38s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 53s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 2s  |  master passed  |
| +1 |  javadoc  |  0m 32s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 37s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 42s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 42s  |  the patch passed  |
| +1 |  compile  |  0m 37s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 37s  |  the patch passed  |
| +1 |  checkstyle  |  0m 54s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m 41s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 13s  |  the patch passed  |
| +1 |  javadoc  |  0m 31s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  99m 30s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 16s  |  Patch does not generate ASF License warnings.  |
|  |   |  147m 58s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / e63fb6c |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 31 **
{code}
376	    if (currentSize > hardLimitSize) {
{code}
stats.failInsert() should be called inside the if block, right ?

** Comment 32 **
[Comment excluded]

** Comment 33 **
resubmit version v7 for QA
v7 contains the following two changes:
1. calculate hardLimitSize in advance
2. call stats.failInsert() while put into cache failed.

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 30s  |  master passed  |
| +1 |  compile  |  0m 42s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 38s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 53s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 1s  |  master passed  |
| +1 |  javadoc  |  0m 27s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 49s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 53s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 53s  |  the patch passed  |
| +1 |  checkstyle  |  1m 1s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m 45s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 38s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  108m 33s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 15s  |  Patch does not generate ASF License warnings.  |
|  |   |  157m 29s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestHRegionWithInMemoryFlush |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 81b06b3 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 28s  |  master passed  |
| +1 |  compile  |  0m 41s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 39s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 53s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  1m 59s  |  master passed  |
| +1 |  javadoc  |  0m 26s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 41s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  checkstyle  |  0m 54s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  34m 8s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 23s  |  the patch passed  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 37s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  17m 18s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 11s  |  Patch does not generate ASF License warnings.  |
|  |   |  68m 1s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.http.log.TestLogLevel |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 544dc1e |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 34s  |  master passed  |
| +1 |  compile  |  0m 43s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 37s  |  master passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 53s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 1s  |  master passed  |
| +1 |  javadoc  |  0m 33s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 32s  |  master passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 40s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 40s  |  the patch passed  |
| +1 |  compile  |  0m 38s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 38s  |  the patch passed  |
| +1 |  checkstyle  |  0m 54s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 21s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m 38s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 17s  |  the patch passed  |
| +1 |  javadoc  |  0m 31s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  15m 59s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 10s  |  Patch does not generate ASF License warnings.  |
|  |   |  64m 12s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.http.log.TestLogLevel |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16287 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 544dc1e |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /usr/local/asfpackages/java/jdk1.7.0_80:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
FAILURE: Integrated in HBase-Trunk_matrix #1353 (See )
HBASE-16287 LruBlockCache size should not exceed acceptableSize too (chenheng: rev 550b937bcf0b5a7e030194cca7d90524a0fc0f3d)
* [file java]
* [file java]
* [file java]


** Comment 55 **
FAILURE: Integrated in HBase-1.3 #808 (See )
HBASE-16287 LruBlockCache size should not exceed acceptableSize too (chenheng: rev f49d2fc7e1b3e3cbfee78a1a565ba8a03296d410)
* [file java]
* [file java]
* [file java]


** Comment 56 **
FAILURE: Integrated in HBase-1.4 #331 (See )
HBASE-16287 LruBlockCache size should not exceed acceptableSize too (chenheng: rev 9c8cbd44edbf304e71ab87cd93ca90f136df5dd3)
* [file java]
* [file java]
* [file java]


** Comment 57 **
FAILURE: Integrated in HBase-1.2 #694 (See )
HBASE-16287 LruBlockCache size should not exceed acceptableSize too (chenheng: rev 3bce24dee6edc3af9d3190a506e9d6df4c115108)
* [file java]
* [file java]
* [file java]

"
HBASE-14252,https://issues.apache.org/jira/browse/HBASE-14252,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java,RegionServers fail to start when setting hbase.ipc.server.callqueue.scan.ratio to 0,YES,"I set the following configuration in hbase-site.xml.

{code}
<property>
  <name>hbase.ipc.server.callqueue.read.ratio</name>
  <value>0.5</value>
</property>
<property>
  <name>hbase.ipc.server.callqueue.scan.ratio</name>
  <value>0</value>
<property>
{code}

Then, the RegionServer failed to start and I saw the following log:

{code}
2015-08-19 14:30:19,561 ERROR org.apache.hadoop.hbase.regionserver.HRegionServerCommandLine: Region server exiting
java.lang.RuntimeException: Failed construction of Regionserver: class org.apache.hadoop.hbase.regionserver.HRegionServer
        at org.apache.hadoop.hbase.regionserver.HRegionServer.constructRegionServer(HRegionServer.java:2457)
        at org.apache.hadoop.hbase.regionserver.HRegionServerCommandLine.start(HRegionServerCommandLine.java:61)
        at org.apache.hadoop.hbase.regionserver.HRegionServerCommandLine.run(HRegionServerCommandLine.java:85)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
        at org.apache.hadoop.hbase.util.ServerCommandLine.doMain(ServerCommandLine.java:126)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.main(HRegionServer.java:2472)
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.constructRegionServer(HRegionServer.java:2455)
        ... 5 more
Caused by: java.lang.IllegalArgumentException: Queue size is <= 0, must be at least 1
        at com.google.common.base.Preconditions.checkArgument(Preconditions.java:92)
        at org.apache.hadoop.hbase.ipc.RpcExecutor.getBalancer(RpcExecutor.java:139)
        at org.apache.hadoop.hbase.ipc.RWQueueRpcExecutor.<init>(RWQueueRpcExecutor.java:121)
        at org.apache.hadoop.hbase.ipc.RWQueueRpcExecutor.<init>(RWQueueRpcExecutor.java:83)
        at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.<init>(SimpleRpcScheduler.java:129)
        at org.apache.hadoop.hbase.regionserver.SimpleRpcSchedulerFactory.create(SimpleRpcSchedulerFactory.java:36)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.<init>(HRegionServer.java:610)
        ... 10 more
{code}

The doc of ""hbase.ipc.server.callqueue.scan.ratio"" says ""A value of 0 or 1 indicate to use the same set of queues for gets and scans."".
I think that there is a bug in validation.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
Patch against v1.0.2:
{code}
diff --git [file java] [file java]
index 7b28e74..bf3effd 100644
--- [file java]
+++ [file java]
@@ -133,7 +133,7 @@ public class RWQueueRpcExecutor extends RpcExecutor {
     this.numScanQueues = numScanQueues;
     this.writeBalancer = getBalancer(numWriteQueues);
     this.readBalancer = getBalancer(numReadQueues);
-    this.scanBalancer = getBalancer(numScanQueues);
+    this.scanBalancer = numScanQueues > 0 ? getBalancer(numScanQueues) : null;
     queues = new ArrayList<BlockingQueue<CallRunner>>(writeHandlersCount + readHandlersCount);
     LOG.debug(name + "" writeQueues="" + numWriteQueues + "" writeHandlers="" + writeHandlersCount +
{code}

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Patch with a test.
Without fix, the new test fails with:
{code}
testScanQueueWithZeroScanRatio(org.apache.hadoop.hbase.ipc.TestSimpleRpcScheduler)  Time elapsed: 0.635 sec  <<< ERROR!
java.lang.IllegalArgumentException: Queue size is <= 0, must be at least 1
	at com.google.common.base.Preconditions.checkArgument([file java]:92)
	at org.apache.hadoop.hbase.ipc.RpcExecutor.getBalancer([file java]:184)
	at org.apache.hadoop.hbase.ipc.RWQueueRpcExecutor.<init>([file java]:145)
	at org.apache.hadoop.hbase.ipc.RWQueueRpcExecutor.<init>([file java]:97)
	at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.<init>([file java]:200)
	at org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.<init>([file java]:248)
	at org.apache.hadoop.hbase.ipc.TestSimpleRpcScheduler.testScanQueueWithZeroScanRatio([file java]:264)
{code}

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| +1 |  mvninstall  |  3m 44s  |  master passed  |
| +1 |  compile  |  0m 42s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 36s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  4m 40s  |  master passed  |
| +1 |  mvneclipse  |  0m 17s  |  master passed  |
| +1 |  findbugs  |  2m 0s  |  master passed  |
| +1 |  javadoc  |  0m 28s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 34s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  0m 45s  |  the patch passed  |
| +1 |  compile  |  0m 41s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 33s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 33s  |  the patch passed  |
| +1 |  checkstyle  |  4m 26s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 16s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 30s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  2m 15s  |  the patch passed  |
| +1 |  javadoc  |  0m 30s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 33s  |  the patch passed with JDK v1.7.0_79  |
| -1 |  unit  |  118m 42s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 17s  |  Patch does not generate ASF License warnings.  |
|  |   |  170m 1s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
| Timed out junit tests | org.apache.hadoop.hbase.security.access.TestNamespaceCommands |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-14252 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 1eac103 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.2.1   [link] |
This message was automatically generated.


** Comment 12 **
Failed tests occurred in other test runs - not related to the patch.

** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in HBase-1.3-IT #633 (See )
HBASE-14252 RegionServers fail to start when setting (tedyu: rev cf680ad19a16cee9438081fa44f3bc245d82bf10)
* [file java]
* [file java]


** Comment 15 **
FAILURE: Integrated in HBase-Trunk_matrix #870 (See )
HBASE-14252 RegionServers fail to start when setting (tedyu: rev 793d976d87449bf833189622db6fe4bb33791fdd)
* [file java]
* [file java]


** Comment 16 **
FAILURE: Integrated in HBase-1.3 #669 (See )
HBASE-14252 RegionServers fail to start when setting (tedyu: rev cf680ad19a16cee9438081fa44f3bc245d82bf10)
* [file java]
* [file java]


** Comment 17 **
FAILURE: Integrated in HBase-1.4 #115 (See )
HBASE-14252 RegionServers fail to start when setting (tedyu: rev 5a69bc2dcb0dc39442ba9cf259d1b817fd8bec9e)
* [file java]
* [file java]


** Comment 18 **
[Comment excluded]
"
HBASE-17149,https://issues.apache.org/jira/browse/HBASE-17149,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableNamespaceManager.java,Procedure V2 - Fix nonce submission to avoid unnecessary calling coprocessor multiple times,NO,"instead of having all the logic in submitProcedure(), split in registerNonce() + submitProcedure().
In this case we can avoid calling the coprocessor twice and having a clean submit logic knowing that there will only be one submission.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 22 new or modified test files.  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 0s  |  master passed  |
| +1 |  compile  |  0m 48s  |  master passed  |
| +1 |  checkstyle  |  0m 20s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 14s  |  master passed  |
| +1 |  javadoc  |  0m 42s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 51s  |  the patch passed  |
| +1 |  compile  |  0m 46s  |  the patch passed  |
| +1 |  javac  |  0m 46s  |  the patch passed  |
| +1 |  checkstyle  |  0m 19s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 21s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 56s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| -1 |  findbugs  |  0m 30s  |  hbase-procedure generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  |
| -1 |  javadoc  |  0m 28s  |  hbase-server generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1)  |
| +1 |  unit  |  2m 30s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  105m 20s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 26s  |  The patch does not generate ASF License warnings.  |
|  |   |  149m 12s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-procedure |
|  |  Boxed value is unboxed and then immediately reboxed in org.apache.hadoop.hbase.procedure2.ProcedureExecutor.setFailureResultForNonce(NonceKey, String, User, IOException)  At [file java]:then immediately reboxed in org.apache.hadoop.hbase.procedure2.ProcedureExecutor.setFailureResultForNonce(NonceKey, String, User, IOException)  At [file java]: |
| Failed junit tests | hadoop.hbase.security.access.TestCoprocessorWhitelistMasterObserver |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux e6bfa35f376d 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 691f266 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javadoc | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 3 **
The UT failure is unrelated to this change.
The javadoc warning (basically, in the comments,@Override appears) - we can either ignore or make the comment simpler.  
I am not quite understand the FindBugs warning by looking at the code (maybe it complains that the 'completed' map is 100% sure that the key is missing when reaching to line 745): 
{code}
  public void setFailureResultForNonce(final NonceKey nonceKey, final String procName,
    final User procOwner, final IOException exception) {
    if (nonceKey == null) return;
    final Long procId = nonceKeysToProcIdsMap.get(nonceKey);
    if (procId == null || completed.containsKey(procId)) return;
    final long currentTime = EnvironmentEdgeManager.currentTime();
    final ProcedureInfo result = new ProcedureInfo(procId.longValue(),
      procName, procOwner != null ? procOwner.getShortName() : null,
      ProcedureUtil.convertToProcedureState(ProcedureState.ROLLEDBACK),
      -1, nonceKey, exception, currentTime, currentTime, null);
    completed.putIfAbsent(procId.longValue(), result);  <== Line 745
  }
{code}
, any insight?  If you don't see issue either, then we can commit.

** Comment 4 **
Sorry  I should have noted I am on this issue. The test fails reliably for me so was trying to fix. Will take care of the other issues too. Will put up a patch later sir.

** Comment 5 **
Turns out that yeah, the UT failure is unrelated but this is a new test and seems to have failed soon after addition: [link]  I'll ask over on the issue that added the test.
New patch fixes findbugs and javadoc.

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  13m 57s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 23 new or modified test files.  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 59s  |  master passed  |
| +1 |  compile  |  0m 48s  |  master passed  |
| +1 |  checkstyle  |  0m 19s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 3s  |  master passed  |
| +1 |  javadoc  |  0m 37s  |  master passed  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 4s  |  the patch passed  |
| +1 |  compile  |  1m 2s  |  the patch passed  |
| +1 |  javac  |  1m 2s  |  the patch passed  |
| +1 |  checkstyle  |  0m 21s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 45s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 17s  |  the patch passed  |
| +1 |  javadoc  |  0m 35s  |  the patch passed  |
| +1 |  unit  |  2m 26s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  97m 42s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 26s  |  The patch does not generate ASF License warnings.  |
|  |   |  154m 13s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestSizeFailures |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 0be6123c545d 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 35f0718 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 8 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 23 new or modified test files.  |
| 0 |  mvndep  |  0m 26s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 33s  |  master passed  |
| +1 |  compile  |  0m 50s  |  master passed  |
| +1 |  checkstyle  |  0m 21s  |  master passed  |
| +1 |  mvneclipse  |  0m 23s  |  master passed  |
| +1 |  findbugs  |  2m 17s  |  master passed  |
| +1 |  javadoc  |  0m 36s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 52s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  checkstyle  |  0m 19s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 21s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 42s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 49s  |  the patch passed  |
| +1 |  javadoc  |  0m 40s  |  the patch passed  |
| +1 |  unit  |  2m 33s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  91m 57s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 24s  |  The patch does not generate ASF License warnings.  |
|  |   |  138m 48s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux bd68bf5dce21 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 35f0718 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 9 **
[Comment excluded]

** Comment 10 **
Last test run failed parse of  TEST-org.apache.hadoop.hbase.client.TestAsyncGetMultiThread.xml.

** Comment 11 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 12s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 23 new or modified test files.  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 15s  |  master passed  |
| +1 |  compile  |  0m 56s  |  master passed  |
| +1 |  checkstyle  |  0m 21s  |  master passed  |
| +1 |  mvneclipse  |  0m 25s  |  master passed  |
| +1 |  findbugs  |  2m 25s  |  master passed  |
| +1 |  javadoc  |  0m 39s  |  master passed  |
| 0 |  mvndep  |  0m 13s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 1s  |  the patch passed  |
| +1 |  compile  |  0m 55s  |  the patch passed  |
| +1 |  javac  |  0m 55s  |  the patch passed  |
| +1 |  checkstyle  |  0m 20s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 11s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 41s  |  the patch passed  |
| +1 |  javadoc  |  0m 44s  |  the patch passed  |
| +1 |  unit  |  2m 35s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  109m 25s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 26s  |  The patch does not generate ASF License warnings.  |
|  |   |  156m 3s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux f17a5bc2703d 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 6acbee1 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 12 **
Failure is HBASE-17323, a common fail on master: 

** Comment 13 **
Test fails 50% of the time. Maybe I'll be lucky.

** Comment 14 **
[Comment excluded]

** Comment 15 **
, since the only UT failure is unrelated to this patch, let us just commit it.  
Also, branch-1 branch code is a little different from master branch; do you want me to create a branch-1 patch?

** Comment 16 **
Sorry. Detour tryinng to fix the above failing UT. It fails half-the-time.  Looking now at this patch to see if bulk insert needs nonce too.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 23 new or modified test files.  |
| 0 |  mvndep  |  0m 23s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 0s  |  master passed  |
| +1 |  compile  |  0m 46s  |  master passed  |
| +1 |  checkstyle  |  0m 19s  |  master passed  |
| +1 |  mvneclipse  |  0m 22s  |  master passed  |
| +1 |  findbugs  |  2m 1s  |  master passed  |
| +1 |  javadoc  |  0m 36s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 53s  |  the patch passed  |
| +1 |  compile  |  0m 46s  |  the patch passed  |
| +1 |  javac  |  0m 46s  |  the patch passed  |
| +1 |  checkstyle  |  0m 18s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 38s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 19s  |  the patch passed  |
| +1 |  javadoc  |  0m 35s  |  the patch passed  |
| +1 |  unit  |  2m 27s  |  hbase-procedure in the patch passed.  |
| +1 |  unit  |  90m 11s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 48s  |  The patch does not generate ASF License warnings.  |
|  |   |  132m 42s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux ef8827ec5513 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 49b0bab |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 19 new or modified test files.  |
| 0 |  mvndep  |  0m 21s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 46s  |  branch-1 passed  |
| +1 |  compile  |  0m 40s  |  branch-1 passed with JDK v1.8.0_111  |
| +1 |  compile  |  0m 46s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 23s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 28s  |  branch-1 passed  |
| -1 |  findbugs  |  2m 5s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 38s  |  branch-1 passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 46s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 13s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 57s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  compile  |  0m 51s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 51s  |  the patch passed  |
| +1 |  checkstyle  |  0m 23s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 29s  |  the patch passed  |
| -1 |  whitespace  |  0m 0s  |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix.  |
| +1 |  hadoopcheck  |  15m 18s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 26s  |  the patch passed  |
| +1 |  findbugs  |  2m 59s  |  the patch passed  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 46s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  3m 49s  |  hbase-procedure in the patch passed.  |
| +1 |  unit  |  86m 39s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 30s  |  The patch does not generate ASF License warnings.  |
|  |   |  124m 1s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux b56baf250597 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 29e390c |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| whitespace | [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 49 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #2217 (See )
HBASE-17149 Procedure V2 - Fix nonce submission to avoid unnecessary (stack: rev a3e0e0df0d0957fc02723aa349f96ba45bda3c7f)


** Comment 50 **
FAILURE: Integrated in Jenkins build HBase-1.4 #579 (See )
HBASE-17149 Procedure V2 - Fix nonce submission to avoid unnecessary (syuanjiangdev: rev ce33cf2d3d3044bc4a24180325830fc767745d6f)
* (add) [file java]


** Comment 51 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 16s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 14 new or modified test files.  |
| 0 |  mvndep  |  0m 19s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 36s  |  branch-1.2 passed  |
| +1 |  compile  |  0m 41s  |  branch-1.2 passed with JDK v1.8.0_111  |
| +1 |  compile  |  0m 47s  |  branch-1.2 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 24s  |  branch-1.2 passed  |
| +1 |  mvneclipse  |  0m 27s  |  branch-1.2 passed  |
| +1 |  findbugs  |  2m 19s  |  branch-1.2 passed  |
| +1 |  javadoc  |  0m 40s  |  branch-1.2 passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 42s  |  branch-1.2 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 9s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 56s  |  the patch passed  |
| +1 |  compile  |  0m 38s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javac  |  0m 38s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  checkstyle  |  0m 21s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 25s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  12m 50s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 24s  |  the patch passed  |
| +1 |  findbugs  |  2m 46s  |  the patch passed  |
| +1 |  javadoc  |  0m 30s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 42s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  3m 21s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  77m 13s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 29s  |  The patch does not generate ASF License warnings.  |
|  |   |  110m 25s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.compactions.TestCompactionWithThroughputController |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:d6626eb |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux c36e05b577eb 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.2 / 64f4171 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 52 **
[Comment excluded]

** Comment 53 **
Failed test has nothing to do with the change.

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 13 new or modified test files.  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 24s  |  branch-1.1 passed  |
| +1 |  compile  |  0m 39s  |  branch-1.1 passed with JDK v1.8.0_111  |
| +1 |  compile  |  0m 43s  |  branch-1.1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 19s  |  branch-1.1 passed  |
| +1 |  mvneclipse  |  0m 27s  |  branch-1.1 passed  |
| -1 |  findbugs  |  1m 44s  |  hbase-server in branch-1.1 has 81 extant Findbugs warnings.  |
| -1 |  javadoc  |  0m 9s  |  hbase-procedure in branch-1.1 failed with JDK v1.8.0_111.  |
| -1 |  javadoc  |  0m 23s  |  hbase-server in branch-1.1 failed with JDK v1.8.0_111.  |
| +1 |  javadoc  |  0m 41s  |  branch-1.1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 50s  |  the patch passed  |
| +1 |  compile  |  0m 38s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javac  |  0m 38s  |  the patch passed  |
| +1 |  compile  |  0m 43s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 43s  |  the patch passed  |
| +1 |  checkstyle  |  0m 18s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 26s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  11m 47s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 23s  |  the patch passed  |
| +1 |  findbugs  |  2m 36s  |  the patch passed  |
| -1 |  javadoc  |  0m 8s  |  hbase-procedure in the patch failed with JDK v1.8.0_111.  |
| -1 |  javadoc  |  0m 23s  |  hbase-server in the patch failed with JDK v1.8.0_111.  |
| +1 |  javadoc  |  0m 41s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  2m 57s  |  hbase-procedure in the patch passed.  |
| -1 |  unit  |  85m 34s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 42s  |  The patch does not generate ASF License warnings.  |
|  |   |  116m 29s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestMetaWithReplicas |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8012383 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17149 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 7cd69e26f566 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1.1 / a1d900d |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-procedure hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 58 **
the javadoc warnings are pre-exists.
the test failure is due to flakyness of one newly added test in a different jira.  
I am pushing the change to branch-1.1

** Comment 59 **
[Comment excluded]

** Comment 60 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1831 (See )
HBASE-17149 Procedure V2 - Fix nonce submission to avoid unnecessary (syuanjiangdev: rev e32f8ac425fcde5d98c718062ad00beb26be1dfc)
* (add) [file java]


** Comment 61 **
[Comment excluded]
"
HBASE-17006,https://issues.apache.org/jira/browse/HBASE-17006,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Add names to threads for better debugability of thread dumps,YES,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Can you please push to all branches. Seems pretty useful for debugging. 

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  1m 31s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 4 new or modified test files.  |
| 0 |  mvndep  |  1m 2s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  6m 33s  |  master passed  |
| +1 |  compile  |  1m 13s  |  master passed  |
| +1 |  checkstyle  |  1m 56s  |  master passed  |
| +1 |  mvneclipse  |  0m 36s  |  master passed  |
| +1 |  findbugs  |  2m 10s  |  master passed  |
| +1 |  javadoc  |  0m 54s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 40s  |  the patch passed  |
| +1 |  compile  |  1m 13s  |  the patch passed  |
| +1 |  javac  |  1m 13s  |  the patch passed  |
| +1 |  checkstyle  |  1m 47s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 40s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  43m 39s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 24s  |  the patch passed  |
| +1 |  javadoc  |  0m 56s  |  the patch passed  |
| -1 |  unit  |  130m 36s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  1m 7s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 56s  |  The patch does not generate ASF License warnings.  |
|  |   |  201m 57s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestSerialReplication |
| Timed out junit tests | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes |
|   | org.apache.hadoop.hbase.security.visibility.TestWithDisabledAuthorization |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17006 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 3f347622e2c4 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b1d1dc8 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 6 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK8 #55 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 326ecc32fd4b9f37e8a77a9b592d301f38eece13)


** Comment 7 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK8 #67 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 3dc95c0e679ad6b54ecfbce1d35eec2a99868e10)


** Comment 8 **
FAILURE: Integrated in Jenkins build HBase-1.4 #514 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 51ba7cfde326edab08606ceaa155477e5eaf6bfa)


** Comment 9 **
SUCCESS: Integrated in Jenkins build HBase-1.2-JDK7 #61 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 326ecc32fd4b9f37e8a77a9b592d301f38eece13)


** Comment 10 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK8 #1894 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 90c29888c4b0d30c981026463c6fa831a3dc927d)


** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-1.1-JDK7 #1810 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 90c29888c4b0d30c981026463c6fa831a3dc927d)


** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1912 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev bb0fc6b602a62045e9b4eb9b617a322b9cf7380f)


** Comment 13 **
SUCCESS: Integrated in Jenkins build HBase-1.3-JDK7 #59 (See )
HBASE-17006 Give name to existing threads. Having thread names in logs (appy: rev 3dc95c0e679ad6b54ecfbce1d35eec2a99868e10)


** Comment 14 **
[Comment excluded]
"
HBASE-14865,https://issues.apache.org/jira/browse/HBASE-14865,https://github.com/apache/hbase/blob/rel/1.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java,Support passing multiple QOPs to SaslClient/Server via hbase.rpc.protection,NO,"Currently, we can set the value of hbase.rpc.protection to one of authentication/integrity/privacy. It is the used to set {{javax.security.sasl.qop}} in SaslUtil.java.
The problem is, if a cluster wants to switch from one qop to another, it'll have to take a downtime. Rolling upgrade will create a situation where some nodes have old value and some have new, which'll prevent any communication between them. There will be similar issue when clients will try to connect.

{{javax.security.sasl.qop}} can take in a list of QOP in preferences order. So a transition from qop1 to qop2 can be easily done like this
""qop1"" --> ""qop2,qop1"" --> rolling restart --> ""qop2"" --> rolling restart

Need to change hbase.rpc.protection to accept a list too.","** Comment 1 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 55087ce8887b5be38b0fda0dda3fbf2f92c13778.
  ATTACHMENT ID: 12773783
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 18689 checkstyle errors (more than the master's current 18686 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.security.TestAsyncSecureIPC
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 6b11adbfa4aa565eff1bb141170c8e183aed3e4b.
  ATTACHMENT ID: 12773950
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 18690 checkstyle errors (more than the master's current 18686 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 4 **
fixing checkstyle errors.

** Comment 5 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 4cc341b9c23183fe12225fb03d30ac975a87d07c.
  ATTACHMENT ID: 12774135
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 18687 checkstyle errors (more than the master's current 18686 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 6 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 90bdb0dc7412f3ae8fc1e14ce033bf115c6332f3.
  ATTACHMENT ID: 12774403
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
                -1 checkstyle.  The applied patch generated 18686 checkstyle errors (more than the master's current 18685 errors).
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
                Console output: [link]
This message is automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
v6: just removes the pom dependency i had to add to be able to debug in Intellij. It's strange that mvn test -Dtest=TestAsyncSecureIPC was working (terminal) , but Intellij was reporting missing dependency when I tried to debug the test case.

** Comment 9 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 999ae691559a49321138eb7718eb204435639db9.
  ATTACHMENT ID: 12774889
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 10 **
Javadoc warnings are unrelated and are being fixed in HBASE-14896.

** Comment 11 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit 756e6de2a0948c39a4fb3ab880dd9d182d645dbc.
  ATTACHMENT ID: 12774921
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Javadoc warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1.2 branch at commit 92e178df28120fcae2aad47f3e4b1cc6e06a8404.
  ATTACHMENT ID: 12775114
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
+1 overall.  Here are the results of testing the latest attachment 
  [link]
  against master branch at commit aa41232a877d7a8485bc361fd62150d7c094e9a4.
  ATTACHMENT ID: 12775249
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 17 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against branch-1 branch at commit da0cc598feab995eed12527d90805dd627674035.
  ATTACHMENT ID: 12775424
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 27 new or modified tests.
    +1 hadoop versions. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 protoc.  The applied patch does not increase the total number of protoc compiler warnings.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 checkstyle. The applied patch does not generate new checkstyle errors.
    +1 findbugs.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn post-site goal succeeds with this patch.
    +1 core tests.  The patch passed unit tests in .
Test results: [link]
Release Findbugs (version 2.0.3) 	warnings: [link]
Checkstyle Errors: [link]
  Console output: [link]
This message is automatically generated.

** Comment 18 **
+1
looks fine to commit to me

** Comment 19 **
Running tests locally using Java 1.7.0_60, I got several failures which were caused by the following:
{code}
testAsyncRpc(org.apache.hadoop.hbase.security.TestSecureRPC)  Time elapsed: 0.051 sec  <<< ERROR!
java.io.IOException: Login failure for hbase/localhost@EXAMPLE.COM from keytab /Users/tyu/trunk/hbase-server/target/test-data/a6b76e6d-77c3-43a0-81b3-39b514f7eb76/keytab: javax.security.auth.login.LoginException: Null realm name (601)
	at sun.security.krb5.Realm.parseRealm([file java]:174)
	at sun.security.krb5.Realm.<init>([file java]:59)
	at sun.security.krb5.PrincipalName.<init>([file java]:375)
	at sun.security.krb5.KrbAsReq.<init>([file java]:118)
	at sun.security.krb5.KrbAsReqBuilder.build([file java]:268)
	at sun.security.krb5.KrbAsReqBuilder.send([file java]:318)
	at sun.security.krb5.KrbAsReqBuilder.action([file java]:364)
	at com.sun.security.auth.module.Krb5LoginModule.attemptAuthentication([file java]:735)
	at com.sun.security.auth.module.Krb5LoginModule.login([file java]:584)
{code}
Appy:
Can you see if the above is reproducible on your computer ?

** Comment 20 **
[Comment excluded]

** Comment 21 **
for me the patch on master passes, but the one on branch-1 fail with both jdk 1.7.0_80-b15 and 1.8.0_66-b17
  TestSecureIPC.testSaslNoCommonQop 
Expected: (an instance of javax.security.sasl.SaslException and exception with message a string containing ""No common protection layer between client and server"")
     but: an instance of javax.security.sasl.SaslException <GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)> is a org.ietf.jgss.GSSException
Stacktrace was: GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)
	at sun.security.jgss.krb5.Krb5InitCredential.getInstance([file java]:147)
	at sun.security.jgss.krb5.Krb5MechFactory.getCredentialElement([file java]:121)
	at sun.security.jgss.krb5.Krb5MechFactory.getMechanismContext([file java]:187)
	at sun.security.jgss.GSSManagerImpl.getMechanismContext([file java]:223)
	at sun.security.jgss.GSSContextImpl.initSecContext([file java]:212)
	at sun.security.jgss.GSSContextImpl.initSecContext([file java]:179)
	at com.sun.security.sasl.gsskerb.GssKrb5Client.evaluateChallenge([file java]:193)
	at org.apache.hadoop.hbase.security.HBaseSaslRpcClient.saslConnect([file java]:181)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection.setupSaslConnection([file java]:617)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection.access$700([file java]:162)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection$2.run([file java]:743)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection$2.run([file java]:740)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs([file java]:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs([file java]:1614)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection.setupIOstreams([file java]:740)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection.writeRequest([file java]:902)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl$Connection.tracedWriteRequest([file java]:871)
	at org.apache.hadoop.hbase.ipc.RpcClientImpl.call([file java]:1232)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod([file java]:221)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod([file java]:326)
	at org.apache.hadoop.hbase.ipc.protobuf.generated.TestDelayedRpcProtos$TestDelayedService$BlockingStub.test([file java]:1115)
	at org.apache.hadoop.hbase.ipc.TestDelayedRpc$TestThread.run([file java]:277)


** Comment 22 **
So debugging the errors seen by matteo, here are the details:
The tests pass java version 1.7.0_75 but fails for java 1.7.0_80 and Java 8.
It's because  were removed somewhere in between those versions. As a result of which UGI in hadoop-common makes wrong conclusion  that there is no keytab and fails to authenticate. The bug in UGI was fixed by  but only exists in 2.7.0+. So using java 1.7.0_80+ with hadoop-common <= 2.6.x, you'll definitely see this error.
QA didn't fail because master uses hadoop-common 2.7.0+.
The issue was always there but didn't surface earlier since all tests were only testing code paths for correct execution, but none for failures, until this patch added some.
If there is a hadoop release of 2.5.x or 2.6.x, we can ask them to backport the fix. There's really nothing else we can do here (except a release note to notify users).
, can you ptal at my assessment.


** Comment 23 **
[Comment excluded]

** Comment 24 **
With Java 1.7.0_60 , TestSecureIPC fails running against hadoop 2.7.0 :
{code}
testRpcCallWithEnabledKerberosSaslAuth(org.apache.hadoop.hbase.security.TestSecureIPC)  Time elapsed: 0.049 sec  <<< ERROR!
java.io.IOException: Login failure for hbase/localhost@EXAMPLE.COM from keytab /Users/tyu/trunk/hbase-server/target/test-data/76d0c754-8dca-4c88-9933-b5a77646a750/keytab: javax.security.auth.login.LoginException: Null realm name (601)
	at org.apache.hadoop.security.UserGroupInformation.loginUserFromKeytab([file java]:962)
	at org.apache.hadoop.hbase.security.AbstractTestSecureIPC.loginKerberosPrincipal([file java]:180)
	at org.apache.hadoop.hbase.security.AbstractTestSecureIPC.setUpTest([file java]:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:43)
	at java.lang.reflect.Method.invoke([file java]:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall([file java]:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run([file java]:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively([file java]:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate([file java]:24)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate([file java]:239)
{code}

** Comment 25 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 7 new or modified test files.  |
| +1 |  mvninstall  |  2m 20s  |  master passed  |
| +1 |  compile  |  1m 0s  |  master passed with JDK v1.8.0  |
| +1 |  compile  |  0m 49s  |  master passed with JDK v1.7.0_79  |
| +1 |  checkstyle  |  6m 16s  |  master passed  |
| +1 |  mvneclipse  |  0m 24s  |  master passed  |
| -1 |  findbugs  |  0m 55s  |  hbase-client in master has 13 extant Findbugs warnings.  |
| -1 |  findbugs  |  1m 51s  |  hbase-server in master has 83 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 51s  |  master passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 51s  |  master passed with JDK v1.7.0_79  |
| +1 |  mvninstall  |  1m 3s  |  the patch passed  |
| +1 |  compile  |  1m 4s  |  the patch passed with JDK v1.8.0  |
| +1 |  javac  |  1m 4s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  6m 17s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  Patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  20m 57s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |  3m 7s  |  the patch passed  |
| +1 |  javadoc  |  0m 50s  |  the patch passed with JDK v1.8.0  |
| +1 |  javadoc  |  0m 48s  |  the patch passed with JDK v1.7.0_79  |
| +1 |  unit  |  0m 53s  |  hbase-client in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  82m 22s  |  hbase-server in the patch passed with JDK v1.8.0.  |
| +1 |  unit  |  0m 56s  |  hbase-client in the patch passed with JDK v1.7.0_79.  |
| +1 |  unit  |  80m 41s  |  hbase-server in the patch passed with JDK v1.7.0_79.  |
| +1 |  asflicense  |  0m 26s  |  Patch does not generate ASF License warnings.  |
|  |   |  216m 32s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-14865 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / c8b9754 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| findbugs | [link] |
| JDK v1.7.0_79  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Max memory used | 191MB |
| Powered by | Apache Yetus 0.1.0   [link] |
| Console output | [link] |
This message was automatically generated.


** Comment 26 **
Anyone knows what to do of ""findbugs""?
There are warnings from files which this patch doesn't even touch.

** Comment 27 **
 Seems like unlike failures seen by Matteo, your's isn't dependent on hadoop.
Just to make it clear for future reference, there are two separate failures here:
1. 'No valid credentials' error. This has been debugged and is explained .
Expected: (an instance of javax.security.sasl.SaslException and exception with message a string containing ""No common protection layer between client and server"")
     but: an instance of javax.security.sasl.SaslException <GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)> is a org.ietf.jgss.GSSException
Stacktrace was: GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)
2.  'Null realm name': Will work on it next.
testRpcCallWithEnabledKerberosSaslAuth(org.apache.hadoop.hbase.security.TestSecureIPC)  Time elapsed: 0.049 sec  <<< ERROR!
java.io.IOException: Login failure for hbase/localhost@EXAMPLE.COM from keytab /Users/tyu/trunk/hbase-server/target/test-data/76d0c754-8dca-4c88-9933-b5a77646a750/keytab: javax.security.auth.login.LoginException: Null realm name (601)


** Comment 28 **
 I can't reproduce your error. Here are my run details. Anything am missing?
root @ ~  → java -version
java version ""1.7.0_60""
Java(TM) SE Runtime Environment (build 1.7.0_60-b19)
Java HotSpot(TM) 64-Bit Server VM (build 24.60-b09, mixed mode)
root @ ~  → cat /proc/version
Linux version 3.13.0-24-generic (buildd@panlong) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014
# With master branch
root @ ~/git/hbase  (master) → git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)
root @ ~/git/hbase  (master) → git log | head -n 10
commit d2860e642743f302cc5321fdd1bd05f5d5de930f
Author: root <root@sasl.vpc.cloudera.com>
Date:   Thu Jan 14 14:10:12 2016 -0800
    .
commit ae7cc0c8487dd10f72c64c898ddfec6f2ceca643
Author: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date:   Thu Jan 14 13:45:17 2016 -0800
root @ ~/git/hbase  (master) → mvn clean test -Dtest=TestSecureIPC
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.security.TestSecureIPC
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 27.009 sec - in org.apache.hadoop.hbase.security.TestSecureIPC
Results :
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0
# With branch-1
root @ ~/git/hbase  (branch-1) → git status
On branch branch-1
Your branch is ahead of 'origin/branch-1' by 1 commit.
  (use ""git push"" to publish your local commits)
root @ ~/git/hbase  (branch-1) → git log | head -n 20
commit cd86d1b4f9dac4227e23e6ef43dd04b644112379
Author: root <root@sasl.vpc.cloudera.com>
Date:   Thu Jan 14 14:47:38 2016 -0800
    HBASE-14865 Support passing multiple QOPs to
     SaslClient/Server via hbase.rpc.protection - Added tests to check for rpc
     success/failure when server and client configuration matches/not-matches. -
     Added TestSaslUtil - Remove static (global) SaslUtil.SASL_PROPS. Was
     impossible to unittest with different settings for server and client as they
     ended up sharing it. - Moved TestHBaseSaslRpcClient from hbase-server to
     hbase-client. - Removed not helpful javadocs. Most were just rewording of
     function/parameter name. (Apekshit)
commit f8427aba2bed9aef3fe9473dc9b2ff2bd60229e3
Author: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date:   Thu Jan 14 13:45:17 2016 -0800
    HBASE-15105 Procedure V2 - Procedure Queue with Namespaces
root @ ~/git/hbase  (branch-1) → mvn clean test -Dtest=TestSecureIPC
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hbase.security.TestSecureIPC
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.955 sec - in org.apache.hadoop.hbase.security.TestSecureIPC
Results :
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0


** Comment 29 **
I ran the test locally again and it passed:
{code}
Running org.apache.hadoop.hbase.security.TestSecureIPC
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.363 sec - in org.apache.hadoop.hbase.security.TestSecureIPC
{code}
+1 from me.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
FAILURE: Integrated in HBase-Trunk_matrix #633 (See )
HBASE-14865 Support passing multiple QOPs to SaslClient/Server via (tedyu: rev 4ac8d4ce610a107112acb6aa070157691c022e90)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
FAILURE: Integrated in HBase-1.3 #501 (See )
HBASE-14865 Support passing multiple QOPs to SaslClient/Server via (tedyu: rev e76a2e4e6d91deee250d180b75b890f743da4bf0)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 39 **
[Comment excluded]

** Comment 40 **
Is this responsible for the fails on branch-1 that I am seeing here in SecureIPC tests?
[link]
I can revert and see if it fixes the problem?
Reopened this issue meantime. Close if I have it wrong.

** Comment 41 **
yeah the failure is due to this. but the fix is in HADOOP-10786/HADOOP-11287

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
FAILURE: Integrated in HBase-1.3 #506 (See )
Revert ""HBASE-14865 Support passing multiple QOPs to SaslClient/Server (stack: rev d965d14a63c1d713b8b85be23f77599431034c5e)
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]
* [file java]


** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]
"
HBASE-18937,https://issues.apache.org/jira/browse/HBASE-18937,https://github.com/apache/hbase/blob/rel/1.3.2/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java,Backport HBASE-16815 to branch-1.3,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 22s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |   2m  1s |  branch-1.3 passed  |
| +1 |  compile  |   0m 37s |  branch-1.3 passed with JDK v1.8.0_144  |
| +1 |  compile  |   0m 34s |  branch-1.3 passed with JDK v1.7.0_151  |
| +1 |  checkstyle  |   0m 57s |  branch-1.3 passed  |
| +1 |  mvneclipse  |   0m 17s |  branch-1.3 passed  |
| +1 |  shadedjars  |   3m 42s |  branch has no errors when building our shaded downstream artifacts.  |
| +1 |  findbugs  |   2m  7s |  branch-1.3 passed  |
| +1 |  javadoc  |   0m 27s |  branch-1.3 passed with JDK v1.8.0_144  |
| +1 |  javadoc  |   0m 32s |  branch-1.3 passed with JDK v1.7.0_151  |
| +1 |  mvninstall  |   0m 45s |  the patch passed  |
| +1 |  compile  |   0m 32s |  the patch passed with JDK v1.8.0_144  |
| +1 |  javac  |   0m 32s |  the patch passed  |
| +1 |  compile  |   0m 33s |  the patch passed with JDK v1.7.0_151  |
| +1 |  javac  |   0m 33s |  the patch passed  |
| +1 |  checkstyle  |   0m 54s |  the patch passed  |
| +1 |  mvneclipse  |   0m 17s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  shadedjars  |   2m 26s |  patch has no errors when building our shaded downstream artifacts.  |
| -1 |  hadoopcheck  |  17m 11s |  The patch causes 150 errors with Hadoop v3.0.0-alpha4.  |
| +1 |  findbugs  |   2m 20s |  the patch passed  |
| +1 |  javadoc  |   0m 30s |  the patch passed with JDK v1.8.0_144  |
| +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_151  |
| -1 |  unit  | 338m 34s |  hbase-server in the patch failed.  |
| +1 |  asflicense  |   2m 35s |  The patch does not generate ASF License warnings.  |
|  |   | 375m 53s |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster |
|   | hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
|   | hadoop.hbase.client.TestAdmin2 |
| Timed out junit tests | org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure |
|   | org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat |
|   | org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy |
|   | org.apache.hadoop.hbase.master.TestMasterFailover |
|   | org.apache.hadoop.hbase.snapshot.TestSnapshotClientRetries |
|   | org.apache.hadoop.hbase.TestHBaseTestingUtility |
|   | org.apache.hadoop.hbase.mapred.TestTableInputFormat |
|   | org.apache.hadoop.hbase.TestMultiVersions |
|   | org.apache.hadoop.hbase.mapred.TestTableMapReduceUtil |
|   | org.apache.hadoop.hbase.master.TestGetInfoPort |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicas |
|   | org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerAbort |
|   | org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService |
|   | org.apache.hadoop.hbase.client.TestMetaWithReplicas |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort |
|   | org.apache.hadoop.hbase.master.TestTableLockManager |
|   | org.apache.hadoop.hbase.util.TestHBaseFsck |
|   | org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS |
|   | org.apache.hadoop.hbase.TestClusterBootOrder |
|   | org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadEncoded |
|   | org.apache.hadoop.hbase.TestJMXConnectorServer |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadSequential |
|   | org.apache.hadoop.hbase.master.TestMasterShutdown |
|   | org.apache.hadoop.hbase.regionserver.wal.TestLogRolling |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestCompactionWithThroughputController |
|   | org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush |
|   | org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot |
|   | org.apache.hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |
|   | org.apache.hadoop.hbase.master.TestMaster |
|   | org.apache.hadoop.hbase.TestAcidGuarantees |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.client.TestReplicaWithCluster |
|   | org.apache.hadoop.hbase.TestInfoServers |
|   | org.apache.hadoop.hbase.replication.TestReplicationSyncUpToolWithBulkLoadedData |
|   | org.apache.hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters |
|   | org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase |
|   | org.apache.hadoop.hbase.master.TestRestartCluster |
|   | org.apache.hadoop.hbase.security.visibility.TestWithDisabledAuthorization |
|   | org.apache.hadoop.hbase.wal.TestWALOpenAfterDNRollingStart |
|   | org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel |
|   | org.apache.hadoop.hbase.TestIOFencing |
|   | org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | org.apache.hadoop.hbase.regionserver.TestRegionFavoredNodes |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.master.procedure.TestMasterProcedureEvents |
|   | org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed |
|   | org.apache.hadoop.hbase.TestHColumnDescriptorDefaultVersions |
|   | org.apache.hadoop.hbase.regionserver.TestRegionServerHostname |
|   | org.apache.hadoop.hbase.client.TestTableSnapshotScanner |
|   | org.apache.hadoop.hbase.fs.TestBlockReorder |
|   | org.apache.hadoop.hbase.TestMetaTableAccessor |
|   | org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort |
|   | org.apache.hadoop.hbase.master.handler.TestEnableTableHandler |
|   | org.apache.hadoop.hbase.master.handler.TestCreateTableHandler |
|   | org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | org.apache.hadoop.hbase.replication.TestMultiSlaveReplication |
|   | org.apache.hadoop.hbase.wal.TestWALFactory |
|   | org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | org.apache.hadoop.hbase.replication.TestMasterReplication |
|   | org.apache.hadoop.hbase.TestPartialResultsFromClientSide |
|   | org.apache.hadoop.hbase.regionserver.TestAtomicOperation |
|   | org.apache.hadoop.hbase.mapred.TestTableSnapshotInputFormat |
|   | org.apache.hadoop.hbase.client.TestMetaScanner |
|   | org.apache.hadoop.hbase.client.TestShortCircuitConnection |
|   | org.apache.hadoop.hbase.tool.TestCanaryTool |
|   | org.apache.hadoop.hbase.util.TestFSUtils |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b3a2a00 |
| JIRA Issue | HBASE-18937 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  shadedjars  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux f69dc5d9e3fd 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | branch-1.3 / f90e2f5 |
| Default Java | 1.7.0_151 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_144 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_151 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 3 **
Test failures doesn't seems to be related.

** Comment 4 **
[Comment excluded]

** Comment 5 **
{code}14:43:15 | Vote |       Subsystem |  Runtime   | Comment14:43:15 ============================================================================14:43:15 |      |                 |            | Prechecks 14:43:15 |  +1  |      hbaseanti  |   0m  0s   | Patch does not have any anti-patterns. 14:43:15 |  +1  |        @author  |   0m  0s   | The patch does not contain any @author 14:43:15 |      |                 |            | tags.14:43:15 |  -1  |     test4tests  |   0m  0s   | The patch doesn't appear to include any 14:43:15 |      |                 |            | new or modified tests. Please justify14:43:15 |      |                 |            | why no new tests are needed for this14:43:15 |      |                 |            | patch. Also please list what manual14:43:15 |      |                 |            | steps were performed to verify this14:43:15 |      |                 |            | patch.14:43:15 |      |                 |            | branch-1.3 Compile Tests 14:43:15 |  +1  |     mvninstall  |   1m 52s   | branch-1.3 passed 14:43:15 |  +1  |        compile  |   0m 33s   | branch-1.3 passed 14:43:15 |  +1  |     checkstyle  |   1m 18s   | branch-1.3 passed 14:43:15 |  +1  |       findbugs  |   1m 37s   | branch-1.3 passed 14:43:15 |  +1  |        javadoc  |   0m 54s   | branch-1.3 passed 14:43:15 |      |                 |            | Patch Compile Tests 14:43:15 |  +1  |     mvninstall  |   0m 46s   | the patch passed 14:43:15 |  +1  |        compile  |   0m 33s   | the patch passed 14:43:15 |  +1  |          javac  |   0m 33s   | the patch passed 14:43:15 |  +1  |     checkstyle  |   0m 59s   | the patch passed 14:43:15 |  +1  |     whitespace  |   0m  0s   | The patch has no whitespace issues. 14:43:15 |  +1  |    hadoopcheck  |  17m  9s   | The patch does not cause any errors 14:43:15 |      |                 |            | with Hadoop 2.4.0 2.4.1 2.5.0 2.5.114:43:15 |      |                 |            | 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.14:43:15 |  +1  |       findbugs  |   1m 45s   | the patch passed 14:43:15 |  +1  |        javadoc  |   0m 27s   | the patch passed 14:43:15 |      |                 |            | Other Tests 14:43:16 |  -1  |           unit  | 104m 35s   | hbase-server in the patch failed. 14:43:16 |  +1  |     asflicense  |   0m 38s   | The patch does not generate ASF License 14:43:16 |      |                 |            | warnings.14:43:16 |      |                 | 133m 36s   | {code}The failed ut is {{TestPerColumnFamilyFlush}}. Retrying it is succeed.+1 and will commit it later.

** Comment 6 **
[Comment excluded]

** Comment 7 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #373 (See )
HBASE-18937 Backport HBASE-16815(Low scan ratio in RPC queue tuning (chia7712: rev 1ae312f270c71f7ccbc2c4c8560035e3418ccc92)


** Comment 8 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #353 (See )
HBASE-18937 Backport HBASE-16815(Low scan ratio in RPC queue tuning (chia7712: rev 1ae312f270c71f7ccbc2c4c8560035e3418ccc92)


** Comment 9 **
[Comment excluded]
"
HBASE-19468,https://issues.apache.org/jira/browse/HBASE-19468,https://github.com/apache/hbase/blob/rel/1.3.2/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java,FNFE during scans and flushes,NO,"We see FNFE exceptions on our 1.3 clusters when scans and flushes happen at the same time. This causes regionserver to throw a UnknownScannerException and client retries.

This happens during the following sequence:

1. Scanner open, client fetched some rows from regionserver and working on it
2. Flush happens and storeScanner is updated with flushed files (StoreScanner.updateReaders())
3. Compaction happens on the region while scanner is still open
4. compaction discharger runs and cleans up the newly flushed file as we don't have new scanners on it yet.
5. Client issues scan.next and during StoreScanner.resetScannerStack(), we get a FNFE. RegionServer throws a UnknownScannerThe client retries in 1.3. With branch-1.4, the scan fails with a DoNotRetryIOException.

[~ram_krish], My proposal is to increment the reader count during updateReaders() and decrement it during resetScannerStack(), so discharger doesn't clean it up. Scan lease expiries also have to be taken care of. Am I missing anything? Is there a better approach?","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
{code}java.io.FileNotFoundException: File /home/rsvasude/trunk/hbase/hbase-server/target/test-data/63f96f01-6a0d-4527-9ecb-351fd3649b07/TestCompactedHFilesDischarger/data/default/TestCompactedHFilesDischarger/78c894edd2e8469f85e0394ef105492e/cf_1/45cb61d61a944ffb92c2b5d7f23f4b1a does not exist	at org.apache.hadoop.fs.RawLocalFileSystem.deprecatedGetFileStatus([file java]:611)	at org.apache.hadoop.fs.RawLocalFileSystem.getFileLinkStatusInternal([file java]:824)	at org.apache.hadoop.fs.RawLocalFileSystem.getFileStatus([file java]:601)	at org.apache.hadoop.fs.FilterFileSystem.getFileStatus([file java]:428)	at org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker.<init>([file java]:142)	at org.apache.hadoop.fs.ChecksumFileSystem.open([file java]:346)	at org.apache.hadoop.fs.FilterFileSystem.open([file java]:162)	at org.apache.hadoop.fs.FileSystem.open([file java]:769)	at org.apache.hadoop.hbase.io.FSDataInputStreamWrapper.<init>([file java]:124)	at org.apache.hadoop.hbase.io.FSDataInputStreamWrapper.<init>([file java]:101)	at org.apache.hadoop.hbase.regionserver.StoreFileInfo.open([file java]:254)	at org.apache.hadoop.hbase.regionserver.HStoreFile.open([file java]:353)	at org.apache.hadoop.hbase.regionserver.HStoreFile.initReader([file java]:461)	at org.apache.hadoop.hbase.regionserver.StoreFileScanner.getScannersForStoreFiles([file java]:137)	at org.apache.hadoop.hbase.regionserver.HStore.getScanners([file java]:1258)	at org.apache.hadoop.hbase.regionserver.HStore.getScanners([file java]:1225)	at org.apache.hadoop.hbase.regionserver.StoreScanner.reopenAfterFlush([file java]:869)	at org.apache.hadoop.hbase.regionserver.StoreScanner.next([file java]:515){code}I got this now after applying HBASE-19485 change. So there are compactions also happening. and it is not pure flushes.

** Comment 9 **
[Comment excluded]

** Comment 10 **
bq.My proposal is to increment the reader count during updateReaders() and decrement it during resetScannerStack(), so discharger doesn't clean it up. I think increment in updatereaders() is fine but should we leave the decrement as it is now rather than decremeting in resetScannerStack() because the scan is still in progress right. We have not closed the scanner.

** Comment 11 **
Oh ya..  Did not really thought it is in StoreScanner. Fine.   So seems the issue is the flushes  + compaction..  Good that u r able to reproduce it. Tks for the explain Ram.

** Comment 12 **
[Comment excluded]

** Comment 13 **
Uploading a POC patch, just to show the failures and a tentative fix, Needs more work though.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
For me, Ram's patch look simpler.   Thiruvel's  POC patch is having ref count incr and then decr , and looks bit more complex.Though my comment is this.  So in Ram's patch, we make it such that when flush is happened we open the scanner (with out waiting for the calls which need the open) and so ref count would have been incremented which prevent the Discharger thread from collecting these files.   Can we still have old way of opening when needed but we do have a way that at the end of compaction, we say the scanners abt it ?  Like the flushed files are been informed to scanners.  So the old model of opening scanner when needed only will be continued. Not sure abt the impact specially the lock needs. Just asking.  But I like this simpler patch way.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  7s |  master passed  || +1 |  compile  |   0m 46s |  master passed  || +1 |  checkstyle  |   1m  6s |  master passed  || +1 |  shadedjars  |   6m  1s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   0m 48s |  the patch passed  || +1 |  javac  |   0m 48s |  the patch passed  || +1 |  checkstyle  |   1m  6s |  hbase-server: The patch generated 0 new + 24 unchanged - 1 fixed = 24 total (was 25)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  21m 23s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  99m 24s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  ||  |   | 141m 25s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.balancer.TestRegionsOnMasterOptions |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19468 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0ce8a94610e6 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2a5e5e9e2c || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]
"
HBASE-20770,https://issues.apache.org/jira/browse/HBASE-20770,https://github.com/apache/hbase/blob/rel/1.3.3/hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java,WAL cleaner logs way too much; gets clogged when lots of work to do,YES,"Been here before (HBASE-7214 and HBASE-19652). Testing on large cluster, Master log is in a continuous spew of logging output fililng disks. It is stuck making no progress but hard to tell because it is logging minutiae rather than a call on whats actually wrong.

Log is full of this:
{code}
2018-06-21 01:19:12,761 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/e98cdb817bb3af5fa26e2b885a0b2ec6/meta/bd49572de3914b66985fff5ea2ca7403
2018-06-21 01:19:12,761 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/e98cdb817bb3af5fa26e2b885a0b2ec6/meta/fad01294c6ca421db209e89b5b97d364
2018-06-21 01:19:12,823 WARN org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Wait more than 60000 ms for deleting hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/d3f759d0495257fc1d33ae780b634455/tiny/b72bac4036444dcf9265c7b5664fd403, exit...
2018-06-21 01:19:12,823 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/665bfa38c86a28d641ce08f8fea0a7f9
2018-06-21 01:19:12,824 WARN org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Wait more than 60000 ms for deleting hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/2425053ad86823081b368e00bc471e56/tiny/6ea3cb1174434aecbc448e322e2a062c, exit...
2018-06-21 01:19:12,824 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/e98cdb817bb3af5fa26e2b885a0b2ec6/big
2018-06-21 01:19:12,824 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/e98cdb817bb3af5fa26e2b885a0b2ec6/tiny
2018-06-21 01:19:12,827 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/665bfa38c86a28d641ce08f8fea0a7f9/meta
2018-06-21 01:19:12,844 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/17f85c98389104b19358f6751da577d0
2018-06-21 01:19:12,844 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/c98e276423813aaa74d848983c47d93c
2018-06-21 01:19:12,844 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/665bfa38c86a28d641ce08f8fea0a7f9/meta/90f21dec28d140cda48d37eeb44d37e8
2018-06-21 01:19:12,844 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/665bfa38c86a28d641ce08f8fea0a7f9/meta/8a4cf6410d5a4201963bc1415945f877
2018-06-21 01:19:12,848 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/c98e276423813aaa74d848983c47d93c/meta
2018-06-21 01:19:12,849 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: Cleaning under hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/17f85c98389104b19358f6751da577d0/meta
2018-06-21 01:19:12,927 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/17f85c98389104b19358f6751da577d0/meta/6043fce5761e4479819b15405183f193
2018-06-21 01:19:12,927 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/c98e276423813aaa74d848983c47d93c/meta/69e6bf4650124859b2bc7ddf134be642
2018-06-21 01:19:13,011 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/17f85c98389104b19358f6751da577d0/meta/1a46700fbc434574a005c0b55879d5ed
2018-06-21 01:19:13,011 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/c98e276423813aaa74d848983c47d93c/meta/44beca2adfb544999dd82e9cf8151be1
2018-06-21 01:19:13,048 WARN org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Wait more than 60000 ms for deleting hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/1f60d5dcf666b1e47de3445c369b6411/tiny/29b934a9c8f74ec1a5806f3fabeee094, exit...
{code}

It looks like we make no progress because we give up after 60 seconds (see above). The dir in this case has ~17k WALs in it (Cluster has hundreds of servers and has been running test for a while). When I do a listing, the count of WALs is not changing.


There is also this output below that does not help.

{code}
2018-06-21 00:16:05,852 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gW^6\xB5Z}\x00,1529565022477.4c27c2ef56a0aa3adae325a20d0a229b.
2018-06-21 00:16:05,855 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gP\x10\xE2\xD1\xFD\xC2\x00,1529565022477.cee1017900682956e90e94be1e1c10da.
2018-06-21 00:16:05,858 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gH\xC3\x8E\xEE\xA1\x07\x00,1529565022477.d4184dddf837bb3c19eb0cc0d87ccdf5.
2018-06-21 00:16:05,861 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g6\x82=693\x80,1529565022477.87faebdd14107f09126efa169b543dd6.
2018-06-21 00:16:05,863 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gS\xB7\x8C\xC3\xAC\x1F\x80,1529565022477.4d5a3efc33988180ad11c4eac8e64a4a.
2018-06-21 00:16:05,866 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g^\xAB\x8A\x98\xB78\x00,1529565022477.6a6945672c19b937fc2ccde13d2aff5d.
2018-06-21 00:16:05,869 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gmF2_p\xAE\x00,1529565022477.6607c6fef270c71c44caa1b8e69a63cb.
2018-06-21 00:16:05,872 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gi\x9F\x88m\xC2P\x80,1529565022477.5ecbc236145f85d857ffea9ad3c1d89c.
2018-06-21 00:16:05,875 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g[\x04\xE0\xA7\x08\xDA\x80,1529565022477.02a09a3ce49e05ea35a2ed51d306b37d.
2018-06-21 00:16:05,878 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gp\xEC\xDCQ\x1F\x0B\x80,1529565022477.0ce748886ee50a79691c7569a17ea30a.
2018-06-21 00:16:05,881 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g{\xE0\xDA&*$\x00,1529565022477.8d65e26b122c25f411c19555c9103b03.
2018-06-21 00:16:05,884 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g\x86\xD4\xD7\xFB5<\x80,1529565022477.88c1deebe2e914d9f323a557d1517ae8.
2018-06-21 00:16:05,888 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g\x95o\x7F\xC1\xEE\xB2\x80,1529565022477.1c3849e505edf7efd1391ae8da88ec09.
2018-06-21 00:16:05,891 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g\x8E""+\xDE\x91\xF7\x80,1529565022477.bb4eb5e775869e6cc3bc95fbc661c487.
2018-06-21 00:16:05,894 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,ge\xF8\xDE|\x13\xF3\x00,1529565022477.76afec6687b4ee782177424af54e8767.
2018-06-21 00:16:05,897 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gt\x93\x86B\xCDi\x00,1529565022477.0dd540d73e6dd115585de4e576b771ca.
2018-06-21 00:16:05,900 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g\x99\x16)\xB3\x9D\x10\x00,1529565022477.0dd49eaefa19cf1935f41661aa4e1dde.
2018-06-21 00:16:05,903 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,gx:04{\xC6\x80,1529565022477.525b1aff5c2361101afce5f6c05a68b6.
2018-06-21 00:16:05,906 DEBUG org.apache.hadoop.hbase.master.balancer.RegionLocationFinder: HDFSBlocksDistribution not found in cache for region IntegrationTestBigLinkedList,g\x9C\xBC\xD3\xA5Km\x80,1529565022477.9fbb338f7e006c02c3a84ca926749674.
...
{code}

And this....
{code}
2018-06-21 00:16:39,617 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 104 for processing by initSASLContext
2018-06-21 00:16:39,617 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 0 from initSASLContext.
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 104 for processing by initSASLContext
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 50 for processing by initSASLContext
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 0 from initSASLContext.
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 50 from initSASLContext.
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 104 for processing by initSASLContext
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: SASL client context established. Negotiated QoP: auth
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 0 from initSASLContext.
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 50 for processing by initSASLContext
2018-06-21 00:16:39,618 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 50 from initSASLContext.
2018-06-21 00:16:39,619 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: SASL client context established. Negotiated QoP: auth
2018-06-21 00:16:39,619 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will read input token of size 50 for processing by initSASLContext
2018-06-21 00:16:39,619 DEBUG org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: Will send token of size 50 from initSASLContext.
{code}

","** Comment 1 **
What about trace instead of debug:  {{LOG.debug(""Cleaning under {}"", dir)}} (line 489 in CleanerChore.class), {{LOG.debug(""Removing {}"", task.filePath)}} (line 238 in HFileCleaner.class).

** Comment 2 **
[Comment excluded]

** Comment 3 **
Fix these too....2018-06-21 13:18:20,076 WARN org.apache.hadoop.hbase.master.assignment.AssignProcedure: Skipping update of open seqnum with 0 because current seqnum=221061I think they are useless if seqnum is zero.And these lines get really big if server was carrying hundreds of regions... make smaller: ProcedureExecutor: Initialized subprocedures=[{pid=3449, ppid=1607, state=RUNNABLE:REGION_TRANSITION_QUEUE...

** Comment 4 **
bq. Was thinking of updating the 60 seconds too... to ten minutes or something.Sir, there's an issue about making the waiting time configurable, [link]But 10mins or else is too long, it will stuck current chore and delay next chore, which leads to oldWALs or archive piled up. Just leave it to next chore to clean, 1min by default should be fine.

** Comment 5 **
[Comment excluded]

** Comment 6 **
Possibly some new files added? {{Removing}} without following error or warn or exception should be cleaned, like below.{code}2018-06-21 01:19:12,761 DEBUG org.apache.hadoop.hbase.master.cleaner.HFileCleaner: Removing hdfs://ns1/hbase/archive/data/default/IntegrationTestBigLinkedList/e98cdb817bb3af5fa26e2b885a0b2ec6/meta/bd49572de3914b66985fff5ea2ca7403{code}Were you running IntegrationTestBigLinkedList? I could try on local.

** Comment 7 **
I was running it at scale, yes. Hundreds of nodes and 160k regions + under load. Perhaps logs were being removed and added but it seemed odd getting same number after a bunch of listings....

** Comment 8 **
Fix these too... useless...2018-06-22 12:31:45,987 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time2018-06-22 12:31:52,317 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time2018-06-22 12:32:00,328 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time2018-06-22 12:32:08,870 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time2018-06-22 12:32:16,633 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time2018-06-22 12:32:25,201 INFO org.apache.hadoop.hbase.ScheduledChore: Chore: SplitLogManager Timeout Monitor missed its start time

** Comment 9 **
[Comment excluded]

** Comment 10 **
.0001 Mostly moving logs that can spew to trace.... 

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 57s |  branch-2.0 passed  || +1 |  compile  |   2m 50s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 50s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 17s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 35s |  branch-2.0 passed  || +1 |  javadoc  |   0m 54s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 58s |  the patch passed  || +1 |  compile  |   2m 40s |  the patch passed  || +1 |  javac  |   2m 40s |  the patch passed  || +1 |  checkstyle  |   1m 46s |  the patch passed  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 18s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 44s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 22s |  hbase-client in the patch passed.  || +1 |  unit  | 161m 20s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 213m 56s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20770 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 28707c65bf42 4.4.0-98-generic #121-Ubuntu SMP Tue Oct 10 14:24:03 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 0784d8d62f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 3754 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 15 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 19 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #509 (See )
HBASE-20770 WAL cleaner logs way too much; gets clogged when lots of (apurtell: rev 7bfec2a8989083c70c7fcc1b8c7a1b7af4d65eb8)


** Comment 20 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20857,https://issues.apache.org/jira/browse/HBASE-20857,https://github.com/apache/hbase/blob/rel/1.3.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java,JMX - add Balancer status = enabled / disabled,NO,"Add HBase Balancer enabled/disabled status to JMX API on HMaster.

Right now the HMaster will give a warning near the top of HMaster UI if balancer is disabled, but scraping this is for monitoring integration is not nice, it should be available in JMX API as there is already a Master,sub=Balancer bean with metrics for the balancer ops etc.","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1.4 Compile Tests  ||| 0 |  mvndep  |   1m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 57s |  branch-1.4 passed  || +1 |  compile  |   1m 13s |  branch-1.4 passed with JDK v1.8.0_181  || +1 |  compile  |   1m 21s |  branch-1.4 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 58s |  branch-1.4 passed  || +1 |  shadedjars  |   2m 42s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m  0s |  branch-1.4 passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m 14s |  branch-1.4 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 32s |  the patch passed  || +1 |  compile  |   1m  7s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   1m  7s |  the patch passed  || +1 |  compile  |   1m 19s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   1m 19s |  the patch passed  || -1 |  checkstyle  |   1m 20s |  hbase-server: The patch generated 2 new + 110 unchanged - 0 fixed = 112 total (was 110)  || -1 |  whitespace  |   0m  0s |  The patch has 2 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || +1 |  shadedjars  |   2m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 55s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  javadoc  |   0m 56s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m 14s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 21s |  hbase-hadoop-compat in the patch passed.  || +1 |  unit  |   0m 26s |  hbase-hadoop2-compat in the patch passed.  || +1 |  unit  | 103m  6s |  hbase-server in the patch passed.  || +1 |  unit  |   2m 25s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m  5s |  The patch does not generate ASF License warnings.  ||  |   | 144m 49s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:2cf636a || JIRA Issue | HBASE-20857 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 67778f9f9c7a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1.4 / c9e1665 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || checkstyle | [link] || whitespace | [link] ||  Test Results | [link] || Max. process+thread count | 4044 (vs. ulimit of 10000) || modules | C: hbase-hadoop-compat hbase-hadoop2-compat hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1.4 Compile Tests  ||| 0 |  mvndep  |   1m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 53s |  branch-1.4 passed  || +1 |  compile  |   1m  7s |  branch-1.4 passed with JDK v1.8.0_181  || +1 |  compile  |   1m 18s |  branch-1.4 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 58s |  branch-1.4 passed  || +1 |  shadedjars  |   2m 38s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 59s |  branch-1.4 passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m 13s |  branch-1.4 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 33s |  the patch passed  || +1 |  compile  |   1m  7s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   1m  7s |  the patch passed  || +1 |  compile  |   1m 17s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   1m 17s |  the patch passed  || +1 |  checkstyle  |   1m 53s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 53s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  javadoc  |   0m 57s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m 14s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 21s |  hbase-hadoop-compat in the patch passed.  || +1 |  unit  |   0m 27s |  hbase-hadoop2-compat in the patch passed.  || +1 |  unit  | 102m 30s |  hbase-server in the patch passed.  || +1 |  unit  |   2m 10s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m  2s |  The patch does not generate ASF License warnings.  ||  |   | 143m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:2cf636a || JIRA Issue | HBASE-20857 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cbee2dea98e0 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1.4 / 54b0055 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 ||  Test Results | [link] || Max. process+thread count | 3791 (vs. ulimit of 10000) || modules | C: hbase-hadoop-compat hbase-hadoop2-compat hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
This looks fine to me, and will apply to branch-1.4 and branch-1, but what about more recent versions? Let me see how hard it is to apply to branch-2 and up. 

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 12 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
[Comment excluded]

** Comment 14 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20732,https://issues.apache.org/jira/browse/HBASE-20732,https://github.com/apache/hbase/blob/rel/1.3.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,Shutdown scan pool when master is stopped.,NO,"If master is stopped, {{DirScanPool}} is kept open. This is found by [~chia7712] when reviewing HBASE-20352.","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   1m 33s |  master passed  || +1 |  checkstyle  |   1m  0s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 50s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 15s |  the patch passed  || +1 |  compile  |   1m 33s |  the patch passed  || +1 |  javac  |   1m 33s |  the patch passed  || -1 |  checkstyle  |   1m  1s |  hbase-server: The patch generated 2 new + 173 unchanged - 0 fixed = 175 total (was 173)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 55s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  22m 25s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  58m 52s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.cleaner.TestCleanerChore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6668d0015f6f 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ac5bb8155b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 703 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 41s |  master passed  || +1 |  compile  |   1m 44s |  master passed  || +1 |  checkstyle  |   1m 12s |  master passed  || +1 |  shadedjars  |   4m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 57s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 55s |  the patch passed  || +1 |  compile  |   1m 45s |  the patch passed  || +1 |  javac  |   1m 45s |  the patch passed  || +1 |  checkstyle  |   1m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 14s |  the patch passed  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 117m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 158m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a2996c667067 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 9101fc246f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4668 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
Q1:+  public static void shutDownChorePool() {+    POOL.shutDownNow();+  }{code}Since this method is called by HMaster#stopServiceThreads, it should have null check and reset the POOL to null. HMaster may fail before calling #initChorePool.Q2: Why we have to do a large change to the test cases? the change to production code is only that we do the shutdown of poll in closing master, right?

** Comment 7 **
bq. Why we have to do a large change to the test cases? i found {{TestCleanChore}} was not stable(QA result was different from local result) and became flaky(sometime failed) when {{CleanerChore.shutDownChorePool()}} was added, so i did a bit refactor.The refactor is just about scheduling chores in exact {{ChoreService}} rather than by calling {{chore.chore()}}.bq. the change to production code is only that we do the shutdown of poll in closing master, right?Yes, you're right. This pool could be serving other chores even though one of chores is canceled or cleaned up, so the shutdown place should be {{closing master}}. Or point me out if i miss somewhere.Will upload a patch to address Q1.

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 10s |  master passed  || +1 |  compile  |   1m 31s |  master passed  || +1 |  checkstyle  |   0m 59s |  master passed  || +1 |  shadedjars  |   4m  2s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 46s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 12s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed  || +1 |  javac  |   1m 31s |  the patch passed  || +1 |  checkstyle  |   1m  0s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  4s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 56s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  22m 23s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 12s |  The patch does not generate ASF License warnings.  ||  |   |  58m 10s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.cleaner.TestCleanerChore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 66f793940ad3 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 4cb70ea9f5 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 703 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 27s |  master passed  || +1 |  compile  |   1m 34s |  master passed  || +1 |  checkstyle  |   1m  1s |  master passed  || +1 |  shadedjars  |   4m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 45s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 17s |  the patch passed  || +1 |  compile  |   1m 34s |  the patch passed  || +1 |  javac  |   1m 34s |  the patch passed  || +1 |  checkstyle  |   1m  1s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  5s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  1s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 50s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  22m 22s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 13s |  The patch does not generate ASF License warnings.  ||  |   |  58m 50s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.cleaner.TestCleanerChore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a8143817cf16 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 72784c2d83 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 702 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
{quote}alwaysDelete.isFileDeletable(<any>); Wanted 1 time: -> at org.apache.hadoop.hbase.master.cleaner.TestCleanerChore.testNoExceptionFromDirectoryWithRacyChildren([file java]:348) But was 2 times. Undesired invocation: -> at org.apache.hbase.thirdparty.com.google.common.collect.Iterators$4.computeNext([file java]:624) at org.apache.hadoop.hbase.master.cleaner.TestCleanerChore.testNoExceptionFromDirectoryWithRacyChildren([file java]:348){quote}It is caused by unclean test-dir.V5 patch * addresses Chia-Ping's Q1* better deals with null case* adds Nullable annotations on method #getFilteredStatus* improves code readability in {{CleanerChore.class}}* removes some chatty logs, or move them to TRACE level.Test passed on local 10+ times. Waiting QA.

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  master passed  || +1 |  compile  |   1m 46s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   4m 47s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  6s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 53s |  the patch passed  || +1 |  compile  |   1m 47s |  the patch passed  || -1 |  javac  |   1m 47s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 1 new + 159 unchanged - 0 fixed = 160 total (was 159)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 18s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 10s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 120m  1s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 161m 53s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 61a026216485 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 98245ca6e4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4725 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 15 **
V6 fixes {{checkstyle}} and {{javac}} warning.

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 44s |  master passed  || +1 |  compile  |   1m 44s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   5m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 57s |  master passed  || +1 |  javadoc  |   1m  8s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   7m 42s |  the patch passed  || +1 |  compile  |   2m 24s |  the patch passed  || -1 |  javac  |   2m 24s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   1m 59s |  hbase-server: The patch generated 1 new + 159 unchanged - 0 fixed = 160 total (was 159)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  0s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 48s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 114m 58s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 164m 25s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncClusterAdminApi |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7efcd4c6baef 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 98245ca6e4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5432 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m  7s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 14s |  master passed  || +1 |  compile  |   1m 43s |  master passed  || +1 |  checkstyle  |   1m 11s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 55s |  master passed  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 46s |  the patch passed  || +1 |  compile  |   1m 41s |  the patch passed  || +1 |  javac  |   1m 41s |  the patch passed  || +1 |  checkstyle  |   1m 10s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 29s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  4s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 57s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 111m  9s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 153m 48s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7179459fea85 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 177458d9d0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4521 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 55s |  master passed  || +1 |  compile  |   1m 33s |  master passed  || +1 |  checkstyle  |   1m  0s |  master passed  || +1 |  shadedjars  |   4m  3s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 43s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 21s |  the patch passed  || +1 |  compile  |   1m 37s |  the patch passed  || +1 |  javac  |   1m 37s |  the patch passed  || +1 |  checkstyle  |   0m 57s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  0s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 23s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 52s |  the patch passed  || +1 |  javadoc  |   0m 24s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 107m 39s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 146m 56s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6455bc340931 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 6a0c67344a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4982 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 40s |  master passed  || +1 |  compile  |   1m 42s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   4m 29s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 53s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   1m 42s |  the patch passed  || +1 |  javac  |   1m 42s |  the patch passed  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 1 new + 159 unchanged - 0 fixed = 160 total (was 159)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 24s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 53s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  6s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 118m 37s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   | 158m 28s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cdd699c66212 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 99d54246ee || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4448 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 25 **
v8 LGTM (excluding the checkstyle warning).  please backport the patch to branch-1 since it is a bug fix. Also, please add my name to the signoff if you want to commit the v8 patch.

** Comment 26 **
bq.  backport the patch to branch-1I will, thanks Chia-Ping.Waiting QA for v9 which should fix check-style error.

** Comment 27 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 14s |  master passed  || +1 |  compile  |   2m  4s |  master passed  || +1 |  checkstyle  |   1m 21s |  master passed  || +1 |  shadedjars  |   5m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  8s |  master passed  || +1 |  javadoc  |   0m 33s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 27s |  the patch passed  || +1 |  compile  |   2m  0s |  the patch passed  || +1 |  javac  |   2m  0s |  the patch passed  || +1 |  checkstyle  |   1m 20s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 17s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 28s |  the patch passed  || +1 |  javadoc  |   0m 36s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 122m 50s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 169m 41s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3013345d0c9b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / a68dbde941 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4540 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 28 **
[Comment excluded]

** Comment 29 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  20m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m  5s |  branch-1 passed  || +1 |  compile  |   0m 42s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 43s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 32s |  branch-1 passed  || +1 |  shadedjars  |   2m 54s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 38s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 43s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 54s |  the patch passed  || +1 |  compile  |   0m 44s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 44s |  the patch passed  || +1 |  compile  |   0m 47s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 47s |  the patch passed  || +1 |  checkstyle  |   1m 43s |  hbase-server: The patch generated 0 new + 233 unchanged - 1 fixed = 233 total (was 234)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 59s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 31s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 46s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 148m  9s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 196m  4s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin2 ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b15eb018c084 4.4.0-98-generic #121-Ubuntu SMP Tue Oct 10 14:24:03 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / ccead12 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4019 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 30 **
Unrelated UTs failed, trigger QA again.

** Comment 31 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   1m 42s |  branch-1 passed  || +1 |  compile  |   0m 34s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 38s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 21s |  branch-1 passed  || +1 |  shadedjars  |   2m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 27s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 37s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 32s |  the patch passed  || +1 |  compile  |   0m 34s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 34s |  the patch passed  || +1 |  compile  |   0m 38s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 38s |  the patch passed  || +1 |  checkstyle  |   1m 21s |  hbase-server: The patch generated 0 new + 233 unchanged - 1 fixed = 233 total (was 234)  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 35s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 26s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 35s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  |  97m 35s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 115m 48s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 23259a4e34eb 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / ccead12 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3925 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 32 **
{quote} Running org.apache.hadoop.hbase.master.cleaner.TestCleanerChore Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.026 s - in org.apache.hadoop.hbase.master.cleaner.TestCleanerChore{quote}Passed in branch-1.

** Comment 33 **
[Comment excluded]

** Comment 34 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 31s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m  2s |  master passed  || +1 |  compile  |   2m  9s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   5m  8s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 16s |  master passed  || +1 |  javadoc  |   0m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 40s |  the patch passed  || +1 |  compile  |   2m 11s |  the patch passed  || +1 |  javac  |   2m 11s |  the patch passed  || +1 |  checkstyle  |   1m 25s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 51s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 24s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 173m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 224m 24s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20732 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2f401637f6a6 4.4.0-98-generic #121-Ubuntu SMP Tue Oct 10 14:24:03 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 952bb96c8a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4599 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 35 **
[Comment excluded]

** Comment 36 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 37 **
[Comment excluded]

** Comment 38 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21263,https://issues.apache.org/jira/browse/HBASE-21263,https://github.com/apache/hbase/blob/rel/1.3.3/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java,Mention compression algorithm along with other storefile details,NO,"Where we log storefile details we should also log the compression algorithm used to compress blocks on disk, if any. 

For example, here's a log line out of compaction:

2018-10-02 21:59:47,594 DEBUG [regionserver/host/1.1.1.1:8120-longCompactions-1538517461152] compactions.Compactor: Compacting hdfs://namenode:8020/hbase/data/default/TestTable/86037c19117a46b5b8148439ea55753b/i/3d04a7c28d6343ceb773737dbb192533, keycount=3335873, bloomtype=ROW, size=107.5 M, encoding=ROW_INDEX_V1, seqNum=154199, earliestPutTs=1538516084915

Aside from bloom type, block encoding, and filename, it would be good to know compression type in this type of DEBUG or INFO level logging. A minor omission of information that could be helpful during debugging. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 23s |  master passed  || +1 |  compile  |   1m 48s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   4m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  7s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 55s |  the patch passed  || +1 |  compile  |   1m 44s |  the patch passed  || +1 |  javac  |   1m 44s |  the patch passed  || +1 |  checkstyle  |   1m 10s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 30s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  4s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 126m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 167m 38s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21263 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2be6dc9d9cbe 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 4508f670b1 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5255 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m 21s |  master passed  || +1 |  compile  |   2m 19s |  master passed  || +1 |  checkstyle  |   1m 27s |  master passed  || +1 |  shadedjars  |   5m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 38s |  master passed  || +1 |  javadoc  |   0m 36s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 59s |  the patch passed  || +1 |  compile  |   2m 10s |  the patch passed  || +1 |  javac  |   2m 10s |  the patch passed  || +1 |  checkstyle  |   1m 23s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 59s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  9s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 41s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 125m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 24s |  The patch does not generate ASF License warnings.  ||  |   | 176m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21263 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9b2c91e2ecc1 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e42741e085 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4822 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 6 **
This change is fine, but is it the only place we log storefile details? Perhaps you can do a search over the code looking for other places? If it were me I'd load up the sources in eclipse, my preferred ide maybe you have another, and would step through occurrences of calls for <log type>.debug and <log type>.info in at least all files under hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile but ideally also hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver

** Comment 7 **
Thanks . I have added compaction log details in few more files. Please review patch v3. I tried to search like you have suggested, still if I have missed some more files, please let me know.

** Comment 8 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  master passed  || +1 |  compile  |   1m 48s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 55s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  the patch passed  || +1 |  compile  |   1m 49s |  the patch passed  || +1 |  javac  |   1m 49s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 31s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  4s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 126m  6s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   | 167m 23s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21263 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c89306cf9b54 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 4a043126b1 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4689 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 9 **
Thanks . I think this is fine for a pass over the code. Let me commit. Thanks for the contribution!

** Comment 10 **
Pushed everywhere. Minor changes needed on branch-2.0 and the branch-1s. I also removed one instance of logging in memstore that didn't seem appropriate, and I didn't think we needed a round of bikeshedding for that...

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 15 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 16 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 17 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch branch-1.2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 19 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 20 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 21 **
Hi ,Seems branch-1 patch broke branch-1.4 build (am getting same error on my local):I guess branch-1.4 is missing HBASE-19858, tried cherry pick it on my local branch-1.4, then it worked after doing small fix on [file java] due changes on PerformanceEvaluation.FAMILY_NAME_BASE type made by HBASE-19858.I can submit a rebased patch with this HBASE-19858 and required fix, to be easily applied on branch-1.4. Let me know what you think. 

** Comment 22 **
[Comment excluded]

** Comment 23 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-22540,https://issues.apache.org/jira/browse/HBASE-22540,https://github.com/apache/hbase/blob/rel/1.3.5/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreChunkPool.java,[Memstore] Correct counters in MemStoreChunkPool,NO,As title reads.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 6 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 7 **
FAILURE: Integrated in Jenkins build HBase-1.3-IT #576 (See )
HBASE-22540  Correct counters in MemStoreChunkPool (apurtell: rev cade234c40b420f3e75bd7767afd595fc1a27a41)


** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-22686,https://issues.apache.org/jira/browse/HBASE-22686,https://github.com/apache/hbase/blob/rel/1.3.6/hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java,ZkSplitLogWorkerCoordination doesn't allow a regionserver to pick up all of the split work it is capable of,NO,"A region hosted by a crashed regionserver cannot be reassigned until the crashed regionserver's write-ahead logs have been processed and split into per-region recovered edits files. Reassignment of a region from a crashed server will be held up by the distributed split work backlog. Every regionserver runs a background daemon thread that manages the acquisition and execution of distributed log split tasks. This thread registers a watcher on a znode managed by the master. When the master is processing a server shutdown or crash or cluster restart when it detects the presence of unprocessed WAL files it will register the WAL files for processing under the znode. One or more live regionservers will attempt to get an exclusive lock on an entry. One of them wins, splits the WAL file, deletes the entry, then will acquire more work or go back to sleep if the worklist is empty. A regionserver can acquire at most a fixed number of log split tasks determined by configuration, hbase.regionserver.wal.max.splitters (default 2). If the number of entries/logs to process exceeds the number of available split workers in the cluster, perhaps due to the correlated failure of a significant subset of the fleet, then splitting work will fall behind. Regions may remain in RIT until the backlog is cleared.

However, the regionserver side coordination logic - ZkSplitLogWorkerCoordination - only allows a regionserver to grab one task one at a time. Nearby javadoc says ""This policy puts an upper-limit on the number of simultaneous log splitting that could be happening in a cluster."" That upper limit will be the number of currently live regionservers. I don't feel I understand exactly why this is necessary or appropriate because a regionserver can handle more than one task at once and in fact the max number of concurrent split tasks it can accept is configurable.
{code:java}
  /**
   * This function calculates how many splitters it could create based on expected average tasks per
   * RS and the hard limit upper bound(maxConcurrentTasks) set by configuration. <br>
   * At any given time, a RS allows spawn MIN(Expected Tasks/RS, Hard Upper Bound)
   * @param numTasks current total number of available tasks
   */
  private int calculateAvailableSplitters(int numTasks) {
    // at lease one RS(itself) available
    int availableRSs = 1;
    try {
      List<String> regionServers =
          ZKUtil.listChildrenNoWatch(watcher, watcher.rsZNode);
      availableRSs = Math.max(availableRSs, (regionServers == null) ? 0 : regionServers.size());
    } catch (KeeperException e) {
      // do nothing
      LOG.debug(""getAvailableRegionServers got ZooKeeper exception"", e);
    }

    int expectedTasksPerRS = (numTasks / availableRSs) + ((numTasks % availableRSs == 0) ? 0 : 1);
    expectedTasksPerRS = Math.max(1, expectedTasksPerRS); // at least be one
    // calculate how many more splitters we could spawn
    return Math.min(expectedTasksPerRS, maxConcurrentTasks)
        - this.tasksInProgress.get();
  {code}
Shouldn't this simply be:
{code:java}
  private int calculateAvailableSplitters() {
    return maxConcurrentTasks - tasksInProgress.get();
  }
{code}
?

This is branch-1.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
It appears the {{ZkSplitLogWorkerCoordination}} code tries its best to determine how many total tasks there are, and how many regionservers there are available to process the task, so that each regionserver doesn't try to take more than its fair share. However, there's also a sleep in {{grabTask}} to try and allow other regionservers to step in. Also, with default settings, all the math is just to determine whether each regionserver should try to take 1 or 2 tasks total.For non-default number of {{hbase.regionserver.wal.max.splitters}} it could result in a lot of requests to ZK only to find that those tasks have already been taken.If there are more logs to split than there are regionservers, then this line should allow each regionserver to take more than 1 task, with a max of {{hbase.regionserver.wal.max.splitters}}int expectedTasksPerRS = (numTasks / availableRSs) + ((numTasks % availableRSs == 0) ? 0 : 1);{code}

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  22m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| -1 |  mvninstall  |   0m 11s |  root in master failed.  || -1 |  compile  |   1m  6s |  hbase-server in master failed with JDK v1.8.0_212.  || -1 |  compile  |   0m 12s |  hbase-server in master failed with JDK v1.7.0_222.  || -1 |  checkstyle  |   0m 16s |  The patch fails to run checkstyle in hbase-server  || -1 |  shadedjars  |   0m 10s |  branch has 7 errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 40s |  master passed with JDK v1.8.0_212  || -1 |  javadoc  |   0m 14s |  hbase-server in master failed with JDK v1.7.0_222.  ||| || || ||  Patch Compile Tests  ||| -1 |  mvninstall  |   0m  9s |  root in the patch failed.  || -1 |  compile  |   0m 36s |  hbase-server in the patch failed with JDK v1.8.0_212.  || -1 |  javac  |   0m 36s |  hbase-server in the patch failed with JDK v1.8.0_212.  || -1 |  compile  |   0m 13s |  hbase-server in the patch failed with JDK v1.7.0_222.  || -1 |  javac  |   0m 13s |  hbase-server in the patch failed with JDK v1.7.0_222.  || -1 |  checkstyle  |   0m 11s |  The patch fails to run checkstyle in hbase-server  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   0m  9s |  patch has 7 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   0m 10s |  The patch causes 7 errors with Hadoop v2.8.5.  || -1 |  hadoopcheck  |   0m 19s |  The patch causes 7 errors with Hadoop v2.9.2.  || -1 |  hadoopcheck  |   0m 27s |  The patch causes 7 errors with Hadoop v3.1.2.  || +1 |  javadoc  |   0m 35s |  the patch passed with JDK v1.8.0_212  || -1 |  javadoc  |   0m 15s |  hbase-server in the patch failed with JDK v1.7.0_222.  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 11s |  The patch does not generate ASF License warnings.  ||  |   |  28m 38s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=18.09.7 Server=18.09.7 base: [link] || JIRA Issue | HBASE-22686 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d8e7b6672200 4.4.0-143-generic #169-Ubuntu SMP Thu Feb 7 07:56:38 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / 4e46093 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_222 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_212 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_222 || mvninstall | [link] || compile | [link] || compile | [link] || checkstyle | [link] || shadedjars | [link] || javadoc | [link] || mvninstall | [link] || compile | [link] || javac | [link] || compile | [link] || javac | [link] || checkstyle | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 86 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Latest patches move debug log lines to TRACE level which might otherwise be logged 10 times a second.

** Comment 14 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1.3 Compile Tests  ||| +1 |  mvninstall  |   7m  5s |  branch-1.3 passed  || +1 |  compile  |   0m 33s |  branch-1.3 passed with JDK v1.8.0_212  || +1 |  compile  |   0m 35s |  branch-1.3 passed with JDK v1.7.0_222  || +1 |  checkstyle  |   1m 18s |  branch-1.3 passed  || +1 |  shadedjars  |   2m 23s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 35s |  branch-1.3 passed with JDK v1.8.0_212  || +1 |  javadoc  |   0m 33s |  branch-1.3 passed with JDK v1.7.0_222  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 29s |  the patch passed  || +1 |  compile  |   0m 32s |  the patch passed with JDK v1.8.0_212  || +1 |  javac  |   0m 32s |  the patch passed  || +1 |  compile  |   0m 36s |  the patch passed with JDK v1.7.0_222  || +1 |  javac  |   0m 36s |  the patch passed  || +1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 0 new + 17 unchanged - 1 fixed = 17 total (was 18)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 19s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 33s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.7.  || +1 |  javadoc  |   0m 26s |  the patch passed with JDK v1.8.0_212  || +1 |  javadoc  |   0m 33s |  the patch passed with JDK v1.7.0_222  ||| || || ||  Other Tests  ||| +1 |  unit  |  96m 18s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 126m 23s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=18.09.7 Server=18.09.7 base: [link] || JIRA Issue | HBASE-22686 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d94dfeff5897 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | branch-1.3 / 486fe0b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_222 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_212 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_222 ||  Test Results | [link] || Max. process+thread count | 4690 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 17 **
Results for branch branch-1.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 19 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 20 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 21 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 22 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)

"
HBASE-16584,https://issues.apache.org/jira/browse/HBASE-16584,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java,Backport the new ipc implementation in HBASE-16432 to branch-1,NO,"Two problems.

First, as RpcCliemtImpl is the default implementation on branch-1, we need to confirm that the modification on master does not make it slower. I'm not sure but I used a big lock to protect everything in the new implementation, so it may have bad impact on performance.

Second, some configurations of the old AsyncRpcClient is gone. Such as ""hbase.rpc.client.threads.max"" and ""hbase.rpc.client.nativetransport"". Now You could pass a EventLoopGroup object directly through a helper class which makes it more flexible.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 26s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 35 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 37s  |  branch-1 passed  |
| +1 |  compile  |  2m 7s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  2m 18s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 37s  |  branch-1 passed  |
| +1 |  mvneclipse  |  1m 14s  |  branch-1 passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| -1 |  findbugs  |  1m 47s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 16s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 14s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 14s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  2m 43s  |  the patch passed  |
| +1 |  compile  |  2m 5s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  cc  |  2m 5s  |  the patch passed  |
| +1 |  javac  |  2m 5s  |  the patch passed  |
| +1 |  compile  |  2m 17s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  cc  |  2m 17s  |  the patch passed  |
| -1 |  javac  |  0m 32s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| -1 |  javac  |  1m 12s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 14 unchanged - 1 fixed = 15 total (was 15)  |
| +1 |  checkstyle  |  1m 39s  |  the patch passed  |
| +1 |  mvneclipse  |  1m 13s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 0s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  14m 13s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| +1 |  findbugs  |  3m 7s  |  the patch passed  |
| -1 |  javadoc  |  0m 14s  |  hbase-client-jdk1.8.0_121 with JDK v1.8.0_121 generated 5 new + 13 unchanged - 0 fixed = 18 total (was 13)  |
| -1 |  javadoc  |  0m 24s  |  hbase-server-jdk1.8.0_121 with JDK v1.8.0_121 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  |
| -1 |  javadoc  |  1m 31s  |  root-jdk1.8.0_121 with JDK v1.8.0_121 generated 6 new + 4 unchanged - 0 fixed = 10 total (was 4)  |
| -1 |  javadoc  |  0m 18s  |  hbase-client-jdk1.7.0_80 with JDK v1.7.0_80 generated 5 new + 13 unchanged - 0 fixed = 18 total (was 13)  |
| -1 |  javadoc  |  0m 30s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  |
| -1 |  javadoc  |  2m 15s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 6 new + 7 unchanged - 0 fixed = 13 total (was 7)  |
| +1 |  unit  |  1m 49s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  19m 16s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 18s  |  hbase-it in the patch passed.  |
| -1 |  unit  |  28m 20s  |  root in the patch failed.  |
| +1 |  asflicense  |  0m 40s  |  The patch does not generate ASF License warnings.  |
|  |   |  102m 12s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.security.TestSecureIPC |
|   | hadoop.hbase.security.TestSecureIPC |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16584 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  xml  |
| uname | Linux ff7521e9fd74 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 5f63093 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| javac | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| javadoc | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 23s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 35 new or modified test files.  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 46s  |  branch-1 passed  |
| +1 |  compile  |  2m 41s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  2m 38s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 47s  |  branch-1 passed  |
| +1 |  mvneclipse  |  1m 26s  |  branch-1 passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| -1 |  findbugs  |  2m 3s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 44s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 38s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 14s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  3m 7s  |  the patch passed  |
| +1 |  compile  |  2m 33s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  cc  |  2m 33s  |  the patch passed  |
| +1 |  javac  |  2m 33s  |  the patch passed  |
| +1 |  compile  |  2m 34s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  cc  |  2m 34s  |  the patch passed  |
| -1 |  javac  |  0m 35s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| -1 |  javac  |  1m 23s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 14 unchanged - 1 fixed = 15 total (was 15)  |
| +1 |  checkstyle  |  1m 48s  |  the patch passed  |
| +1 |  mvneclipse  |  1m 21s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 0s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  15m 26s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| +1 |  findbugs  |  3m 22s  |  the patch passed  |
| +1 |  javadoc  |  2m 21s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 23s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 49s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  94m 20s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 30s  |  hbase-it in the patch passed.  |
| -1 |  unit  |  117m 32s  |  root in the patch failed.  |
| +1 |  asflicense  |  1m 10s  |  The patch does not generate ASF License warnings.  |
|  |   |  273m 6s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | hadoop.hbase.client.TestMetaWithReplicas |
|   | hadoop.hbase.regionserver.TestRegionReplicaFailover |
|   | hadoop.hbase.client.TestMetaWithReplicas |
| Timed out junit tests | org.apache.hadoop.hbase.util.TestHBaseFsck |
|   | org.apache.hadoop.hbase.client.TestHCM |
|   | org.apache.hadoop.hbase.util.TestHBaseFsck |
|   | org.apache.hadoop.hbase.regionserver.TestHRegion |
|   | org.apache.hadoop.hbase.client.TestHCM |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16584 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  xml  |
| uname | Linux 9e8914235392 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / dcaa9bd |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| javac | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 8 **
Let me check the failed UTs.

** Comment 9 **
I believe this could make it easier for debugging and finally improve branch-1 ipc performance (smile).
Since it's a big patch, mind put it up on review board sir ? Thanks.

** Comment 10 **
[Comment excluded]

** Comment 11 **
Will upload it today boss. Let me check the failed UTs first.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 35 new or modified test files.  |
| 0 |  mvndep  |  0m 29s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 7s  |  branch-1 passed  |
| +1 |  compile  |  2m 48s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  2m 50s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 55s  |  branch-1 passed  |
| +1 |  mvneclipse  |  1m 28s  |  branch-1 passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| -1 |  findbugs  |  2m 18s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  3m 10s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 51s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 15s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  3m 20s  |  the patch passed  |
| +1 |  compile  |  2m 53s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  cc  |  2m 53s  |  the patch passed  |
| +1 |  javac  |  2m 53s  |  the patch passed  |
| +1 |  compile  |  2m 45s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  cc  |  2m 45s  |  the patch passed  |
| -1 |  javac  |  0m 37s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| -1 |  javac  |  1m 29s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 14 unchanged - 1 fixed = 15 total (was 15)  |
| +1 |  checkstyle  |  1m 55s  |  the patch passed  |
| +1 |  mvneclipse  |  1m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 0s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  16m 36s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| +1 |  findbugs  |  3m 42s  |  the patch passed  |
| +1 |  javadoc  |  2m 49s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 40s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 55s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  106m 45s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 27s  |  hbase-it in the patch passed.  |
| -1 |  unit  |  108m 2s  |  root in the patch failed.  |
| +1 |  asflicense  |  1m 2s  |  The patch does not generate ASF License warnings.  |
|  |   |  281m 10s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.TestAcidGuarantees |
|   | hadoop.hbase.TestAcidGuarantees |
| Timed out junit tests | org.apache.hadoop.hbase.client.TestHCM |
|   | org.apache.hadoop.hbase.client.TestHCM |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16584 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  xml  |
| uname | Linux 2517ecbbdd42 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / c70769e |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| javac | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 17 **
Good. Only two failed UTs. Let me check.

** Comment 18 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 36 new or modified test files.  |
| 0 |  mvndep  |  0m 21s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 4s  |  branch-1 passed  |
| +1 |  compile  |  2m 48s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  2m 33s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 48s  |  branch-1 passed  |
| +1 |  mvneclipse  |  1m 24s  |  branch-1 passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| -1 |  findbugs  |  2m 1s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 54s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 40s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 13s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  3m 11s  |  the patch passed  |
| +1 |  compile  |  2m 34s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  cc  |  2m 34s  |  the patch passed  |
| +1 |  javac  |  2m 34s  |  the patch passed  |
| +1 |  compile  |  2m 40s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  cc  |  2m 40s  |  the patch passed  |
| -1 |  javac  |  0m 37s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| -1 |  javac  |  1m 26s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 14 unchanged - 1 fixed = 15 total (was 15)  |
| +1 |  checkstyle  |  1m 51s  |  the patch passed  |
| +1 |  mvneclipse  |  1m 20s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 1s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  16m 4s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| +1 |  findbugs  |  3m 24s  |  the patch passed  |
| +1 |  javadoc  |  2m 37s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 40s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 54s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  34m 58s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 25s  |  hbase-it in the patch passed.  |
| -1 |  unit  |  107m 42s  |  root in the patch failed.  |
| +1 |  asflicense  |  1m 4s  |  The patch does not generate ASF License warnings.  |
|  |   |  205m 51s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestReplicasClient |
|   | hadoop.hbase.client.TestReplicasClient |
| Timed out junit tests | org.apache.hadoop.hbase.ipc.TestSimpleRpcScheduler |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16584 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  xml  |
| uname | Linux 8186a1590bbd 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 7dfb3b3 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| javac | [link] |
| unit | [link] |
| unit | [link] |
| unit test logs |  [link] [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 36 new or modified test files.  |
| 0 |  mvndep  |  0m 22s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 49s  |  branch-1 passed  |
| +1 |  compile  |  2m 21s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  compile  |  2m 31s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  1m 49s  |  branch-1 passed  |
| +1 |  mvneclipse  |  1m 18s  |  branch-1 passed  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| -1 |  findbugs  |  1m 56s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  2m 25s  |  branch-1 passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 22s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 14s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  2m 57s  |  the patch passed  |
| +1 |  compile  |  2m 15s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  cc  |  2m 15s  |  the patch passed  |
| +1 |  javac  |  2m 15s  |  the patch passed  |
| +1 |  compile  |  2m 29s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  cc  |  2m 29s  |  the patch passed  |
| -1 |  javac  |  0m 34s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| -1 |  javac  |  1m 21s  |  root-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 14 unchanged - 1 fixed = 15 total (was 15)  |
| +1 |  checkstyle  |  1m 45s  |  the patch passed  |
| +1 |  mvneclipse  |  1m 18s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 0s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  15m 1s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| 0 |  findbugs  |  0m 0s  |  Skipped patched modules with no Java source: .  |
| +1 |  findbugs  |  3m 25s  |  the patch passed  |
| +1 |  javadoc  |  2m 24s  |  the patch passed with JDK v1.8.0_121  |
| +1 |  javadoc  |  3m 26s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 51s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  86m 38s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 25s  |  hbase-it in the patch passed.  |
| +1 |  unit  |  118m 59s  |  root in the patch passed.  |
| +1 |  asflicense  |  1m 8s  |  The patch does not generate ASF License warnings.  |
|  |   |  264m 41s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16584 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  xml  |
| uname | Linux f4fdd465a774 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / dc84c7b |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_121 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| javac | [link] |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it . U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 21 **
Checking the UT result, it seems to me the only failure is irrelative to changes here:
Failed tests: 
  TestCompactionInDeadRegionServer.test:132 Should fail as our wal file has already been closed, and walDir has also been renamed
So I guess this is a good base for review? Mind update the patch in RB sir ? Thanks.

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
FAILURE: Integrated in Jenkins build HBase-1.4 #672 (See )
HBASE-16584 Backport the new ipc implementation in HBASE-16432 to (zhangduo: rev 094e9a311bec55d0c198bb483b4b1d994c9428e4)
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (edit) hbase-server/src/test/protobuf/test_rpc_service.proto
* (delete) [file java]
* (add) [file java]
* (edit) pom.xml
* (add) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (delete) [file java]
* (delete) [file java]
* (delete) [file java]
* (add) [file java]
* (delete) [file java]
* (add) [file java]
* (edit) hbase-server/src/test/protobuf/test.proto
* (add) [file java]
* (delete) [file java]
* (delete) [file java]
* (add) [file java]
* (add) [file java]
* (delete) [file java]
* (delete) [file java]
* (add) [file java]
* (add) [file java]

"
HBASE-19239,https://issues.apache.org/jira/browse/HBASE-19239,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java,Fix findbugs and error-prone warnings (branch-1),YES,Fix important findbugs and error-prone warnings on branch-1.4 / branch-1. Forward port as appropriate. ,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Also, I'm still working through the errors on master and it's pretty slow going. Help is appreciated but I don't want to duplicate effort.

** Comment 4 **
bq.  I think we should run with MissingOverride and AssertEqualsArgumentOrderChecker disabled. There's far too many hits on both of those to have meaningful results.I've been fixing them. Easy enough. bq. I'm still working through the errors on master and it's pretty slow going. Help is appreciated but I don't want to duplicate effort.We should divide and conquer by branches. I'm working on branch-1 and branch-1.4. Someone else could work on branch-2 and master. 

** Comment 5 **
[Comment excluded]

** Comment 6 **
You may be able to save time by using [link] the auto-patching.I was not able to get it to work and was fixing problems manually, but if you have more patience, then maybe it will be fine.

** Comment 7 **
[Comment excluded]

** Comment 8 **
This is turning in to a lot of work. I'm going to plow through it. I should be done today. Here is what I am fixing:* Fix important or scary findbugs warnings, especially probable null dereferences and object monitor antipatterns. Suppress warnings where appropriate.* Fix places where we are using the wrong type in contains() or as lookup keys for maps* Fix places where we do byte.toString* Fix places where we test for reference equality - this is almost always wrong* Fix classes that override equals or hashCode but not both* Add override annotations where missing so the compiler can help us catch API change problems* Use AtomicInteger or AtomicLong where 'volatile' on primitive type is supposed to mean atomic* Fix infinite loops* Group operators with parenthesis where expressions are ambiguous or incorrect* If a method is static, refer to it correctly (with the class, not the reference)* Fix where we shadow a field from the parent in the subclass. This can be super confusing.* getDeclaredConstructor().newInstance() instead of just newInstance()* Make inner classes static wherever possible* Fix bad uses of Math.abs(), especially in conjunction with Random* Fix bad null checks in protobuf code - protobuf get() methods for lists never return null* Explicit casts for narrowing* Specify UTF_8 charset for string to byte conversions and vice versa, don't rely on default.Patches will be for branch-1.I'll forward port to branch-2 / master. Some hunks will apply. Rejects can be assumed to need a new analysis. I'll do that new analysis. The changes should not be controversial and so I plan to commit them as long as all unit tests continue to pass. I will put up patches here and on reviewboard and solicit feedback but there will be hundreds of hunks so I don't expect humans to do a detailed review. I do expect someone will want to do a pass over the deltas as a sanity check, but if nobody wants to do this, that is fine with me. Let me know. Commit targets are: branch-1.4, branch-1, branch-2, master.FYI   

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
I found a scary bug in the assignment manager, where we are relying on reference equality to avoid making a mistake with planning, and getting lucky because equals and hashCode for RegionPlan are IMHO broken. Here's the patch which fixes both problems. I'm going to run the full suite now but wanted comment on this change.{code}diff --git [file java] [file java]index 196ef05beb..b8c088a583 100644--- [file java]+++ [file java]@@ -2360,7 +2360,8 @@ public class AssignmentManager extends ZooKeeperListener {             return;           }-          if (plan plan.getDestination().equals(newPlan.getDestination())) {+          if (!plan.equals(newPlan) &&+                !plan.getDestination().equals(newPlan.getDestination())) {             // Clean out plan we failed execute and one that doesn't look like it'll             // succeed anyways; we need a new plan!             // Transition back to OFFLINEdiff --git [file java] [file java]index cd6b3131e1..92b08b8da4 100644--- [file java]+++ [file java]@@ -118,19 +118,30 @@ public class RegionPlan implements Comparable<RegionPlan> {   @Override   public int hashCode() {-    return getRegionName().hashCode();+    final int prime = 31;+    int result = 1;+    result = prime * result + ((dest == null) ? 0 : dest.hashCode());+    result = prime * result + ((hri == null) ? 0 : hri.hashCode());+    result = prime * result + ((source == null) ? 0 : source.hashCode());+    return result;   }   @Override   public boolean equals(Object obj) {-    if (this == obj) {-      return true;-    }-    if (obj == null || getClass() != obj.getClass()) {-      return false;-    }+    if (this == obj) return true;+    if (obj == null) return false;+    if (getClass() != obj.getClass()) return false;     RegionPlan other = (RegionPlan) obj;-    return compareTo(other) == 0;+    if (dest == null) {+      if (other.dest != null) return false;+    } else if (!dest.equals(other.dest)) return false;+    if (hri == null) {+      if (other.hri != null) return false;+    } else if (!hri.equals(other.hri)) return false;+    if (source == null) {+      if (other.source != null) return false;+    } else if (!source.equals(other.source)) return false;+    return true;   }   @Overridediff --git [file java] [file java]index e5b1ca5fac..545f9bbc23 100644--- [file java]+++ [file java]@@ -35,14 +35,13 @@ public class TestRegionPlan {     ServerName source = ServerName.valueOf(""source"", 1234, 2345);     ServerName dest = ServerName.valueOf(""dest"", 1234, 2345);-    // Identiy equality+    // Identity equality     RegionPlan plan = new RegionPlan(hri, source, dest);     assertEquals(plan.hashCode(), new RegionPlan(hri, source, dest).hashCode());     assertEquals(plan, new RegionPlan(hri, source, dest));-    // Source and destination not used for equality-    assertEquals(plan.hashCode(), new RegionPlan(hri, dest, source).hashCode());-    assertEquals(plan, new RegionPlan(hri, dest, source));+    // Source and destination not used for comparison+    assertEquals(0, plan.compareTo(new RegionPlan(hri, dest, source)));     // HRI is used for equality     HRegionInfo other = new HRegionInfo(TableName.valueOf(""other""));{code}Same issues exist in branch-2.  

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
bq. [file java]: boolean result is unused? Same for [file java]Yep these in effect turn off findbugs ""return value ignored"" warnings. It's a trade of one type of warning for another (findbugs to eclipse/checkstyle). We didn't use the result before so no harm. Or I can leave these alone so we continue to see them as findbugs issues. bq. In lots of places, I've heard that using StandardCharsets.UTF_8 is 15% slowerYou mean instead of just strings of ""UTF-8""? I'd prefer to keep the constants.bq. [file java]: why not start = rand.nextInt(numConnections)?bq. similar for [file java]Okbq. I'd like to request that you follow like you did on github and commit each module separately. Yeah I can do that. I've kept a sequence of per module commits in a local working branch. See [link]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
FAILURE: Integrated in Jenkins build HBase-1.5 #165 (See )
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev c179d5144f9caead37dddcdd6c92cd52dd4b50bd)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev f856cbf414e1d104904faca445fc8c57b9ceac81)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 5b7411290b8da8e09ef88e928a7113b910e3fbd5)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 24feb1ab75e8f878e2c42c98d9e8532ee0f5f1ae)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 357b3dbc3e3c289f2ac0ff6c6210cd226681dcb4)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev d80d3fa45487fedf203c7144e8267753e4d53529)
* (edit) hbase-server/src/main/resources/hbase-webapps/master/snapshotsStats.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/regionserver/region.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/master/table.jsp
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev e95f94a72dd9b550ccfea213644bf3130f61e65c)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 3436ed957cc1ecac8d3cfc13d90a56632b1be143)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev f6e93520bac6c88322682f22f03b410fea0178f8)


** Comment 24 **
FAILURE: Integrated in Jenkins build HBase-1.4 #1023 (See )
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 2d579a41409e7df7693b58442c7285e56b9d6b53)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 3444059a205a4eeb15a29f45ca609b8579803f5e)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 1a5e95ae98f0766ece02d09e613da728bdc06fda)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev ca186f9349a9b3095f179c8a406af33966a0ddd7)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev daf1fc6f1f0ee54221bc26692cedcb6478958a28)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 108ea30e3d84150b64fd644747c2f17170594704)
* (edit) hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/master/snapshotsStats.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/regionserver/region.jsp
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev b9475d3e759564676ba881610396af6a45fc725b)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev b2fa185f858dcae22c697dc3fcc91c23e0be8746)
HBASE-19239 Fix findbugs and error-prone issues (apurtell: rev 0f888cbcf3ac09319bb168111fa8b06510dd3eb5)


** Comment 25 **
This patch introduced a findbugs warnings for branch-1. So declare ClusterStatusPublisher.connected to volatile?[link]

** Comment 26 **
Ping . Maybe a addendum to fix the findbugs warning?

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   2m  8s |  branch-1 passed  || +1 |  compile  |   0m 33s |  branch-1 passed with JDK v1.8.0_152  || +1 |  compile  |   0m 42s |  branch-1 passed with JDK v1.7.0_161  || +1 |  checkstyle  |   1m 21s |  branch-1 passed  || +1 |  shadedjars  |   3m 55s |  branch has no errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   2m 13s |  hbase-server in branch-1 has 1 extant Findbugs warnings.  || +1 |  javadoc  |   0m 26s |  branch-1 passed with JDK v1.8.0_152  || +1 |  javadoc  |   0m 35s |  branch-1 passed with JDK v1.7.0_161  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 55s |  the patch passed  || +1 |  compile  |   0m 34s |  the patch passed with JDK v1.8.0_152  || +1 |  javac  |   0m 34s |  the patch passed  || +1 |  compile  |   0m 38s |  the patch passed with JDK v1.7.0_161  || +1 |  javac  |   0m 38s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  28m 31s |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 2.7.4.  || +1 |  findbugs  |   2m 25s |  hbase-server generated 0 new + 0 unchanged - 1 fixed = 0 total (was 1)  || +1 |  javadoc  |   0m 26s |  the patch passed with JDK v1.8.0_152  || +1 |  javadoc  |   0m 35s |  the patch passed with JDK v1.7.0_161  ||| || || ||  Other Tests  ||| +1 |  unit  |  86m  1s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   | 133m 49s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-19239 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1bd468030533 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 525b285 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_161 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_152 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_161 || findbugs | v3.0.0 || findbugs | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 30 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   1m 55s |  branch-1 passed  || +1 |  compile  |   0m 35s |  branch-1 passed with JDK v1.8.0_152  || +1 |  compile  |   0m 39s |  branch-1 passed with JDK v1.7.0_161  || +1 |  checkstyle  |   1m 18s |  branch-1 passed  || +1 |  shadedjars  |   4m  0s |  branch has no errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   2m 17s |  hbase-server in branch-1 has 1 extant Findbugs warnings.  || +1 |  javadoc  |   0m 28s |  branch-1 passed with JDK v1.8.0_152  || +1 |  javadoc  |   0m 35s |  branch-1 passed with JDK v1.7.0_161  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 55s |  the patch passed  || +1 |  compile  |   0m 36s |  the patch passed with JDK v1.8.0_152  || +1 |  javac  |   0m 36s |  the patch passed  || +1 |  compile  |   0m 39s |  the patch passed with JDK v1.7.0_161  || +1 |  javac  |   0m 39s |  the patch passed  || +1 |  checkstyle  |   1m 20s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  30m 13s |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 2.7.4.  || +1 |  findbugs  |   2m 35s |  hbase-server generated 0 new + 0 unchanged - 1 fixed = 0 total (was 1)  || +1 |  javadoc  |   0m 28s |  the patch passed with JDK v1.8.0_152  || +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_161  ||| || || ||  Other Tests  ||| +1 |  unit  |  87m 52s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   | 137m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-19239 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7d1c3d54f3ef 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 25cc8fe || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_161 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_152 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_161 || findbugs | v3.0.0 || findbugs | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 31 **
[Comment excluded]

** Comment 32 **
FAILURE: Integrated in Jenkins build HBase-1.4 #1048 (See )
HBASE-19239 (addendum) Fix findbugs and error-prone warnings (branch-1) (apurtell: rev ed9c8b1cfe22e3e59cf551fc30cb842a1f5004d2)


** Comment 33 **
[Comment excluded]
"
HBASE-16505,https://issues.apache.org/jira/browse/HBASE-16505,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/CallRunner.java,Save deadline in RpcCallContext according to request's timeout,NO,"If we want to know the correct setting of timeout in read/write path, we need add a new parameter in operation-methods of Region.","** Comment 1 **
Upload a patch which adds a new interface, AsyncRegion. We pass a RegionOperationContext with deadline (or other information in future) and get the result or exception with it. This issue only adds this new interface and handle TimeoutException at RPCServer. HRegion implements the methods of AsyncRegion but now they are only wrapping blocking methods.
In future, we can use the deadline to prevent wasting time on blocking operations in HRegion (other sub-tasks of HBASE-16492 will do this). And finally we can make operations of AsyncRegion fully non-blocking and Region's blocking methods will wrap non-blocking methods, or even we can remove the interface of blocking methods.
  Any suggestions? Thanks. 

** Comment 2 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  1m 16s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 33s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  4m 1s  |  master passed  |
| +1 |  compile  |  1m 12s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 14s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 17s  |  master passed  |
| +1 |  mvneclipse  |  0m 49s  |  master passed  |
| +1 |  findbugs  |  2m 58s  |  master passed  |
| +1 |  javadoc  |  0m 56s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 11s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 33s  |  the patch passed  |
| +1 |  compile  |  1m 6s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  1m 6s  |  the patch passed  |
| +1 |  compile  |  1m 16s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 16s  |  the patch passed  |
| +1 |  checkstyle  |  1m 14s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 48s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m 59s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 46s  |  the patch passed  |
| -1 |  findbugs  |  2m 18s  |  hbase-server generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0)  |
| +1 |  javadoc  |  0m 55s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 10s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 3s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  116m 38s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 45s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  1m 1s  |  The patch does not generate ASF License warnings.  |
|  |   |  180m 27s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.done; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.exception; locked 57% of time  Unsynchronized access at [file java]:57% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.result; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |
|   | hadoop.hbase.regionserver.TestRegionServerHostname |
| Timed out junit tests | org.apache.hadoop.hbase.snapshot.TestMobSecureExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestMobExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.1 Server=1.12.1 Image:yetus/hbase:date2016-08-30 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 54b57b2ce36d 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 9cb0094 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 19s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 20s  |  master passed  |
| +1 |  compile  |  1m 7s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 11s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 12s  |  master passed  |
| +1 |  mvneclipse  |  0m 44s  |  master passed  |
| +1 |  findbugs  |  3m 6s  |  master passed  |
| +1 |  javadoc  |  1m 2s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 7s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 27s  |  the patch passed  |
| +1 |  compile  |  1m 5s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  1m 16s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 16s  |  the patch passed  |
| +1 |  checkstyle  |  1m 16s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 46s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  30m 55s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 44s  |  the patch passed  |
| -1 |  findbugs  |  2m 23s  |  hbase-server generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0)  |
| +1 |  javadoc  |  0m 53s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 9s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 4s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  96m 51s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  0m 24s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 48s  |  The patch does not generate ASF License warnings.  |
|  |   |  156m 36s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.done; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.exception; locked 57% of time  Unsynchronized access at [file java]:57% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.result; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-02 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux f6af421008e6 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f6ccae3 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 14s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 3s  |  master passed  |
| +1 |  compile  |  1m 0s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 8s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 12s  |  master passed  |
| +1 |  mvneclipse  |  0m 43s  |  master passed  |
| +1 |  findbugs  |  2m 52s  |  master passed  |
| +1 |  javadoc  |  0m 47s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 4s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 22s  |  the patch passed  |
| +1 |  compile  |  0m 57s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 57s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| +1 |  checkstyle  |  1m 12s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 36s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 37s  |  the patch passed  |
| -1 |  findbugs  |  2m 16s  |  hbase-server generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0)  |
| +1 |  javadoc  |  0m 47s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 4s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 0s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  93m 36s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  0m 24s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 50s  |  The patch does not generate ASF License warnings.  |
|  |   |  147m 59s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.done; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.exception; locked 57% of time  Unsynchronized access at [file java]:57% of time  Unsynchronized access at [file java]: |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.result; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-05 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux c238f20b1af2 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / ab07f00 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 16s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 5s  |  master passed  |
| +1 |  compile  |  0m 58s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 9s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 12s  |  master passed  |
| +1 |  mvneclipse  |  0m 43s  |  master passed  |
| +1 |  findbugs  |  2m 55s  |  master passed  |
| +1 |  javadoc  |  0m 48s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 2s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 21s  |  the patch passed  |
| +1 |  compile  |  0m 58s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 58s  |  the patch passed  |
| +1 |  compile  |  1m 8s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 8s  |  the patch passed  |
| +1 |  checkstyle  |  1m 13s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 31s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 38s  |  the patch passed  |
| -1 |  findbugs  |  2m 16s  |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  |
| +1 |  javadoc  |  0m 48s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 5s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  0m 59s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  93m 2s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  0m 25s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 49s  |  The patch does not generate ASF License warnings.  |
|  |   |  147m 24s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Inconsistent synchronization of org.apache.hadoop.hbase.regionserver.RegionOperationContext.exception; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-05 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux c4d220d854d6 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / ab07f00 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 25 **
I think the findbugs warning is not an issue, we won't  set exception concurrently, even if we do this, any error is OK to throw.

** Comment 26 **
[Comment excluded]

** Comment 27 **
bq. So we can just remove it. Yu Li What do you think?
Agreed, let's remove it.
bq. I think the findbugs warning is not an issue, we won't set exception concurrently, even if we do this, any error is OK to throw.
If we set exception concurrently, there might be irrelative exception thrown and confuse user. Else, I see no bad to set the method to be synchronized to eliminate the findbugs warning. Wdyt?
bq. And what should we assert if we need a UT for RegionOperationContext?
Maybe something like {{testGetResultTimeout}} to make sure deadline setting works, or create a MockAsyncRegion, always throw some exception in normal append method, then make sure getResult will throw exception, etc.?

** Comment 28 **
Fix findbugs warning and add a test

** Comment 29 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| 0 |  mvndep  |  0m 21s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 15s  |  master passed  |
| +1 |  compile  |  0m 58s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 8s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 12s  |  master passed  |
| +1 |  mvneclipse  |  0m 44s  |  master passed  |
| +1 |  findbugs  |  2m 55s  |  master passed  |
| +1 |  javadoc  |  0m 48s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 3s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 22s  |  the patch passed  |
| +1 |  compile  |  0m 59s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 59s  |  the patch passed  |
| +1 |  compile  |  1m 9s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 9s  |  the patch passed  |
| +1 |  checkstyle  |  1m 11s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 25s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 38s  |  the patch passed  |
| +1 |  findbugs  |  3m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 47s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 4s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 0s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  93m 50s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  0m 25s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 51s  |  The patch does not generate ASF License warnings.  |
|  |   |  148m 26s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-06 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 1c3e6b4e08ad 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b6ba13c |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
We'd better declare the error in RegionOperationContext as Throwable instead of Exception. It is more generic.
The patch itself is OK, does not break anything. But what's next? Especially for coprocessor. Do we need to change the coprocessor interface?
Thanks.

** Comment 33 **
{quote}
We'd better declare the error in RegionOperationContext as Throwable instead of Exception
{quote}
Although the type of exception is Exception, now we only accept error(IOException exception) and error(TimeoutException exception). TimeoutException is newly added and blocking interface throws IOE. 
Do we need more? 

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
Future(or netty's Promise) has some methods to get the result synchronously, like get() or get(long timeout, TimeUnit unit), which is same as RegionOperationContext in patch v6. But when we make operations in RS fully non-blocking, the blocking methods are useless. What I thought before is using blocking method first and finally change it to the style of listeners. But if we want to make RegionOperationContext exactly what we really want, we do not need blocking methods.
So we can only support addListener in RegionOperationContext, and have a default implementation of listener supporting getting result/error. And as I mentioned last week, in fact now we will call AsyncRegion's method synchronously, after it done we will not be blocked by getResult() of the listener. In HBASE-16492, we can add some checkpoints to set timeout error to the context and exit the operation. Then when we call listener's getResult we will catch timeout exception. Finally, we can implement a new listener without getResult method and support more for SEDA, the RegionOperationContext will not be changed, and we need a centralized management for timeout like RPC client for each stage. The listeners will be guaranteed to be notified when timeout.

** Comment 38 **
Some thoughts for SEDA (Just to make sure RegionOperationContext can reach original intention ):
RPCServer's processRequest parse pb bytes to HBase's request and put the CallRunner to the thread pool of handlers. So at least here it is already a simple SEDA. What we need is splitting the logic in CallRunner.run to more stages for performance and availability(as mentioned in HBASE-16492).
In CallRunner now, we will call the method of region synchronously and encode the response to by bytes and write to Responder. So at least here we can split to two stages, operation of region and result handling. The main work for SDEA is spliting region operation to several stages(if need). So in the whole handling logic in RS, the first stage is parsing pb bytes, and the last stage is result handling. These two stages are RPC-level, for example, if we use PB for RPC, the code of these two stages will use PB's API. The middle stages which splits the operation of Region is unrelated with implementation of RPC. So RegionOperationContext should not contain any RPC-related objects, even should not contain any PB objects.
In a normal SEDA flow, for each stage we implement a Runnable. In stage N, we create a Runnable of stage N+1 and put it to the queue of stage N+1. However, there is a special case that in any stage if there is an error, we will skip all other stages and put the task to the final stage directly. The most simple way is to use listener. We can use a listener which creates the object of Runnable for the last stage and put it to its queue. Of course, if we don't have listener, we can still create it in each stage's code, but it is not graceful... 
Therefore, the RegionOperationContext will be passed from start to end to keep some info like deadline, result, error, etc. And support addListener to reuse some logic for result handling especially error handling.

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 1 new or modified test files.  |
| 0 |  mvndep  |  0m 19s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 13s  |  master passed  |
| +1 |  compile  |  0m 59s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  1m 9s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  1m 13s  |  master passed  |
| +1 |  mvneclipse  |  0m 44s  |  master passed  |
| +1 |  findbugs  |  2m 55s  |  master passed  |
| +1 |  javadoc  |  0m 48s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 3s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 22s  |  the patch passed  |
| +1 |  compile  |  0m 58s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 58s  |  the patch passed  |
| +1 |  compile  |  1m 8s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  1m 8s  |  the patch passed  |
| +1 |  checkstyle  |  1m 12s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 43s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 13s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 38s  |  the patch passed  |
| +1 |  findbugs  |  3m 21s  |  the patch passed  |
| +1 |  javadoc  |  0m 48s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  1m 3s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 0s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  102m 13s  |  hbase-server in the patch passed.  |
| +1 |  unit  |  0m 33s  |  hbase-it in the patch passed.  |
| +1 |  asflicense  |  0m 57s  |  The patch does not generate ASF License warnings.  |
|  |   |  157m 51s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-07 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 422ba8522088 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 7363a76 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-it U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 42 **
[Comment excluded]

** Comment 43 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 17s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 2s  |  master passed  |
| +1 |  compile  |  0m 44s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 52s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 45s  |  master passed  |
| +1 |  mvneclipse  |  0m 27s  |  master passed  |
| +1 |  findbugs  |  2m 51s  |  master passed  |
| +1 |  javadoc  |  0m 40s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 53s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 4s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  0m 45s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 1s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 26s  |  the patch passed  |
| +1 |  findbugs  |  3m 18s  |  the patch passed  |
| +1 |  javadoc  |  0m 39s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 52s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  0m 58s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  95m 12s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 31s  |  The patch does not generate ASF License warnings.  |
|  |   |  144m 22s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-07 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 7aed2362f138 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 7363a76 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 12s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 16s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 2s  |  master passed  |
| +1 |  compile  |  0m 46s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 53s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 48s  |  master passed  |
| +1 |  mvneclipse  |  0m 27s  |  master passed  |
| +1 |  findbugs  |  2m 56s  |  master passed  |
| +1 |  javadoc  |  0m 41s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 54s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 6s  |  the patch passed  |
| +1 |  compile  |  0m 45s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 45s  |  the patch passed  |
| +1 |  compile  |  0m 53s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 53s  |  the patch passed  |
| +1 |  checkstyle  |  0m 47s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 28s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 34s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 26s  |  the patch passed  |
| +1 |  findbugs  |  3m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 40s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 54s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 0s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  95m 36s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 36s  |  The patch does not generate ASF License warnings.  |
|  |   |  145m 56s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-08 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 829313d60695 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / e65817e |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 18s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 7s  |  master passed  |
| +1 |  compile  |  0m 46s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 53s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 47s  |  master passed  |
| +1 |  mvneclipse  |  0m 28s  |  master passed  |
| +1 |  findbugs  |  2m 54s  |  master passed  |
| +1 |  javadoc  |  0m 41s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 53s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 5s  |  the patch passed  |
| +1 |  compile  |  0m 46s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 46s  |  the patch passed  |
| +1 |  compile  |  0m 53s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 53s  |  the patch passed  |
| +1 |  checkstyle  |  0m 47s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 28s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 50s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 27s  |  the patch passed  |
| +1 |  findbugs  |  3m 34s  |  the patch passed  |
| +1 |  javadoc  |  0m 44s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 56s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 2s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  132m 46s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 40s  |  The patch does not generate ASF License warnings.  |
|  |   |  183m 59s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestHRegion |
| Timed out junit tests | org.apache.hadoop.hbase.regionserver.TestHRegion |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-08 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 526749a6bbb7 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / fc224ed |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 51 **
Failed test can pass locally, retry

** Comment 52 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 25s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 41s  |  master passed  |
| +1 |  compile  |  0m 51s  |  master passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 56s  |  master passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 51s  |  master passed  |
| +1 |  mvneclipse  |  0m 30s  |  master passed  |
| +1 |  findbugs  |  3m 15s  |  master passed  |
| +1 |  javadoc  |  0m 45s  |  master passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 57s  |  master passed with JDK v1.7.0_111  |
| 0 |  mvndep  |  0m 13s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 8s  |  the patch passed  |
| +1 |  compile  |  0m 48s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 48s  |  the patch passed  |
| +1 |  compile  |  0m 55s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 55s  |  the patch passed  |
| +1 |  checkstyle  |  0m 50s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 30s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  29m 44s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 26s  |  the patch passed  |
| +1 |  findbugs  |  3m 22s  |  the patch passed  |
| +1 |  javadoc  |  0m 42s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 54s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  unit  |  1m 0s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  96m 45s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 39s  |  The patch does not generate ASF License warnings.  |
|  |   |  151m 10s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-08 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 64860d5b0c2b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / fc224ed |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 53 **
[Comment excluded]

** Comment 54 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1564 (See )
HBASE-16505 Add AsyncRegion interface to pass deadline and support async (tedyu: rev 1574c6ef39ef8e624e5caaf9c378fffe480b0702)
* (add) [file java]
* (add) [file java]
* (add) [file java]
* (add) [file java]


** Comment 55 **
[Comment excluded]

** Comment 56 **
[Comment excluded]

** Comment 57 **
[Comment excluded]

** Comment 58 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1565 (See )
HBASE-16505 Add AsyncRegion interface to pass deadline and support async (tedyu: rev d7e5c6fa8e9c562d1d66b2da0edb5831b51fe013)
* (delete) [file java]
* (delete) [file java]
* (delete) [file java]
* (delete) [file java]


** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
I think we should first find the most suitable way to solve the problem, and then consider how to backport it.
For branch-1, if we can assume that the code is always execute in a rpc handler thread, then maybe we could use ThreadLocal to pass some parameters. For example, we already have a RpcServer.getCurrentCall to get the information of the current rpc call. Maybe we can add a getDeadline to the return value. But I think this is not a good practice so we should not use it on master.

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
[Comment excluded]

** Comment 65 **
[Comment excluded]

** Comment 66 **
[Comment excluded]

** Comment 67 **
Changing api of Region results in too many following changes just adding a new param and use CompletableFuture to get the return value. So my plan is use a RegionBase interface to cover all methods which will not have new version in current Region, eg. getRegionInfo(), and use two interface extend it: an interface which is same as now and a new one returning CompletableFuture, although it is still blocking at first. The first interface may be called BlockingRegion and marked as @Deprecated, and the second one call Region and expected to be used by default. In future we will change the implementation into fully non-blocking which we can discuss in HBASE-16583 (maybe not SEDA, but we indeed need async)
  What do you think? Thanks.

** Comment 68 **
[Comment excluded]

** Comment 69 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 23s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 5s  |  branch-1 passed  |
| +1 |  compile  |  0m 32s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 34s  |  branch-1 passed with JDK v1.7.0_111  |
| +1 |  checkstyle  |  0m 54s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 16s  |  branch-1 passed  |
| -1 |  findbugs  |  1m 52s  |  hbase-server in branch-1 has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 25s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 33s  |  branch-1 passed with JDK v1.7.0_111  |
| +1 |  mvninstall  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 30s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 30s  |  the patch passed  |
| +1 |  compile  |  0m 34s  |  the patch passed with JDK v1.7.0_111  |
| +1 |  javac  |  0m 34s  |  the patch passed  |
| +1 |  checkstyle  |  0m 54s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 16s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  16m 53s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 14s  |  the patch passed  |
| +1 |  findbugs  |  2m 12s  |  the patch passed  |
| +1 |  javadoc  |  0m 29s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 35s  |  the patch passed with JDK v1.7.0_111  |
| -1 |  unit  |  91m 36s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 24s  |  The patch does not generate ASF License warnings.  |
|  |   |  123m 31s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.regionserver.TestReplicationSourceManager |
|   | hadoop.hbase.regionserver.TestClusterId |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-09-18 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2b47b8f01f93 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 91d0369 |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 70 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 19s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 98 new or modified test files.  |
| 0 |  mvndep  |  0m 21s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 9s  |  master passed  |
| +1 |  compile  |  1m 3s  |  master passed  |
| +1 |  checkstyle  |  1m 6s  |  master passed  |
| +1 |  mvneclipse  |  0m 34s  |  master passed  |
| +1 |  findbugs  |  2m 56s  |  master passed  |
| +1 |  javadoc  |  0m 56s  |  master passed  |
| 0 |  mvndep  |  0m 8s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 16s  |  the patch passed  |
| +1 |  compile  |  1m 3s  |  the patch passed  |
| +1 |  javac  |  1m 3s  |  the patch passed  |
| +1 |  checkstyle  |  1m 6s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 33s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 21s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 31s  |  the patch passed  |
| -1 |  findbugs  |  2m 10s  |  hbase-server generated 7 new + 0 unchanged - 0 fixed = 7 total (was 0)  |
| +1 |  javadoc  |  1m 7s  |  the patch passed  |
| +1 |  unit  |  1m 14s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  89m 15s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 31s  |  hbase-examples in the patch passed.  |
| +1 |  asflicense  |  0m 37s  |  The patch does not generate ASF License warnings.  |
|  |   |  138m 52s  |   |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hbase-server |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.delete(RegionOperationContext, Delete)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.delete(RegionOperationContext, Delete)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.mutateRow(RegionOperationContext, RowMutations)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.mutateRow(RegionOperationContext, RowMutations)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.mutateRowsWithLocks(RegionOperationContext, Collection, Collection, long, long)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.mutateRowsWithLocks(RegionOperationContext, Collection, Collection, long, long)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor, long, long)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor, long, long)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor, long, long, long)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.processRowsWithLocks(RegionOperationContext, RowProcessor, long, long, long)  At [file java]: |
|  |  Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.put(RegionOperationContext, Put)  At [file java]:of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.hadoop.hbase.regionserver.HRegion.put(RegionOperationContext, Put)  At [file java]: |
| Timed out junit tests | org.apache.hadoop.hbase.client.TestFromClientSide |
|   | org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas |
|   | org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient |
|   | org.apache.hadoop.hbase.master.procedure.TestDeleteColumnFamilyProcedure |
|   | org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 0467e59dfa3d 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / 4faa8ea |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-examples U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 71 **
The findbugs warning is not a problem. We can pass null in complete. There is a issue in github but no reply: [link]

** Comment 72 **
[Comment excluded]

** Comment 73 **
[Comment excluded]

** Comment 74 **
[Comment excluded]

** Comment 75 **
[Comment excluded]

** Comment 76 **
[Comment excluded]

** Comment 77 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 18s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 56s  |  master passed  |
| +1 |  compile  |  0m 34s  |  master passed  |
| +1 |  checkstyle  |  0m 45s  |  master passed  |
| +1 |  mvneclipse  |  0m 13s  |  master passed  |
| +1 |  findbugs  |  1m 39s  |  master passed  |
| +1 |  javadoc  |  0m 26s  |  master passed  |
| +1 |  mvninstall  |  0m 43s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  checkstyle  |  0m 44s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 13s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 17s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 13s  |  the patch passed  |
| +1 |  findbugs  |  1m 56s  |  the patch passed  |
| +1 |  javadoc  |  0m 30s  |  the patch passed  |
| -1 |  unit  |  79m 15s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 12s  |  The patch does not generate ASF License warnings.  |
|  |   |  119m 49s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.master.procedure.TestDeleteTableProcedure |
|   | org.apache.hadoop.hbase.master.procedure.TestMasterProcedureEvents |
|   | org.apache.hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure |
|   | org.apache.hadoop.hbase.master.procedure.TestCloneSnapshotProcedure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux a6d3260e3a90 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 6b6a801 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 78 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 21s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 6s  |  branch-1 passed  |
| +1 |  compile  |  0m 37s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 37s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 57s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 18s  |  branch-1 passed  |
| -1 |  findbugs  |  2m 1s  |  hbase-server in branch-1 has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 29s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 36s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 33s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 33s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  checkstyle  |  0m 56s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 17s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  17m 24s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 15s  |  the patch passed  |
| +1 |  findbugs  |  2m 17s  |  the patch passed  |
| +1 |  javadoc  |  0m 26s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  91m 6s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 17s  |  The patch does not generate ASF License warnings.  |
|  |   |  124m 4s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestClusterId |
|   | hadoop.hbase.mapred.TestMultiTableSnapshotInputFormat |
| Timed out junit tests | org.apache.hadoop.hbase.replication.TestPerTableCFReplication |
|   | org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd |
|   | org.apache.hadoop.hbase.tool.TestCanaryTool |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:b2c5d84 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 8cc85a8e265f 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / acb1392 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 79 **
{code}
126	      } catch (TimeoutIOException e){
127	        RpcServer.LOG.info(""Can not complete this request in time, drop it: "" + call);
{code}
Should the log be at WARN level ?

** Comment 80 **
[Comment excluded]

** Comment 81 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 29s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  2m 56s  |  master passed  |
| +1 |  compile  |  0m 34s  |  master passed  |
| +1 |  checkstyle  |  0m 43s  |  master passed  |
| +1 |  mvneclipse  |  0m 13s  |  master passed  |
| +1 |  findbugs  |  1m 41s  |  master passed  |
| +1 |  javadoc  |  0m 25s  |  master passed  |
| +1 |  mvninstall  |  0m 43s  |  the patch passed  |
| +1 |  compile  |  0m 34s  |  the patch passed  |
| +1 |  javac  |  0m 34s  |  the patch passed  |
| +1 |  checkstyle  |  0m 44s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 13s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 57s  |  Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 13s  |  the patch passed  |
| +1 |  findbugs  |  1m 55s  |  the patch passed  |
| +1 |  javadoc  |  0m 28s  |  the patch passed  |
| -1 |  unit  |  87m 48s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 14s  |  The patch does not generate ASF License warnings.  |
|  |   |  128m 17s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.client.TestFromClientSide |
|   | org.apache.hadoop.hbase.client.TestIncrementFromClientSideWithCoprocessor |
|   | org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient |
|   | org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 136ed4cb52dc 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 83fc59d |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 82 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 19s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  1m 55s  |  branch-1 passed  |
| +1 |  compile  |  0m 37s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  compile  |  0m 37s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 56s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 17s  |  branch-1 passed  |
| -1 |  findbugs  |  2m 1s  |  hbase-server in branch-1 has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 25s  |  branch-1 passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 36s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  mvninstall  |  0m 47s  |  the patch passed  |
| +1 |  compile  |  0m 34s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javac  |  0m 34s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  checkstyle  |  0m 56s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 19s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  17m 22s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 15s  |  the patch passed  |
| +1 |  findbugs  |  2m 17s  |  the patch passed  |
| +1 |  javadoc  |  0m 23s  |  the patch passed with JDK v1.8.0_101  |
| +1 |  javadoc  |  0m 34s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  unit  |  92m 18s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 18s  |  The patch does not generate ASF License warnings.  |
|  |   |  124m 52s  |   |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.hbase.TestZooKeeper |
|   | org.apache.hadoop.hbase.snapshot.TestSecureExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestExportSnapshot |
|   | org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |
|   | org.apache.hadoop.hbase.regionserver.TestClusterId |
|   | org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:b2c5d84 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-16505 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux fd5cbbca3a1e 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 89bef67 |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 83 **
Findbugs warning is unrelated

** Comment 84 **
[Comment excluded]

** Comment 85 **
[Comment excluded]

** Comment 86 **
[Comment excluded]

** Comment 87 **
[Comment excluded]

** Comment 88 **
FAILURE: Integrated in Jenkins build HBase-1.4 #464 (See )
HBASE-16505 Pass deadline to HRegion operations (stack: rev a3c29da0b6c829a8c52012d50bdb81e9c07ceee3)


** Comment 89 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1775 (See )
HBASE-16505 Pass deadline to HRegion operations (stack: rev b8173a548c6bcc86cd4ca77b40bcabe3f0bd85fd)


** Comment 90 **
[Comment excluded]
"
HBASE-18478,https://issues.apache.org/jira/browse/HBASE-18478,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java,Allow users to remove RegionFinder from LoadBalancer calculations if no locality possible,NO,BaseLoadBalancer should have the option to remove RegionFinder from load balancing. This provides significant cluster start time reduction for FileSystems that do not surface locality such as Amazon S3.,"** Comment 1 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 19s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |   1m 58s |  branch-1 passed  |
| +1 |  compile  |   0m 35s |  branch-1 passed with JDK v1.8.0_131  |
| +1 |  compile  |   0m 35s |  branch-1 passed with JDK v1.7.0_131  |
| +1 |  checkstyle  |   0m 58s |  branch-1 passed  |
| +1 |  mvneclipse  |   0m 18s |  branch-1 passed  |
| +1 |  findbugs  |   2m  1s |  branch-1 passed  |
| +1 |  javadoc  |   0m 27s |  branch-1 passed with JDK v1.8.0_131  |
| +1 |  javadoc  |   0m 36s |  branch-1 passed with JDK v1.7.0_131  |
| +1 |  mvninstall  |   0m 43s |  the patch passed  |
| +1 |  compile  |   0m 34s |  the patch passed with JDK v1.8.0_131  |
| +1 |  javac  |   0m 34s |  the patch passed  |
| +1 |  compile  |   0m 35s |  the patch passed with JDK v1.7.0_131  |
| +1 |  javac  |   0m 35s |  the patch passed  |
| +1 |  checkstyle  |   0m 55s |  the patch passed  |
| +1 |  mvneclipse  |   0m 18s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  16m  8s |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  findbugs  |   2m 15s |  the patch passed  |
| +1 |  javadoc  |   0m 28s |  the patch passed with JDK v1.8.0_131  |
| +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.7.0_131  |
| -1 |  unit  |  97m 20s |  hbase-server in the patch failed.  |
| +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  |
|  |   | 128m 24s |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestSCVFWithMiniCluster |
|   | hadoop.hbase.client.TestClientScannerRPCTimeout |
|   | hadoop.hbase.master.TestAssignmentListener |
|   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery |
|   | hadoop.hbase.regionserver.TestRSKilledWhenInitializing |
|   | hadoop.hbase.security.visibility.TestVisibilityLabelsWithACL |
|   | hadoop.hbase.mapreduce.TestTableSnapshotInputFormat |
|   | hadoop.hbase.TestZooKeeper |
| Timed out junit tests | org.apache.hadoop.hbase.security.access.TestAccessController2 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:6f1cc2c |
| JIRA Issue | HBASE-18478 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 2281bbf55468 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 9278037 |
| Default Java | 1.7.0_131 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_131 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_131 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 2 **
Patch seems fine. This only use of RegionFinder in the code base? 

** Comment 3 **
[Comment excluded]

** Comment 4 **
 These are the only uses in the codebase besides the other loadbalancers using regionFinder to create the cluster which is the point of this patch, so we are good. 
It doesn't look like any of the unit test failures are related (most of them are timeouts and this is a configured setting so it should have no default change).

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-1.5 #71 (See )
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev bafc6e523efba67b5829d2095500c134df1ae4ce)


** Comment 13 **
FAILURE: Integrated in Jenkins build HBase-2.0 #543 (See )
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev d0a54352e8a4f27adaaa62447d1eef61e45922a7)


** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #3744 (See )
HBASE-18478 Allow users to remove RegionFinder from LoadBalancer (apurtell: rev 8301734594011e7f94f992e6f8c815580a6b62d8)


** Comment 16 **
We should ask Hadoop to add a way for us to query the FileSystem for this kind of information so that our users don't have to know to turn a configuration knob.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
This test fails consistently after this went in:
[link]
Zach:
Can you check ?

** Comment 20 **
TestMultiRespectsLimits passes for me repeatedly. Test JRE is 8u131. Checked with master, branch-2, and branch-1. Not sure how that failure could be related to this change. I'm guessing something else is going on. Can you post detail sufficient for reproduction ? 
I wouldn't have committed if the branch-1 suite had a failure due to this change, FWIW

** Comment 21 **
Here is the version of Java on Linux where I can reproduce the test failure:
java version ""1.8.0_131""
Java(TM) SE Runtime Environment (build 1.8.0_131-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)
Flaky test board led me to this JIRA since the commit was the first build where the test failed - and it has been failing consistently on Apache Jenkins.

** Comment 22 **
Ok I switched to a different dev box (Linux) and can repro, but the failure happens at bc790fe26acb9449afd7b3d316e6661933a86b40 on master which is the commit before this one, so you're barking up the wrong tree Ted. 

** Comment 23 **
hmm
Would change to src/site/site.xml cause the test to fail ?
"
HBASE-18024,https://issues.apache.org/jira/browse/HBASE-18024,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionFileSystem.java,HRegion#initializeRegionInternals should not re-create .hregioninfo file when the region directory no longer exists,YES,"When a RegionSever attempts to open a region, during initialization the RS tries to open the {{<hbase.root.dir>/data/<table>/<region>/.hregioninfo}} file, however if the {{.hregioninfofile}} doesn't exist, the RegionServer will create a new one on {{HRegionFileSystem#checkRegionInfoOnFilesystem}}. A side effect of that tools like hbck will incorrectly assume an inconsistency due the presence of this new {{.hregioninfofile}}
","** Comment 1 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 18s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |   3m 18s |  master passed  |
| +1 |  compile  |   0m 40s |  master passed  |
| +1 |  checkstyle  |   0m 47s |  master passed  |
| +1 |  mvneclipse  |   0m 16s |  master passed  |
| +1 |  findbugs  |   3m 21s |  master passed  |
| +1 |  javadoc  |   0m 28s |  master passed  |
| +1 |  mvninstall  |   0m 46s |  the patch passed  |
| +1 |  compile  |   0m 40s |  the patch passed  |
| +1 |  javac  |   0m 40s |  the patch passed  |
| +1 |  checkstyle  |   0m 48s |  the patch passed  |
| +1 |  mvneclipse  |   0m 16s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m 26s |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4.  |
| +1 |  findbugs  |   3m 39s |  the patch passed  |
| +1 |  javadoc  |   0m 29s |  the patch passed  |
| -1 |  unit  |  22m 59s |  hbase-server in the patch failed.  |
| +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  |
|  |   |  70m 41s |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestWALMonotonicallyIncreasingSeqId |
|   | hadoop.hbase.regionserver.TestStoreFileRefresherChore |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18024 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 6a7c46fbc9f9 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 31c3eda |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 2 **
Both failures are related to the patch, looking into.

** Comment 3 **
Any update on those test failures, ? Anything I can do to help out?

** Comment 4 **
Got a fix for the test in TestWALMonotonicallyIncreasingSeqId which is fine. What is interesting is in TestStoreFileRefresherChore, which is what was uncovered while troubleshooting the issue that brought this JIRA. After my change HRegion.initialize() will not attempt to re-create the regioninfo file, but throwing an exception will cause the test to fail since the region replica cannot be instantiated. One option I've been thinking is to modify HRegion#initialize() to have an optional argument to initialize the region on the filesystem in order to skip writeRegionInfoOnFilesystem.

** Comment 5 **
New patch adds an extra step in {{HRegion.initializeRegionInternals(}}:
{code}
if (this.getRegionInfo().getReplicaId() == HRegionInfo.DEFAULT_REPLICA_ID) {
      status.setStatus(""Writing region info on filesystem"");
      fs.checkRegionInfoOnFilesystem();
}
{code}
Which basically only allows the primary replica to create a new {{.regioninfo}} when a region is instantiated.

** Comment 6 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 19s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  |
| +1 |  mvninstall  |   3m 46s |  master passed  |
| +1 |  compile  |   0m 47s |  master passed  |
| +1 |  checkstyle  |   0m 52s |  master passed  |
| +1 |  mvneclipse  |   0m 19s |  master passed  |
| +1 |  findbugs  |   3m 26s |  master passed  |
| +1 |  javadoc  |   0m 33s |  master passed  |
| +1 |  mvninstall  |   0m 52s |  the patch passed  |
| +1 |  compile  |   0m 49s |  the patch passed  |
| +1 |  javac  |   0m 49s |  the patch passed  |
| +1 |  checkstyle  |   0m 56s |  the patch passed  |
| +1 |  mvneclipse  |   0m 17s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m  5s |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4.  |
| +1 |  findbugs  |   2m 54s |  the patch passed  |
| +1 |  javadoc  |   0m 29s |  the patch passed  |
| -1 |  unit  |  21m 20s |  hbase-server in the patch failed.  |
| +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  |
|  |   |  69m 13s |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.regionserver.TestStoreFileRefresherChore |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18024 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux cda898c28f03 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / f314b59 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 7 **
New version avoids creating a new {{.regioninfo}} only if region is a replica.

** Comment 8 **
Triggered QA run for patch v3.
{code}
+        LOG.debug(""Skipping creation of .regioninfo file for "" + this.getRegionInfo());
{code}
Consider adding replica Id in the above log message.
{code}
+  public void testNonExistingRegionReplica() throws Exception {
{code}
NonExisting -> NonExistent

** Comment 9 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 15s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  |
| +1 |  mvninstall  |   3m 37s |  master passed  |
| +1 |  compile  |   0m 39s |  master passed  |
| +1 |  checkstyle  |   0m 48s |  master passed  |
| +1 |  mvneclipse  |   0m 16s |  master passed  |
| +1 |  findbugs  |   3m  7s |  master passed  |
| +1 |  javadoc  |   0m 32s |  master passed  |
| +1 |  mvninstall  |   0m 48s |  the patch passed  |
| +1 |  compile  |   0m 38s |  the patch passed  |
| +1 |  javac  |   0m 38s |  the patch passed  |
| +1 |  checkstyle  |   0m 47s |  the patch passed  |
| +1 |  mvneclipse  |   0m 15s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  30m 39s |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4.  |
| +1 |  findbugs  |   3m  5s |  the patch passed  |
| +1 |  javadoc  |   0m 29s |  the patch passed  |
| +1 |  unit  | 111m 22s |  hbase-server in the patch passed.  |
| +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  |
|  |   | 158m  1s |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18024 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 0040094b56df 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / f314b59 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 10 **
Thanks for the quick review . I don't think there is any reason to print just the replica ID since to {{HRegionInfo.toString()}} already does that:
{code}
public String toString() {
    return ""{ENCODED => "" + getEncodedName() + "", "" +
      HConstants.NAME + "" => '"" + Bytes.toStringBinary(this.regionName)
      + ""', STARTKEY => '"" +
      Bytes.toStringBinary(this.startKey) + ""', ENDKEY => '"" +
      Bytes.toStringBinary(this.endKey) + ""'"" +
      (isOffline()? "", OFFLINE => true"": """") +
      (isSplit()? "", SPLIT => true"": """") +
      ((replicaId > 0)? "", REPLICA_ID => "" + replicaId : """") + ""}"";
  }
{code}
New patch only adds some more logging in debug mode and typo in test.

** Comment 11 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |   0m 18s |  Docker mode activated.  |
| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  |
| +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  |
| +1 |  mvninstall  |   3m 43s |  master passed  |
| +1 |  compile  |   0m 39s |  master passed  |
| +1 |  checkstyle  |   0m 49s |  master passed  |
| +1 |  mvneclipse  |   0m 17s |  master passed  |
| +1 |  findbugs  |   2m 45s |  master passed  |
| +1 |  javadoc  |   0m 29s |  master passed  |
| +1 |  mvninstall  |   0m 46s |  the patch passed  |
| +1 |  compile  |   0m 40s |  the patch passed  |
| +1 |  javac  |   0m 40s |  the patch passed  |
| +1 |  checkstyle  |   0m 48s |  the patch passed  |
| +1 |  mvneclipse  |   0m 16s |  the patch passed  |
| +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  31m  4s |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha4.  |
| +1 |  findbugs  |   3m 37s |  the patch passed  |
| +1 |  javadoc  |   0m 34s |  the patch passed  |
| +1 |  unit  | 124m 12s |  hbase-server in the patch passed.  |
| +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  |
|  |   | 171m 37s |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:bdc94b1 |
| JIRA Issue | HBASE-18024 |
| JIRA Patch URL | [link] |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux a360191fbae5 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 6246523 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC3 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.4.0   [link] |
This message was automatically generated.


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #226 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev 77847da928f9ee79674f54f8dc517fdbde35287f)


** Comment 15 **
[Comment excluded]

** Comment 16 **
FAILURE: Integrated in Jenkins build HBase-1.2-JDK7 #189 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev 11503fc6e65a6e350d4a17cd6031d6ae4d204bdc)


** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #240 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev 77847da928f9ee79674f54f8dc517fdbde35287f)


** Comment 20 **
FAILURE: Integrated in Jenkins build HBase-1.4 #845 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev 15bad3c0367717e3e79fe5b2ac42ab713fbeddb6)


** Comment 21 **
[Comment excluded]

** Comment 22 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #3510 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev efd211debd8a37f215b1a6fdb982aa3ca890bc40)


** Comment 23 **
FAILURE: Integrated in Jenkins build HBASE-14070.HLC #233 (See )
HBASE-18024 HRegion#initializeRegionInternals should not re-create (esteban: rev efd211debd8a37f215b1a6fdb982aa3ca890bc40)

"
HBASE-17522,https://issues.apache.org/jira/browse/HBASE-17522,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreChunkPool.java,RuntimeExceptions from MemoryMXBean should not take down server process,NO,"RegionServer died after MemoryMXBean threw an IllegalArgumentException while attempting to create a MemoryUsage object for the heap during construction of the server load.

We shouldn't allow failure to get load information to take down the RS.","** Comment 1 **
Relevant redacted stacktrace
{code}
2017-01-22 22:19:12,788 FATAL HRegionServer - ABORTING region server regionserver1.example.com,16020,1484495193762: Unhandled: committed = 34426847
232 should be < max = 34359738368
java.lang.IllegalArgumentException: committed = 34426847232 should be < max = 34359738368
at java.lang.management.MemoryUsage.<init>([file java]:160)
at sun.management.MemoryImpl.getMemoryUsage0(Native Method)
at sun.management.MemoryImpl.getHeapMemoryUsage([file java]:71)
at org.apache.hadoop.hbase.regionserver.HRegionServer.buildServerLoad([file java]:1183)
at org.apache.hadoop.hbase.regionserver.HRegionServer.tryRegionServerReport([file java]:1149)
at org.apache.hadoop.hbase.regionserver.HRegionServer.run([file java]:966)
at java.lang.Thread.run([file java]:745)
2017-01-22 22:19:12,788 FATAL HRegionServer - RegionServer abort: loaded coprocessors are: 
{code}

** Comment 2 **
-00
  * ensure all uses of MemoryMXBean are wrapped in {{try...catch(RuntimeException)}}
  * on exception, WARN and treat as {{MemoryUsage}} with undefineds
  * move a few size calculations based on memory from {{CacheConfig}} to {{MemorySizeUtil}}
  * move {{FlushType}} out into its own file, since it is not an inner enum.

** Comment 3 **
I'd like to bring this back to 1.2. Please let me know if you're fine with it in 1.3.z . If it comes back to 1.2 I'll probably also make a go at 1.1, fyi .

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 38s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 31s  |  master passed  |
| +1 |  compile  |  0m 36s  |  master passed  |
| +1 |  checkstyle  |  0m 44s  |  master passed  |
| +1 |  mvneclipse  |  0m 14s  |  master passed  |
| -1 |  findbugs  |  1m 42s  |  hbase-server in master has 1 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 27s  |  master passed  |
| +1 |  mvninstall  |  0m 41s  |  the patch passed  |
| +1 |  compile  |  0m 36s  |  the patch passed  |
| +1 |  javac  |  0m 36s  |  the patch passed  |
| +1 |  checkstyle  |  0m 44s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  30m 13s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  4m 20s  |  the patch passed  |
| +1 |  javadoc  |  1m 11s  |  the patch passed  |
| +1 |  unit  |  90m 38s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 14s  |  The patch does not generate ASF License warnings.  |
|  |   |  137m 14s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.11.2 Server=1.11.2 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17522 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux b804fc43ec6b 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 4254d7e |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
| findbugs | [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 7 **
Seems odd have MemorySizeUtil 'know' about LRU and Bucket Caches. Does it have to? (I do see this util class already had cache mentions going on).
nit: This could be a method?
207	      long max = -1L;
208	      try {
209	        max = ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getMax();
210	      } catch (RuntimeException exception) {
211	        LOG.warn(JVM_HEAP_EXCEPTION, exception);
212	      }
It is repeated four times in same class?
smaller nit: This is repeated too:
102	  long usedHeap = -1L;
103	  long maxHeap = -1L;
104	  try {
105	    final MemoryUsage heap = ManagementFactory.getMemoryMXBean().getHeapMemoryUsage();
106	    maxHeap = heap.getMax();
107	    usedHeap = heap.getUsed();
108	  } catch (RuntimeException exception) {
109	    final Log LOG = LogFactory.getLog(getClass());
110	    LOG.warn(MemorySizeUtil.JVM_HEAP_EXCEPTION, exception);
111	  }
Could return a pair?
Above is not important.
Otherwise patch is great 

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
+1
Method is fine where it is.
Thanks Sean.

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 14s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| +1 |  mvninstall  |  3m 21s  |  master passed  |
| +1 |  compile  |  0m 36s  |  master passed  |
| +1 |  checkstyle  |  0m 44s  |  master passed  |
| +1 |  mvneclipse  |  0m 14s  |  master passed  |
| +1 |  findbugs  |  1m 41s  |  master passed  |
| +1 |  javadoc  |  0m 28s  |  master passed  |
| +1 |  mvninstall  |  0m 40s  |  the patch passed  |
| +1 |  compile  |  0m 35s  |  the patch passed  |
| +1 |  javac  |  0m 35s  |  the patch passed  |
| +1 |  checkstyle  |  0m 46s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  27m 24s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  1m 52s  |  the patch passed  |
| +1 |  javadoc  |  0m 27s  |  the patch passed  |
| +1 |  unit  |  83m 18s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 16s  |  The patch does not generate ASF License warnings.  |
|  |   |  123m 8s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17522 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux c30faab56e8f 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / e68ab09 |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #102 (See )
HBASE-17522 Handle JVM throwing runtime exceptions when we ask for (busbey: rev 69766274e42a220748902685189a2d7144b4dae0)
* (edit) hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl.jamon
* (add) [file java]


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
FAILURE: Integrated in Jenkins build HBase-1.3-IT #821 (See )
HBASE-17522 Handle JVM throwing runtime exceptions when we ask for (busbey: rev 7efa34b426fd1ec096b7d0297af4da48d201e73d)
* (edit) hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl.jamon
* (add) [file java]


** Comment 19 **
FAILURE: Integrated in Jenkins build HBase-1.2-IT #587 (See )
HBASE-17522 Handle JVM throwing runtime exceptions when we ask for (busbey: rev 7efa34b426fd1ec096b7d0297af4da48d201e73d)
* (add) [file java]
* (edit) hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl.jamon


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]
"
HBASE-17057,https://issues.apache.org/jira/browse/HBASE-17057,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java,Minor compactions should also drop page cache behind reads,NO,"Long compactions currently drop cache behind reads/writes so that they don't pollute the page cache but short compactions don't do that. The bulk of the data is actually read during minor compactions instead of major compactions,  and thrashes the page cache since it's mostly not needed. 

We should drop page cache behind minor compactions too. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 15s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| +1 |  mvninstall  |  3m 17s  |  master passed  |
| +1 |  compile  |  0m 42s  |  master passed  |
| +1 |  checkstyle  |  0m 47s  |  master passed  |
| +1 |  mvneclipse  |  0m 14s  |  master passed  |
| +1 |  findbugs  |  1m 53s  |  master passed  |
| +1 |  javadoc  |  0m 29s  |  master passed  |
| +1 |  mvninstall  |  0m 49s  |  the patch passed  |
| +1 |  compile  |  0m 39s  |  the patch passed  |
| +1 |  javac  |  0m 39s  |  the patch passed  |
| +1 |  checkstyle  |  0m 46s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 14s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  28m 47s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 5s  |  the patch passed  |
| +1 |  javadoc  |  0m 32s  |  the patch passed  |
| -1 |  unit  |  137m 54s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 15s  |  The patch does not generate ASF License warnings.  |
|  |   |  179m 58s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestMasterReplication |
|   | hadoop.hbase.client.TestHTableMultiplexer |
|   | hadoop.hbase.master.TestAssignmentManagerMetrics |
|   | hadoop.hbase.client.TestHTableMultiplexerFlushCache |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.2 Server=1.12.2 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17057 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 240f5c874cf2 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / b208687 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-server U: hbase-server |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 6 **
Since this is now based on configuration rather than overloading the compaction policy throttle threshold, the configuration keys need to be added to hbase-default.xml with a description.
It's also worth pointing out that defaulting to true for this on minor compactions is a change in behavior, which is questionable for a point release (if this goes in to 1.3.1), though I'm not sure when you would want the old behavior.
Can you double check that this actually is effective on master?  Looking at StoreFileScanner.getScannersForStoreFiles (line 126), I see canUseDrop as a param, but don't see it used anywhere...

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 12s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| -1 |  test4tests  |  0m 0s  |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 52s  |  master passed  |
| +1 |  compile  |  0m 50s  |  master passed  |
| +1 |  checkstyle  |  0m 36s  |  master passed  |
| +1 |  mvneclipse  |  0m 21s  |  master passed  |
| +1 |  findbugs  |  2m 12s  |  master passed  |
| +1 |  javadoc  |  0m 38s  |  master passed  |
| 0 |  mvndep  |  0m 9s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 54s  |  the patch passed  |
| +1 |  compile  |  0m 48s  |  the patch passed  |
| +1 |  javac  |  0m 48s  |  the patch passed  |
| +1 |  checkstyle  |  0m 36s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 24s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  xml  |  0m 1s  |  The patch has no ill-formed XML file.  |
| +1 |  hadoopcheck  |  25m 59s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 22s  |  the patch passed  |
| +1 |  javadoc  |  0m 37s  |  the patch passed  |
| +1 |  unit  |  1m 48s  |  hbase-common in the patch passed.  |
| +1 |  unit  |  89m 53s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 31s  |  The patch does not generate ASF License warnings.  |
|  |   |  132m 19s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17057 |
| Optional Tests |  asflicense  javac  javadoc  unit  xml  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 998ffcacd9a8 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh |
| git revision | master / bc168b4 |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-common hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 10 **
[Comment excluded]

** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-1.4 #645 (See )
HBASE-17057 Minor compactions should also drop page cache (Ashu (garyh: rev 4b8195f22c1adf414d96f7e9f819c95ea6333479)
* (edit) hbase-common/src/main/resources/hbase-default.xml


** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]
"
HBASE-17290,https://issues.apache.org/jira/browse/HBASE-17290,https://github.com/apache/hbase/blob/rel/1.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HFileReplicator.java,Potential loss of data for replication of bulk loaded hfiles,NO,"Currently the support for replication of bulk loaded hfiles relies on bulk load marker written in the WAL.

The move of bulk loaded hfile(s) (into region directory) may succeed but the write of bulk load marker may fail.
This means that although bulk loaded hfile is being served in source cluster, the replication wouldn't happen.

Normally operator is supposed to retry the bulk load. But relying on human retry is not robust solution.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 13s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 23s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 6s  |  master passed  |
| +1 |  compile  |  0m 49s  |  master passed  |
| +1 |  checkstyle  |  0m 42s  |  master passed  |
| +1 |  mvneclipse  |  0m 23s  |  master passed  |
| +1 |  findbugs  |  2m 29s  |  master passed  |
| +1 |  javadoc  |  0m 43s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 56s  |  the patch passed  |
| +1 |  compile  |  0m 50s  |  the patch passed  |
| +1 |  javac  |  0m 50s  |  the patch passed  |
| +1 |  checkstyle  |  0m 42s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 35s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 46s  |  the patch passed  |
| +1 |  javadoc  |  0m 43s  |  the patch passed  |
| +1 |  unit  |  1m 5s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  81m 7s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 29s  |  The patch does not generate ASF License warnings.  |
|  |   |  125m 5s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestMasterReplication |
|   | hadoop.hbase.regionserver.TestHRegion |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17290 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux ef0fbfb7688c 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / dba103e |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 8 **
Test failure was caused by:
{code}
Caused by: java.lang.NullPointerException
	at org.apache.hadoop.hbase.replication.TestMasterReplication.startMiniClusters([file java]:492)
	at org.apache.hadoop.hbase.replication.TestMasterReplication.testHFileMultiSlaveReplication([file java]:331)
{code}
Please fix in the next patch.

** Comment 9 **
Please enrich the javadoc with explanation for the second component of the Pair.
{code}
+   * @param pairs list of hfile references to be added
{code}
Please make the parameter name consistent - should be pairs
{code}
+  public void addHFileRefs(String peerId, List<Pair<Path, Path>> files)
{code}
For [file java], please reference the format of license header of existing classes.
Consider adding @InterfaceAudience.LimitedPrivate(HBaseInterfaceAudience.CONFIG) to this class.
{code}
+      LOG.debug(""Skipping recording bulk load entries in preCommitStoreFile for bulkloaded ""
+          + ""data replication."");
{code}
It would be better if the case for bulk load replication and the case where pairs is empty are logged separately.
This would facilitate troubleshooting.
Can you point me to the code which handles the case where Path for bulk loaded hfile is recorded but the commit (move of hfile) fails ?
In that scenario, the file wouldn't be found at time of replication.

** Comment 10 **
{quote} Can you point me to the code which handles the case where Path for bulk loaded hfile is recorded but the commit (move of hfile) fails ?
In that scenario, the file wouldn't be found at time of replication. {quote}
In that scenario we will end up here, [link]#L380

** Comment 11 **
The LOG in that catch block is at error level.
Consider changing it to DEBUG since the absence of hfile implies error in the commit step (which should be remedied by operator retry).

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
| (/) *+1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 10s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 51s  |  master passed  |
| +1 |  compile  |  0m 50s  |  master passed  |
| +1 |  checkstyle  |  0m 42s  |  master passed  |
| +1 |  mvneclipse  |  0m 21s  |  master passed  |
| +1 |  findbugs  |  2m 29s  |  master passed  |
| +1 |  javadoc  |  0m 43s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 57s  |  the patch passed  |
| +1 |  compile  |  0m 51s  |  the patch passed  |
| +1 |  javac  |  0m 51s  |  the patch passed  |
| +1 |  checkstyle  |  0m 42s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 22s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 4s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  2m 47s  |  the patch passed  |
| +1 |  javadoc  |  0m 43s  |  the patch passed  |
| +1 |  unit  |  1m 1s  |  hbase-client in the patch passed.  |
| +1 |  unit  |  80m 47s  |  hbase-server in the patch passed.  |
| +1 |  asflicense  |  0m 26s  |  The patch does not generate ASF License warnings.  |
|  |   |  123m 36s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17290 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 45b15a51594d 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / df98d8d |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  10m 37s  |  Docker mode activated.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 21s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  1m 42s  |  branch-1 passed  |
| +1 |  compile  |  0m 44s  |  branch-1 passed with JDK v1.8.0_111  |
| +1 |  compile  |  0m 50s  |  branch-1 passed with JDK v1.7.0_80  |
| +1 |  checkstyle  |  0m 52s  |  branch-1 passed  |
| +1 |  mvneclipse  |  0m 28s  |  branch-1 passed  |
| -1 |  findbugs  |  1m 54s  |  hbase-server in branch-1 has 2 extant Findbugs warnings.  |
| +1 |  javadoc  |  0m 39s  |  branch-1 passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 52s  |  branch-1 passed with JDK v1.7.0_80  |
| 0 |  mvndep  |  0m 12s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  0m 59s  |  the patch passed  |
| +1 |  compile  |  0m 44s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javac  |  0m 44s  |  the patch passed  |
| +1 |  compile  |  0m 51s  |  the patch passed with JDK v1.7.0_80  |
| -1 |  javac  |  0m 34s  |  hbase-server-jdk1.7.0_80 with JDK v1.7.0_80 generated 1 new + 4 unchanged - 1 fixed = 5 total (was 5)  |
| +1 |  checkstyle  |  0m 52s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 27s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  14m 57s  |  The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1.  |
| +1 |  hbaseprotoc  |  0m 25s  |  the patch passed  |
| +1 |  findbugs  |  3m 20s  |  the patch passed  |
| +1 |  javadoc  |  0m 39s  |  the patch passed with JDK v1.8.0_111  |
| +1 |  javadoc  |  0m 53s  |  the patch passed with JDK v1.7.0_80  |
| +1 |  unit  |  1m 50s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  84m 50s  |  hbase-server in the patch failed.  |
| +1 |  asflicense  |  0m 32s  |  The patch does not generate ASF License warnings.  |
|  |   |  132m 14s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.client.TestMetaWithReplicas |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:e01ee2f |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-17290 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 9dd280c94211 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/hbase.sh |
| git revision | branch-1 / 667c5eb |
| Default Java | 1.7.0_80 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-oracle:1.7.0_80 |
| findbugs | v3.0.0 |
| findbugs | [link] |
| javac | [link] |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 18 **
bq. Failed junit tests	hadoop.hbase.client.TestMetaWithReplicas
Test failure was not related to patch. It is failing on other build runs also , ...

** Comment 19 **
[Comment excluded]

** Comment 20 **
FAILURE: Integrated in Jenkins build HBase-1.4 #585 (See )
HBASE-17290 Potential loss of data for replication of bulk loaded hfiles (ashishsinghi: rev e8e40d86258a2f19838f3aea55dafbbc1b860942)
* (add) [file java]


** Comment 21 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #2269 (See )
HBASE-17290 Potential loss of data for replication of bulk loaded hfiles (ashishsinghi: rev 5f631b9653a4bf86a2bebed58abed747c04b704f)
* (add) [file java]


** Comment 22 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #291 (See )
HBASE-18900 Backport HBASE-17290 ""Potential loss of data for replication (tedyu: rev 8e5f5dd655d6f16c0d9f421c308a05ce5fa61c72)
* (add) [file java]


** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK7 #302 (See )
HBASE-18900 Backport HBASE-17290 - revert due to incompatibility (tedyu: rev ccf9b85d040e9028bcab0d49321be104d67fc76e)
* (delete) [file java]


** Comment 27 **
FAILURE: Integrated in Jenkins build HBase-1.3-JDK8 #316 (See )
HBASE-18900 Backport HBASE-17290 - revert due to incompatibility (tedyu: rev ccf9b85d040e9028bcab0d49321be104d67fc76e)
* (delete) [file java]


** Comment 28 **
Sorry for asking it too late.  When write marker cell in WAL is failed, do we succed the bulk load op still?  On the new CP, we use post commit hook of store file.  So this will be called for all files including the flushed ones right. So when this CP is in place, how will we treat diff btw bulk loaded files and normal flushed/compaction result files?The CP seems to listen for the post commit hook and then add an entry into the hfiles for replication Q.  I wonder why we cannot do this in core code flow itself. WHy we need an extra CP?  This is not a sync HFile replication op. Just adding an entry. Said that even the WAL write also can be avoided?Really sorry for asking this late after its commit.  Got to see this code while doing the recent CP cleanups only.
"
HBASE-20404,https://issues.apache.org/jira/browse/HBASE-20404,https://github.com/apache/hbase/blob/rel/1.4.4/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,Ugly cleanerchore complaint that dir is not empty,NO," I see these big dirty exceptions in my master log during a long-run.... Lets clean them up (Are they exceptions I as an operator can actually do something about? Are they 'problems'? Should they be LOG.warn?)

{code}
2018-04-12 16:02:09,911 WARN  [ForkJoinPool-1-worker-15] cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/1e24549061df3adc4858fbcaf1929553/meta; {}
org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.fs.PathIsNotEmptyDirectoryException): `/hbase/archive/data/default/IntegrationTestBigLinkedList/1e24549061df3adc4858fbcaf1929553/meta is non empty': Directory is not empty
  at org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp.delete(FSDirDeleteOp.java:115)
  at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:2848)
  at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.delete(NameNodeRpcServer.java:1048)
  at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.delete(ClientNamenodeProtocolServerSideTranslatorPB.java:641)
  at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
  at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447)
  at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989)
  at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:847)
  at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:790)
  at java.security.AccessController.doPrivileged(Native Method)
  at javax.security.auth.Subject.doAs(Subject.java:422)
  at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1836)
  at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2486)

  at org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1489)
  at org.apache.hadoop.ipc.Client.call(Client.java:1435)
  at org.apache.hadoop.ipc.Client.call(Client.java:1345)
  at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:227)
  at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:116)
  at com.sun.proxy.$Proxy26.delete(Unknown Source)
  at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.delete(ClientNamenodeProtocolTranslatorPB.java:568)
  at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:409)
  at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:163)
  at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:155)
  at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
  at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:346)
  at com.sun.proxy.$Proxy27.delete(Unknown Source)
  at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)

...
{code}

Looks like log format is off too...

","** Comment 1 **
bq. Are they exceptions. Are they 'problems'?Both, no.bq.  I as an operator can actually do something about?Yes, you can delete yourself, but no need, since it is a chore.bq. Should they be LOG.warn?DEBUG or remove if you like, either does no harms.

** Comment 2 **
-v0  - move level from WARN -> DEBUG  - update message to give an indication of ""okayness""

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  4s |  master passed  || +1 |  compile  |   2m  8s |  master passed  || +1 |  checkstyle  |   1m 11s |  master passed  || +1 |  shadedjars  |   5m 10s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  9s |  master passed  || +1 |  javadoc  |   0m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 24s |  the patch passed  || +1 |  compile  |   2m  2s |  the patch passed  || +1 |  javac  |   2m  2s |  the patch passed  || -1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 27s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 25s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 164m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 215m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20404 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cd1b7a82bc96 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / d59a6c8166 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4043 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
Patch looks good. Do we have to print the exception at all, even at DEBUG? Its a big dirty one. The prefatory text helps but  It shows up often enough. Thanks.

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 58s |  master passed  || +1 |  compile  |   1m 41s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   4m 40s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 52s |  master passed  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 34s |  the patch passed  || +1 |  compile  |   1m 40s |  the patch passed  || +1 |  javac  |   1m 40s |  the patch passed  || +1 |  checkstyle  |   1m 10s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 26s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  0s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 129m 29s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 174m 30s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20404 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ca5cf39fff9e 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 5a633adffe || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4214 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
{quote}Patch looks good. Do we have to print the exception at all, even at DEBUG? Its a big dirty one. The prefatory text helps but It shows up often enough. Thanks.{quote}We end up in that block if we hit literally any kind of IOException. I think we need to print it, because the problem could be e.g. HDFS in safe mode or some other thing that an operator could do something about.Are we seeing the specific IOException of ""you're trying to delete a directory before the contents are deleted"" a bunch of times because of a bad sort order? i.e. does a directory sort ahead of the stuff in the directory because of the ""prioritize by size"" check?

** Comment 9 **
bq. We end up in that block if we hit literally any kind of IOException. I think we need to print it, because the problem could be e.g. HDFS in safe mode or some other thing that an operator could do something about.Fair enough.bq. Are we seeing the specific IOException of ""you're trying to delete a directory before the contents are deleted"" a bunch of times because of a bad sort order? i.e. does a directory sort ahead of the stuff in the directory because of the ""prioritize by size"" check?Zero study done by me. Doesn't happen that frequently... Just ugly when it does happen... Only exception in my log.{code}2018-04-12 04:42:06,543 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/hbase/meta/1588230740; {}2018-04-12 06:52:10,365 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/03a723d5e024f4db900a185ccf946910/big; {}2018-04-12 08:22:07,378 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/b10528e8b4ee831ec7db083823570f09/meta; {}2018-04-12 10:32:10,324 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/adf743126026818a92350a53d5176897/meta; {}2018-04-12 14:02:10,534 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/1e24549061df3adc4858fbcaf1929553; {}2018-04-12 15:42:10,314 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/639945dfda2ed3c7e783b02ef40d91fd/tiny; {}2018-04-12 15:42:10,329 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/614d71f722cb9aaaaf8865b4eafdf180/tiny; {}2018-04-12 15:52:15,532 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/tsdb/82e18bf2a034476b116226b0f7071738/t; {}2018-04-12 16:02:09,911 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/1e24549061df3adc4858fbcaf1929553/meta; {}2018-04-12 16:02:09,926 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/45e381c40cd3ce0e81947ad40369adfd/meta; {}2018-04-12 16:02:09,951 WARN   cleaner.CleanerChore: Could not delete dir under hdfs://ve0524.halxg.cloudera.com:8020/hbase/archive/data/default/IntegrationTestBigLinkedList/45e381c40cd3ce0e81947ad40369adfd/big; {}{code}

** Comment 10 **
okay, maybe I should add more log information so we have a chance to figure out what's going on?I could add a TRACE that prints out the list in our chosen sort order? maybe DEBUG for the top 10?

** Comment 11 **
If you do top-10 DEBUG I'll keep an eye on it and make a new issue w/ findings..... (If TRACE, it'll never be enabled). Thanks.

** Comment 12 **
Seeing this in the branch-1 backport too, was just going to come file an issue. Please fix. Definitely don't do WARN if not something an operator has to be concerned about.

** Comment 13 **
I can answer this question, because i wrote this.It's normal phenomenon. Two cases,1. There're late added files under that dir. An intended test case in {{TestCleanerChore}} method {{testCleanerDoesNotDeleteDirectoryWithLateAddedFiles}}2. There is file under dir, whose ttl doesn't reach zero, or other reasons depending on{code:title=FileCleanerDelegate#getDeletableFiles}DEBUG or removing this warning is fine. 

** Comment 14 **
[Comment excluded]

** Comment 15 **
as  I mentioned above, I don't think we can remove logging in the general case of an IOException.I'm trying out the debug message for sort order, but it's way too chatty.What about expressly checking for the directory being empty? either before trying to delete or after catching the IOException?

** Comment 16 **
[Comment excluded]

** Comment 17 **
-v2  - CleanerChore was incorrectly treating IOE in FileStatus listing as ""directory not found""  - update javadocs in CleanerChore helper to match FSUtils method it invokes  - update CleanerChore to treat IOE in status listing as a failure  - check for {{PathIsNotEmptyDirectoryException}} when we expect dirs might not be empty, and only output a small DEBUG message in that case.  - for other IOE while deleting, do the full stacktrace but work at INFO instead of WARN.  - add tests to cover the above.

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 23 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 25 **
[Comment excluded]

** Comment 26 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20548,https://issues.apache.org/jira/browse/HBASE-20548,https://github.com/apache/hbase/blob/rel/1.4.5/hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java,"Master fails to startup on large clusters, refreshing block distribution",YES,"On our large clusters with, master has failed to startup within specified time and aborted itself since it was initializing HDFS block distribution. Enable table also takes time for larger tables for the same reason. My proposal is to refresh HDFS block distribution at the end of master initialization and not at retainAssignment()'s createCluster(). This would address HBASE-16570's intention, but avoid the problems we ran into.

cc [~aoxiang] [~tedyu]","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1.4 Compile Tests  ||| 0 |  mvndep  |   1m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   8m  9s |  branch-1.4 passed  || -1 |  compile  |   0m 20s |  hbase-rsgroup in branch-1.4 failed with JDK v1.8.0_172.  || -1 |  compile  |   0m 14s |  hbase-server in branch-1.4 failed with JDK v1.8.0_172.  || -1 |  compile  |   0m 13s |  hbase-rsgroup in branch-1.4 failed with JDK v1.7.0_181.  || -1 |  compile  |   0m 17s |  hbase-server in branch-1.4 failed with JDK v1.7.0_181.  || +1 |  checkstyle  |   1m 41s |  branch-1.4 passed  || +1 |  shadedjars  |   2m 54s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 44s |  branch-1.4 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 53s |  branch-1.4 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 35s |  the patch passed  || -1 |  compile  |   0m 14s |  hbase-server in the patch failed with JDK v1.8.0_172.  || -1 |  compile  |   0m 10s |  hbase-rsgroup in the patch failed with JDK v1.8.0_172.  || -1 |  javac  |   0m 14s |  hbase-server in the patch failed with JDK v1.8.0_172.  || -1 |  javac  |   0m 10s |  hbase-rsgroup in the patch failed with JDK v1.8.0_172.  || -1 |  compile  |   0m 16s |  hbase-server in the patch failed with JDK v1.7.0_181.  || -1 |  compile  |   0m 13s |  hbase-rsgroup in the patch failed with JDK v1.7.0_181.  || -1 |  javac  |   0m 16s |  hbase-server in the patch failed with JDK v1.7.0_181.  || -1 |  javac  |   0m 13s |  hbase-rsgroup in the patch failed with JDK v1.7.0_181.  || +1 |  checkstyle  |   1m 36s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  5s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  javadoc  |   0m 40s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 48s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 120m  2s |  hbase-server in the patch failed.  || -1 |  unit  |   1m 48s |  hbase-rsgroup in the patch failed.  || +1 |  asflicense  |   0m 35s |  The patch does not generate ASF License warnings.  ||  |   | 156m 34s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:74e3133 || JIRA Issue | HBASE-20548 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6038b4fcc689 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1.4 / 302b188 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3516 (vs. ulimit of 10000) || modules | C: hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
Uploaded patch for master. Change was RegionInfo instead of HRegionInfo.Uploaded patch for branch-2.0 as well, if needed. Since HBASE-20545 is not in branch-2.0, patch is slightly different.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 17s |  branch-2.0 passed  || +1 |  compile  |   2m  0s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 14s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 31s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   1m 49s |  hbase-server in branch-2.0 has 2 extant Findbugs warnings.  || +1 |  javadoc  |   0m 42s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 11s |  the patch passed  || +1 |  compile  |   1m 59s |  the patch passed  || +1 |  javac  |   1m 59s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 21s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 52s |  the patch passed  || +1 |  javadoc  |   0m 37s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 101m 50s |  hbase-server in the patch passed.  || +1 |  unit  |   3m 27s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 144m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:369877d || JIRA Issue | HBASE-20548 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bdb5b56bbd75 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 4ab62955c6 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4811 (vs. ulimit of 10000) || modules | C: hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 15s |  master passed  || +1 |  compile  |   2m 16s |  master passed  || +1 |  checkstyle  |   1m 27s |  master passed  || +1 |  shadedjars  |   4m 48s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   1m 58s |  hbase-server in master has 2 extant Findbugs warnings.  || +1 |  javadoc  |   0m 45s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 49s |  the patch passed  || +1 |  compile  |   2m 24s |  the patch passed  || +1 |  javac  |   2m 24s |  the patch passed  || +1 |  checkstyle  |   1m 31s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  3s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 24s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  0s |  the patch passed  || +1 |  javadoc  |   0m 52s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 123m 50s |  hbase-server in the patch passed.  || +1 |  unit  |   4m  2s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 180m 10s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20548 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 85355b145a29 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 320a3332e0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4633 (vs. ulimit of 10000) || modules | C: hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #413 (See )
HBASE-20548 Master fails to startup on large clusters, refreshing block (apurtell: rev b62d12ffcb5a70ed60c577abe8722153a642d01f)


** Comment 11 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 12 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 13 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20447,https://issues.apache.org/jira/browse/HBASE-20447,https://github.com/apache/hbase/blob/rel/1.4.5/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java,Only fail cacheBlock if block collisions aren't related to next block metadata,YES,"This is the issue I was originally having here: [http://mail-archives.apache.org/mod_mbox/hbase-dev/201802.mbox/%3CCAN+qs_Pav=md_Aoj4Xji+KCNETubg2XOu2nTxV1g6m8-5VN-GA@mail.gmail.com%3E]

 

When we pread, we don't force the read to read all of the next block header.
However, when we get into a race condition where two opener threads try to
cache the same block and one thread read all of the next block header and the other one didn't, it will fail the open process. This is especially important
in a splitting case where it will potentially fail the split process.
Instead, in the caches, we should only fail if the required blocks are different.","** Comment 1 **
{code}+   * if not, throw an exception. If they are the same without the nextBlockMetadata, return the comparison.{code}RuntimeException is thrown. Have you considered throwing IOE ?{code}+      LOG.warn(""Cached block contents differ, trying to just compare the block contents "" ++          ""without the next block. CacheKey: "" + cacheKey);{code}Is there anything admin can do after seeing the above log ?{code}+          LOG.warn(""Cached block contents differ by nextBlockOnDiskSize. Keeping cached block."");+          return;+        } else {+          LOG.warn(""Cached block contents differ by nextBlockOnDiskSize. Caching new block."");{code}The first part of the log is the same for both cases. Is it possible to make the log clearer as to why the decision of caching is made ?{code}+    if (includeNextBlockMetadata) {+      destination.putInt(this.nextBlockOnDiskSize);{code}The flag only guards one field. Would includeNextBlockOnDiskSize be better name for the parameter ?

** Comment 2 **
The ""Cached an already cached block .. This is harmless"" log line should be DEBUG level I think. I have this patched as such internally. Otherwise the warnings concern operators without being actionable. So in your patch where you have introduced more WARN level logs where the comparison differs by nextBlockOnDiskSize the same thing applies I think. Otherwise lgtm

** Comment 3 **
 Yep, Ted brought up a similar thing with the log level. I'll adjust that to debug. Thanks for the review! This has been a RuntimeException for quite some time. Any hard reasoning on why this should change to an IOE?Otherwise your comments look good, I'll try to incorporate them. I'm running into some issues getting the test to pass in master (I think) due to the shared memory cache. What is happening is that even after adding a block to the cache, the getBlock is returning the incorrect block. I believe this might be related to it not being put in the backingMap yet, but I'm not sure. Do you have any insight on that? Thanks!

** Comment 4 **
w.r.t. RuntimeException, developers would possibly miss the fact that validateBlockAddition would throw exception if they don't look at the implementation.Throwing IOE, on the other hand, signifies that the validation may fail. I think it would facilitate maintainability of the related code.

** Comment 5 **
An IOE should only be thrown if there is actually IO involved, hence the *IO* part of IOE. This is an assertion failure so we could use Preconditions. Note what Preconditions throws are all subclassed from RuntimeException. [link]  Seems entirely appropriate here. 

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  6s |  master passed  || +1 |  compile  |   1m 48s |  master passed  || +1 |  checkstyle  |   1m  9s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  2s |  master passed  || +1 |  javadoc  |   0m 38s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 13s |  the patch passed  || +1 |  compile  |   1m 47s |  the patch passed  || +1 |  javac  |   1m 47s |  the patch passed  || -1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 14 new + 149 unchanged - 1 fixed = 163 total (was 150)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 54s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 20s |  the patch passed  || -1 |  javadoc  |   0m 27s |  hbase-server generated 2 new + 2 unchanged - 0 fixed = 4 total (was 2)  ||| || || ||  Other Tests  ||| -1 |  unit  | 104m 31s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 31s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 41s |  The patch does not generate ASF License warnings.  ||  |   | 149m 29s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.io.hfile.bucket.TestBucketCache |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 33dae2728c6e 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7fc6e33be3 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4404 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
{code} if (backingMap.containsKey(cacheKey) || ramCache.containsKey(cacheKey)) {     Cacheable existingBlock = getBlock(cacheKey, false, false, false);{code}This change in if is for making your test to pass always?  You mean the test fail even after this?  Ideally that would be not possible. And I dont think it has to do some thing with shared cache

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 27s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 40s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m 14s |  branch-1 passed  || +1 |  compile  |   2m 13s |  branch-1 passed with JDK v1.8.0_163  || -1 |  compile  |   0m 19s |  hbase-server in branch-1 failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 13s |  hbase-external-blockcache in branch-1 failed with JDK v1.7.0_171.  || +1 |  checkstyle  |   1m 40s |  branch-1 passed  || +1 |  shadedjars  |   2m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 45s |  branch-1 passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 54s |  branch-1 passed with JDK v1.7.0_171  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 45s |  the patch passed  || +1 |  compile  |   2m  2s |  the patch passed with JDK v1.8.0_163  || +1 |  javac  |   2m  2s |  the patch passed  || -1 |  compile  |   0m 21s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 14s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 21s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 14s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  checkstyle  |   1m 23s |  hbase-server: The patch generated 16 new + 206 unchanged - 1 fixed = 222 total (was 207)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 54s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 34s |  The patch causes 44 errors with Hadoop v2.4.1.  || -1 |  hadoopcheck  |   3m 11s |  The patch causes 44 errors with Hadoop v2.5.2.  || -1 |  javadoc  |   0m 36s |  hbase-server-jdk1.8.0_163 with JDK v1.8.0_163 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  || -1 |  javadoc  |   0m 41s |  hbase-server-jdk1.7.0_171 with JDK v1.7.0_171 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  ||| || || ||  Other Tests  ||| -1 |  unit  |  26m 42s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 21s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   |  58m 34s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.io.hfile.TestLruBlockCache ||   | hadoop.hbase.io.hfile.bucket.TestBucketCache |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f5fc36291e5a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / 6685b62 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_171 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_163 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_171 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || javadoc | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 727 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 34s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 30s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 46s |  branch-1 passed  || +1 |  compile  |   1m 51s |  branch-1 passed with JDK v1.8.0_163  || -1 |  compile  |   0m 18s |  hbase-server in branch-1 failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 14s |  hbase-external-blockcache in branch-1 failed with JDK v1.7.0_171.  || +1 |  checkstyle  |   1m 31s |  branch-1 passed  || +1 |  shadedjars  |   2m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 40s |  branch-1 passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 49s |  branch-1 passed with JDK v1.7.0_171  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 31s |  the patch passed  || +1 |  compile  |   1m 43s |  the patch passed with JDK v1.8.0_163  || +1 |  javac  |   1m 43s |  the patch passed  || -1 |  compile  |   0m 17s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 12s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 17s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 12s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 15 new + 207 unchanged - 0 fixed = 222 total (was 207)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 34s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 26s |  The patch causes 44 errors with Hadoop v2.4.1.  || -1 |  hadoopcheck  |   2m 52s |  The patch causes 44 errors with Hadoop v2.5.2.  || -1 |  javadoc  |   0m 26s |  hbase-server-jdk1.8.0_163 with JDK v1.8.0_163 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  || -1 |  javadoc  |   0m 35s |  hbase-server-jdk1.7.0_171 with JDK v1.7.0_171 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  ||| || || ||  Other Tests  ||| -1 |  unit  |  24m  3s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 16s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   |  52m 12s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.io.hfile.bucket.TestBucketCache |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 456437c8296a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 6685b62 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_171 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_163 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_171 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || javadoc | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 701 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 35s |  branch-1 passed  || +1 |  compile  |   1m 52s |  branch-1 passed with JDK v1.8.0_163  || -1 |  compile  |   0m 17s |  hbase-server in branch-1 failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 13s |  hbase-external-blockcache in branch-1 failed with JDK v1.7.0_171.  || +1 |  checkstyle  |   1m 31s |  branch-1 passed  || +1 |  shadedjars  |   2m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 39s |  branch-1 passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 47s |  branch-1 passed with JDK v1.7.0_171  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 34s |  the patch passed  || +1 |  compile  |   1m 44s |  the patch passed with JDK v1.8.0_163  || +1 |  javac  |   1m 44s |  the patch passed  || -1 |  compile  |   0m 18s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 14s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 18s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 14s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  checkstyle  |   1m 21s |  hbase-server: The patch generated 15 new + 207 unchanged - 0 fixed = 222 total (was 207)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 36s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   0m 58s |  The patch causes 44 errors with Hadoop v2.4.1.  || -1 |  hadoopcheck  |   1m 55s |  The patch causes 44 errors with Hadoop v2.5.2.  || -1 |  javadoc  |   0m 28s |  hbase-server-jdk1.8.0_163 with JDK v1.8.0_163 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  || -1 |  javadoc  |   0m 38s |  hbase-server-jdk1.7.0_171 with JDK v1.7.0_171 generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  ||| || || ||  Other Tests  ||| -1 |  unit  | 110m  9s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 30s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 35s |  The patch does not generate ASF License warnings.  ||  |   | 137m  6s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestGlobalThrottler |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 73b20dae2535 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 6685b62 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_171 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_163 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_171 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || javadoc | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3729 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 32s |  Docker mode activated.  ||| || || ||  Prechecks  ||| -1 |  hbaseanti  |   0m  0s |  The patch appears to use commons-logging instead of slf4j.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 45s |  master passed  || +1 |  compile  |   2m  0s |  master passed  || +1 |  checkstyle  |   1m 22s |  master passed  || +1 |  shadedjars  |   4m 54s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 10s |  master passed  || +1 |  javadoc  |   0m 40s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   1m 59s |  the patch passed  || +1 |  javac  |   1m 59s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 16 new + 149 unchanged - 1 fixed = 165 total (was 150)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 54s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 29s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 31s |  the patch passed  || -1 |  javadoc  |   0m 29s |  hbase-server generated 2 new + 2 unchanged - 0 fixed = 4 total (was 2)  ||| || || ||  Other Tests  ||| +1 |  unit  | 109m 24s |  hbase-server in the patch passed.  || +1 |  unit  |   0m 31s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 160m 37s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 85b9960aabff 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8a30acf46f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || javadoc | [link] ||  Test Results | [link] || Max. process+thread count | 4180 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 58s |  branch-1 passed  || +1 |  compile  |   2m  7s |  branch-1 passed with JDK v1.8.0_163  || -1 |  compile  |   0m 20s |  hbase-server in branch-1 failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 15s |  hbase-external-blockcache in branch-1 failed with JDK v1.7.0_171.  || +1 |  checkstyle  |   1m 43s |  branch-1 passed  || +1 |  shadedjars  |   2m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 45s |  branch-1 passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 57s |  branch-1 passed with JDK v1.7.0_171  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 51s |  the patch passed  || +1 |  compile  |   2m  1s |  the patch passed with JDK v1.8.0_163  || +1 |  javac  |   2m  1s |  the patch passed  || -1 |  compile  |   0m 19s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 15s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 19s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 15s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  checkstyle  |   1m 24s |  hbase-server: The patch generated 3 new + 206 unchanged - 1 fixed = 209 total (was 207)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 55s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m  7s |  The patch causes 44 errors with Hadoop v2.4.1.  || -1 |  hadoopcheck  |   2m 11s |  The patch causes 44 errors with Hadoop v2.5.2.  || +1 |  javadoc  |   0m 46s |  the patch passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 50s |  the patch passed with JDK v1.7.0_171  ||| || || ||  Other Tests  ||| -1 |  unit  | 106m 40s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 23s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 31s |  The patch does not generate ASF License warnings.  ||  |   | 136m 37s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestGlobalThrottler |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 759d28f6d5cf 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / f11cf00 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_171 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_163 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_171 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3550 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 24s |  branch-1 passed  || +1 |  compile  |   1m 36s |  branch-1 passed with JDK v1.8.0_163  || -1 |  compile  |   0m 14s |  hbase-server in branch-1 failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 10s |  hbase-external-blockcache in branch-1 failed with JDK v1.7.0_171.  || +1 |  checkstyle  |   1m 17s |  branch-1 passed  || +1 |  shadedjars  |   2m  8s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 33s |  branch-1 passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 41s |  branch-1 passed with JDK v1.7.0_171  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 10s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 19s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed with JDK v1.8.0_163  || +1 |  javac  |   1m 31s |  the patch passed  || -1 |  compile  |   0m 14s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  compile  |   0m 11s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 14s |  hbase-server in the patch failed with JDK v1.7.0_171.  || -1 |  javac  |   0m 11s |  hbase-external-blockcache in the patch failed with JDK v1.7.0_171.  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 2 new + 207 unchanged - 0 fixed = 209 total (was 207)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 14s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 22s |  The patch causes 44 errors with Hadoop v2.4.1.  || -1 |  hadoopcheck  |   2m 42s |  The patch causes 44 errors with Hadoop v2.5.2.  || +1 |  javadoc  |   0m 32s |  the patch passed with JDK v1.8.0_163  || +1 |  javadoc  |   0m 41s |  the patch passed with JDK v1.7.0_171  ||| || || ||  Other Tests  ||| -1 |  unit  | 104m 13s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 23s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   | 136m  4s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestGlobalThrottler |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d24ab2939f48 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / f11cf00 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_171 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_163 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_171 || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3686 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| -1 |  hbaseanti  |   0m  0s |  The patch appears to use commons-logging instead of slf4j.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  6s |  master passed  || +1 |  compile  |   2m 14s |  master passed  || +1 |  checkstyle  |   1m 32s |  master passed  || +1 |  shadedjars  |   5m 27s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 44s |  master passed  || +1 |  javadoc  |   0m 46s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   2m 19s |  the patch passed  || +1 |  javac  |   2m 19s |  the patch passed  || -1 |  checkstyle  |   1m 20s |  hbase-server: The patch generated 14 new + 149 unchanged - 1 fixed = 163 total (was 150)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  4s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 35s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 27s |  the patch passed  || -1 |  javadoc  |   0m 29s |  hbase-server generated 2 new + 2 unchanged - 0 fixed = 4 total (was 2)  ||| || || ||  Other Tests  ||| -1 |  unit  | 123m 50s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 36s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 42s |  The patch does not generate ASF License warnings.  ||  |   | 176m 46s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.io.hfile.bucket.TestBucketCache |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 19bd325be8e9 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 9c046c091c || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4258 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   1m 44s |  master passed  || +1 |  checkstyle  |   1m  6s |  master passed  || +1 |  shadedjars  |   4m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  4s |  master passed  || +1 |  javadoc  |   0m 33s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 12s |  the patch passed  || +1 |  compile  |   1m 43s |  the patch passed  || +1 |  javac  |   1m 43s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 58s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 23s |  the patch passed  || -1 |  javadoc  |   0m 27s |  hbase-server generated 1 new + 2 unchanged - 0 fixed = 3 total (was 2)  ||| || || ||  Other Tests  ||| +1 |  unit  | 116m  8s |  hbase-server in the patch passed.  || +1 |  unit  |   0m 18s |  hbase-external-blockcache in the patch passed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   | 159m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20447 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6007bb544e92 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c60578d982 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javadoc | [link] ||  Test Results | [link] || Max. process+thread count | 5312 (vs. ulimit of 10000) || modules | C: hbase-server hbase-external-blockcache U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 23 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 25 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20554,https://issues.apache.org/jira/browse/HBASE-20554,https://github.com/apache/hbase/blob/rel/1.4.5/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,"""WALs outstanding"" message from CleanerChore is noisy",YES,"WARN level ""WALs outstanding"" from CleanerChore should be DEBUG and are not always correct. 

I left a cluster configured for ITBLL (retaining all WALs for post hoc analysis) and in the morning found the master log full of ""WALs outstanding"" warnings from CleanerChore. 

Should this really be a warning?

{quote}
2018-05-09 16:42:03,893 WARN  [node-1.cluster,16000,1525851521469_ChoreService_2] cleaner.CleanerChore: WALs outstanding under hdfs://node-1.cluster/hbase/oldWALs
{quote}

If someone has configured really long WAL retention then having WALs in oldWALs will be normal. 

Also, it seems the warning is sometimes incorrect.

{quote}
2018-05-09 16:42:24,751 WARN  [node-1.cluster,16000,1525851521469_ChoreService_1] cleaner.CleanerChore: WALs outstanding under hdfs://node-1.cluster/hbase/archive
{quote}

There are no WALs under archive/. 

Even at DEBUG level, if it is not correct, then it can lead an operator to be concerned about nothing, so better to just remove it.","** Comment 1 **
I guess it's fine not to remove it, but this is noise unless specifically debugging the cleaner so here's a patch for moving the log level of this and related log lines to TRACE. Reasonable to allow for setting log level to TRACE for CleanerChore to debug. 

** Comment 2 **
Going to commit trivial logging only change later today unless objection.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 43s |  master passed  || +1 |  compile  |   1m 47s |  master passed  || +1 |  checkstyle  |   1m 12s |  master passed  || +1 |  shadedjars  |   4m 53s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  0s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 56s |  the patch passed  || +1 |  compile  |   1m 49s |  the patch passed  || +1 |  javac  |   1m 49s |  the patch passed  || +1 |  checkstyle  |   1m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 59s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 16s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 146m 16s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 193m  1s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.replication.TestReplicationAdminWithClusters |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20554 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 90fac840d72a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 4f2dfd3877 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4122 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 6 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 7 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 9 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #509 (See )
HBASE-20554 ""WALs outstanding"" message from CleanerChore is noisy (apurtell: rev 511a4c49ceb223b289462121c788994fbfa2713b)


** Comment 11 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20789,https://issues.apache.org/jira/browse/HBASE-20789,https://github.com/apache/hbase/blob/rel/1.4.6/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheUtil.java,TestBucketCache#testCacheBlockNextBlockMetadataMissing is flaky,NO,The UT failed frequently in our internal branch-2... Will dig into the UT.,"** Comment 1 **
,  I'm digging the flaky ut, which was introduced by HBASE-20447,  I read  the patch for HBASE-20447... and found that I did not quite understand the patch :-(   ...{code}        int comparison = BlockCacheUtil.validateBlockAddition(existingBlock, cachedItem, cacheKey);        if (comparison != 0) {          if (comparison < 0) {            LOG.warn(""Cached block contents differ by nextBlockOnDiskSize. Keeping cached block."");            return;          } else {            LOG.warn(""Cached block contents differ by nextBlockOnDiskSize. Caching new block."");          }{code} Why can just keep the existing cached block and return  when  existingBlock.nextBlockOnDiskSize < cachedItem.nextBlockOnDiskSize ...  actually ,   asked the same question  , seem not answered .. 1. [link]#comment-16441782

** Comment 2 **
Sorry the comment wasn't updated, I think I had updated the comment locally, but it must not have been pushed out.Basically there are 3 cases here:equality (0) -> these blocks are exactly the same, no issue.(-1) -> The existing block has nextBlockOnDiskSize set so we will get performance gains by keeping that version.(1) -> The new block has nextBlockOnDiskSize set so it makes sense to cache the new versionPlease let me know if anything is unclear, I can try to clear it up and I can try to improve this logging.Where is the test failing? AFAIK there shouldn't be much flakiness in this test, but let's fix it if there is.Thanks for digging in!

** Comment 3 **
Zack:You can get test failure from:[link]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
bq. The existing block has nextBlockOnDiskSize set so we will get performance gains by keeping that version.If the existingBlock has nextBlockOnDiskSize set , while cachedItem has nextBlockOnDiskSize(default = -1) unset, the comparison should be positive number ? So there is a typo ? {code}     if (cb != null) {       int comparison = BlockCacheUtil.validateBlockAddition(cb.getBuffer(), buf, cacheKey);       if (comparison != 0) {-        if (comparison < 0) {+        if (comparison > 0) {           LOG.warn(""Cached block contents differ by nextBlockOnDiskSize. Keeping cached block."");           return;         } else {{code}

** Comment 7 **
[Comment excluded]

** Comment 8 **
Add some log for digging,  and I think it's related to here When cache a block, the BucketCache put it into ramCache then write to io-engine async.  if the blockWithoutNextBlockMetadata is still in ramCache, then the blockWithNextBlockMetadata will not be put into ramCache ( putIfAbsent ), so the assert failed.  the putIfAbsent was introduced in HBASE-13301, because   fixed another race bug... 1. [link]#L457

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 22s |  master passed  || +1 |  compile  |   1m 53s |  master passed  || +1 |  checkstyle  |   1m 18s |  master passed  || +1 |  shadedjars  |   4m 57s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 14s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 21s |  the patch passed  || +1 |  compile  |   1m 57s |  the patch passed  || +1 |  javac  |   1m 57s |  the patch passed  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 81 unchanged - 1 fixed = 81 total (was 82)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 59s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 56s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 16s |  the patch passed  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  19m 59s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 11s |  The patch does not generate ASF License warnings.  ||  |   |  64m 30s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.io.hfile.TestLruBlockCache |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 482a0e2b74de 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 65d84df005 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 643 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   1m 51s |  master passed  || +1 |  checkstyle  |   1m 12s |  master passed  || +1 |  shadedjars  |   4m 31s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 21s |  master passed  || +1 |  javadoc  |   0m 33s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 59s |  the patch passed  || +1 |  compile  |   1m 54s |  the patch passed  || +1 |  javac  |   1m 54s |  the patch passed  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 94 unchanged - 1 fixed = 94 total (was 95)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 29s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 18s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 116m 44s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 159m 20s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9af0c2888a6d 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 6198e1fc7d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4684 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 11s |  master passed  || +1 |  compile  |   1m 45s |  master passed  || +1 |  checkstyle  |   1m 12s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 15s |  master passed  || +1 |  javadoc  |   0m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 55s |  the patch passed  || +1 |  compile  |   1m 42s |  the patch passed  || +1 |  javac  |   1m 42s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 0 new + 94 unchanged - 1 fixed = 94 total (was 95)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 20s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 40s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 125m  1s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 167m 35s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 42a12ab790b2 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 78e7dd6537 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4904 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 20s |  master passed  || +1 |  compile  |   1m 37s |  master passed  || +1 |  checkstyle  |   1m  1s |  master passed  || +1 |  shadedjars  |   3m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 57s |  master passed  || +1 |  javadoc  |   0m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 24s |  the patch passed  || +1 |  compile  |   1m 35s |  the patch passed  || +1 |  javac  |   1m 35s |  the patch passed  || +1 |  checkstyle  |   1m  3s |  hbase-server: The patch generated 0 new + 94 unchanged - 1 fixed = 94 total (was 95)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  7s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 57s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 115m 50s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 152m 31s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 611aaeda2ad3 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7c5188f39e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5330 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 31s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 15s |  master passed  || +1 |  compile  |   1m 52s |  master passed  || +1 |  checkstyle  |   1m 11s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 10s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  1s |  the patch passed  || +1 |  compile  |   1m 50s |  the patch passed  || +1 |  javac  |   1m 50s |  the patch passed  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 94 unchanged - 1 fixed = 94 total (was 95)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m  3s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 28s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 157m 28s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 201m 27s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cf3c5fb496fd 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 380350d5bc || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4672 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 26s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   7m 39s |  branch-1 passed  || +1 |  compile  |   0m 30s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 33s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 15s |  branch-1 passed  || +1 |  shadedjars  |   2m 26s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 31s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 33s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 26s |  the patch passed  || +1 |  compile  |   0m 31s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 31s |  the patch passed  || +1 |  compile  |   0m 33s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 33s |  the patch passed  || -1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 2 new + 117 unchanged - 1 fixed = 119 total (was 118)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 26s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 24s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 127m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 150m 22s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20789 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2ce039fd2472 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / f94ad9d || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3704 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 28 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 29 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 30 **
[Comment excluded]

** Comment 31 **
Hadoop QA for branch-1.x seems OK (The failed UT are timeout, unrelated), Fixed the checkstyle and pushed to branch-1 & branch-1.4 .Patches for branch-2 can work with branch-2.0 too, so just pushed two patches to branch-2.0. Thanks , ,   for reviewing. 

** Comment 32 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 33 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 34 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 35 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-20701,https://issues.apache.org/jira/browse/HBASE-20701,https://github.com/apache/hbase/blob/rel/1.4.6/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java,too much logging when balancer runs from BaseLoadBalancer,YES,"When balancer runs, it tries to find least loaded server with better locality for current region. During this, we make debug level logging for each of those regions. It creates too much amount of logging at debug level , we should move this to trace level logging.
{code:java}
int getLeastLoadedTopServerForRegion (int region, int currentServer) {
...
    if (leastLoadedServerIndex != -1) {
        LOG.debug(""Pick the least loaded server "" + servers[leastLoadedServerIndex].getHostname()
        + "" with better locality for region "" + regions[region]);
    }
...
}{code}
This was fixed in branch-2.0 as part of -HBASE-14614-  ","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  0s |  Docker mode activated.  || -1 |  docker  |   0m  2s |  Docker failed to build yetus/hbase:dca6535.  |\\\\|| Subsystem || Report/Notes ||| JIRA Issue | HBASE-20701 || JIRA Patch URL | [link] || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1.4 Compile Tests  ||| +1 |  mvninstall  |   7m 51s |  branch-1.4 passed  || +1 |  compile  |   0m 38s |  branch-1.4 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 41s |  branch-1.4 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 26s |  branch-1.4 passed  || +1 |  shadedjars  |   2m 47s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 34s |  branch-1.4 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 34s |  branch-1.4 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 35s |  the patch passed  || +1 |  compile  |   0m 38s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 38s |  the patch passed  || +1 |  compile  |   0m 39s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 39s |  the patch passed  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 1 new + 77 unchanged - 0 fixed = 78 total (was 77)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  3s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  javadoc  |   0m 29s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 109m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 141m 51s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure.TestZKProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:4b0a87a || JIRA Issue | HBASE-20701 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 45b616e66f2e 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1.4 / 4b0a87a || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3672 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1.3 Compile Tests  ||| +1 |  mvninstall  |   7m 10s |  branch-1.3 passed  || +1 |  compile  |   0m 31s |  branch-1.3 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 34s |  branch-1.3 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 19s |  branch-1.3 passed  || +1 |  shadedjars  |   2m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 34s |  branch-1.3 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 34s |  branch-1.3 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 33s |  the patch passed  || +1 |  compile  |   0m 35s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 35s |  the patch passed  || +1 |  compile  |   0m 35s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 35s |  the patch passed  || -1 |  checkstyle  |   1m 18s |  hbase-server: The patch generated 1 new + 77 unchanged - 0 fixed = 78 total (was 77)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 28s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 29s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 37s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| +1 |  unit  |  91m 31s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 122m  2s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:c57ccf7 || JIRA Issue | HBASE-20701 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bd6493725c9d 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1.3 / 7d51f60 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 3524 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   1m 56s |  branch-1 passed  || +1 |  compile  |   0m 33s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 38s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 18s |  branch-1 passed  || +1 |  shadedjars  |   2m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 28s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 34s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 32s |  the patch passed  || +1 |  compile  |   0m 34s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 34s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 37s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 33s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 26s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 102m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 120m 31s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionServerAbort |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20701 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bf319cca5eb4 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 6fa9f0b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3479 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
Test failure is not related to changes.  Can you review it once for branch-1 ?

** Comment 9 **
[Comment excluded]

** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #424 (See )
HBASE-20701 too much logging when balancer runs from BaseLoadBalancer (apurtell: rev 3a5d00398df14a10dcb1a95df0c6c68a2bafd8e9)


** Comment 11 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 12 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 13 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-21256,https://issues.apache.org/jira/browse/HBASE-21256,https://github.com/apache/hbase/blob/rel/1.4.9/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java,Improve IntegrationTestBigLinkedList for testing huge data,NO,"Recently, I use ITBLL to test some features in our company. I have encountered the following problems:
  
 1. Generator is too slow at the generating stage, the root cause is SecureRandom. There is a global lock in SecureRandom( See the following picture). I use Random instead of SecureRandom, and it could speed up this stage(500% up with 20 mapper).  SecureRandom was brought by HBASE-13382, but speaking of generating random bytes, in my opnion,
 it is the same with Random.

!ITBLL-1.png!

2. VerifyReducer have a cpu cost of 14% on format method. This is cause by create keyString variable. However, keyString may never be used if test result is correct.(and that's in most cases). Just delay creating keyString can yield huge performance boost in verifing stage.

!ITBLL-2.png!

3.Arguments check is needed, because there's constraint between arguments. If we broken this constraint, we can not get a correct circular list.  
  
 4.Let big family value size could be configured.

 

5.Avoid starting RS at backup master","** Comment 1 **
Thanks for working on this.On SecureRandom, what about the original argument that Random is more likely to have a collision? A collision could cause the test to fail?#2 sounds like a nice saving.The other items sound great too.Thanks

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   7m 39s |  master passed  || +1 |  compile  |   0m 32s |  master passed  || +1 |  checkstyle  |   0m 19s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 19s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 56s |  the patch passed  || +1 |  compile  |   0m 27s |  the patch passed  || +1 |  javac  |   0m 27s |  the patch passed  || -1 |  checkstyle  |   0m 15s |  hbase-it: The patch generated 1 new + 40 unchanged - 0 fixed = 41 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 31s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 51s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 13s |  The patch does not generate ASF License warnings.  ||  |   |  36m  9s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 85e3734b95ca 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 389 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m 34s |  master passed  || +1 |  compile  |   0m 36s |  master passed  || +1 |  checkstyle  |   0m 20s |  master passed  || +1 |  shadedjars  |   4m 18s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 20s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  6s |  the patch passed  || +1 |  compile  |   0m 28s |  the patch passed  || +1 |  javac  |   0m 28s |  the patch passed  || -1 |  checkstyle  |   0m 16s |  hbase-it: The patch generated 1 new + 40 unchanged - 0 fixed = 41 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 49s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 13s |  The patch does not generate ASF License warnings.  ||  |   |  36m 51s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 008a50a2d285 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 388 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 41s |  master passed  || +1 |  compile  |   0m 29s |  master passed  || +1 |  checkstyle  |   0m 16s |  master passed  || +1 |  shadedjars  |   4m 17s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 11s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  the patch passed  || +1 |  compile  |   0m 29s |  the patch passed  || +1 |  javac  |   0m 29s |  the patch passed  || -1 |  checkstyle  |   0m 15s |  hbase-it: The patch generated 2 new + 40 unchanged - 0 fixed = 42 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 54s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 10s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 43s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  33m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 69345d48d882 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 393 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   7m 58s |  master passed  || +1 |  compile  |   0m 34s |  master passed  || +1 |  checkstyle  |   0m 20s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 19s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  the patch passed  || +1 |  compile  |   0m 27s |  the patch passed  || +1 |  javac  |   0m 27s |  the patch passed  || -1 |  checkstyle  |   0m 14s |  hbase-it: The patch generated 2 new + 40 unchanged - 0 fixed = 42 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 22s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 43s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 12s |  The patch does not generate ASF License warnings.  ||  |   |  36m 24s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cf327b19c862 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 393 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m 36s |  master passed  || +1 |  compile  |   0m 38s |  master passed  || +1 |  checkstyle  |   0m 23s |  master passed  || +1 |  shadedjars  |   4m 49s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 21s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 46s |  the patch passed  || +1 |  compile  |   0m 33s |  the patch passed  || +1 |  javac  |   0m 33s |  the patch passed  || -1 |  checkstyle  |   0m 17s |  hbase-it: The patch generated 2 new + 40 unchanged - 0 fixed = 42 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 55s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 46s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 13s |  The patch does not generate ASF License warnings.  ||  |   |  39m 46s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cf8bb24f6fd6 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 390 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  6s |  master passed  || +1 |  compile  |   0m 28s |  master passed  || +1 |  checkstyle  |   0m 15s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m  0s |  master passed  || +1 |  javadoc  |   0m 10s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 53s |  the patch passed  || +1 |  compile  |   0m 27s |  the patch passed  || +1 |  javac  |   0m 27s |  the patch passed  || -1 |  checkstyle  |   0m 15s |  hbase-it: The patch generated 1 new + 40 unchanged - 0 fixed = 41 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 46s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m  0s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 44s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  32m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d6294e3420e4 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fdbaa4c3f0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 391 (vs. ulimit of 10000) || modules | C: hbase-it U: hbase-it || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 10s |  master passed  || +1 |  compile  |   0m 57s |  master passed  || +1 |  checkstyle  |   0m 39s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 36s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   0m 59s |  root in the patch failed.  || -1 |  compile  |   0m 22s |  hbase-it in the patch failed.  || -1 |  javac  |   0m 22s |  hbase-it in the patch failed.  || -1 |  checkstyle  |   0m 23s |  hbase-common: The patch generated 4 new + 0 unchanged - 0 fixed = 4 total (was 0)  || -1 |  checkstyle  |   0m 15s |  hbase-it: The patch generated 1 new + 40 unchanged - 0 fixed = 41 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   1m  2s |  patch has 11 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   0m 47s |  The patch causes 11 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   1m 39s |  The patch causes 11 errors with Hadoop v3.0.0.  || -1 |  findbugs  |   0m 44s |  hbase-common generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m 18s |  hbase-common in the patch failed.  || -1 |  unit  |   0m 22s |  hbase-it in the patch failed.  || +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  ||  |   |  20m 56s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-common ||  |  Boxing/unboxing to parse a primitive org.apache.hadoop.hbase.util.Random64.main(String)  At [file java]:org.apache.hadoop.hbase.util.Random64.main(String)  At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1f0f8b5c428e 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || javac | [link] || checkstyle | [link] || checkstyle | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || findbugs | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 87 (vs. ulimit of 10000) || modules | C: hbase-common hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 46s |  master passed  || +1 |  compile  |   1m  0s |  master passed  || +1 |  checkstyle  |   0m 41s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 37s |  master passed  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 12s |  the patch passed  || +1 |  compile  |   1m  0s |  the patch passed  || +1 |  javac  |   1m  0s |  the patch passed  || -1 |  checkstyle  |   0m 25s |  hbase-common: The patch generated 4 new + 0 unchanged - 0 fixed = 4 total (was 0)  || -1 |  checkstyle  |   0m 16s |  hbase-it: The patch generated 1 new + 40 unchanged - 0 fixed = 41 total (was 40)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 27s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || -1 |  findbugs  |   0m 51s |  hbase-common generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 39s |  hbase-common in the patch passed.  || +1 |  unit  |   0m 55s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   |  43m 21s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-common ||  |  Boxing/unboxing to parse a primitive org.apache.hadoop.hbase.util.Random64.main(String)  At [file java]:org.apache.hadoop.hbase.util.Random64.main(String)  At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a50c1debc43a 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 391 (vs. ulimit of 10000) || modules | C: hbase-common hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 28 **
[Comment excluded]

** Comment 29 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 16s |  master passed  || +1 |  compile  |   1m  8s |  master passed  || +1 |  checkstyle  |   0m 43s |  master passed  || +1 |  shadedjars  |   4m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 44s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 16s |  the patch passed  || +1 |  compile  |   1m  2s |  the patch passed  || +1 |  javac  |   1m  2s |  the patch passed  || +1 |  checkstyle  |   0m 42s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 26s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 54s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 45s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 26s |  hbase-common in the patch passed.  || +1 |  unit  |   0m 42s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  ||  |   |  41m 32s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 336534619a1f 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 391 (vs. ulimit of 10000) || modules | C: hbase-common hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 38 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 39 **
[Comment excluded]

** Comment 40 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  2s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 42s |  branch-1 passed  || +1 |  compile  |   0m 32s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 37s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   0m 48s |  branch-1 passed  || +1 |  shadedjars  |   2m 38s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 24s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 29s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 35s |  the patch passed  || +1 |  compile  |   0m 29s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 29s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 37s |  the patch passed  || -1 |  checkstyle  |   0m 24s |  hbase-common: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || -1 |  checkstyle  |   0m 24s |  hbase-it: The patch generated 1 new + 35 unchanged - 1 fixed = 36 total (was 36)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 36s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 23s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 29s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  5s |  hbase-common in the patch passed.  || +1 |  unit  |   0m 23s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   |  20m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21256 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c3e01a757950 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / b73aab8 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 148 (vs. ulimit of 10000) || modules | C: hbase-common hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 41 **
[Comment excluded]

** Comment 42 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 43 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 44 **
[Comment excluded]
"
HBASE-21991,https://issues.apache.org/jira/browse/HBASE-21991,https://github.com/apache/hbase/blob/rel/1.4.10/hbase-server/src/main/java/org/apache/hadoop/hbase/util/LossyCounting.java,"Fix MetaMetrics issues - [Race condition, Faulty remove logic], few improvements",NO,"Here is a list of the issues related to the MetaMetrics implementation:

+*Bugs*+:
 # [_Lossy counting for top-k_] *Faulty remove logic of non-eligible meters*: Under certain conditions, we might end up storing/exposing all the meters rather than top-k-ish
 # MetaMetrics can throw NPE resulting in aborting of the RS because of a *Race Condition*.

+*Improvements*+:
 # With high number of regions in the cluster, exposure of metrics for each region blows up the JMX from ~140 Kbs to 100+ Mbs depending on the number of regions. It's better to use *lossy counting to maintain top-k for region metrics* as well.
 # As the lossy meters do not represent actual counts, I think, it'll be better to *rename the meters to include ""lossy"" in the name*. It would be more informative while monitoring the metrics and there would be less confusion regarding actual counts to lossy counts.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Regarding the race condition: * With multiple rpc handler threads trying to access the map of <meter names,meters>, a thread might try to access a metric that was removed by some other thread from the map as shown below:   private void markMeterIfPresent(String requestMeter) {      ...      if (requestsMap.containsKey(requestMeter) && requestsMap.get(requestMeter).isPresent()) {          Meter metric = (Meter) requestsMap.get(requestMeter).get();// <-----------Thread-1 trying to access the       // -----------metric here that was removed by Thread-2 below----------------------------        ...      }    }    private void registerLossyCountingMeterIfNotPresent(...) {      ...      Set<String> metersToBeRemoved = lossyCounting.addByOne(requestMeter);      if(!requestsMap.containsKey(requestMeter) && metersToBeRemoved.contains(requestMeter)){        for(String meter: metersToBeRemoved) {          requestsMap.remove(meter); //------------------> Thread-2 removing the meter here          ...        }        ...      }      ...    }{code}Verified with a unit test. Frequently got errors of the below kind:regionserver.HRegionServer: ***** ABORTING region server x.y.z.24,16020,1548747043814: The coprocessor org.apache.hadoop.hbase.coprocessor.MetaTableMetrics threw java.lang.NullPointerException *****{code}

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   4m  1s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m  4s |  master passed  || +1 |  compile  |   1m 54s |  master passed  || +1 |  checkstyle  |   1m  6s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   2m 16s |  hbase-server in master has 1 extant Findbugs warnings.  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 45s |  the patch passed  || +1 |  compile  |   1m 50s |  the patch passed  || +1 |  javac  |   1m 50s |  the patch passed  || -1 |  checkstyle  |   1m  4s |  hbase-server: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  0s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 19s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 267m  1s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 307m 36s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.master.procedure.TestSCPWithReplicasWithoutZKCoordinated ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.TestClientOperationTimeout ||   | hadoop.hbase.master.procedure.TestSCPWithReplicas ||   | hadoop.hbase.master.TestSplitWALManager ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestFromClientSide |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 48fc72623e2e 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3bd7f8424b || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5362 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 23s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m 14s |  master passed  || +1 |  compile  |   2m 37s |  master passed  || +1 |  checkstyle  |   1m 22s |  master passed  || +1 |  shadedjars  |   5m 17s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  3s |  master passed  || +1 |  javadoc  |   0m 39s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   2m 37s |  the patch passed  || +1 |  javac  |   2m 37s |  the patch passed  || -1 |  checkstyle  |   1m 23s |  hbase-server: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 25s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 43s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 12s |  the patch passed  || +1 |  javadoc  |   0m 40s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 274m 29s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 324m 20s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestSplitWALManager ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.client.TestFromClientSide |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8303e7ca2c6b 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / a7bbff170a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5067 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 12 **
very good analysis! And the patch looks great. I only have some minor comments below:For the unit test,""try{      connection = UTIL.getConnection();""{code}Please do try-with-resource approach. ""e.printStackTrace();""{code} Can you log the exception?Also, is that possible to count rows you wrote after all the Put-s done as part of this test?

** Comment 13 **
[Comment excluded]

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 30s |  master passed  || +1 |  compile  |   2m  7s |  master passed  || +1 |  checkstyle  |   1m 19s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 39s |  master passed  || +1 |  javadoc  |   0m 33s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 5 new + 0 unchanged - 0 fixed = 5 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 47s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 16s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 153m 45s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 30s |  The patch does not generate ASF License warnings.  ||  |   | 196m 36s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ef6f299e630e 4.4.0-138-generic #164~14.04.1-Ubuntu SMP Fri Oct 5 08:56:16 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3ff2847457 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4927 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 15 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   3m 47s |  master passed  || +1 |  compile  |   1m 55s |  master passed  || +1 |  checkstyle  |   1m  4s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 23s |  master passed  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 50s |  the patch passed  || +1 |  compile  |   1m 52s |  the patch passed  || +1 |  javac  |   1m 52s |  the patch passed  || +1 |  checkstyle  |   1m  5s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 58s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 22s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 130m  0s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   | 166m 49s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux efe28f9fc238 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3ff2847457 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 ||  Test Results | [link] || Max. process+thread count | 4919 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 16 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   2m  5s |  master passed  || +1 |  checkstyle  |   1m 14s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 25s |  master passed  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   2m  5s |  the patch passed  || +1 |  javac  |   2m  5s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 35s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 37s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 132m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 172m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 06d0eced645a 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3ff2847457 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 ||  Test Results | [link] || Max. process+thread count | 5196 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m 11s |  branch-1 passed  || +1 |  compile  |   0m 45s |  branch-1 passed with JDK v1.8.0_202  || +1 |  compile  |   0m 45s |  branch-1 passed with JDK v1.7.0_211  || +1 |  checkstyle  |   1m 29s |  branch-1 passed  || +1 |  shadedjars  |   3m 10s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 40s |  branch-1 passed with JDK v1.8.0_202  || +1 |  javadoc  |   0m 45s |  branch-1 passed with JDK v1.7.0_211  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 58s |  the patch passed  || +1 |  compile  |   0m 45s |  the patch passed with JDK v1.8.0_202  || +1 |  javac  |   0m 45s |  the patch passed  || +1 |  compile  |   0m 45s |  the patch passed with JDK v1.7.0_211  || +1 |  javac  |   0m 45s |  the patch passed  || +1 |  checkstyle  |   1m 29s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   2m  3s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.8.0_202  || +1 |  javadoc  |   0m 44s |  the patch passed with JDK v1.7.0_211  ||| || || ||  Other Tests  ||| -1 |  unit  | 154m 14s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 182m 46s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestPerColumnFamilyFlush ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21991 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2701e1c0a57d 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / c1a64aa || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_211 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_202 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_211 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4163 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 32 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 33 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 37 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 38 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]

** Comment 42 **
[Comment excluded]

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
[Comment excluded]

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop3 checks
-- Something went wrong running this stage, please .
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 54 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 55 **
[Comment excluded]

** Comment 56 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 57 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 58 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- Something went wrong running this stage, please .
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- Something went wrong running this stage, please .
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 59 **
[Comment excluded]

** Comment 60 **
[Comment excluded]

** Comment 61 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 62 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22702,https://issues.apache.org/jira/browse/HBASE-22702,https://github.com/apache/hbase/blob/rel/1.4.11/hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java,[Log] 'Group not found for table' is chatty,NO,"When rsgroup feature is enabled, there are few places when 'RSGroupBasedLoadBalancer' can't find group of a table and print a lot of {{Group not found for table ***, using default}} which is chatty and useless in master log.

Plan to make it DEBUG level or remove it, since we can always know what tables a rsgroup contains by using hbase shell.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 6 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch branch-2.2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22912,https://issues.apache.org/jira/browse/HBASE-22912,https://github.com/apache/hbase/blob/rel/1.4.11/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,[Backport] HBASE-22867 to branch-1 to avoid ForkJoinPool to spawn thousands of threads,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 3 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-23110,https://issues.apache.org/jira/browse/HBASE-23110,https://github.com/apache/hbase/blob/rel/1.4.11/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMetaTableMetrics.java,"Backport HBASE-23054 ""Remove synchronization block from MetaTableMetrics and fix LossyCounting algorithm"" to branch-1",NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Results for branch branch-1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 7 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-23250,https://issues.apache.org/jira/browse/HBASE-23250,https://github.com/apache/hbase/blob/rel/1.4.12/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,Log message about CleanerChore delegate initialization should be at INFO,YES,"Right now we log a DEBUG message as we initialize the delegates that decide on cleaner decisions:

{code}
2019-10-30 07:30:01,594 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: initialize cleaner=org.apache.hadoop.hbase.replication.master.ReplicationLogCleaner
2019-10-30 07:30:01,597 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: initialize cleaner=org.apache.hadoop.hbase.master.snapshot.SnapshotLogCleaner
2019-10-30 07:30:01,600 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: initialize cleaner=org.apache.hadoop.hbase.master.cleaner.HFileLinkCleaner
2019-10-30 07:30:01,601 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: initialize cleaner=org.apache.hadoop.hbase.master.snapshot.SnapshotHFileCleaner
2019-10-30 07:30:01,602 DEBUG org.apache.hadoop.hbase.master.cleaner.CleanerChore: initialize cleaner=org.apache.hadoop.hbase.master.cleaner.TimeToLiveHFileCleaner
{code}

Done here in CleanerChore.java:
{code}
 private void initCleanerChain(String confKey) {
    this.cleanersChain = new LinkedList<>();
    String[] logCleaners = conf.getStrings(confKey);
    if (logCleaners != null) {
      for (String className : logCleaners) {
        T logCleaner = newFileCleaner(className, conf);
        if (logCleaner != null) {
          LOG.debug(""Initialize cleaner={}"", className);
          this.cleanersChain.add(logCleaner);
        }
      }
    }
  }
{code}

This message should be at INFO. it doesn't happen often and knowing what plugins decide about file deletions is important all the time.","** Comment 1 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #669 (See )
HBASE-23250 Log message about CleanerChore delegate initialization (jan.hentschel: rev 70681fcb83f1dc1c0e5379923e17aa7a8deabf0f)


** Comment 2 **
Results for branch branch-1.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 6 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25726,https://issues.apache.org/jira/browse/HBASE-25726,https://github.com/apache/hbase/blob/rel/1.7.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,MoveCostFunction is not included in the list of cost functions for StochasticLoadBalancer,NO,"After OffPeakHours fix for MoveCostFunction (HBASE-24709), MoveCostFunction is no longer included in costFunctions list. {{addCostFunction}} expects multiplier to be non-zero, but multiplier is now only set in {{cost}} function.

As a result, {{hbase.master.balancer.stochastic.maxMovePercent}} is not respected, and there is no cost function to oppose a move. Any move that decreases total cost at all will be accepted, causing more churn and disruption from balancer executions.

We noticed this when investigating a case where the balancer would run after a regionserver was restarted without use of region_mover script. The regionserver comes online with 0 regions, leading to a shortcut in {{needsBalance}} for {{idleRegionServerExist}}. The balancer runs to move regions to that newly restarted regionserver. However, it moves a large number of regions in the cluster, hyper-optimizing the other cost variables. There were ~4300 regions in the cluster at the time, so moving 25% of the regions should have had a final cost of at least 7 (default moveCostFunction weight.) MoveCostFunction is also not listed in the functions contributing to the initial cost.

{{2021-03-30 15:47:43,396 INFO [49187_ChoreService_3] balancer.StochasticLoadBalancer - start StochasticLoadBalancer.balancer, initCost=12.91377229840024, functionCost=RegionCountSkewCostFunction : (500.0, 0.014878672009326464); TableSkewCostFunction : (35.0, 0.013600280177445717); RegionReplicaHostCostFunction : (100000.0, 0.0); RegionReplicaRackCostFunction : (10000.0, 0.0); ReadRequestCostFunction : (5.0, 0.8296332203204705); WriteRequestCostFunction : (5.0, 0.06818455421617946); MemstoreSizeCostFunction : (5.0, 0.08132131691669181); StoreFileCostFunction : (5.0, 0.02054620605193966); computedMaxSteps: 1000000}}

{{2021-03-30 15:48:13,385 DEBUG [49187_ChoreService_3] balancer.StochasticLoadBalancer - Finished computing new load balance plan. Computation took 30004ms to try 6571 different iterations. Found a solution that moves 1095 regions; Going from a computed cost of 12.91377229840024 to a new cost of 4.804625730746651}}","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25809,https://issues.apache.org/jira/browse/HBASE-25809,https://github.com/apache/hbase/blob/rel/1.7.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java,[branch-1] TestAtomicOperation.testMultiRowMutationMultiThreads deadlock,NO,"TestAtomicOperation.testMultiRowMutationMultiThreads deadlocks.

There is an easy fix for the test that synchronizes on the CHM instead of the object. We already have a Findbugs exceptions for synchronization on the CHM and get-then-set on it is what we synchronizing for anyway.

This is only relevant for branch-1 because we have to synchronize get-then-set due to Java 7 compatibility. For branch-2 and master we use CHM#computeIfPresent.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-19552,https://issues.apache.org/jira/browse/HBASE-19552,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AbstractRpcClient.java,update hbase to use new thirdparty libs,NO,"When we release hbase-thirdparty next release, we will need to update our code for the packaging change.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  shelldocs  |   0m  3s |  Shelldocs was not available.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 31s |  master passed  || +1 |  compile  |   4m 20s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   3m 54s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   1m  7s |  root in the patch failed.  || -1 |  compile  |   0m 35s |  root in the patch failed.  || -1 |  javac  |   0m 35s |  root in the patch failed.  || -1 |  shellcheck  |   0m  1s |  The patch generated 5 new + 40 unchanged - 5 fixed = 45 total (was 45)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  7s |  The patch has no ill-formed XML file.  || -1 |  shadedjars  |   1m  2s |  patch has 283 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 47s |  The patch causes 283 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   2m 29s |  The patch causes 283 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   3m 13s |  The patch causes 283 errors with Hadoop v3.0.0.  || -1 |  javadoc  |   0m 25s |  hbase-server generated 100 new + 0 unchanged - 2 fixed = 100 total (was 2)  || -1 |  javadoc  |   0m 13s |  hbase-mapreduce generated 30 new + 0 unchanged - 0 fixed = 30 total (was 0)  || -1 |  javadoc  |   2m 39s |  root generated 496 new + 23 unchanged - 7 fixed = 519 total (was 30)  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m 56s |  root in the patch failed.  || +1 |  asflicense  |   0m 46s |  The patch does not generate ASF License warnings.  ||  |   |  28m 57s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19552 || JIRA Patch URL | [link] || Optional Tests |  asflicense  shellcheck  shelldocs  javac  javadoc  unit  xml  shadedjars  hadoopcheck  compile  || uname | Linux 7c06485786cd 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 01b1f48ccd || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || shellcheck | v0.4.4 || mvninstall | [link] || compile | [link] || javac | [link] || shellcheck | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-checkstyle hbase-protocol-shaded hbase-server hbase-mapreduce hbase-spark . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
bq.  I updated the checkstyle import order rule, WDYT?Perhaps {{org.apache.hbase.thirdparty}} should be placed at end? Just sort the groups alphabetically.The {{failOnViolation}} is enable in some modules so checking the imports order is necessary now...

** Comment 18 **
Putting `thirdparty` before `shaded` let me get away with not changing the import order on anything, which is why it was my preferred solution. Agree that it's kind of ugly, but would prefer to alphabetize in a future commit?`failOnViolation` is the only reason I ended up caring about this. :)

** Comment 19 **
[Comment excluded]

** Comment 20 **
I'm +1 on commit too.Alphabetize in a future issue? failOnViolation of import order is over-the-top IMO. We should undo it?

** Comment 21 **
bq. Alphabetize in a future issue? This may be not necessary.bq. failOnViolation of import order is over-the-top IMO. We should undo it?I don't thinks so since it is also ugly that we make many changes for the import reorder. We should make it a rule to follow our code style.

** Comment 22 **
[Comment excluded]

** Comment 23 **
bq.  Your argument is that an enforced import-order makes for less change over time? yepbq. As long as the order is easy to enforce, simple alphabetization, I can buy that. Currently, all rule for imports can be implemented by the checkstyle, and it is vary simple I believe. Also,  is working to fix all checkstyle warnings for our hbase (see HBASE-12521). It is a hard and great job. That is why I prefer to keep the failOnViolatio. 

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4302 (See )
HBASE-19552 Update hbase-thirdparty version (mdrob: rev ea7d5fc88454cc8d623d837e2d8975643e354bda)
* (edit) bin/hbase
* (edit) hbase-mapreduce/pom.xml
* (edit) src/main/asciidoc/_chapters/developer.adoc
* (edit) hbase-protocol-shaded/pom.xml
* (edit) hbase-server/pom.xml
* (edit) pom.xml
* (edit) hbase-checkstyle/src/main/resources/hbase/checkstyle.xml
* (edit) hbase-spark/pom.xml
HBASE-19552 find-and-replace thirdparty offset (mdrob: rev c3b4f788b16ac4e0e8cfd319f495308ba4d158f5)
* (edit) hbase-server/src/main/resources/hbase-webapps/master/header.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/regionserver/footer.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/regionserver/header.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/master/table.jsp
* (edit) hbase-server/src/main/resources/hbase-webapps/master/footer.jsp


** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4303 (See )
HBASE-19552 ADDENDUM fix shaded lib check (mdrob: rev b3f353cd3ce6bd1ad5ed8c1e9dc390a33d62ce0e)
* (edit) hbase-shaded/hbase-shaded-check-invariants/src/test/resources/ensure-jars-have-correct-contents.sh


** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]
"
HBASE-20213,https://issues.apache.org/jira/browse/HBASE-20213,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcConnection.java,"[LOGGING] Aligning formatting and logging less (compactions, in-memory compactions)",YES,Here is some logging cleanup that came of a study session this afternoon.,"** Comment 1 **
.001 Log less, log using roughly same format. Changed logs in in-memory compaction, file archiving, and in compaction.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 16s |  branch-2 passed  || +1 |  compile  |   1m 33s |  branch-2 passed  || +1 |  checkstyle  |   1m  4s |  branch-2 passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 53s |  branch-2 passed  || +1 |  javadoc  |   0m 26s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m  1s |  the patch passed  || +1 |  compile  |   1m 30s |  the patch passed  || +1 |  javac  |   1m 30s |  the patch passed  || -1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 5 new + 293 unchanged - 7 fixed = 298 total (was 300)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  5s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 59s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  21m 24s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 12s |  The patch does not generate ASF License warnings.  ||  |   |  55m  5s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.compactions.TestStripeCompactor ||   | hadoop.hbase.regionserver.compactions.TestDateTieredCompactor |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20213 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 46595d79a68a 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / e0bdc87b27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 702 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
+1 on these changes. I think since you are testing it now you know better as how the changes now helps the logging better. 

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m  0s |  branch-2 passed  || +1 |  compile  |   1m 27s |  branch-2 passed  || +1 |  checkstyle  |   1m  1s |  branch-2 passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 47s |  branch-2 passed  || +1 |  javadoc  |   0m 27s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m  6s |  the patch passed  || +1 |  compile  |   1m 28s |  the patch passed  || +1 |  javac  |   1m 28s |  the patch passed  || -1 |  checkstyle  |   1m  1s |  hbase-server: The patch generated 1 new + 292 unchanged - 8 fixed = 293 total (was 300)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  1s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m  3s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 26s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 101m 32s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 134m 51s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Nullcheck of file at line 156 of value previously dereferenced in org.apache.hadoop.hbase.regionserver.compactions.Compactor.getFileDetails(Collection, boolean)  At [file java]:156 of value previously dereferenced in org.apache.hadoop.hbase.regionserver.compactions.Compactor.getFileDetails(Collection, boolean)  At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20213 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2609c072b180 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / e0bdc87b27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 4579 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 51s |  branch-2 passed  || +1 |  compile  |   1m 50s |  branch-2 passed  || +1 |  checkstyle  |   1m 16s |  branch-2 passed  || +1 |  shadedjars  |   5m 28s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 13s |  branch-2 passed  || +1 |  javadoc  |   0m 29s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 26s |  the patch passed  || +1 |  compile  |   1m 45s |  the patch passed  || +1 |  javac  |   1m 45s |  the patch passed  || -1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 5 new + 293 unchanged - 7 fixed = 298 total (was 300)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 32s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m 20s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 123m 35s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 163m 15s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Nullcheck of file at line 156 of value previously dereferenced in org.apache.hadoop.hbase.regionserver.compactions.Compactor.getFileDetails(Collection, boolean)  At [file java]:156 of value previously dereferenced in org.apache.hadoop.hbase.regionserver.compactions.Compactor.getFileDetails(Collection, boolean)  At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20213 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a7598e96feb1 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / e0bdc87b27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 4006 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 30s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 21s |  branch-2 passed  || +1 |  compile  |   1m 58s |  branch-2 passed  || +1 |  checkstyle  |   1m 27s |  branch-2 passed  || +1 |  shadedjars  |   5m 26s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 26s |  branch-2 passed  || +1 |  javadoc  |   0m 39s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 24s |  the patch passed  || +1 |  compile  |   1m 58s |  the patch passed  || +1 |  javac  |   1m 58s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 290 unchanged - 10 fixed = 290 total (was 300)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  0s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 34s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 34s |  the patch passed  || +1 |  javadoc  |   0m 38s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 44s |  hbase-procedure in the patch passed.  || +1 |  unit  | 114m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 157m 35s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20213 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a11cb45901e0 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 79d47dd57a || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4423 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 13 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19545,https://issues.apache.org/jira/browse/HBASE-19545,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Base64.java,Replace getBytes(StandardCharsets.UTF_8) with Bytes.toBytes,NO,On HBASE-19498 [~stack] mentioned that Bytes.toBytes by default uses UTF_8 encoding so getBytes(StandardCharsets.UTF_8) can be simplified.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  21m 53s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 13 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m  6s |  branch-1 passed  || +1 |  compile  |   1m 34s |  branch-1 passed with JDK v1.8.0_152  || +1 |  compile  |   1m 54s |  branch-1 passed with JDK v1.7.0_161  || +1 |  checkstyle  |   2m 56s |  branch-1 passed  || +1 |  shadedjars  |   5m 40s |  branch has no errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   0m 53s |  hbase-common in branch-1 has 1 extant Findbugs warnings.  || -1 |  findbugs  |   1m 19s |  hbase-client in branch-1 has 1 extant Findbugs warnings.  || +1 |  javadoc  |   1m 36s |  branch-1 passed with JDK v1.8.0_152  || +1 |  javadoc  |   1m 51s |  branch-1 passed with JDK v1.7.0_161  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 19s |  the patch passed  || +1 |  compile  |   1m 42s |  the patch passed with JDK v1.8.0_152  || +1 |  javac  |   1m 42s |  the patch passed  || +1 |  compile  |   1m 50s |  the patch passed with JDK v1.7.0_161  || -1 |  javac  |   0m 42s |  hbase-server-jdk1.7.0_161 with JDK v1.7.0_161 generated 2 new + 4 unchanged - 2 fixed = 6 total (was 6)  || +1 |  checkstyle  |   0m 28s |  hbase-common: The patch generated 0 new + 92 unchanged - 12 fixed = 92 total (was 104)  || +1 |  checkstyle  |   0m 33s |  hbase-client: The patch generated 0 new + 194 unchanged - 9 fixed = 194 total (was 203)  || +1 |  checkstyle  |   1m 28s |  hbase-server: The patch generated 0 new + 410 unchanged - 6 fixed = 410 total (was 416)  || +1 |  checkstyle  |   0m 27s |  hbase-rest: The patch generated 0 new + 0 unchanged - 1 fixed = 0 total (was 1)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 58s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 18s |  Patch does not cause any errors with Hadoop 2.4.1 2.5.2 2.6.5 2.7.4.  || +1 |  findbugs  |   6m 37s |  the patch passed  || +1 |  javadoc  |   1m 24s |  the patch passed with JDK v1.8.0_152  || +1 |  javadoc  |   1m 52s |  the patch passed with JDK v1.7.0_161  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  8s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 26s |  hbase-client in the patch passed.  || +1 |  unit  |  92m 43s |  hbase-server in the patch passed.  || +1 |  unit  |  11m 50s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   0m 55s |  The patch does not generate ASF License warnings.  ||  |   | 184m  2s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-19545 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e522c1daa12a 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / 0a31209 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_161 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_152 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_161 || findbugs | v3.0.0 || findbugs | [link] || findbugs | [link] || javac | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-client hbase-server hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 13 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 49s |  master passed  || +1 |  compile  |   1m 25s |  master passed  || +1 |  checkstyle  |   1m 23s |  master passed  || +1 |  shadedjars  |   5m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m 11s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  4s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed  || +1 |  javac  |   1m 31s |  the patch passed  || +1 |  checkstyle  |   0m 27s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 113 unchanged - 5 fixed = 113 total (was 118)  || +1 |  checkstyle  |   0m 19s |  hbase-mapreduce: The patch generated 0 new + 18 unchanged - 2 fixed = 18 total (was 20)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-examples passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  21m 38s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   1m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 43s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 59s |  hbase-client in the patch passed.  || +1 |  unit  |  13m 30s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   1m 27s |  hbase-examples in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   |  66m 56s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19545 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 06a6a0e1ffc4 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8ec0aa0d70 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || modules | C: hbase-common hbase-client hbase-mapreduce hbase-examples U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  13m 51s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 13 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 19s |  Maven dependency ordering for branch  || -1 |  mvninstall  |   0m  7s |  root in master failed.  || -1 |  compile  |   0m 15s |  hbase-client in master failed with JDK v1.8.0_152.  || -1 |  compile  |   0m 14s |  hbase-mapreduce in master failed with JDK v1.8.0_152.  || -1 |  compile  |   0m  8s |  hbase-common in master failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  7s |  hbase-client in master failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  9s |  hbase-mapreduce in master failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  9s |  hbase-examples in master failed with JDK v1.7.0_161.  || +1 |  checkstyle  |   1m 31s |  master passed  || -1 |  shadedjars  |   1m 39s |  branch has 7 errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   0m  7s |  hbase-common in master failed.  || -1 |  findbugs  |   0m  7s |  hbase-client in master failed.  || -1 |  findbugs  |   0m  8s |  hbase-mapreduce in master failed.  || -1 |  findbugs  |   0m  9s |  hbase-examples in master failed.  || +1 |  javadoc  |   0m 59s |  master passed with JDK v1.8.0_152  || -1 |  javadoc  |   0m  8s |  hbase-common in master failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m  8s |  hbase-client in master failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m  9s |  hbase-mapreduce in master failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m 10s |  hbase-examples in master failed with JDK v1.7.0_161.  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   0m  7s |  root in the patch failed.  || -1 |  compile  |   0m 15s |  hbase-client in the patch failed with JDK v1.8.0_152.  || -1 |  compile  |   0m 13s |  hbase-mapreduce in the patch failed with JDK v1.8.0_152.  || -1 |  javac  |   0m 15s |  hbase-client in the patch failed with JDK v1.8.0_152.  || -1 |  javac  |   0m 13s |  hbase-mapreduce in the patch failed with JDK v1.8.0_152.  || -1 |  compile  |   0m  7s |  hbase-common in the patch failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  7s |  hbase-client in the patch failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  9s |  hbase-mapreduce in the patch failed with JDK v1.7.0_161.  || -1 |  compile  |   0m  9s |  hbase-examples in the patch failed with JDK v1.7.0_161.  || -1 |  javac  |   0m  7s |  hbase-common in the patch failed with JDK v1.7.0_161.  || -1 |  javac  |   0m  7s |  hbase-client in the patch failed with JDK v1.7.0_161.  || -1 |  javac  |   0m  9s |  hbase-mapreduce in the patch failed with JDK v1.7.0_161.  || -1 |  javac  |   0m  9s |  hbase-examples in the patch failed with JDK v1.7.0_161.  || +1 |  checkstyle  |   0m 26s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 113 unchanged - 5 fixed = 113 total (was 118)  || +1 |  checkstyle  |   0m 19s |  hbase-mapreduce: The patch generated 0 new + 18 unchanged - 2 fixed = 18 total (was 20)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-examples passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   0m  7s |  patch has 7 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   0m 15s |  The patch causes 7 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   0m 22s |  The patch causes 7 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   0m 30s |  The patch causes 7 errors with Hadoop v3.0.0-beta1.  || -1 |  findbugs  |   0m  7s |  hbase-common in the patch failed.  || -1 |  findbugs  |   0m  7s |  hbase-client in the patch failed.  || -1 |  findbugs  |   0m  9s |  hbase-mapreduce in the patch failed.  || -1 |  findbugs  |   0m  9s |  hbase-examples in the patch failed.  || +1 |  javadoc  |   1m  1s |  the patch passed with JDK v1.8.0_152  || -1 |  javadoc  |   0m  8s |  hbase-common in the patch failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m  7s |  hbase-client in the patch failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m 11s |  hbase-mapreduce in the patch failed with JDK v1.7.0_161.  || -1 |  javadoc  |   0m  9s |  hbase-examples in the patch failed with JDK v1.7.0_161.  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m  6s |  hbase-common in the patch failed.  || -1 |  unit  |   0m  7s |  hbase-client in the patch failed.  || -1 |  unit  |   0m  9s |  hbase-mapreduce in the patch failed.  || -1 |  unit  |   0m  9s |  hbase-examples in the patch failed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   |  27m  4s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:36a7029 || JIRA Issue | HBASE-19545 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bdc408613207 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 41c2dd0 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_161 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_152 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_161 || mvninstall | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || mvninstall | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || javac | [link] || javac | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || unit | [link] || unit | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-client hbase-mapreduce hbase-examples U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 13 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 29s |  master passed  || +1 |  compile  |   1m 16s |  master passed  || +1 |  checkstyle  |   1m 21s |  master passed  || +1 |  shadedjars  |   5m 59s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m  3s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 31s |  the patch passed  || +1 |  compile  |   1m 16s |  the patch passed  || +1 |  javac  |   1m 16s |  the patch passed  || +1 |  checkstyle  |   0m 24s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 29s |  hbase-client: The patch generated 0 new + 113 unchanged - 5 fixed = 113 total (was 118)  || +1 |  checkstyle  |   0m 17s |  hbase-mapreduce: The patch generated 0 new + 18 unchanged - 2 fixed = 18 total (was 20)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-examples passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 21s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   1m  3s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  9s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 33s |  hbase-client in the patch passed.  || +1 |  unit  |   9m 41s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   1m 19s |  hbase-examples in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   |  57m 57s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19545 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 20b3093b6f28 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 41c2dd04da || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || modules | C: hbase-common hbase-client hbase-mapreduce hbase-examples U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4295 (See )
HBASE-19545 Replace getBytes(StandardCharsets.UTF_8) with Bytes.toBytes (chia7712: rev 7145d98182fb95f6f1c1119c3e779eed0bc322bb)

"
HBASE-10092,https://issues.apache.org/jira/browse/HBASE-10092,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Methods.java,Move to slf4j,YES,"Allows logging with less friction.  See http://logging.apache.org/log4j/2.x/  This rather radical transition can be done w/ minor change given they have an adapter for apache's logging, the one we use.  They also have and adapter for slf4j so we likely can remove at least some of the 4 versions of this module our dependencies make use of.

I made a start in attached patch but am currently stuck in maven dependency resolve hell courtesy of our slf4j.  Fixing will take some concentration and a good net connection, an item I currently lack.  Other TODOs are that will need to fix our little log level setting jsp page -- will likely have to undo our use of hadoop's tool here -- and the config system changes a little.

I will return to this project soon.  Will bring numbers.
 ","** Comment 1 **
[Comment excluded]

** Comment 2 **
I need to convert the log4j.properties files to log4j2.xml files.

** Comment 3 **
[Comment excluded]

** Comment 4 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12637326
    +1 @author.  The patch does not contain any @author tags.
    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.
    -1 javadoc.  The javadoc tool appears to have generated 6 warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.client.TestClientScannerRPCTimeout
                  org.apache.hadoop.hbase.client.TestMultiParallel
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS
                  org.apache.hadoop.hbase.fs.TestBlockReorder
                  org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS
                  org.apache.hadoop.hbase.snapshot.TestFlushSnapshotFromClient
                  org.apache.hadoop.hbase.TestIOFencing
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests
                  org.apache.hadoop.hbase.regionserver.wal.TestSecureHLog
                  org.apache.hadoop.hbase.replication.TestReplicationDisableInactivePeer
                  org.apache.hadoop.hbase.regionserver.wal.TestHLogSplit
                  org.apache.hadoop.hbase.client.TestFromClientSide
                  org.apache.hadoop.hbase.ipc.TestDelayedRpc
                  org.apache.hadoop.hbase.regionserver.wal.TestHLogSplitCompressed
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers
                  org.apache.hadoop.hbase.regionserver.wal.TestHLog
                  org.apache.hadoop.hbase.filter.TestFilterWithScanLimits
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 5 **
The patch from HBASE-11284
Change summary:\\
- 53 files changed, 497 insertions, 531 deletions
- POM changes: Import log4j2 artifacts only into the compiler classpath. Include the artifacts that wire log4j2 up to commons-logging and slf4j. Exclude log4j1 except in test scope (required by Hadoop). Bring slf4j into test scope also (required by Hadoop, ZooKeeper, and Thrift).
- org.apache.log4j.Level is an internal implementation detail of 1.x no longer available. Remove all uses.
- org.apache.log4j.Appender is also an internal implementation detail of 1.x. One unit test and a log management utility requires reimplementation or removal. For now offending code is commented out and marked with TODO
- Replace log4j.properties files with log4j2.xml and log4j2-test.xml files. Not sure if these are functional yet. May require tweaks if significantly deviating from old behavior. conf/hbase-env.sh and bin/hbase required minor related changes. Haven't figured out how to do custom log levels yet like we had in the old log4j.properties files.

** Comment 6 **
How to progress on this ?
+ Need to make tgzs and see that stuff lands in right place.  Add some excludes for transitive includes of old log4js.
+ Need to try in standalone, pseudo, and cluster and bring up shell to make sure logs are ending up in right place?
I'd be tempted to just commit something that basically worked and then work out the rest in subsequent issues.

** Comment 7 **
bq.  Need to make tgzs and see that stuff lands in right place. Add some excludes for transitive includes of old log4js.
I did this and checked mvn dependency:tree. It looks good. I then had to add back log4j 1 and slf4j in test scope so we could actually instantiate Hadoop classes for running unit tests (Java logging is a disaster), not sure what that is going to do in an assembly.
bq. Need to try in standalone, pseudo, and cluster and bring up shell to make sure logs are ending up in right place
Yes, the new log4j2.xml files are untested and I'm sure need work. 

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
I think this a hbase 2.0 issue now.  Log config format changes which will be too much to take on in a 1.0 hbase (IMO).

** Comment 11 **
bq. Log config format changes which will be too much to take on in a 1.0 hbase (IMO).
Was thinking about this also. So let me just propose it then.. What about putting in a log configuration file adapter so we don't have to change our log4j properties files until later? This would be needed if we ever wanted to backport async logging improvements to something like 0.98. 

** Comment 12 **
bq. What about putting in a log configuration file adapter so we don't have to change our log4j properties files until later?
That'd make it palatable.

** Comment 13 **
If support for properties files is that important, vote for LOG4J2-635. I personally find them horribly confusing to use in comparison with the XML/JSON/YAML formats, but it seems to be a desired feature.
Otherwise, you can create a custom ConfigurationFactory to do your own config file parsing and delegation.

** Comment 14 **
 I don't think properties is a blocker one way or another.
I am trying to figure out what to do with HttpRequestLogAppender. Is this anything more than trying to get jetty to log to log4j? If so can we just do [link]

** Comment 15 **
Any reason why we should not consider logback? It looks like supporting unit testing with the new version of surefire is going to be very hard with log4j2

** Comment 16 **
The issue I had with common-logging in the past was the lack of MDC (I wanted to log the htrace id). All other wrappers support MDC.
But naive question: would it make sense to use directly log4j2 instead of using a wrapper?


** Comment 17 **
The good news is that I am fairly sure unit tests will not be an issue with log4j2. As far as using it directly, I am game. But it's a much larger change. I think I am very close on this one.

** Comment 18 **
[Comment excluded]

** Comment 19 **
bq. I don't think properties is a blocker one way or another.
See Stack's comment above. The change will not be palatable for current or anticipated releases (0.98, 1.0) without properties file compatibility. A trunk only change would still be a great contribution but with less impact. I would really like to see async logging a possibility in 0.98 so will need to do this work at least in that branch. 
bq. Any reason why we should not consider logback? It looks like supporting unit testing with the new version of surefire is going to be very hard with log4j2
Hadoop is looking at moving up to log4j2 also. What kind of hell will we be in if Hadoop is on log4j2 and we are on logback? Isn't log4j2 the continuation of logback? 

** Comment 20 **
bq. If support for properties files is that important, vote for LOG4J2-635.
As requested, ! 

** Comment 21 **
I have attached a preview patch to keep this up to date. You can follow my realtime progress at
[link]
Overall, there's a bunch of stuff I want feedback on.
1 -  What is the purpose of setting the request logger? Setting appenders is a bit more difficult to do in the new log4j2. Perhaps we would be better just upgrading to jetty 9 and using the built in capability. Another option may be using routing.
2 -  Why did you leave in the log4j v1 stuff. Is the compatibility the useful part. What am I missing?


** Comment 22 **
-1 overall.  Here are the results of testing the latest attachment 
  [link]
  against trunk revision .
  ATTACHMENT ID: 12664241
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 99 new or modified tests.
    -1 javac.  The applied patch generated 69 javac compiler warnings (more than the trunk's current 45 warnings).
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 javadoc.  The javadoc tool appears to have generated 6 warning messages.
    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.
    +1 release audit.  The applied patch does not increase the total number of release audit warnings.
    +1 lineLengths.  The patch does not introduce lines longer than 100
  +1 site.  The mvn site goal succeeds with this patch.
     -1 core tests.  The patch failed these unit tests:
                       org.apache.hadoop.hbase.util.TestDynamicClassLoader
                  org.apache.hadoop.hbase.io.crypto.aes.TestAES
                  org.apache.hadoop.hbase.io.crypto.TestKeyProvider
                  org.apache.hadoop.hbase.io.crypto.TestCipherProvider
                  org.apache.hadoop.hbase.io.crypto.TestEncryption
                  org.apache.hadoop.hbase.util.TestCoprocessorClassLoader
Test results: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Findbugs warnings: [link]
Console output: [link]
This message is automatically generated.

** Comment 23 **
bq. Why did you leave in the log4j v1 stuff. Is the compatibility the useful part. What am I missing?
Can you be a bit more specific?

** Comment 24 **
bq. What is the purpose of setting the request logger? Setting appenders is a bit more difficult to do in the new log4j2. Perhaps we would be better just upgrading to jetty 9 and using the built in capability. Another option may be using routing.
Which request logger? Is this in the http package only?  That came in from hadoop recently.

** Comment 25 **
 I meant including log4j v1 in the poms. I've noticed that I needed to include it in a few places for dependencies, but I'm curious what the rational was.
  Yes the one in the http package. What exactly does that achieve? I assume it is to consolidate jetty logging through log4j.

** Comment 26 **
bq. I meant including log4j v1 in the poms. I've noticed that I needed to include it in a few places for dependencies, but I'm curious what the rational was.
​If you don't do that then Hadoop classes won't link.​ We set up Hadoop miniclusters for a lot of unit tests, hbase-testing-util, etc.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
We should consider reviving this now that log4j v1 is officially EOL: [link]

** Comment 30 **
Hi,
I am member of Apache Logging project PMC.
Due to various issues in Log4j 1.2.x, it will no longer work in JDK9: [link]
As Log4j 1.x is EOL, these issues will not be fixed. We suggest upgrading to Log4j 2.x, we can offer help to do so.


** Comment 31 **
We are working on supporting Log4j 1 log4j.properties configuration files. The plan is to have that ready in the next release of Log4j (2.7).

** Comment 32 **
bq. We are working on supporting Log4j 1 log4j.properties configuration files. The plan is to have that ready in the next release of Log4j (2.7).
Any update here ?

** Comment 33 **
Added a link to LOG4J2-63 for log4j1 config format support.

** Comment 34 **
[Comment excluded]

** Comment 35 **
Yes, we have not made much progress recently on supporting Log4j 1.x config files. We have partial support, but it may not be very useful in practice. Full support would require some more work, and none of the core developers have prioritized that recently.
We will soon make a new release (2.9) but it will most likely not contain this.


** Comment 36 **
thanks for the update. I'll bring some concerns over to dev@logging.a.o, if that's the correct list.

** Comment 37 **
[Comment excluded]

** Comment 38 **
Unscheduling from 2.0.0 for now. My guess is that our users are not up for the 'surprise' of a new logging format, at least in 2.0.0 timeframe.

** Comment 39 **
I have replaced commons loggers with slf4j loggers:* replaced commons-logging to slf4j everywhere except hbase-backup and hbase-http* log.XXX(Throwable) calls were replaced with log.XXX(t.toString(), t)* log.XXX(Object) calls were replaced with log.XXX(Objects.toString(obj))* programmatic log4j configuration was removed

** Comment 40 **
[Comment excluded]

** Comment 41 **
Looking at rb.... why not replace hbase-http and hbase-backup? (Offline hbase-backup does loads of logging... but hbase-http?).  Want to open new issue for hbase-backup at least? Next version of patch includes hbase-http?Great stuff 

** Comment 42 **
[Comment excluded]

** Comment 43 **
An example of new exception log would be good just to make sure it's what we and users expect.

** Comment 44 **
Finished a pass.Review:# Let's do some basic verifications (reverting this patch would be hell, wouldn't want to do it because we missed basic checks)** An example of new log message for exception (can get it from a test throwing exception)** Make sure tests have debug messages in them# Please add markers for fatal. It's very important piece of info in logs (searching for 'fatal' takes you nearest to the cause for process crash) . We shouldn't just change them to errors.# What about properties file? Are they being used by slf4j? Do they just work or need change?# What about logging guards? An analysis of work involved would be good. A count of is*Enabled strings would be enough to decide if it should be followup or get removed overtime. But definitely let's not wait this patch on guards.# Let's move backup and http too if possible (or reason why it's not possible)# Update the change summary and add to commit message. Mention:** programmatic was removed because not supported in slf4j.** Log guards not removed.** Any remaining uses of old logger** Anything else of relevance.

** Comment 45 **
If you use parameterized log messages (the curly brace placeholders), you can usually get away with not using guards around the log statements. I'm not sure if slf4j-api supports it, but log4j-api allows you to use lambdas (or just anonymous classes if using Java 7) to log a message that requires computation other than the message formatting.As for a fatal marker, you can even rewrite those logs via a log4j2 config to use the fatal log level. Otherwise, I'd suggest a less confusing marker name so it's not confused with a level. Something like ""crash"" could work?

** Comment 46 **
Here's ref to parameterized logging for those like me who are unfamiliar with it : [link]#logging_performanceGood that slf4j supports it.We have is{Debug, Trace}Enabled in total of 1000 places.If it's not just removing the guards but also formatting the message, then it's a *lot of work*. My take would be doing it overtime.bq. As for a fatal marker, you can even rewrite those logs via a log4j2 config to use the fatal log level.Example would help , thanks. If it's simple enough, would prefer this.bq. Otherwise, I'd suggest a less confusing marker name so it's not confused with a level. Something like ""crash"" could work?Legacy reason. Every operator/field person/dev would be used to it.

** Comment 47 **
You can take a rewrite appender <[link]#RewriteAppender> and rewrite the log level when the marker is present. Looking more closely, I don't see a built in way to do it, but a custom plugin isn't too hard.Another option would be some more complicated use of pattern layout <[link]#PatternLayout> to replace the log level with the simple marker name if defined and equal to FATAL. Pattern layouts are super powerful though not quite Turing complete yet. ;)

** Comment 48 **
bq. My take would be doing it overtime.I agree (we need to evangelize content of [link]#logging_performance).I like your list Appy.Adding Marker of FATAL won't get us anything unless logback is the backend. Thanks for the help. We're punting on log4j2. There's been no progress on log4j2 reading log4j1 property files and the platform we run on top of, hadoop, went slf4j on us.

** Comment 49 **
bq. Adding Marker of FATAL won't get us anything unless logback is the backend.It's slf4j api, so shouldn't be depending on backend.The least it'll do is add the ""FATAL"" string back to those log lines which corresponded to server crashing context. Very important for debugging crashes. It's just 2 lines of change after all.Making it same as current pattern doesn't seem quick change (based on 's input), so it makes sense to make it a  follow up item.

** Comment 50 **
Thanks for your comments.1. Currently I have commons-logging with slf4j, without exceptions (including hbase-backup and hbase-http).2. I have not updated log4j to log4j2, so the property files are still compatible. Log4j is compatible with slf4j through the slf4j-log4j12 dependency which was already on our classpath. I think we should do the update in a different patch, because this one conflicts with everything.3. Unfortunately there are some dependencies on log4j apis, we set the log levels programmatically (e.g. web ui). They are still there. your list is great:1. I did some verification, setting log levels still works through web ui.2. I have added fatal markers.3. Property files still works, because log4j has not been updated yet.4. Adding missing guards would be another huge commit :(5. I updated them finally.6. I added some extra information to the commit message.

** Comment 51 **
bq. 1. Currently I have commons-logging with slf4j, without exceptions (including hbase-backup and hbase-http).What does this mean ?bq. 2. I have not updated log4j to log4j2, so the property files are still compatible.We are not going to move to log4j2. You suggesting we are sir?bq. 3. Unfortunately there are some dependencies on log4j apis, we set the log levels programmatically (e.g. web ui). They are still there.How did hadoop 'solve' this problem (the little servlet comes from Hadoop. They are on slf4j since 2.9/3.0).bq. I have added fatal markers.Does 'FATAL' show in log when a FATAL marker? Or it depends on what backend is?bq.  Adding missing guards would be another huge commit Why would we add guards. We want to go away from guards?Lets commit! And work on teething issues in follow ups?

** Comment 52 **
bq. What does this mean Balazs Meszaros?Oops, sorry, so I have *replaced* commons-logging with slf4j.bq. We are not going to move to log4j2. You suggesting we are sir?The description of this issue suggests that.bq. Does 'FATAL' show in log when a FATAL marker? Or it depends on what backend is?I think it needs to be configured.bq. Why would we add guards. We want to go away from guards?Appy mentioned it, guards are useful if it is expensive to build the log message. Parameterized loggers are also useful, because they only build the log message if it is going to be logged.

** Comment 53 **
bq.  The description of this issue suggests that.Yeah. Its wrong (smile). We're going to slf4j under the rubric of this issue. Can update the summary.bq. I think it needs to be configured.SLF4J doc says it will only show if backend is logback. Otherwise, dropped. Good to have it though. We'll have to call out in release notes that FATAL no longer shows in our logs (usually)bq. Appy mentioned it, guards are useful if it is expensive to build the log message. Parameterized loggers are also useful, because they only build the log message if it is going to be logged.We want to remove guards and use parameterized log message construction from here on out. I like  suggestion that we do this piecemeal, as we go. The guards are fine for now but should be replaced.Thanks B.

** Comment 54 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 585 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 15s |  master passed  || +1 |  compile  |  11m 41s |  master passed  || +1 |  checkstyle  |  12m 11s |  master passed  || +1 |  shadedjars  |  16m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   7m 23s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 16s |  the patch passed  || +1 |  compile  |  12m 52s |  the patch passed  || +1 |  javac  |  12m 52s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-protocol-shaded passed checkstyle  || -1 |  checkstyle  |   0m 32s |  hbase-common: The patch generated 12 new + 507 unchanged - 0 fixed = 519 total (was 507)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 2 fixed = 0 total (was 2)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-hadoop2-compat passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol passed checkstyle  || -1 |  checkstyle  |   0m 41s |  hbase-client: The patch generated 5 new + 955 unchanged - 4 fixed = 960 total (was 959)  || -1 |  checkstyle  |   0m 14s |  hbase-zookeeper: The patch generated 4 new + 9 unchanged - 0 fixed = 13 total (was 9)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-replication passed checkstyle  || -1 |  checkstyle  |   0m 14s |  hbase-http: The patch generated 1 new + 104 unchanged - 18 fixed = 105 total (was 122)  || +1 |  checkstyle  |   0m 19s |  The patch hbase-procedure passed checkstyle  || -1 |  checkstyle  |   2m 35s |  hbase-server: The patch generated 82 new + 7881 unchanged - 54 fixed = 7963 total (was 7935)  || -1 |  checkstyle  |   0m 29s |  hbase-mapreduce: The patch generated 13 new + 729 unchanged - 10 fixed = 742 total (was 739)  || +1 |  checkstyle  |   0m 10s |  The patch hbase-testing-util passed checkstyle  || -1 |  checkstyle  |   0m 34s |  hbase-thrift: The patch generated 1 new + 392 unchanged - 0 fixed = 393 total (was 392)  || -1 |  checkstyle  |   0m 15s |  hbase-rsgroup: The patch generated 1 new + 51 unchanged - 1 fixed = 52 total (was 52)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shell passed checkstyle  || -1 |  checkstyle  |   0m 16s |  hbase-endpoint: The patch generated 2 new + 197 unchanged - 0 fixed = 199 total (was 197)  || -1 |  checkstyle  |   0m 17s |  hbase-backup: The patch generated 7 new + 181 unchanged - 5 fixed = 188 total (was 186)  || -1 |  checkstyle  |   0m 28s |  hbase-it: The patch generated 6 new + 285 unchanged - 1 fixed = 291 total (was 286)  || -1 |  checkstyle  |   0m 16s |  hbase-examples: The patch generated 1 new + 27 unchanged - 2 fixed = 28 total (was 29)  || -1 |  checkstyle  |   0m 23s |  hbase-rest: The patch generated 2 new + 499 unchanged - 4 fixed = 501 total (was 503)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-external-blockcache passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-spark-it passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-shaded passed checkstyle  || -1 |  checkstyle  |   4m 39s |  root: The patch generated 134 new + 12089 unchanged - 98 fixed = 12223 total (was 12187)  || -1 |  whitespace  |   0m  0s |  The patch 2 line(s) with tabs.  || +1 |  xml  |   0m 32s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   5m  4s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 47s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m 40s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 113m 22s |  root in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 220m 57s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.snapshot.TestFlushSnapshotFromClient |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-10092 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  shadedjars  hadoopcheck  xml  compile  findbugs  hbaseanti  checkstyle  || uname | Linux 20cb3ccf2f37 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 03e79b7994 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || modules | C: . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 55 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 585 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  9s |  master passed  || +1 |  compile  |  15m 51s |  master passed  || +1 |  checkstyle  |  17m 51s |  master passed  || +1 |  shadedjars  |  22m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   7m 56s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 30s |  the patch passed  || +1 |  compile  |  12m 56s |  the patch passed  || +1 |  javac  |  12m 56s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-protocol-shaded passed checkstyle  || -1 |  checkstyle  |   0m 34s |  hbase-common: The patch generated 13 new + 506 unchanged - 1 fixed = 519 total (was 507)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 12s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 2 fixed = 0 total (was 2)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-hadoop2-compat passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol passed checkstyle  || -1 |  checkstyle  |   0m 45s |  hbase-client: The patch generated 5 new + 955 unchanged - 4 fixed = 960 total (was 959)  || -1 |  checkstyle  |   0m 14s |  hbase-zookeeper: The patch generated 4 new + 9 unchanged - 0 fixed = 13 total (was 9)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-replication passed checkstyle  || -1 |  checkstyle  |   0m 16s |  hbase-http: The patch generated 1 new + 104 unchanged - 18 fixed = 105 total (was 122)  || +1 |  checkstyle  |   0m 19s |  The patch hbase-procedure passed checkstyle  || -1 |  checkstyle  |   3m 17s |  hbase-server: The patch generated 77 new + 7886 unchanged - 49 fixed = 7963 total (was 7935)  || -1 |  checkstyle  |   0m 31s |  hbase-mapreduce: The patch generated 12 new + 730 unchanged - 9 fixed = 742 total (was 739)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-testing-util passed checkstyle  || -1 |  checkstyle  |   0m 37s |  hbase-thrift: The patch generated 1 new + 392 unchanged - 0 fixed = 393 total (was 392)  || -1 |  checkstyle  |   0m 15s |  hbase-rsgroup: The patch generated 1 new + 51 unchanged - 1 fixed = 52 total (was 52)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shell passed checkstyle  || -1 |  checkstyle  |   0m 17s |  hbase-endpoint: The patch generated 2 new + 197 unchanged - 0 fixed = 199 total (was 197)  || -1 |  checkstyle  |   0m 19s |  hbase-backup: The patch generated 7 new + 181 unchanged - 5 fixed = 188 total (was 186)  || -1 |  checkstyle  |   0m 29s |  hbase-it: The patch generated 6 new + 285 unchanged - 1 fixed = 291 total (was 286)  || -1 |  checkstyle  |   0m 15s |  hbase-examples: The patch generated 1 new + 27 unchanged - 2 fixed = 28 total (was 29)  || -1 |  checkstyle  |   0m 25s |  hbase-rest: The patch generated 2 new + 499 unchanged - 4 fixed = 501 total (was 503)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-external-blockcache passed checkstyle  || +1 |  checkstyle  |   0m 14s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark-it passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shaded passed checkstyle  || -1 |  checkstyle  |   5m 38s |  root: The patch generated 132 new + 12091 unchanged - 96 fixed = 12223 total (was 12187)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m 30s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   5m  2s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 53s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m 50s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 144m 59s |  root in the patch failed.  || +1 |  asflicense  |   1m 17s |  The patch does not generate ASF License warnings.  ||  |   | 266m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-10092 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  shadedjars  hadoopcheck  xml  compile  findbugs  hbaseanti  checkstyle  || uname | Linux f2ff7ad6e4a6 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 03e79b7994 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 56 **
{quote}SLF4J doc says it will only show if backend is logback. Otherwise, dropped. Good to have it though. We'll have to call out in release notes that FATAL no longer shows in our logs (usually){quote}Are you referring to [link]#fatal or [link]#marker_interface ?That's not correct, Log4j 2 also support markers.

** Comment 57 **
The former. SLF4J as frontend reading our log4j1 property files with log4j2 as our backend?

** Comment 58 **
[link]#fatal is not correct, you can do that with Log4j 2 as well.You can use SLF4J as frontend with Log4j 2 as backend.However, then you cannot use Log4j 1 configuration files. As far as I know, only Log4j 1 can read those configuration files.

** Comment 59 **
Thanks Lets commit this. Going to log4j2 we can do in a follow-on, later.

** Comment 60 **
I tried it.We'll have to fix transitive include from hadoop... Can do in follow-onstack@ve0524:~$ ./hbase/bin/start-hbase.sh --config ~/conf_hbaseSLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in SLF4J: Found binding in SLF4J: See [link]#multiple_bindings for an explanation.SLF4J: Actual binding is of type SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in SLF4J: Found binding in SLF4J: See [link]#multiple_bindings for an explanation.SLF4J: Actual binding is of type ve0524.halxg.cloudera.com: running zookeeper, logging to /home/stack/logs/hbase-stack-zookeeper-ve0524.outrunning master, logging to /home/stack/logs/hbase-stack-master-ve0524.outLog format is the same (duh)Setting log level works for me (hbase master branch on hadoop3)This move to slf4j should be a subissue of this one? We are still on log4j backend.Related, useful blog benchmarking logging frameworks [link]

** Comment 61 **
+1This has tackled many issues already. Let's get it in and work incrementally. Great stuff . Impressed. :)On some of the previous things:- Yeah i meant removing of the guards. That's one thing slf4j was promising. But ignore it, too onerous and mechanical of a task to be done by single person- bq.I did some verification, setting log levels still works through web ui.Nice! forgot that one.Just listing down remaining stuff for clarity (so doesn't get lost in extensive discussion above):- Update to log4j 2 backend- Fix transitive include from hadoop

** Comment 62 **
[Comment excluded]

** Comment 63 **
[Comment excluded]

** Comment 64 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 23s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 587 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 31s |  master passed  || +1 |  compile  |  13m  4s |  master passed  || +1 |  checkstyle  |  16m 36s |  master passed  || +1 |  shadedjars  |  21m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   8m  1s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 33s |  the patch passed  || +1 |  compile  |  13m  1s |  the patch passed  || +1 |  javac  |  13m  1s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-protocol-shaded passed checkstyle  || -1 |  checkstyle  |   0m 32s |  hbase-common: The patch generated 3 new + 506 unchanged - 1 fixed = 509 total (was 507)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 2 fixed = 0 total (was 2)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-hadoop2-compat passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol passed checkstyle  || +1 |  checkstyle  |   0m 46s |  hbase-client: The patch generated 0 new + 947 unchanged - 11 fixed = 947 total (was 958)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 14s |  The patch hbase-replication passed checkstyle  || +1 |  checkstyle  |   0m 16s |  hbase-http: The patch generated 0 new + 103 unchanged - 19 fixed = 103 total (was 122)  || +1 |  checkstyle  |   0m 19s |  The patch hbase-procedure passed checkstyle  || -1 |  checkstyle  |   3m 14s |  hbase-server: The patch generated 8 new + 7855 unchanged - 78 fixed = 7863 total (was 7933)  || -1 |  checkstyle  |   0m 31s |  hbase-mapreduce: The patch generated 2 new + 695 unchanged - 20 fixed = 697 total (was 715)  || +1 |  checkstyle  |   0m 10s |  The patch hbase-testing-util passed checkstyle  || +1 |  checkstyle  |   0m 36s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-rsgroup: The patch generated 0 new + 49 unchanged - 2 fixed = 49 total (was 51)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 18s |  The patch hbase-endpoint passed checkstyle  || +1 |  checkstyle  |   0m 18s |  hbase-backup: The patch generated 0 new + 179 unchanged - 5 fixed = 179 total (was 184)  || +1 |  checkstyle  |   0m 28s |  hbase-it: The patch generated 0 new + 285 unchanged - 1 fixed = 285 total (was 286)  || +1 |  checkstyle  |   0m 16s |  hbase-examples: The patch generated 0 new + 27 unchanged - 2 fixed = 27 total (was 29)  || +1 |  checkstyle  |   0m 25s |  hbase-rest: The patch generated 0 new + 496 unchanged - 7 fixed = 496 total (was 503)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-external-blockcache passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark-it passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shaded passed checkstyle  || -1 |  checkstyle  |   5m 37s |  root: The patch generated 18 new + 12003 unchanged - 153 fixed = 12021 total (was 12156)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m 29s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   5m  5s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 30s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m 14s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 124m 13s |  root in the patch failed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 241m 13s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.security.token.TestZKSecretWatcher |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-10092 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  shadedjars  hadoopcheck  xml  compile  findbugs  hbaseanti  checkstyle  || uname | Linux 7686e9e3a554 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / cae5c2706b || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 65 **
These are the failures... Results: Failures:  org.apache.hadoop.hbase.security.token.TestZKSecretWatcher.testKeyUpdate(org.apache.hadoop.hbase.security.token.TestZKSecretWatcher)   Run 1: TestZKSecretWatcher.testKeyUpdate:178 expected null, but was:<AuthenticationKey>   Run 2: TestZKSecretWatcher.testKeyUpdate:147 expected:<AuthenticationKey> but was:<AuthenticationKey>   Run 3: TestZKSecretWatcher.testKeyUpdate:147 expected:<AuthenticationKey> but was:<AuthenticationKey> Errors:    TestDLSFSHLog>AbstractTestDLS.testThreeRSAbort:404 Â» TableNotFound testThreeRS... Tests run: 3410, Failures: 1, Errors: 1, Skipped: 33No other timeouts. The above are 'known' flakey/being worked on.Let me commit this. Can work on teething issues in follow-up.

** Comment 66 **
Pushed to branch-2 and master.Filed HBASE-19577 for changing backend off log4j1, an EOL'd tech.

** Comment 67 **
TestAssignProcedure and TestWALEntrySinkFilter are still on commons-logging. Reopen to push a simple addendum.

** Comment 68 **
[Comment excluded]

** Comment 69 **
[Comment excluded]

** Comment 70 **
[Comment excluded]

** Comment 71 **
[Comment excluded]

** Comment 72 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4266 (See )
HBASE-10092 Addendum fix TestAssignProcedure and TestWALEntrySinkFilter (zhangduo: rev 00b0288c96853b8d7879024b2143592e3c33da3a)


** Comment 73 **
[Comment excluded]

** Comment 74 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4269 (See )
HBASE-10092 Addendum. Move to slf4j. Few changes in bin/ scripts. (appy: rev 5f02bf5b7b471e093a546ea494b39216570105e7)
* (edit) bin/replication/copy_tables_desc.rb
* (edit) bin/draining_servers.rb


** Comment 75 **
question about the changes to bin scripts, and possibly other places -{code:title=bin/draining_servers.rb}-# Create a logger and disable the DEBUG-level annoying client logging-def configureLogging(options)-  apacheLogger = LogFactory.getLog(NAME)-  # Configure log4j to not spew so much-  unless options-    logger = org.apache.log4j.Logger.getLogger('org.apache.hadoop.hbase')-    logger.setLevel(org.apache.log4j.Level::WARN)-    logger = org.apache.log4j.Logger.getLogger('org.apache.zookeeper')-    logger.setLevel(org.apache.log4j.Level::WARN)-  end-  apacheLogger-end- # Create a logger and save it to ruby global-$LOG = configureLogging(options)+$LOG = LoggerFactory.getLogger(NAME){code}So now this script will output a lot more log messaging? We don't have the debug flag to turn off the verboseness of zk logger now, so we will always get lots of messages? I haven't tried this yet, so maybe I'm misunderstanding the change.

** Comment 76 **
ZK Logging is a pain. Yeah, need to shut it down again if it even more profligate. Any input  Else lets open new issue... to fix.

** Comment 77 **
bq. So now this script will output a lot more log messaging? We don't have the debug flag to turn off the verboseness of zk logger now, so we will always get lots of messages? I haven't tried this yet, so maybe I'm misunderstanding the change.You're right, lot more logging. Root cause is, slf4j.Logger has no setLevel function. That's the price we are paying to move away from dead dep by just changing frontend.In RB, i have a couple comments where we are removing this from java files. I didn't really care those removals from tests, but tools seemed important, however not important enough to block the whole move away from dead dep.
"
HBASE-20119,https://issues.apache.org/jira/browse/HBASE-20119,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestDDLMasterFailover.java,Introduce a pojo class to carry coprocessor information in order to make TableDescriptorBuilder accept multiple cp at once,YES,"The way to add cp to TableDescriptorBuilder is shown below.
{code:java}
public TableDescriptorBuilder addCoprocessor(String className) throws IOException {
  return addCoprocessor(className, null, Coprocessor.PRIORITY_USER, null);
}

public TableDescriptorBuilder addCoprocessor(String className, Path jarFilePath,
        int priority, final Map<String, String> kvs) throws IOException {
  desc.addCoprocessor(className, jarFilePath, priority, kvs);
  return this;
}

public TableDescriptorBuilder addCoprocessorWithSpec(final String specStr) throws IOException {
  desc.addCoprocessorWithSpec(specStr);
  return this;
}{code}
When loading our config to create table with multiple cps, we have to write the ugly for-loop.
{code:java}
val builder = TableDescriptorBuilder.newBuilde(tableName)
  .setAAA()
  .setBBB()
cps.map(toHBaseCp).foreach(builder.addCoprocessor)
cfs.map(toHBaseCf).foreach(builder.addColumnFamily)
admin.createTable(builder.build())

{code}
If we introduce a pojo to carry the cp data and add the method accepting multiple cps and cfs, it is easier to exercise the fluent interface of TableDescriptorBuilder.
{code:java}
admin.createTable(TableDescriptorBuilder.newBuilde(tableName)
.addCoprocessor(cps.map(toHBaseCp).asJavaCollection)
.addColumnFamily(cf.map(toHBaseCf).asJavaCollection)
.setAAA()
.setBBB()
.build){code}
 

 ","** Comment 1 **
-Also we can remove the TableDescriptorBuilder#addCoprocessorWithSpec if we enable the new pojo class to parse the passed string-TableDescriptorBuilder#addCoprocessorWithSpec should be removed since it exposes how we format the cp information.

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 89 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 32s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  5s |  master passed  || +1 |  compile  |   3m 46s |  master passed  || +1 |  checkstyle  |   3m 51s |  master passed  || +1 |  shadedjars  |   8m 30s |  branch has no errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   0m 32s |  hbase-backup in master has 1 extant Findbugs warnings.  || +1 |  javadoc  |   2m 19s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 32s |  the patch passed  || +1 |  compile  |   3m 27s |  the patch passed  || +1 |  javac  |   3m 27s |  the patch passed  || -1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 4 new + 237 unchanged - 1 fixed = 241 total (was 238)  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 1 new + 874 unchanged - 2 fixed = 875 total (was 876)  || -1 |  checkstyle  |   0m 14s |  hbase-examples: The patch generated 2 new + 3 unchanged - 0 fixed = 5 total (was 3)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m  1s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   7m 15s |  the patch passed  || +1 |  javadoc  |   2m 21s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 57s |  hbase-client in the patch passed.  || +1 |  unit  | 115m 59s |  hbase-server in the patch passed.  || +1 |  unit  |  13m  3s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   3m 22s |  hbase-rsgroup in the patch passed.  || +1 |  unit  |   2m 55s |  hbase-endpoint in the patch passed.  || +1 |  unit  |  12m 27s |  hbase-backup in the patch passed.  || +1 |  unit  |   1m 34s |  hbase-it in the patch passed.  || +1 |  unit  |   2m 38s |  hbase-examples in the patch passed.  || +1 |  unit  |   1m 33s |  hbase-client-project in the patch passed.  || +1 |  asflicense  |   5m 55s |  The patch does not generate ASF License warnings.  ||  |   | 231m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20119 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0714f2009499 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 99d3edfc82 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || findbugs | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4445 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-rsgroup hbase-endpoint hbase-backup hbase-it hbase-examples hbase-archetypes/hbase-client-project U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 89 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 30s |  master passed  || +1 |  compile  |   3m 39s |  master passed  || +1 |  checkstyle  |   3m 35s |  master passed  || +1 |  shadedjars  |   8m 15s |  branch has no errors when building our shaded downstream artifacts.  || -1 |  findbugs  |   0m 33s |  hbase-backup in master has 1 extant Findbugs warnings.  || +1 |  javadoc  |   2m 18s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 22s |  the patch passed  || +1 |  compile  |   3m 23s |  the patch passed  || +1 |  javac  |   3m 23s |  the patch passed  || -1 |  checkstyle  |   0m 33s |  hbase-client: The patch generated 4 new + 237 unchanged - 1 fixed = 241 total (was 238)  || -1 |  checkstyle  |   1m 20s |  hbase-server: The patch generated 1 new + 874 unchanged - 2 fixed = 875 total (was 876)  || -1 |  checkstyle  |   0m 14s |  hbase-examples: The patch generated 2 new + 3 unchanged - 0 fixed = 5 total (was 3)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 41s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  18m 19s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 59s |  hbase-client in the patch passed.  || +1 |  findbugs  |   2m  4s |  hbase-server in the patch passed.  || +1 |  findbugs  |   0m 41s |  hbase-mapreduce in the patch passed.  || +1 |  findbugs  |   0m 41s |  hbase-rsgroup in the patch passed.  || +1 |  findbugs  |   0m 41s |  hbase-endpoint in the patch passed.  || +1 |  findbugs  |   0m 41s |  hbase-backup generated 0 new + 0 unchanged - 1 fixed = 0 total (was 1)  || +1 |  findbugs  |   0m 38s |  hbase-examples in the patch passed.  || +1 |  findbugs  |   0m 30s |  hbase-client-project in the patch passed.  || +1 |  javadoc  |   2m 19s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 56s |  hbase-client in the patch passed.  || -1 |  unit  | 109m 57s |  hbase-server in the patch failed.  || +1 |  unit  |  12m 46s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   1m 17s |  hbase-rsgroup in the patch passed.  || +1 |  unit  |   2m 55s |  hbase-endpoint in the patch passed.  || +1 |  unit  |  11m  0s |  hbase-backup in the patch passed.  || +1 |  unit  |   0m 55s |  hbase-it in the patch passed.  || +1 |  unit  |   1m 42s |  hbase-examples in the patch passed.  || +1 |  unit  |   0m 59s |  hbase-client-project in the patch passed.  || +1 |  asflicense  |   3m 32s |  The patch does not generate ASF License warnings.  ||  |   | 214m 27s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestProcedurePriority |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20119 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 705d61df640e 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / db131be39a || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || findbugs | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4357 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-rsgroup hbase-endpoint hbase-backup hbase-it hbase-examples hbase-archetypes/hbase-client-project U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 93 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 35s |  master passed  || +1 |  compile  |   7m 44s |  master passed  || +1 |  checkstyle  |   5m  2s |  master passed  || +1 |  shadedjars  |   5m 42s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 50s |  master passed  || +1 |  javadoc  |   2m 53s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 19s |  the patch passed  || +1 |  compile  |   6m 18s |  the patch passed  || +1 |  javac  |   0m 26s |  hbase-common in the patch passed.  || +1 |  javac  |   0m 34s |  hbase-client generated 0 new + 103 unchanged - 1 fixed = 103 total (was 104)  || +1 |  javac  |   0m 15s |  hbase-replication in the patch passed.  || +1 |  javac  |   1m 38s |  hbase-server in the patch passed.  || +1 |  javac  |   0m 29s |  hbase-mapreduce in the patch passed.  || +1 |  javac  |   0m 33s |  hbase-rsgroup in the patch passed.  || +1 |  javac  |   0m 20s |  hbase-shell in the patch passed.  || +1 |  javac  |   0m 30s |  hbase-endpoint in the patch passed.  || +1 |  javac  |   0m 25s |  hbase-backup in the patch passed.  || +1 |  javac  |   0m 26s |  hbase-it in the patch passed.  || +1 |  javac  |   0m 24s |  hbase-examples in the patch passed.  || +1 |  javac  |   0m 18s |  hbase-client-project in the patch passed.  || +1 |  checkstyle  |   0m 24s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 0 new + 270 unchanged - 8 fixed = 270 total (was 278)  || +1 |  checkstyle  |   0m 10s |  The patch hbase-replication passed checkstyle  || +1 |  checkstyle  |   1m 24s |  hbase-server: The patch generated 0 new + 944 unchanged - 3 fixed = 944 total (was 947)  || +1 |  checkstyle  |   0m 18s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 10s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-endpoint passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-backup passed checkstyle  || +1 |  checkstyle  |   0m 21s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-examples passed checkstyle  || +1 |  checkstyle  |   0m 10s |  The patch hbase-client-project passed checkstyle  || -1 |  rubocop  |   0m  6s |  The patch generated 1 new + 392 unchanged - 0 fixed = 393 total (was 392)  || +1 |  ruby-lint  |   0m  2s |  There were no new ruby-lint issues.  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m  1s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   8m 28s |  the patch passed  || +1 |  javadoc  |   2m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 19s |  hbase-common in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-client in the patch passed.  || +1 |  unit  |   0m 13s |  hbase-replication in the patch passed.  || +1 |  unit  | 136m 19s |  hbase-server in the patch passed.  || +1 |  unit  |  20m 50s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   4m 46s |  hbase-rsgroup in the patch passed.  || +1 |  unit  |   8m 19s |  hbase-shell in the patch passed.  || +1 |  unit  |   4m 13s |  hbase-endpoint in the patch passed.  || +1 |  unit  |  12m 47s |  hbase-backup in the patch passed.  || +1 |  unit  |   1m  1s |  hbase-it in the patch passed.  || +1 |  unit  |   2m 15s |  hbase-examples in the patch passed.  || +1 |  unit  |   1m 26s |  hbase-client-project in the patch passed.  || +1 |  asflicense  |   4m 19s |  The patch does not generate ASF License warnings.  ||  |   | 286m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20119 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  rubocop  ruby_lint  || uname | Linux 80d286346954 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ddcf02ee22 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || rubocop | v0.53.0 || rubocop | [link] || ruby-lint | v2.3.1 ||  Test Results | [link] || Max. process+thread count | 4503 (vs. ulimit of 10000) || modules | C: hbase-common hbase-client hbase-replication hbase-server hbase-mapreduce hbase-rsgroup hbase-shell hbase-endpoint hbase-backup hbase-it hbase-examples hbase-archetypes/hbase-client-project U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 9 **
The rubocop warnings is false I think. ping  

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 41s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 90 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 18s |  branch-2 passed  || +1 |  compile  |   5m 56s |  branch-2 passed  || +1 |  checkstyle  |   4m  3s |  branch-2 passed  || +1 |  shadedjars  |   4m  0s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  3s |  branch-2 passed  || +1 |  javadoc  |   2m 27s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 23s |  the patch passed  || +1 |  compile  |   5m 39s |  the patch passed  || +1 |  javac  |   0m 27s |  hbase-common in the patch passed.  || +1 |  javac  |   0m 34s |  hbase-client generated 0 new + 103 unchanged - 1 fixed = 103 total (was 104)  || +1 |  javac  |   1m 39s |  hbase-server in the patch passed.  || +1 |  javac  |   0m 29s |  hbase-mapreduce in the patch passed.  || +1 |  javac  |   0m 33s |  hbase-rsgroup in the patch passed.  || +1 |  javac  |   0m 20s |  hbase-shell in the patch passed.  || +1 |  javac  |   0m 29s |  hbase-endpoint in the patch passed.  || +1 |  javac  |   0m 26s |  hbase-it in the patch passed.  || +1 |  javac  |   0m 24s |  hbase-examples in the patch passed.  || +1 |  javac  |   0m 18s |  hbase-client-project in the patch passed.  || +1 |  checkstyle  |   0m 24s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 0 new + 273 unchanged - 8 fixed = 273 total (was 281)  || +1 |  checkstyle  |   1m 26s |  hbase-server: The patch generated 0 new + 956 unchanged - 3 fixed = 956 total (was 959)  || +1 |  checkstyle  |   0m 19s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-endpoint passed checkstyle  || +1 |  checkstyle  |   0m 22s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-examples passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-client-project passed checkstyle  || -1 |  rubocop  |   0m  8s |  The patch generated 1 new + 392 unchanged - 0 fixed = 393 total (was 392)  || +1 |  ruby-lint  |   0m  3s |  There were no new ruby-lint issues.  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  5s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 57s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   6m 57s |  the patch passed  || +1 |  javadoc  |   2m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 17s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 55s |  hbase-client in the patch passed.  || +1 |  unit  | 110m 59s |  hbase-server in the patch passed.  || +1 |  unit  |  14m 32s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   3m 22s |  hbase-rsgroup in the patch passed.  || +1 |  unit  |   7m 45s |  hbase-shell in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-endpoint in the patch passed.  || +1 |  unit  |   1m  1s |  hbase-it in the patch passed.  || +1 |  unit  |   2m  0s |  hbase-examples in the patch passed.  || +1 |  unit  |   1m  9s |  hbase-client-project in the patch passed.  || +1 |  asflicense  |   3m 44s |  The patch does not generate ASF License warnings.  ||  |   | 220m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20119 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  rubocop  ruby_lint  || uname | Linux 56295bb9c097 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 5ea0db0b1f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || rubocop | v0.53.0 || rubocop | [link] || ruby-lint | v2.3.1 ||  Test Results | [link] || Max. process+thread count | 4561 (vs. ulimit of 10000) || modules | C: hbase-common hbase-client hbase-server hbase-mapreduce hbase-rsgroup hbase-shell hbase-endpoint hbase-it hbase-examples hbase-archetypes/hbase-client-project U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.0 Compile Tests  ||| +1 |  mvninstall  |   6m 18s |  branch-2.0 passed  || +1 |  compile  |   0m 41s |  branch-2.0 passed  || +1 |  checkstyle  |   0m 33s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 57s |  branch-2.0 passed  || +1 |  javadoc  |   0m 31s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 29s |  the patch passed  || +1 |  compile  |   0m 39s |  the patch passed  || +1 |  javac  |   0m 39s |  the patch passed  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 72 unchanged - 2 fixed = 72 total (was 74)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 12s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 11s |  the patch passed  || +1 |  javadoc  |   0m 21s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  asflicense  |   0m 14s |  The patch does not generate ASF License warnings.  ||  |   |  38m 32s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20119 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a47392638660 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 7e09147596 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 259 (vs. ulimit of 10000) || modules | C: hbase-client U: hbase-client || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 29 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 30 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 31 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 32 **
Hey ,{quote}TableDescriptorBuilder#addCoprocessorWithSpec should be removed since it exposes how we format the cp information.{quote}We still use coprocessor ""spec strings"" in the {{alter}} command of hbase-shell. I think that for compatibility, we will want to keep accepting this form of specification. I think the best way to do this will be to create a new static method on ColumnDescriptorBuilder called ""fromSpecString"" based on the currently private method TableDescriptorBuilder.toCoprocessorDescriptor. I'm happy to take care of this, but I'd love to get a second opinion first.I bring this up now because the method addCoprocessorWithSpec is no longer accessible to the shell, which means that the shell cannot set coprocessors until we address this (See [link]
"
HBASE-20223,https://issues.apache.org/jira/browse/HBASE-20223,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java,Use hbase-thirdparty 2.1.0,NO,"Update hbase to account for the changes to hbase-thirdparty:
 * new (internal) protobuf version
 * shaded commons-cli
 * shaded commons-collections4","** Comment 1 **
[Comment excluded]

** Comment 2 **
Not critical, but my patch  fails with the commons-collection v4 removed from dependencies.  Why was the decision to remove V4 instead of upgrading to it and removing V3?CC: 

** Comment 3 **
{quote}Not critical, but my patch HBASE-20214 fails with the commons-collection v4 removed from dependencies. Why was the decision to remove V4 instead of upgrading to it and removing V3?{quote}From what I could see, we shouldn't have been using the commons-collection3 API in the first place. This is coming in transitively through Hadoop. Thus, a change in what Hadoop does, could unknowingly break HBase (which is bad).

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 29 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   1m  2s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  8s |  branch-2.0 passed  || +1 |  compile  |  15m 41s |  branch-2.0 passed  || +1 |  checkstyle  |   5m 15s |  branch-2.0 passed  || +1 |  shadedjars  |   8m 49s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-checkstyle .  || +1 |  findbugs  |   6m 22s |  branch-2.0 passed  || +1 |  javadoc  |   4m 16s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m  6s |  the patch passed  || +1 |  compile  |  15m  8s |  the patch passed  || +1 |  javac  |  15m  8s |  the patch passed  || +1 |  checkstyle  |   0m  7s |  The patch hbase-checkstyle passed checkstyle  || +1 |  checkstyle  |   0m  6s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 21s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 0 new + 343 unchanged - 1 fixed = 343 total (was 344)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 25s |  The patch hbase-thrift passed checkstyle  || -1 |  checkstyle  |   0m 18s |  hbase-it: The patch generated 2 new + 175 unchanged - 2 fixed = 177 total (was 177)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-rest passed checkstyle  || -1 |  checkstyle  |   2m  4s |  root: The patch generated 3 new + 713 unchanged - 4 fixed = 716 total (was 717)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m 12s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   3m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 21s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-checkstyle .  || +1 |  findbugs  |   7m 28s |  the patch passed  || +1 |  javadoc  |   4m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 159m  3s |  root in the patch passed.  || +1 |  asflicense  |   2m 44s |  The patch does not generate ASF License warnings.  ||  |   | 254m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20223 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  xml  shadedjars  hadoopcheck  compile  findbugs  hbaseanti  checkstyle  || uname | Linux c7ef82344200 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 23d373db3e || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4866 (vs. ulimit of 10000) || modules | C: hbase-checkstyle hbase-protocol-shaded hbase-common hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-it hbase-rest . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
Skimmed patch. Looks great. +1 for branch-2.0. Thanks for asking.This is good	      <property name=""illegalPkgs"" value=""com.google.common, io.netty, org.apache.curator.shaded, org.apache.htrace.shaded, org.apache.commons.cli, org.apache.commons.collections4""/>

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 31 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 17s |  master passed  || +1 |  compile  |   6m 22s |  master passed  || +1 |  checkstyle  |   5m 30s |  master passed  || +1 |  shadedjars  |   9m 42s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-checkstyle hbase-spark-it .  || +1 |  findbugs  |   7m 12s |  master passed  || +1 |  javadoc  |   4m 52s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   6m 23s |  the patch passed  || +1 |  javac  |   6m 23s |  the patch passed  || +1 |  checkstyle  |   0m  6s |  The patch hbase-checkstyle passed checkstyle  || +1 |  checkstyle  |   0m  8s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 21s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m  1s |  hbase-server: The patch generated 0 new + 341 unchanged - 1 fixed = 341 total (was 342)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 21s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-backup passed checkstyle  || -1 |  checkstyle  |   0m 19s |  hbase-it: The patch generated 2 new + 177 unchanged - 2 fixed = 179 total (was 179)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-rest passed checkstyle  || +1 |  checkstyle  |   0m  9s |  The patch hbase-spark-it passed checkstyle  || -1 |  checkstyle  |   2m  7s |  root: The patch generated 2 new + 630 unchanged - 3 fixed = 632 total (was 633)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m 14s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 24s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   6m 25s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   8m 26s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  10m 53s |  The patch causes 10 errors with Hadoop v3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-checkstyle hbase-spark-it .  || +1 |  findbugs  |   8m 30s |  the patch passed  || +1 |  javadoc  |   5m  1s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 115m 45s |  root in the patch failed.  || +1 |  asflicense  |   3m 53s |  The patch does not generate ASF License warnings.  ||  |   | 194m 58s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20223 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  shadedjars  hadoopcheck  xml  compile  findbugs  hbaseanti  checkstyle  || uname | Linux 8af80e980162 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b30ff8196a || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4712 (vs. ulimit of 10000) || modules | C: hbase-checkstyle hbase-protocol-shaded hbase-common hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-backup hbase-it hbase-rest hbase-spark-it . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 19 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 20 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20338,https://issues.apache.org/jira/browse/HBASE-20338,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,WALProcedureStore#recoverLease() should have fixed sleeps for retrying rollWriter(),NO,"In our internal testing we observed that logs are getting flooded due to continuous loop in WALProcedureStore#recoverLease():
{code}
      while (isRunning()) {
        // Get Log-MaxID and recover lease on old logs
        try {
          flushLogId = initOldLogs(oldLogs);
        } catch (FileNotFoundException e) {
          LOG.warn(""Someone else is active and deleted logs. retrying."", e);
          oldLogs = getLogFiles();
          continue;
        }

        // Create new state-log
        if (!rollWriter(flushLogId + 1)) {
          // someone else has already created this log
          LOG.debug(""Someone else has already created log "" + flushLogId);
          continue;
        }
{code}

rollWriter() fails to create a new file. Error messages in HDFS namenode logs around same time:
{code}
INFO org.apache.hadoop.ipc.Server: IPC Server handler 3 on 8020, call org.apache.hadoop.hdfs.protocol.ClientProtocol.create from 172.31.121.196:38508 Call#3141 Retry#0
java.io.IOException: Exeption while contacting value generator
        at org.apache.hadoop.crypto.key.kms.ValueQueue.getAtMost(ValueQueue.java:389)
        at org.apache.hadoop.crypto.key.kms.ValueQueue.getNext(ValueQueue.java:291)
        at org.apache.hadoop.crypto.key.kms.KMSClientProvider.generateEncryptedKey(KMSClientProvider.java:724)
        at org.apache.hadoop.crypto.key.KeyProviderCryptoExtension.generateEncryptedKey(KeyProviderCryptoExtension.java:511)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem$2.run(FSNamesystem.java:2680)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem$2.run(FSNamesystem.java:2676)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:422)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1920)
        at org.apache.hadoop.security.SecurityUtil.doAsUser(SecurityUtil.java:477)
        at org.apache.hadoop.security.SecurityUtil.doAsLoginUser(SecurityUtil.java:458)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.generateEncryptedDataEncryptionKey(FSNamesystem.java:2675)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2815)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2712)
        at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:604)
        at org.apache.hadoop.hdfs.server.namenode.AuthorizationProviderProxyClientProtocol.create(AuthorizationProviderProxyClientProtocol.java:115)
        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:412)
        at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
        at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:617)
        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1073)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2226)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2222)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:422)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1920)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2220)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:673)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
        at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
        at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032)
        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1546)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474)
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
        at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338)
        at org.apache.hadoop.crypto.key.kms.KMSClientProvider.call(KMSClientProvider.java:503)
        at org.apache.hadoop.crypto.key.kms.KMSClientProvider.call(KMSClientProvider.java:488)
        at org.apache.hadoop.crypto.key.kms.KMSClientProvider.access$200(KMSClientProvider.java:94)
        at org.apache.hadoop.crypto.key.kms.KMSClientProvider$EncryptedQueueRefiller.fillQueueForKey(KMSClientProvider.java:149)
        at org.apache.hadoop.crypto.key.kms.ValueQueue.getAtMost(ValueQueue.java:378)
        ... 25 more
{code}

Both HDFS NameNode and HBase Master logs are filling up.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m  6s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 40s |  master passed  || +1 |  compile  |   0m 19s |  master passed  || +1 |  checkstyle  |   0m 13s |  master passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 22s |  master passed  || +1 |  javadoc  |   0m 12s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   0m 19s |  the patch passed  || +1 |  javac  |   0m 19s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 26s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 30s |  the patch passed  || +1 |  javadoc  |   0m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   4m  4s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  39m 29s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20338 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a5e602ef9799 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8f6849ff02 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 310 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 36s |  master passed  || +1 |  compile  |   0m 19s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 59s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 30s |  master passed  || +1 |  javadoc  |   0m 15s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 51s |  the patch passed  || +1 |  compile  |   0m 23s |  the patch passed  || +1 |  javac  |   0m 23s |  the patch passed  || +1 |  checkstyle  |   0m 15s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  2s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 41s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 30s |  the patch passed  || +1 |  javadoc  |   0m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 33s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  39m 42s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20338 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1eef49b1091b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c310ef7ffd || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 276 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
+1 lgtmnits:* You may want to consider changing the subject of the JIRA and remove exponential backoff. Considering chance of occurrence  and priority of the JIRA I am fine with not having exponential backoff. * Logging a trace message before sleep can be considered as well.

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 10s |  master passed  || +1 |  compile  |   0m 16s |  master passed  || +1 |  checkstyle  |   0m 12s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 21s |  master passed  || +1 |  javadoc  |   0m 10s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  6s |  the patch passed  || +1 |  compile  |   0m 16s |  the patch passed  || +1 |  javac  |   0m 16s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  3s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   6m  1s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   8m  0s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  10m 17s |  The patch causes 10 errors with Hadoop v3.0.0.  || +1 |  findbugs  |   0m 26s |  the patch passed  || +1 |  javadoc  |   0m 10s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 33s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  7s |  The patch does not generate ASF License warnings.  ||  |   |  27m 45s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20338 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux fafb6004f1fc 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 8014c5c3ac || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] ||  Test Results | [link] || Max. process+thread count | 316 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
Hmm. I didn't change any pom files. Why did it fail?(Update: it compiles successfully in my local tree) Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-install) on project hbase-thrift: Failed to install metadata org.apache.hbase:hbase-thrift:3.0.0-SNAPSHOT/maven-metadata.xml: Could not parse metadata /home/jenkins/.m2/repository/org/apache/hbase/hbase-thrift/3.0.0-SNAPSHOT/maven-metadata-local.xml: in epilog non whitespace content is not allowed but got / (position: END_TAG seen ...</metadata>\n/... @25:2) ->  {

** Comment 15 **
That's a known issue that pops up due to... unknown reasons. There's a jira for it but I can't find it at the moment.Do we bound the number of retries? If not, then we can get into a pathological case where we've retried so much that the counter overflows and we stop sleeping b/c it is negative. Using the default sleep length, that would happen after the error running for... ~300 days? Probably not a concern. - if you think it's ok then I'll commit this later, I'm not sure if it makes more sense to use a boolean to flag no sleep first time and sleep subsequent iterations.

** Comment 16 **
Master can't be functional/ active if it fails to read procedure WAL. I think its okay to keep trying with reasonable delay as in this case for 300 days and then defaulting to current behavior (without this patch) of trying continuously without delay.But if we have new version of the patch then looking at patch 005 for Jira HBASE-20330, we may want to consider sleeping immediately after while() statement (except first time). i.e Sequence sleep(), getLogFiles(), rollWriter() instead of getLogFiles(), sleep(), rollWriter().

** Comment 17 **
{quote}we may want to consider sleeping immediately after while() statement (except first time). i.e Sequence sleep(), getLogFiles(), rollWriter() instead of getLogFiles(), sleep(), rollWriter().{quote}Ah, got what you're say. I thought because there's already a sleep after recover lease, it should be sufficient. But if recover lease fails for some reason it could get us into the same situation. Will upload a new patch for that.Thank you.

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 11s |  master passed  || +1 |  compile  |   0m 18s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 21s |  master passed  || +1 |  javadoc  |   0m 12s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 13s |  the patch passed  || +1 |  compile  |   0m 16s |  the patch passed  || +1 |  javac  |   0m 16s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   2m  1s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   4m  5s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   6m 22s |  The patch causes 10 errors with Hadoop v3.0.0.  || +1 |  findbugs  |   0m 30s |  the patch passed  || +1 |  javadoc  |   0m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   4m  5s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  30m  8s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20338 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 30e49733dd17 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 17f930c4d6 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] ||  Test Results | [link] || Max. process+thread count | 310 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 56s |  master passed  || +1 |  compile  |   0m 20s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 53s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 25s |  master passed  || +1 |  javadoc  |   0m 13s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 47s |  the patch passed  || +1 |  compile  |   0m 20s |  the patch passed  || +1 |  javac  |   0m 20s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 57s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 52s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 31s |  the patch passed  || +1 |  javadoc  |   0m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 35s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  40m 11s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20338 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8eb49cf37150 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 17f930c4d6 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 279 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 32 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 33 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19873,https://issues.apache.org/jira/browse/HBASE-19873,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java,Add a CategoryBasedTimeout ClassRule for all UTs,NO,So that our test can timeout as expected without making the surefire plugin kill other tests.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m  4s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1137 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 35s |  master passed  || +1 |  compile  |   4m 25s |  master passed  || +1 |  checkstyle  |  11m 39s |  master passed  || +1 |  shadedjars  |  16m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |  10m 20s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 43s |  the patch passed  || +1 |  compile  |   5m 18s |  the patch passed  || +1 |  javac  |   5m 18s |  the patch passed  || -1 |  checkstyle  |   0m 37s |  hbase-common: The patch generated 14 new + 131 unchanged - 1 fixed = 145 total (was 132)  || +1 |  checkstyle  |   0m 17s |  The patch hbase-metrics-api passed checkstyle  || -1 |  checkstyle  |   0m 16s |  hbase-hadoop-compat: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  checkstyle  |   0m 16s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 18s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || -1 |  checkstyle  |   0m 47s |  hbase-client: The patch generated 21 new + 144 unchanged - 34 fixed = 165 total (was 178)  || -1 |  checkstyle  |   0m 24s |  hbase-zookeeper: The patch generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1)  || +1 |  checkstyle  |   0m 19s |  The patch hbase-replication passed checkstyle  || +1 |  checkstyle  |   0m 22s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || -1 |  checkstyle  |   0m 24s |  hbase-procedure: The patch generated 4 new + 45 unchanged - 45 fixed = 49 total (was 90)  || -1 |  checkstyle  |   2m 19s |  hbase-server: The patch generated 198 new + 3113 unchanged - 414 fixed = 3311 total (was 3527)  || -1 |  checkstyle  |   0m 35s |  hbase-mapreduce: The patch generated 5 new + 388 unchanged - 51 fixed = 393 total (was 439)  || -1 |  checkstyle  |   0m 43s |  hbase-thrift: The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  || -1 |  checkstyle  |   0m 23s |  hbase-rsgroup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  checkstyle  |   0m 18s |  The patch hbase-shell passed checkstyle  || -1 |  checkstyle  |   0m 25s |  hbase-endpoint: The patch generated 8 new + 63 unchanged - 20 fixed = 71 total (was 83)  || -1 |  checkstyle  |   0m 26s |  hbase-backup: The patch generated 3 new + 62 unchanged - 1 fixed = 65 total (was 63)  || -1 |  checkstyle  |   0m 34s |  hbase-it: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || -1 |  checkstyle  |   0m 25s |  hbase-examples: The patch generated 1 new + 7 unchanged - 5 fixed = 8 total (was 12)  || -1 |  checkstyle  |   0m 31s |  hbase-rest: The patch generated 1 new + 185 unchanged - 10 fixed = 186 total (was 195)  || +1 |  checkstyle  |   0m 20s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 20s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 19s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   4m 19s |  root: The patch generated 263 new + 4198 unchanged - 610 fixed = 4461 total (was 4808)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m 11s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   6m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  25m 30s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   7m 29s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   8m 52s |  root in the patch failed.  || +1 |  asflicense  |   2m 49s |  The patch does not generate ASF License warnings.  ||  |   | 116m  5s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.store.TestProcedureStoreTracker |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux deb18af40408 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f1502a3aca || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-replication hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-backup hbase-it hbase-examples hbase-rest hbase-spark hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1138 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 14s |  master passed  || +1 |  compile  |   4m  0s |  master passed  || +1 |  checkstyle  |  11m 53s |  master passed  || +1 |  shadedjars  |  16m 30s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   7m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   3m 57s |  root in the patch failed.  || -1 |  compile  |   3m 27s |  root in the patch failed.  || -1 |  javac  |   3m 27s |  root in the patch failed.  || -1 |  checkstyle  |   0m 27s |  hbase-common: The patch generated 6 new + 131 unchanged - 1 fixed = 137 total (was 132)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || -1 |  checkstyle  |   0m 12s |  hbase-hadoop-compat: The patch generated 7 new + 0 unchanged - 0 fixed = 7 total (was 0)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics passed checkstyle  || -1 |  checkstyle  |   0m 13s |  hbase-hadoop2-compat: The patch generated 11 new + 18 unchanged - 19 fixed = 29 total (was 37)  || -1 |  checkstyle  |   0m 33s |  hbase-client: The patch generated 29 new + 144 unchanged - 34 fixed = 173 total (was 178)  || -1 |  checkstyle  |   0m 14s |  hbase-zookeeper: The patch generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1)  || -1 |  checkstyle  |   0m 12s |  hbase-replication: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  checkstyle  |   0m 14s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || -1 |  checkstyle  |   0m 17s |  hbase-procedure: The patch generated 4 new + 45 unchanged - 45 fixed = 49 total (was 90)  || -1 |  checkstyle  |   2m  4s |  hbase-server: The patch generated 400 new + 3114 unchanged - 413 fixed = 3514 total (was 3527)  || -1 |  checkstyle  |   0m 24s |  hbase-mapreduce: The patch generated 18 new + 389 unchanged - 50 fixed = 407 total (was 439)  || -1 |  checkstyle  |   0m 31s |  hbase-thrift: The patch generated 6 new + 0 unchanged - 0 fixed = 6 total (was 0)  || -1 |  checkstyle  |   0m 13s |  hbase-rsgroup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shell passed checkstyle  || -1 |  checkstyle  |   0m 16s |  hbase-endpoint: The patch generated 13 new + 63 unchanged - 20 fixed = 76 total (was 83)  || -1 |  checkstyle  |   0m 16s |  hbase-backup: The patch generated 3 new + 62 unchanged - 1 fixed = 65 total (was 63)  || +1 |  checkstyle  |   0m 22s |  The patch hbase-it passed checkstyle  || -1 |  checkstyle  |   0m 16s |  hbase-examples: The patch generated 2 new + 7 unchanged - 5 fixed = 9 total (was 12)  || -1 |  checkstyle  |   0m 20s |  hbase-rest: The patch generated 5 new + 187 unchanged - 8 fixed = 192 total (was 195)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m 32s |  root: The patch generated 509 new + 4202 unchanged - 606 fixed = 4711 total (was 4808)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  6s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   8m 25s |  The patch causes 24 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |  12m  7s |  The patch causes 24 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  16m  9s |  The patch causes 24 errors with Hadoop v3.0.0.  || +1 |  javadoc  |   7m 24s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   3m 16s |  root in the patch failed.  || +1 |  asflicense  |   2m 53s |  The patch does not generate ASF License warnings.  ||  |   |  87m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 244e07c5f797 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f1502a3aca || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || mvninstall | [link] || compile | [link] || javac | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-replication hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-backup hbase-it hbase-examples hbase-rest hbase-spark hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 10 **
I was thinking about this approach more during skiing, and got another idea. Let me try that quickly too.It's basically this-  We can use RunListener to add timeout rule to every test class *via reflection* before it gets started. The only thing to verify is, will junit pick up this dynamic runtime addition of rules to test class.If it works, we won't have to add the Timeout rule to each and every test class. That'll be a big win. Trying...----Btw, when researching more about that, i found this:bq. The statement passed to the TestRule will never throw an exception, and throwing an exception from the TestRule will result in undefined behavior. This means that some TestRules, such as ErrorCollector, ExpectedException, and Timeout, have undefined behavior when used as ClassRules.Ref:[link]

** Comment 11 **
[Comment excluded]

** Comment 12 **
I was also thinking about doing this by some surefire magic but failed.
On the RunListener, how do you get the statement object and replace it through the Description object passed in? If you means that you want to change the test class and add a field at runtime, this is a runtime byte code rewriting, not a simple reflection. You need javasist or something else to do this. And I’m afraid that it will not work since the class has already been loaded before.
I was also thinking a way which is similar, instrumentation. But I can not find a maven plugin which can do instrumentation. All search results are about test coverage...
Thanks.

** Comment 13 **
[Comment excluded]

** Comment 14 **
Anyway, I tried to add a RunListener in the surefire config but failed. You can see the pom.xml in the patch, it does not work...
It will be great if you can find a way to make it work. At least we need your rule checker to confirm that all UTs have a ClassRule.
Thanks.

** Comment 15 **
But yeah, get a good QA run, because i suspect that it's a major thing to change scope of timeout and will likely push a lot of existing tests over new timeout rule's boundary i.e. many timeout failures.If it becomes painful to get good run, i'd suggest to first make just the core change  - RunListener and CategoryBasedTimeout - and then addendum/separate jira for adding rule to tests.

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1138 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 36s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   7m 51s |  master passed  || +1 |  compile  |   6m  3s |  master passed  || +1 |  checkstyle  |  11m 49s |  master passed  || +1 |  shadedjars  |  16m 25s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   7m 48s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 19s |  the patch passed  || +1 |  compile  |   4m  5s |  the patch passed  || +1 |  javac  |   4m  5s |  the patch passed  || -1 |  checkstyle  |   0m 28s |  hbase-common: The patch generated 1 new + 131 unchanged - 1 fixed = 132 total (was 132)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-hadoop-compat passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || -1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 2 new + 143 unchanged - 35 fixed = 145 total (was 178)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-replication passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || +1 |  checkstyle  |   0m 17s |  hbase-procedure: The patch generated 0 new + 45 unchanged - 45 fixed = 45 total (was 90)  || -1 |  checkstyle  |   1m 51s |  hbase-server: The patch generated 17 new + 3110 unchanged - 417 fixed = 3127 total (was 3527)  || +1 |  checkstyle  |   0m 24s |  hbase-mapreduce: The patch generated 0 new + 387 unchanged - 52 fixed = 387 total (was 439)  || +1 |  checkstyle  |   0m 31s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 14s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 16s |  hbase-endpoint: The patch generated 0 new + 63 unchanged - 20 fixed = 63 total (was 83)  || +1 |  checkstyle  |   0m 16s |  hbase-backup: The patch generated 0 new + 62 unchanged - 1 fixed = 62 total (was 63)  || +1 |  checkstyle  |   0m 24s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 16s |  hbase-examples: The patch generated 0 new + 7 unchanged - 5 fixed = 7 total (was 12)  || +1 |  checkstyle  |   0m 20s |  hbase-rest: The patch generated 0 new + 185 unchanged - 10 fixed = 185 total (was 195)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m 18s |  root: The patch generated 20 new + 4195 unchanged - 613 fixed = 4215 total (was 4808)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  6s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 46s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  18m 19s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m  0s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   3m 19s |  root in the patch failed.  || +1 |  asflicense  |   2m 57s |  The patch does not generate ASF License warnings.  ||  |   |  96m 56s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux bd19697d50f4 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f1502a3aca || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-replication hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-backup hbase-it hbase-examples hbase-rest hbase-spark hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 18 **
On my test machine the small tests are all passed with the newest patch, and for the second part there are lots of errors and timeouts.Will check it tomorrow.

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1138 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 16s |  master passed  || +1 |  compile  |   4m  3s |  master passed  || +1 |  checkstyle  |  11m 55s |  master passed  || +1 |  shadedjars  |  16m 29s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   7m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 22s |  the patch passed  || +1 |  compile  |   4m  6s |  the patch passed  || +1 |  javac  |   4m  6s |  the patch passed  || +1 |  checkstyle  |   0m 27s |  hbase-common: The patch generated 0 new + 131 unchanged - 1 fixed = 131 total (was 132)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-hadoop-compat passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 143 unchanged - 35 fixed = 143 total (was 178)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-replication passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || +1 |  checkstyle  |   0m 16s |  hbase-procedure: The patch generated 0 new + 45 unchanged - 45 fixed = 45 total (was 90)  || -1 |  checkstyle  |   1m 46s |  hbase-server: The patch generated 1 new + 3095 unchanged - 432 fixed = 3096 total (was 3527)  || +1 |  checkstyle  |   0m 25s |  hbase-mapreduce: The patch generated 0 new + 387 unchanged - 52 fixed = 387 total (was 439)  || +1 |  checkstyle  |   0m 31s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-endpoint: The patch generated 0 new + 63 unchanged - 20 fixed = 63 total (was 83)  || +1 |  checkstyle  |   0m 17s |  hbase-backup: The patch generated 0 new + 62 unchanged - 1 fixed = 62 total (was 63)  || +1 |  checkstyle  |   0m 21s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-examples: The patch generated 0 new + 7 unchanged - 5 fixed = 7 total (was 12)  || +1 |  checkstyle  |   0m 19s |  hbase-rest: The patch generated 0 new + 185 unchanged - 10 fixed = 185 total (was 195)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-spark passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m  3s |  root: The patch generated 1 new + 4180 unchanged - 628 fixed = 4181 total (was 4808)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  7s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 40s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  18m 39s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m 25s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 117m 34s |  root in the patch failed.  || +1 |  asflicense  |   5m  8s |  The patch does not generate ASF License warnings.  ||  |   | 207m 15s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.TestAcidGuaranteesWithNoInMemCompaction ||   | hadoop.hbase.TestAcidGuaranteesWithEagerPolicy ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd ||   | hadoop.hbase.TestAcidGuaranteesWithAdaptivePolicy |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 7a5520c9d815 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f1502a3aca || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-replication hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-backup hbase-it hbase-examples hbase-rest hbase-spark hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 20 **
The failed UTs are all because of timeout or interrupt(by timeout?). And the checkstyle issue is not introduced by this patch and I'm not sure how to clean it safely so leave it there.Let me commit to master and open follow-on issues to address the timeouts.  What's your opinion on committing this to branch-2?Thanks.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1104 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 28s |  branch-2 passed  || +1 |  compile  |   3m  3s |  branch-2 passed  || +1 |  checkstyle  |  11m  3s |  branch-2 passed  || +1 |  shadedjars  |  14m 56s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   6m 25s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m  9s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 16s |  the patch passed  || +1 |  compile  |   3m  3s |  the patch passed  || +1 |  javac  |   3m  3s |  the patch passed  || +1 |  checkstyle  |   0m 27s |  hbase-common: The patch generated 0 new + 131 unchanged - 1 fixed = 131 total (was 132)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 12s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 12 fixed = 0 total (was 12)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 143 unchanged - 35 fixed = 143 total (was 178)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 14s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || +1 |  checkstyle  |   0m 16s |  hbase-procedure: The patch generated 0 new + 45 unchanged - 45 fixed = 45 total (was 90)  || -1 |  checkstyle  |   1m 55s |  hbase-server: The patch generated 1 new + 3122 unchanged - 440 fixed = 3123 total (was 3562)  || -1 |  checkstyle  |   0m 25s |  hbase-mapreduce: The patch generated 1 new + 450 unchanged - 52 fixed = 451 total (was 502)  || +1 |  checkstyle  |   0m 31s |  hbase-thrift: The patch generated 0 new + 42 unchanged - 1 fixed = 42 total (was 43)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-endpoint: The patch generated 0 new + 63 unchanged - 20 fixed = 63 total (was 83)  || +1 |  checkstyle  |   0m 23s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 14s |  hbase-examples: The patch generated 0 new + 7 unchanged - 5 fixed = 7 total (was 12)  || +1 |  checkstyle  |   0m 20s |  hbase-rest: The patch generated 0 new + 185 unchanged - 10 fixed = 185 total (was 195)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m 28s |  root: The patch generated 2 new + 4250 unchanged - 648 fixed = 4252 total (was 4898)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  7s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m  2s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 27s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   6m 39s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 111m 20s |  root in the patch failed.  || +1 |  asflicense  |   5m 31s |  The patch does not generate ASF License warnings.  ||  |   | 188m 26s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.TestAcidGuaranteesWithNoInMemCompaction ||   | hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd ||   | hadoop.hbase.TestAcidGuaranteesWithBasicPolicy ||   | hadoop.hbase.regionserver.TestHRegion ||   | hadoop.hbase.TestAcidGuaranteesWithAdaptivePolicy |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 79e012ecec6d 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 380169eaf2 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-it hbase-examples hbase-rest hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
Tried locally with 'mvn clean test', it works. Running org.apache.hadoop.hbase.TestCellBuilder Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.004 s <<< FAILURE! - in org.apache.hadoop.hbase.TestCellBuilder org.apache.hadoop.hbase.TestCellBuilder  Time elapsed: 0.003 s  <<< FAILURE!java.lang.AssertionError: No HBaseClassTestRule ClassRule for org.apache.hadoop.hbase.TestCellBuilderLet me address the known timeout problems and try again...

** Comment 26 **
[Comment excluded]

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1104 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 31s |  branch-2 passed  || +1 |  compile  |   3m 10s |  branch-2 passed  || +1 |  checkstyle  |  11m 34s |  branch-2 passed  || +1 |  shadedjars  |  16m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   8m  6s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   3m 27s |  the patch passed  || +1 |  javac  |   3m 27s |  the patch passed  || +1 |  checkstyle  |   0m 30s |  hbase-common: The patch generated 0 new + 131 unchanged - 1 fixed = 131 total (was 132)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 16s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 12 fixed = 0 total (was 12)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 17s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || +1 |  checkstyle  |   0m 38s |  hbase-client: The patch generated 0 new + 143 unchanged - 35 fixed = 143 total (was 178)  || +1 |  checkstyle  |   0m 18s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 18s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || +1 |  checkstyle  |   0m 22s |  hbase-procedure: The patch generated 0 new + 45 unchanged - 45 fixed = 45 total (was 90)  || -1 |  checkstyle  |   2m  4s |  hbase-server: The patch generated 1 new + 3121 unchanged - 439 fixed = 3122 total (was 3560)  || -1 |  checkstyle  |   0m 31s |  hbase-mapreduce: The patch generated 1 new + 450 unchanged - 52 fixed = 451 total (was 502)  || +1 |  checkstyle  |   0m 36s |  hbase-thrift: The patch generated 0 new + 42 unchanged - 1 fixed = 42 total (was 43)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 17s |  hbase-endpoint: The patch generated 0 new + 63 unchanged - 20 fixed = 63 total (was 83)  || +1 |  checkstyle  |   0m 25s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 19s |  hbase-examples: The patch generated 0 new + 7 unchanged - 5 fixed = 7 total (was 12)  || +1 |  checkstyle  |   0m 24s |  hbase-rest: The patch generated 0 new + 185 unchanged - 10 fixed = 185 total (was 195)  || +1 |  checkstyle  |   0m 16s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m 41s |  root: The patch generated 2 new + 4249 unchanged - 647 fixed = 4251 total (was 4896)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  9s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 55s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   8m  2s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 149m 55s |  root in the patch passed.  || +1 |  asflicense  |   6m 53s |  The patch does not generate ASF License warnings.  ||  |   | 239m 20s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 2c9d18734b77 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 5b0d7dc45b || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-it hbase-examples hbase-rest hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 28 **
[Comment excluded]

** Comment 29 **
The newest nightly build does not crash. We have run all the UTs in hbase-server, although there are lots of failures...[link]

** Comment 30 **
Oh, it is a bit strange. If I remove the ClassRule from the test and try it locally, it will fail. I'm pretty sure that there are some tests in branch-2 does not have the annotation. Need to find out why they do not fail.

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
 Tests run: 3629, Failures: 0, Errors: 16, Skipped: 39, Flakes: 2Nice. I don't recall ever seeing the test count this high. I'll work on the failing tests.

** Comment 35 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4491 (See )
HBASE-19873 addendum remove unused class file (zhangduo: rev 5c8ba7526dc133621f32b61edabfac9b40c895a3)
* (delete) ReorderImports.class


** Comment 36 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1108 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 29s |  branch-2 passed  || +1 |  compile  |   3m  4s |  branch-2 passed  || +1 |  checkstyle  |  11m 38s |  branch-2 passed  || +1 |  shadedjars  |  15m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   6m 38s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 18s |  the patch passed  || +1 |  compile  |   3m  4s |  the patch passed  || +1 |  javac  |   3m  4s |  the patch passed  || +1 |  checkstyle  |   0m 27s |  hbase-common: The patch generated 0 new + 131 unchanged - 1 fixed = 131 total (was 132)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics-api passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop-compat: The patch generated 0 new + 0 unchanged - 12 fixed = 0 total (was 12)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-metrics passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-hadoop2-compat: The patch generated 0 new + 18 unchanged - 19 fixed = 18 total (was 37)  || +1 |  checkstyle  |   0m 33s |  hbase-client: The patch generated 0 new + 143 unchanged - 35 fixed = 143 total (was 178)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-zookeeper passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-http: The patch generated 0 new + 43 unchanged - 8 fixed = 43 total (was 51)  || +1 |  checkstyle  |   0m 17s |  hbase-procedure: The patch generated 0 new + 45 unchanged - 45 fixed = 45 total (was 90)  || -1 |  checkstyle  |   2m  3s |  hbase-server: The patch generated 1 new + 3121 unchanged - 439 fixed = 3122 total (was 3560)  || +1 |  checkstyle  |   0m 28s |  hbase-mapreduce: The patch generated 0 new + 517 unchanged - 54 fixed = 517 total (was 571)  || +1 |  checkstyle  |   0m 31s |  hbase-thrift: The patch generated 0 new + 42 unchanged - 1 fixed = 42 total (was 43)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-rsgroup passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-shell passed checkstyle  || +1 |  checkstyle  |   0m 15s |  hbase-endpoint: The patch generated 0 new + 63 unchanged - 20 fixed = 63 total (was 83)  || +1 |  checkstyle  |   0m 23s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   0m 16s |  hbase-examples: The patch generated 0 new + 7 unchanged - 5 fixed = 7 total (was 12)  || +1 |  checkstyle  |   0m 20s |  hbase-rest: The patch generated 0 new + 185 unchanged - 10 fixed = 185 total (was 195)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-client-project passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-shaded-client-project passed checkstyle  || -1 |  checkstyle  |   3m 33s |  root: The patch generated 3 new + 4314 unchanged - 651 fixed = 4317 total (was 4965)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  7s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m  0s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 29s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   6m 45s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 121m 24s |  root in the patch failed.  || +1 |  asflicense  |   6m  7s |  The patch does not generate ASF License warnings.  ||  |   | 201m  7s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAvoidCellReferencesIntoShippedBlocks ||   | hadoop.hbase.TestFullLogReconstruction |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19873 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux dcfd89ad7a91 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 1efa050ebf || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-metrics-api hbase-hadoop-compat hbase-metrics hbase-hadoop2-compat hbase-client hbase-zookeeper hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-rsgroup hbase-shell hbase-endpoint hbase-it hbase-examples hbase-rest hbase-archetypes/hbase-client-project hbase-archetypes/hbase-shaded-client-project . U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 37 **
Test failures pass locally for me. Fixed checkstyle and pushed (since  probably sleeping and better to get this big patch in and then do fixup). I started a nightly run. I'm on the test results.

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19937,https://issues.apache.org/jira/browse/HBASE-19937,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java,Ensure createRSGroupTable be called after ProcedureExecutor and LoadBalancer are initialized ,NO,"hbase:rsgroup table will be created by calling createRSGroupTable when master load system coprocessors in 

 
{code:java}
844  this.cpHost = new MasterCoprocessorHost(this, this.conf);{code}
when ProcedureExecutor hasn't been initialized before createRSGroupTable, it will encounter Exception as follows,

 
{noformat}
Exception in thread ""org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker-localhost,49715,1518088607130"" java.lang.IllegalArgumentException
at org.apache.hbase.thirdparty.com.google.common.base.Preconditions.checkArgument(Preconditions.java:120)
at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.submitProcedure(ProcedureExecutor.java:847)
at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.submitProcedure(ProcedureExecutor.java:835)
at org.apache.hadoop.hbase.master.HMaster.createSystemTable(HMaster.java:1795)
at org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker.createRSGroupTable(RSGroupInfoManagerImpl.java:858)
at org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker.waitForGroupTableOnline(RSGroupInfoManagerImpl.java:823)
at org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker.run(RSGroupInfoManagerImpl.java:743){noformat}
while ProcedureExecutor  initialized by calling
{code:java}
848  startServiceThreads();{code}
And LoadBalancer is initialized by calling 
{code:java}
868  this.balancer.initialize();{code}
When LoadBalancer hasn't been initialized before createRSGroupTable, it will encounters Exception as follows,

2018-02-02,16:12:45,688 ERROR org.apache.hadoop.hbase.procedure2.ProcedureExecutor: CODE-BUG: Uncaught runtime exception: pid=7, state=RUNNABLE:CREATE_TABLE_ASSIGN_REGIONS; CreateTableProcedure table=hbase:rsgroup
 java.lang.NullPointerException
 at org.apache.hadoop.hbase.rsgroup.RSGroupBasedLoadBalancer.generateGroupMaps(RSGroupBasedLoadBalancer.java:254)
 at org.apache.hadoop.hbase.rsgroup.RSGroupBasedLoadBalancer.roundRobinAssignment(RSGroupBasedLoadBalancer.java:162)
 at org.apache.hadoop.hbase.master.assignment.AssignmentManager.createRoundRobinAssignProcedures(AssignmentManager.java:603)
 at org.apache.hadoop.hbase.master.procedure.CreateTableProcedure.executeFromState(CreateTableProcedure.java:108)
 at org.apache.hadoop.hbase.master.procedure.CreateTableProcedure.executeFromState(CreateTableProcedure.java:51)
 at org.apache.hadoop.hbase.procedure2.StateMachineProcedure.execute(StateMachineProcedure.java:182)
 at org.apache.hadoop.hbase.procedure2.Procedure.doExecute(Procedure.java:845)
 at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure(ProcedureExecutor.java:1458)
 at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure(ProcedureExecutor.java:1227)
 at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$800(ProcedureExecutor.java:78)
 at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run(ProcedureExecutor.java:1738)

 

As a result of CreateTableProcedure.rollbackState, it may then print logs warning TableExistsException as follows,

2018-02-02,16:12:55,503 WARN org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker: Failed to perform check
 java.io.IOException: Failed to create group table. org.apache.hadoop.hbase.TableExistsException: hbase:rsgroup
 at org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker.createRSGroupTable(RSGroupInfoManagerImpl.java:877)

 

After some auto-retries, it loops running the thread RSGroupStartupWorker, will print logs as follows, 

2018-02-02,16:23:17,626 INFO org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker: RSGroup table=hbase:rsgroup isOnline=true, regionCount=0, assignCount=0, rootMetaFound=true
 2018-02-02,16:23:17,730 INFO org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker: RSGroup table=hbase:rsgroup isOnline=true, regionCount=0, assignCount=0, rootMetaFound=true
 2018-02-02,16:23:17,834 INFO org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker: RSGroup table=hbase:rsgroup isOnline=true, regionCount=0, assignCount=0, rootMetaFound=true
 2018-02-02,16:23:17,937 INFO org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl$RSGroupStartupWorker: RSGroup table=hbase:rsgroup isOnline=true, regionCount=0, assignCount=0, rootMetaFound=true

 

And using shells of rsgroup, it will tips that currently is in ""offline mode"".

 

The reason of this problem is that the order of createRSGroupTable and initializing of ProcedureExecutor and LoadBalancer is out of control. If the former is excuted earlier, it will encounter Exception mentioned before.

 ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
The patch 002 is with a UT which can make the bug appear. Please ensure the createRSGroupTable is called in a run.You can notice the log: 2018-02-08 19:16:47,398 INFO   master.HMaster(1791): Client=null/null create 'hbase:rsgroup', {TABLE_ATTRIBUTES => {coprocessor$1 => '|org.apache.hadoop.hbase.coprocessor.MultiRowMutationEndpoint|536870911|', METADATA => {'SPLIT_POLICY' => 'org.apache.hadoop.hbase.regionserver.DisabledRegionSplitPolicy'}}, {NAME => 'm', VERSIONS => '1', EVICT_BLOCKS_ON_CLOSE => 'false', NEW_VERSION_BEHAVIOR => 'false', KEEP_DELETED_CELLS => 'FALSE', CACHE_DATA_ON_WRITE => 'false', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', MIN_VERSIONS => '0', REPLICATION_SCOPE => '0', BLOOMFILTER => 'ROW', CACHE_INDEX_ON_WRITE => 'false', IN_MEMORY => 'false', CACHE_BLOOMS_ON_WRITE => 'false', PREFETCH_BLOCKS_ON_OPEN => 'false', COMPRESSION => 'NONE', BLOCKCACHE => 'true', BLOCKSIZE => '65536'}{code}The patch 001 has fixed this problem. 

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 40s |  branch-2 passed  || +1 |  compile  |   0m 20s |  branch-2 passed  || +1 |  checkstyle  |   0m 11s |  branch-2 passed  || +1 |  shadedjars  |   4m 10s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 16s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 20s |  the patch passed  || +1 |  compile  |   0m 19s |  the patch passed  || +1 |  javac  |   0m 19s |  the patch passed  || -1 |  checkstyle  |   0m 11s |  hbase-rsgroup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 17s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 16s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   1m 15s |  hbase-rsgroup in the patch failed.  || -1 |  asflicense  |   0m  9s |  The patch generated 1 ASF License warnings.  ||  |   |  28m 34s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.rsgroup.TestEnableRSGroup |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19937 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6befb01ab0de 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / c93ba37dfc || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || asflicense | [link] || Max. process+thread count | 464 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m  9s |  branch-2 passed  || +1 |  compile  |   0m 19s |  branch-2 passed  || +1 |  checkstyle  |   0m 11s |  branch-2 passed  || +1 |  shadedjars  |   3m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 15s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m  3s |  the patch passed  || +1 |  compile  |   0m 19s |  the patch passed  || +1 |  javac  |   0m 19s |  the patch passed  || -1 |  checkstyle  |   0m 11s |  hbase-rsgroup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 28s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 51s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 14s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 16s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  7s |  The patch does not generate ASF License warnings.  ||  |   |  27m 54s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19937 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b37626f9f86c 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / bc080e7500 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 2864 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 13s |  branch-2 passed  || +1 |  compile  |   0m 17s |  branch-2 passed  || +1 |  checkstyle  |   0m  9s |  branch-2 passed  || +1 |  shadedjars  |   3m 40s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 15s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m  2s |  the patch passed  || +1 |  compile  |   0m 18s |  the patch passed  || +1 |  javac  |   0m 18s |  the patch passed  || -1 |  checkstyle  |   0m 11s |  hbase-rsgroup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 30s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 55s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 16s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 13s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  27m 55s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19937 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3e47709372b2 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / bc080e7500 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 2783 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
Can you address checkstyle warning ?

** Comment 12 **
[Comment excluded]

** Comment 13 **
The warning is about java.lang.Thread.sleepYou can drop the import and call sleep as other tests do.

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 44s |  branch-2 passed  || +1 |  compile  |   0m 25s |  branch-2 passed  || +1 |  checkstyle  |   0m 14s |  branch-2 passed  || +1 |  shadedjars  |   4m 43s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 18s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 53s |  the patch passed  || +1 |  compile  |   0m 21s |  the patch passed  || +1 |  javac  |   0m 21s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 22s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 15s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 11s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  32m  1s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19937 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 65e6fcade050 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 4461cb7d7a || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || Max. process+thread count | 2700 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4554 (See )
HBASE-19937 Ensure createRSGroupTable be called after ProcedureExecutor (tedyu: rev bc720374c33701c13f6227c0edfe3a792e7aa333)
* (add) [file java]

"
HBASE-19794,https://issues.apache.org/jira/browse/HBASE-19794,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/ZKNamespaceManager.java,TestZooKeeper hangs,NO,Seems like the TestZKAsyncRegistry that hangs in shutdown.,"** Comment 1 **
Upload the output here.Something strange2018-01-13 07:27:03,417 INFO   master.ServerManager(573): Master doesn't enable ServerShutdownHandler during initialization, delay expiring server asf911.gq1.ygridcore.net,60497,15158284159792018-01-13 07:27:03,417 ERROR  zookeeper.ClientCnxn$EventThread(532): Error while calling watcher java.lang.NullPointerException	at org.apache.hadoop.hbase.master.assignment.AssignmentManager.handleMetaRITOnCrashedServer([file java]:1912)	at org.apache.hadoop.hbase.master.ServerManager.expireServer([file java]:578)	at org.apache.hadoop.hbase.master.RegionServerTracker.nodeDeleted([file java]:131)	at org.apache.hadoop.hbase.zookeeper.ZKWatcher.process([file java]:484)	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent([file java]:530)	at org.apache.zookeeper.ClientCnxn$EventThread.run([file java]:505)

** Comment 2 **
It hangs locally for me in testLogSplittingAfterMasterRecoveryDueToZKExpiry. It keeps showing the log below2018-01-14 17:01:11,798 WARN   assignment.AssignmentManager(1193): TODO Handle stuck in transition: rit=OPENING, location=ubuntu,35019,1515920375952, table=hbase:namespace, region=b8f824036ed55d19175f1721a3c3e8652018-01-14 17:01:16,798 WARN   assignment.AssignmentManager(1193): TODO Handle stuck in transition: rit=OPENING, location=ubuntu,35019,1515920375952, table=hbase:namespace, region=b8f824036ed55d19175f1721a3c3e8652018-01-14 17:01:21,798 WARN   assignment.AssignmentManager(1193): TODO Handle stuck in transition: rit=OPENING, location=ubuntu,35019,1515920375952, table=hbase:namespace, region=b8f824036ed55d19175f1721a3c3e865

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
I can't make this hang locally or on a test machine. I see it failing 16% of time according to   Its a timeout. Log has loads of threads hanging out.  Some Proc workers blocked:Thread 2268 (RS_CLOSE_REGION-asf903:58756-1): State: BLOCKED Blocked count: 12 Waited count: 17 Blocked on org.apache.hadoop.hbase.master.assignment.RegionStates$RegionStateNode@1c0991d8 Blocked by 2083 (ProcExecWrkr-6) Stack: org.apache.hadoop.hbase.master.assignment.AssignmentManager.reportTransition([file java]:869) org.apache.hadoop.hbase.master.assignment.AssignmentManager.updateRegionTransition([file java]:857) org.apache.hadoop.hbase.master.assignment.AssignmentManager.reportRegionStateTransition([file java]:801) org.apache.hadoop.hbase.master.MasterRpcServices.reportRegionStateTransition([file java]:1561) org.apache.hadoop.hbase.regionserver.HRegionServer.reportRegionStateTransition([file java]:2263) org.apache.hadoop.hbase.regionserver.handler.CloseRegionHandler.process([file java]:121) org.apache.hadoop.hbase.executor.EventHandler.run([file java]:104) java.util.concurrent.ThreadPoolExecutor.runWorker([file java]:1149) java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:624) java.lang.Thread.run([file java]:748) Thread 2267 (RS_CLOSE_REGION-asf903:58756-0): State: BLOCKED Blocked count: 14 Waited count: 17 Blocked on org.apache.hadoop.hbase.master.assignment.RegionStates$RegionStateNode@75cdbae3 Blocked by 2086 (ProcExecWrkr-9) Stack: org.apache.hadoop.hbase.master.assignment.AssignmentManager.reportTransition([file java]:869) org.apache.hadoop.hbase.master.assignment.AssignmentManager.updateRegionTransition([file java]:857) org.apache.hadoop.hbase.master.assignment.AssignmentManager.reportRegionStateTransition([file java]:801) org.apache.hadoop.hbase.master.MasterRpcServices.reportRegionStateTransition([file java]:1561) org.apache.hadoop.hbase.regionserver.HRegionServer.reportRegionStateTransition([file java]:2263) org.apache.hadoop.hbase.regionserver.handler.CloseRegionHandler.process([file java]:121) org.apache.hadoop.hbase.executor.EventHandler.run([file java]:104) java.util.concurrent.ThreadPoolExecutor.runWorker([file java]:1149) java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:624) java.lang.Thread.run([file java]:748)The Proc Workers are not daemon threads. Let me change that so at least we stop timing out. See HBASE-19527 

** Comment 6 **
[Comment excluded]

** Comment 7 **
{quote}but I do not think set the thread daemon can solve all the problems...{quote}Agreed. We have a bunch of shutdown issues at mo. Making daemon seems to solve at least TestRegionsOnServer. Will see what is left over. I wish I could get this to fail locally (smile).

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 57s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 45s |  master passed  || +1 |  compile  |   0m 43s |  master passed  || +1 |  checkstyle  |   1m  8s |  master passed  || +1 |  shadedjars  |   6m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 42s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m 38s |  the patch passed  || +1 |  compile  |   1m  3s |  the patch passed  || +1 |  javac  |   1m  3s |  the patch passed  || -1 |  checkstyle  |   1m 29s |  hbase-server: The patch generated 1 new + 205 unchanged - 0 fixed = 206 total (was 205)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  22m 29s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  98m  6s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  ||  |   | 145m  2s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19794 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux cc118fc7be95 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7fe4aa6fe4 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 28s |  master passed  || +1 |  compile  |   0m 42s |  master passed  || +1 |  checkstyle  |   1m  6s |  master passed  || +1 |  shadedjars  |   5m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 35s |  the patch passed  || +1 |  compile  |   0m 41s |  the patch passed  || +1 |  javac  |   0m 41s |  the patch passed  || -1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 1 new + 205 unchanged - 0 fixed = 206 total (was 205)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m  8s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 100m 20s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 139m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19794 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 12ae0c5676ca 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7fe4aa6fe4 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
.003 sets TableNamespaceManager general timeout at 30 seconds for all tests (as per Duo suggestion). Also includes a bit of debug for a related failure, TestZKAsyncRegistry

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 44s |  master passed  || +1 |  compile  |   0m 45s |  master passed  || +1 |  checkstyle  |   1m  9s |  master passed  || +1 |  shadedjars  |   5m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   0m 44s |  the patch passed  || +1 |  javac  |   0m 44s |  the patch passed  || -1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 1 new + 205 unchanged - 0 fixed = 206 total (was 205)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m 55s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 124m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 165m 15s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19794 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c6e490663a34 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7fe4aa6fe4 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 25s |  master passed  || +1 |  compile  |   0m 57s |  master passed  || +1 |  checkstyle  |   1m 25s |  master passed  || +1 |  shadedjars  |   5m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 46s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 40s |  the patch passed  || +1 |  compile  |   1m  1s |  the patch passed  || +1 |  javac  |   1m  1s |  the patch passed  || -1 |  checkstyle  |   1m  6s |  hbase-server: The patch generated 2 new + 205 unchanged - 0 fixed = 207 total (was 205)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m 12s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 15s |  hbase-common in the patch passed.  || +1 |  unit  | 100m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 35s |  The patch does not generate ASF License warnings.  ||  |   | 144m  2s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19794 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  xml  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 128a0399b128 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7fe4aa6fe4 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4442 (See )
HBASE-19794 TestZooKeeper hangs (zhangduo: rev 27d00f5861336cb9f8f01174be33f8c3c431980f)
* (edit) hbase-common/src/main/resources/hbase-default.xml


** Comment 23 **
[Comment excluded]
"
HBASE-19919,https://issues.apache.org/jira/browse/HBASE-19919,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination.java,Tidying up logging,YES,"Reading logs, there is a bunch of stuff we don't need, thread names are too long, etc. Doing a little tidying.","** Comment 1 **
[Comment excluded]

** Comment 2 **
toStringWithoutDomain(): Unless all logging of servername changes to this, it'll be hard to debug tests where one needs to search for RS name and iterates over all occurrences to get high level story of what's going on...since they'll miss (part/all?) rpc related stuff (that name is used of rpcserver).Some log.debug can be converted to parameterized style (""xyz {}"").

** Comment 3 **
Thanks for review ... the toStringWithoutDomain is for thread naming. Here are what log lines look like now on a cluster:2018-02-01 21:17:29,832 INFO   cleaner.CleanerChore: Cleaner pool size is 24Almost 50% of the log is the thread name of which 3/4 is host name.With toStringWithoutDomain, thread name becomes master/ve0524:1600I've been doing some parametrization. Let me do some more.Thanks. Reading the logs trying to tell a story from what is in here is a bit tough w/ all the noise.

** Comment 4 **
[Comment excluded]

** Comment 5 **
I went a bit further. Attached is what I pushed to master and branch-2.There is a bunch of work to be done still cutting down thread counts, connections.. etc. Our defaults are sloppy and in need of another tidying. The log narrative needs more passes than this one. Lines are a bit more curt now though. Will do for now. There are more failing unit tests to fix!Thanks for the review 

** Comment 6 **
[Comment excluded]

** Comment 7 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4518 (See )
HBASE-19919 Tidying up logging (stack: rev 40250f8c5f8efe3016f0c3300d9728b0ee2056c6)
* (add) [file java].rej
* (add) [file java].rej
* (add) [file java]


** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4519 (See )
Revert ""HBASE-19919 Tidying up logging"" (zhangduo: rev 6519b98ac3115c4442a2778f6ed7b39ce5cd3b83)
* (delete) [file java].rej
* (delete) [file java].rej
* (delete) [file java]


** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4520 (See )
HBASE-19919 Tidying up logging (stack: rev 06dec205826a6e96e2286180460e5fe014b46fc8)
* (add) [file java]


** Comment 16 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4521 (See )
HBASE-19919 Tidying up logging; ADDENDUM Fix tests w/ mocked Servers (stack: rev 12f3c82a866eee0436c22136909882581fd19905)

"
HBASE-19811,https://issues.apache.org/jira/browse/HBASE-19811,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java,Fix findbugs and error-prone warnings in hbase-server (branch-2),YES,,"** Comment 1 **
Patch for branch-2 added. Unfortunately it is huge, there were many warnings from error prone.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 58s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 210 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 38s |  branch-2 passed  || +1 |  compile  |   0m 40s |  branch-2 passed  || +1 |  checkstyle  |   1m 45s |  branch-2 passed  || +1 |  shadedjars  |   5m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 26s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 30s |  the patch passed  || +1 |  compile  |   0m 42s |  the patch passed  || +1 |  javac  |   0m 42s |  the patch passed  || -1 |  checkstyle  |   1m 57s |  hbase-server: The patch generated 14 new + 3944 unchanged - 404 fixed = 3958 total (was 4348)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 58s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   5m 33s |  The patch causes 15 errors with Hadoop v2.6.5.  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 115m  0s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 148m 20s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 53fe04166690 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 5cce0f8f7d || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Oh, looks like a change violates some old hadoop 2.6.5 API?..... Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.1:compile (default-compile) on project hbase-server: Compilation failure  [file java]: method does not override or implement a method from a supertype  

** Comment 6 **
[Comment excluded]

** Comment 7 **
Yes, I'm checking the hadoop API error.

** Comment 8 **
Fixed hadoop error and a few checkstyle warnings in patch 2.

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 210 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   5m 10s |  branch-2 passed  || +1 |  compile  |   1m  9s |  branch-2 passed  || +1 |  checkstyle  |   2m 35s |  branch-2 passed  || +1 |  shadedjars  |   7m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 44s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 37s |  the patch passed  || +1 |  compile  |   1m  3s |  the patch passed  || +1 |  javac  |   1m  3s |  the patch passed  || -1 |  checkstyle  |   2m 11s |  hbase-server: The patch generated 14 new + 3944 unchanged - 404 fixed = 3958 total (was 4348)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 54s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   7m  9s |  The patch causes 15 errors with Hadoop v2.6.5.  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 109m 32s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   | 151m 28s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a16cf076a67e 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / dc6e02e485 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m  3s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 210 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 50s |  branch-2 passed  || +1 |  compile  |   0m 44s |  branch-2 passed  || +1 |  checkstyle  |   2m 13s |  branch-2 passed  || +1 |  shadedjars  |   6m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 28s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 41s |  the patch passed  || +1 |  compile  |   0m 44s |  the patch passed  || +1 |  javac  |   0m 44s |  the patch passed  || -1 |  checkstyle  |   2m 10s |  hbase-server: The patch generated 14 new + 3944 unchanged - 404 fixed = 3958 total (was 4348)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   5m 50s |  The patch causes 15 errors with Hadoop v2.6.5.  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 114m 36s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 150m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 74a717f1af4b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 5f62041cb1 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 210 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   4m  1s |  branch-2 passed  || +1 |  compile  |   0m 48s |  branch-2 passed  || +1 |  checkstyle  |   2m 20s |  branch-2 passed  || +1 |  shadedjars  |   6m 25s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 28s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 44s |  the patch passed  || +1 |  compile  |   0m 44s |  the patch passed  || +1 |  javac  |   0m 44s |  the patch passed  || -1 |  checkstyle  |   2m  4s |  hbase-server: The patch generated 14 new + 3944 unchanged - 404 fixed = 3958 total (was 4348)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  5s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   5m 46s |  The patch causes 15 errors with Hadoop v2.6.5.  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 114m 15s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 18s |  The patch does not generate ASF License warnings.  ||  |   | 149m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b675a274c3ea 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / 6f8c31242a || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 23s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 210 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m 12s |  branch-2 passed  || +1 |  compile  |   0m 36s |  branch-2 passed  || +1 |  checkstyle  |   1m 28s |  branch-2 passed  || +1 |  shadedjars  |   4m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 23s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 10s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed  || +1 |  javac  |   0m 37s |  the patch passed  || -1 |  checkstyle  |   2m 11s |  hbase-server: The patch generated 3 new + 3811 unchanged - 537 fixed = 3814 total (was 4348)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 19s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 32s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 23s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |  96m 59s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 14s |  The patch does not generate ASF License warnings.  ||  |   | 129m 13s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3f1bd3efd186 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 1e5fc1ed63 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 42s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 3 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   3m  0s |  branch-2 passed  || +1 |  compile  |   0m 37s |  branch-2 passed  || +1 |  checkstyle  |   0m 56s |  branch-2 passed  || +1 |  shadedjars  |   4m 18s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 28s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m  0s |  the patch passed  || +1 |  compile  |   0m 36s |  the patch passed  || +1 |  javac  |   0m 36s |  the patch passed  || +1 |  checkstyle  |   0m 52s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 21s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 29s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 24s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |  97m 49s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 15s |  The patch does not generate ASF License warnings.  ||  |   | 126m 43s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19811 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f6e6f287d4e1 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / f8bde7b76c || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4493 (See )
HBASE-19811 Fix findbugs and error-prone warnings in hbase-server (stack: rev 34c6c99041d5f4a217363667b090fb1b5beb7abe)

"
HBASE-20180,https://issues.apache.org/jira/browse/HBASE-20180,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java,Avoid Class::newInstance,NO,"Class::newInstance is deprecated starting in Java 9 - https://bugs.openjdk.java.net/browse/JDK-6850612 - because it may throw undeclared checked exceptions. The suggested replacement is {{getDeclaredConstructor().newInstance()}}, which will wrap the checked exceptions in InvocationException.

There's even an error-prone warning about it, we should promote that to error while we're fixing this.","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 23s |  master passed  || +1 |  compile  |   2m 46s |  master passed  || +1 |  checkstyle  |   1m 49s |  master passed  || +1 |  shadedjars  |   6m 32s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   3m  1s |  master passed  || +1 |  javadoc  |   1m  2s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 29s |  the patch passed  || +1 |  compile  |   2m 47s |  the patch passed  || +1 |  javac  |   0m  9s |  hbase-build-configuration in the patch passed.  || -1 |  javac  |   1m 40s |  hbase-server generated 12 new + 176 unchanged - 12 fixed = 188 total (was 188)  || +1 |  javac  |   0m 31s |  hbase-endpoint in the patch passed.  || +1 |  javac  |   0m 27s |  hbase-backup generated 0 new + 62 unchanged - 1 fixed = 62 total (was 63)  || -1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 17 new + 259 unchanged - 1 fixed = 276 total (was 260)  || -1 |  checkstyle  |   0m 13s |  hbase-endpoint: The patch generated 1 new + 8 unchanged - 0 fixed = 9 total (was 8)  || -1 |  checkstyle  |   0m 14s |  hbase-backup: The patch generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 50s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 25s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   3m 40s |  the patch passed  || +1 |  javadoc  |   1m  3s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m  8s |  hbase-build-configuration in the patch passed.  || -1 |  unit  | 174m 58s |  hbase-server in the patch failed.  || -1 |  unit  |  14m 13s |  hbase-endpoint in the patch failed.  || +1 |  unit  |  12m  5s |  hbase-backup in the patch passed.  || +1 |  asflicense  |   1m 25s |  The patch does not generate ASF License warnings.  ||  |   | 255m 39s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestGlobalThrottler ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationKillMasterRS ||   | hadoop.hbase.replication.TestReplicationStatus ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationDisableInactivePeer ||   | hadoop.hbase.replication.TestReplicationKillSlaveRS ||   | hadoop.hbase.replication.TestReplicationEmptyWALRecovery ||   | hadoop.hbase.replication.TestReplicationSource ||   | hadoop.hbase.client.TestAsyncReplicationAdminApi ||   | hadoop.hbase.security.visibility.TestVisibilityLabelsReplication ||   | hadoop.hbase.replication.multiwal.TestReplicationEndpointWithMultipleAsyncWAL ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleWAL ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.replication.TestReplicationSyncUpTool ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.replication.TestReplicationWithTags ||   | hadoop.hbase.replication.TestNamespaceReplication ||   | hadoop.hbase.replication.TestReplicationEndpoint ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.replication.TestReplicationKillMasterRSCompressed ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.replication.TestReplicationChangingPeerRegionservers ||   | hadoop.hbase.replication.multiwal.TestReplicationEndpointWithMultipleWAL ||   | hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleWAL ||   | hadoop.hbase.replication.TestReplicationSyncUpToolWithBulkLoadedData |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20180 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 1a044fceb83f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 9342e0091d || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4339 (vs. ulimit of 10000) || modules | C: hbase-build-configuration hbase-server hbase-endpoint hbase-backup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 51s |  master passed  || +1 |  compile  |   3m  6s |  master passed  || +1 |  checkstyle  |   1m 55s |  master passed  || +1 |  shadedjars  |   6m 56s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   3m 43s |  master passed  || +1 |  javadoc  |   1m 11s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 51s |  the patch passed  || +1 |  compile  |   3m  7s |  the patch passed  || +1 |  javac  |   0m  9s |  hbase-build-configuration in the patch passed.  || -1 |  javac  |   1m 51s |  hbase-server generated 12 new + 176 unchanged - 12 fixed = 188 total (was 188)  || +1 |  javac  |   0m 36s |  hbase-endpoint in the patch passed.  || +1 |  javac  |   0m 31s |  hbase-backup generated 0 new + 62 unchanged - 1 fixed = 62 total (was 63)  || +1 |  checkstyle  |   0m  8s |  The patch hbase-build-configuration passed checkstyle  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 253 unchanged - 7 fixed = 253 total (was 260)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-endpoint passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-backup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  2s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 59s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m  7s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   4m 13s |  the patch passed  || +1 |  javadoc  |   1m  9s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m  8s |  hbase-build-configuration in the patch passed.  || -1 |  unit  | 184m 30s |  hbase-server in the patch failed.  || -1 |  unit  |  14m 13s |  hbase-endpoint in the patch failed.  || +1 |  unit  |  11m 58s |  hbase-backup in the patch passed.  || +1 |  asflicense  |   1m 26s |  The patch does not generate ASF License warnings.  ||  |   | 269m 10s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestGlobalThrottler ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationKillMasterRS ||   | hadoop.hbase.replication.TestReplicationStatus ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationDisableInactivePeer ||   | hadoop.hbase.replication.TestReplicationKillSlaveRS ||   | hadoop.hbase.replication.TestReplicationEmptyWALRecovery ||   | hadoop.hbase.replication.TestReplicationSource ||   | hadoop.hbase.client.TestAsyncReplicationAdminApi ||   | hadoop.hbase.security.visibility.TestVisibilityLabelsReplication ||   | hadoop.hbase.replication.multiwal.TestReplicationEndpointWithMultipleAsyncWAL ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleWAL ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.replication.TestReplicationSyncUpTool ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.replication.TestReplicationWithTags ||   | hadoop.hbase.replication.TestNamespaceReplication ||   | hadoop.hbase.replication.TestReplicationEndpoint ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.replication.TestReplicationKillMasterRSCompressed ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.replication.TestReplicationChangingPeerRegionservers ||   | hadoop.hbase.replication.multiwal.TestReplicationEndpointWithMultipleWAL ||   | hadoop.hbase.replication.multiwal.TestReplicationKillMasterRSCompressedWithMultipleWAL ||   | hadoop.hbase.replication.TestReplicationSyncUpToolWithBulkLoadedData |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20180 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux d1d0c73307d0 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 72c3d27bf6 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4396 (vs. ulimit of 10000) || modules | C: hbase-build-configuration hbase-server hbase-endpoint hbase-backup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 34s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 55s |  master passed  || +1 |  compile  |   2m 52s |  master passed  || +1 |  checkstyle  |   1m 49s |  master passed  || +1 |  shadedjars  |   5m 53s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   4m 27s |  master passed  || +1 |  javadoc  |   1m 24s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 49s |  the patch passed  || +1 |  compile  |   3m 30s |  the patch passed  || +1 |  javac  |   0m  8s |  hbase-build-configuration in the patch passed.  || -1 |  javac  |   1m 50s |  hbase-server generated 12 new + 176 unchanged - 12 fixed = 188 total (was 188)  || +1 |  javac  |   0m 33s |  hbase-mapreduce generated 0 new + 159 unchanged - 2 fixed = 159 total (was 161)  || +1 |  javac  |   0m 33s |  hbase-endpoint in the patch passed.  || +1 |  javac  |   0m 26s |  hbase-backup generated 0 new + 62 unchanged - 1 fixed = 62 total (was 63)  || +1 |  checkstyle  |   0m  6s |  The patch hbase-build-configuration passed checkstyle  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 238 unchanged - 7 fixed = 238 total (was 245)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-endpoint passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-backup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  2s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 42s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: hbase-build-configuration  || +1 |  findbugs  |   3m 41s |  the patch passed  || +1 |  javadoc  |   1m  9s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m  9s |  hbase-build-configuration in the patch passed.  || +1 |  unit  | 166m 54s |  hbase-server in the patch passed.  || +1 |  unit  |  15m 24s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   4m 41s |  hbase-endpoint in the patch passed.  || +1 |  unit  |  16m 57s |  hbase-backup in the patch passed.  || +1 |  asflicense  |   2m  3s |  The patch does not generate ASF License warnings.  ||  |   | 258m 38s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20180 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 2d0d3b9bafd1 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 84ee32c723 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] ||  Test Results | [link] || Max. process+thread count | 5471 (vs. ulimit of 10000) || modules | C: hbase-build-configuration hbase-server hbase-mapreduce hbase-endpoint hbase-backup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 13 **
> The suggested replacement is {{getDeclaredConstructor().newInstance()}}, error-prone flagged this issue in branch-1 code and wherever I saw it I made the replacement in earlier work.  if you can find occurrences I missed by all means.

** Comment 14 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 16 **
Good to know you already addressed this. I had only looked at errors previously on branch-2, didn't realize you also did a bunch of warnings there. Resolving this then!

** Comment 17 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19793,https://issues.apache.org/jira/browse/HBASE-19793,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java,Minor improvements on Master/RS startup,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 34s |  master passed  || +1 |  compile  |   0m 41s |  master passed  || +1 |  checkstyle  |   1m  7s |  master passed  || +1 |  shadedjars  |   5m 42s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 45s |  the patch passed  || +1 |  compile  |   0m 42s |  the patch passed  || +1 |  javac  |   0m 42s |  the patch passed  || +1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 0 new + 322 unchanged - 5 fixed = 322 total (was 327)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m 42s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 119m 13s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   | 159m  3s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19793 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bf975a34fed9 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c554340a91 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 30s |  master passed  || +1 |  compile  |   0m 41s |  master passed  || +1 |  checkstyle  |   1m  8s |  master passed  || +1 |  shadedjars  |   5m 42s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 32s |  the patch passed  || +1 |  compile  |   0m 42s |  the patch passed  || +1 |  javac  |   0m 42s |  the patch passed  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 322 unchanged - 5 fixed = 322 total (was 327)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m 12s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 102m 29s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 141m 32s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19793 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b54451e26e7c 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e546034f09 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4406 (See )
HBASE-19793 Minor improvements on Master/RS startup (zhangduo: rev 3b638f7ea1ee050cde1dc0c66d622a3dd96e98cc)

"
HBASE-20144,https://issues.apache.org/jira/browse/HBASE-20144,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java,The shutdown of master will hang if there are no live region server,NO,"In a graceful shutdown, we will set cluster down in ServerManager, and in ServerManger.expireServer, if the cluster down flag is true and all rses are gone, we will call master.stop and quit.

But if we have no live rs when shutting down, then expireServer will never be triggered, so we are dead...","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Call HMaster.stop directly if no online servers in ServerManager.shutdownCluster.Also enable TestAssignmentManagerMetrics to see if it is fine after this fix.

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   3m 58s |  master passed  || +1 |  compile  |   0m 40s |  master passed  || +1 |  checkstyle  |   1m  0s |  master passed  || +1 |  shadedjars  |   5m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 42s |  master passed  || +1 |  javadoc  |   0m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  2s |  the patch passed  || +1 |  compile  |   0m 40s |  the patch passed  || +1 |  javac  |   0m 40s |  the patch passed  || +1 |  checkstyle  |   0m 57s |  hbase-server: The patch generated 0 new + 21 unchanged - 2 fixed = 21 total (was 23)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 25s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   6m 26s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   8m 24s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  10m 36s |  The patch causes 10 errors with Hadoop v3.0.0.  || +1 |  findbugs  |   1m 55s |  the patch passed  || +1 |  javadoc  |   0m 25s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 106m 20s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 16s |  The patch does not generate ASF License warnings.  ||  |   | 137m 50s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestShutdownWithNoRegionServer |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20144 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1536767d8aff 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 6b77786dfc || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5092 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
The hadoopchecks always fail, in hbase-thrift module. This time it fail with Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-install) on project hbase-thrift: Failed to install metadata org.apache.hbase:hbase-thrift:3.0.0-SNAPSHOT/maven-metadata.xml: Could not parse metadata /home/jenkins/.m2/repository/org/apache/hbase/hbase-thrift/3.0.0-SNAPSHOT/maven-metadata-local.xml: in epilog non whitespace content is not allowed but got / (position: END_TAG seen ...</metadata>\n/... @25:2)  -> Seems a failed build left a broken file in the local repo?

** Comment 7 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 56s |  master passed  || +1 |  compile  |   0m 49s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   6m 26s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 16s |  master passed  || +1 |  javadoc  |   0m 36s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 30s |  the patch passed  || +1 |  compile  |   0m 52s |  the patch passed  || +1 |  javac  |   0m 52s |  the patch passed  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 21 unchanged - 2 fixed = 21 total (was 23)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 30s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  21m 55s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 32s |  the patch passed  || +1 |  javadoc  |   0m 35s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 107m 59s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 156m 43s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20144 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 73109412226f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 6b77786dfc || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4928 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 12 **
[Comment excluded]

** Comment 13 **
It failed on first nightly run that had this patch in it [link] after a spate of passes. FYI.

** Comment 14 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20169,https://issues.apache.org/jira/browse/HBASE-20169,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileCleaner.java,NPE when calling HBTU.shutdownMiniCluster (TestAssignmentManagerMetrics is flakey),NO,"This usually happens when some master or rs has already been down before we calling shutdownMiniCluster.

See

https://builds.apache.org/job/HBASE-Flaky-Tests/27223/testReport/junit/org.apache.hadoop.hbase.master/TestAssignmentManagerMetrics/org_apache_hadoop_hbase_master_TestAssignmentManagerMetrics/

and also

http://104.198.223.121:8080/job/HBASE-Flaky-Tests/34873/testReport/junit/org.apache.hadoop.hbase.master/TestRestartCluster/testRetainAssignmentOnRestart/

{noformat}
java.lang.NullPointerException
	at org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics.after(TestAssignmentManagerMetrics.java:100)

java.lang.NullPointerException
	at org.apache.hadoop.hbase.master.TestRestartCluster.testRetainAssignmentOnRestart(TestRestartCluster.java:156)
{noformat}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Do not have any ideas on how to find out the real problem yet, it is not easy to reproduce and the stack trace is meaningless...So if you have time please take a look at it sir.Thanks.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 23s |  branch-2 passed  || +1 |  compile  |  11m 27s |  branch-2 passed  || +1 |  checkstyle  |   1m 16s |  branch-2 passed  || +1 |  shadedjars  |   5m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 53s |  branch-2 passed  || +1 |  javadoc  |   0m 38s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 20s |  the patch passed  || +1 |  compile  |  11m 31s |  the patch passed  || +1 |  cc  |  11m 31s |  the patch passed  || +1 |  javac  |  11m 31s |  the patch passed  || +1 |  checkstyle  |   1m 20s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m  9s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m  1s |  the patch passed  || +1 |  findbugs  |   4m 24s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || -1 |  unit  | 227m 40s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 49s |  The patch does not generate ASF License warnings.  ||  |   | 292m 49s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestWarmupRegion ||   | hadoop.hbase.regionserver.TestRemoveRegionMetrics ||   | hadoop.hbase.regionserver.wal.TestSecureAsyncWALReplay ||   | hadoop.hbase.regionserver.TestHRegionFileSystem ||   | hadoop.hbase.security.access.TestAccessController ||   | hadoop.hbase.coprocessor.TestMasterObserver ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestAsyncMetaRegionLocator ||   | hadoop.hbase.TestAcidGuaranteesWithEagerPolicy ||   | hadoop.hbase.regionserver.TestCompactionLifeCycleTracker ||   | hadoop.hbase.regionserver.wal.TestWALReplayBoundedLogWriterCreation ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.TestPartialResultsFromClientSide ||   | hadoop.hbase.regionserver.wal.TestAsyncWALReplayCompressed ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.TestAcidGuaranteesWithNoInMemCompaction ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.TestAcidGuaranteesWithAdaptivePolicy ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.regionserver.TestDeleteMobTable ||   | hadoop.hbase.client.TestAdmin2 ||   | hadoop.hbase.client.TestMetaWithReplicas ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.TestAcidGuaranteesWithBasicPolicy ||   | hadoop.hbase.regionserver.TestHRegionOnCluster ||   | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.client.TestHTableMultiplexerFlushCache ||   | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.coprocessor.TestRegionObserverInterface ||   | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.client.TestAsyncDecommissionAdminApi ||   | hadoop.hbase.regionserver.TestEncryptionKeyRotation ||   | hadoop.hbase.client.TestAsyncSingleRequestRpcRetryingCaller |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  cc  unit  hbaseprotoc  javac  javadoc  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0468e66116c6 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 03e7b78260 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4360 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 30s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 20s |  branch-2 passed  || +1 |  compile  |  11m 31s |  branch-2 passed  || +1 |  checkstyle  |   1m 18s |  branch-2 passed  || +1 |  shadedjars  |   5m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m  9s |  branch-2 passed  || +1 |  javadoc  |   0m 39s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 29s |  the patch passed  || +1 |  compile  |  11m 40s |  the patch passed  || +1 |  cc  |  11m 40s |  the patch passed  || +1 |  javac  |  11m 40s |  the patch passed  || +1 |  checkstyle  |   1m 16s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 59s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 53s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m  6s |  the patch passed  || +1 |  findbugs  |   4m 35s |  the patch passed  || +1 |  javadoc  |   0m 40s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 28s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  | 121m 57s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 42s |  The patch does not generate ASF License warnings.  ||  |   | 187m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  cc  unit  hbaseprotoc  javac  javadoc  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b51b9ac80326 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 03e7b78260 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4344 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 29s |  branch-2 passed  || +1 |  compile  |  11m 52s |  branch-2 passed  || +1 |  checkstyle  |   1m 26s |  branch-2 passed  || +1 |  shadedjars  |   5m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m  3s |  branch-2 passed  || +1 |  javadoc  |   0m 40s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 29s |  the patch passed  || +1 |  compile  |  11m 59s |  the patch passed  || +1 |  cc  |  11m 59s |  the patch passed  || +1 |  javac  |  11m 59s |  the patch passed  || +1 |  checkstyle  |   1m 19s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 23s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m  3s |  the patch passed  || +1 |  findbugs  |   4m 24s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 29s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  | 122m 40s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 189m  5s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  cc  unit  hbaseprotoc  javac  javadoc  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2808035087c3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / 03e7b78260 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4512 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 19s |  branch-2 passed  || +1 |  compile  |   9m 59s |  branch-2 passed  || +1 |  checkstyle  |   1m 17s |  branch-2 passed  || +1 |  shadedjars  |   4m 44s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 10s |  branch-2 passed  || +1 |  javadoc  |   0m 42s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m  3s |  the patch passed  || +1 |  compile  |   9m 47s |  the patch passed  || +1 |  cc  |   9m 47s |  the patch passed  || +1 |  javac  |   9m 47s |  the patch passed  || -1 |  checkstyle  |   0m 59s |  hbase-server: The patch generated 4 new + 6 unchanged - 0 fixed = 10 total (was 6)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  7s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m  6s |  the patch passed  || +1 |  findbugs  |   4m 22s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 23s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 40s |  hbase-procedure in the patch passed.  || -1 |  unit  |  21m 55s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   |  83m 25s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestRecoverMetaProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux b0fdf2483d1d 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 7ba86d056c || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 698 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
.005 fix checkstyle and the failed test was because ClassRule referred to wrong class (copy/paste).

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 38s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 34s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 38s |  branch-2 passed  || +1 |  compile  |   9m 59s |  branch-2 passed  || +1 |  checkstyle  |   1m 18s |  branch-2 passed  || +1 |  shadedjars  |   4m 50s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m  8s |  branch-2 passed  || +1 |  javadoc  |   0m 45s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m  8s |  the patch passed  || +1 |  compile  |   9m 35s |  the patch passed  || +1 |  cc  |   9m 35s |  the patch passed  || +1 |  javac  |   9m 35s |  the patch passed  || -1 |  checkstyle  |   0m 58s |  hbase-server: The patch generated 3 new + 6 unchanged - 0 fixed = 9 total (was 6)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 27s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 15s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m  2s |  the patch passed  || +1 |  findbugs  |   4m 26s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 25s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 31s |  hbase-procedure in the patch passed.  || +1 |  unit  | 171m 19s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 233m 51s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 60da79256d33 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 7ba86d056c || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4912 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 20 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 21 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
So, TestAMMetrics has dropped from top list of flakies but still fails occasionally in the bottom list of GCE runs AND it is failing with the NPE. My patch is in place for this run [link] It prints out my debug:2018-03-21 01:02:14,277 INFO   master.TestAssignmentManagerMetrics(101): AFTER org.apache.hadoop.hbase.HBaseTestingUtility@22710ac7 <= IS THIS NULL?Then it does this about the next line...java.lang.NullPointerException	at org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics.after([file java]:102)102     TEST_UTIL.shutdownMiniCluster();So, more to do here.

** Comment 23 **
[Comment excluded]

** Comment 24 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 25 **
[Comment excluded]

** Comment 26 **
Can you please explain the fix? And what's the actually stack trace you saw? The stack trace is always incomplete on jenkins.

** Comment 27 **
{quote}Can you please explain the fix? And what's the actually stack trace you saw? The stack trace is always incomplete on jenkins.{quote}Pardon me, I just add some log to trace the null object so no full stack trace can be attached here.The story is about thread contention between ProcedureExecutor#stop and ProcedureExecutor#join.*first thread*: When shutdowning the mini cluster, the master#shutdown is executed.activeMaster.master.shutdown();{code}And then the ServerManager#shutdownCluster is called. Because the rs which failed to instantiate cp is dead, the onlineServers.isEmpty() is true. That makes Master#run leave the loop. (*second thread*)public void shutdownCluster() {  String statusStr = ""Cluster shutdown requested of master="" + this.master.getServerName();  LOG.info(statusStr);  this.clusterShutdown.set(true);  if (onlineServers.isEmpty()) {    // we do not synchronize here so this may cause a double stop, but not a big deal    master.stop(""OnlineServer=0 right after cluster shutdown set"");  }}{code}Since ProcedureExecutor#join sets null to timeoutExecutor, the NPE will happen if ProcedureExecutor#stop is called after ProcedureExecutor#join.public void join() {  assert !isRunning() : ""expected not running"";  // stop the timeout executor  timeoutExecutor.awaitTermination();  timeoutExecutor = null;{code}public void stop() {  if (!running.getAndSet(false)) {    return;  }  LOG.info(""Stopping"");  scheduler.stop();  timeoutExecutor.sendStopSignal();}{code} 

** Comment 28 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 20s |  master passed  || +1 |  compile  |   1m 51s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   4m 22s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  2s |  master passed  || +1 |  javadoc  |   0m 38s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 18s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || +1 |  checkstyle  |   1m 19s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 21s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 21s |  the patch passed  || +1 |  javadoc  |   0m 38s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 35s |  hbase-procedure in the patch passed.  || +1 |  unit  | 108m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 34s |  The patch does not generate ASF License warnings.  ||  |   | 156m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9d9bbaf33ac6 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 125767b44e || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4524 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 29 **
[Comment excluded]

** Comment 30 **
{quote} if (procedureExecutor != null) {      configurationManager.deregisterObserver(procedureExecutor.getEnvironment());      procedureExecutor.getEnvironment().getRemoteDispatcher().stop();      procedureExecutor.stop();      procedureExecutor.join();      procedureExecutor = null;    }{quote}That (#join) is executed by the first thread I have mentioned. The second thread is the test thread used to do the @afterClassTestAssignmentManagerMetrics classs@AfterClasspublic static void after() throws Exception {  LOG.info(""AFTER {} <= IS THIS NULL?"", TEST_UTIL);  TEST_UTIL.shutdownMiniCluster();  // here}{code}The JVMClusterUtil#shutdown invoked by TEST_UTIL#shutdownMiniCluster calls the HMaster#shutdown and that execution of procedureExecutor#stop ensues.JVMClusterUtil classpublic static void shutdown(final List<MasterThread> masters,    final List<RegionServerThread> regionservers) {  LOG.debug(""Shutting down HBase Cluster"");  if (masters != null) {    ...    // Do active after.    if (activeMaster != null) {      try {        activeMaster.master.shutdown();  // here      } catch (IOException e) {        LOG.error(""Exception occurred in HMaster.shutdown()"", e);      }    }  }{code}HMaster classpublic void shutdown() throws IOException {  ...  // Stop the procedure executor. Will stop any ongoing assign, unassign, server crash etc.,  // processing so we can go down.  if (this.procedureExecutor != null) {    this.procedureExecutor.stop();  // here  }{code} 

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
A few notes (sorry for taking so long to come back to hear -- I just noticed this test still fails...) * Nice digging . * Yeah, I don't get how #join runs before #stop. Looking in code its always after a #stop. The PE#stop has an atomic #running that is checked and set on entrance so we should run #stop once. Pardon me for being thick. * Setting timeoutExecutor to null seems gratuitous. It was added in HBASE-16846 ""Procedure v2 - executor cleanup""... From the description ""Trying to reorganize the executor. move some code around grouping common code, remove some synchronization from Procedure and adding comments on various sections. The execution logic remains unchanged"": i.e. general cleanup. Lets remove setting it to null. A #join shoud be an observer, not a modifier. * Regards, ""BTW, the NPE is not related to this issue."", I'd say lets fix test and this issue in here... beside this good discussion.Let me update your amendment 

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 41s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 38s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 55s |  master passed  || +1 |  compile  |   2m 11s |  master passed  || +1 |  checkstyle  |   1m 27s |  master passed  || +1 |  shadedjars  |   5m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 29s |  master passed  || +1 |  javadoc  |   0m 45s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 23s |  the patch passed  || +1 |  compile  |   2m 16s |  the patch passed  || +1 |  javac  |   2m 16s |  the patch passed  || +1 |  checkstyle  |   1m 27s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 51s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 35s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 34s |  the patch passed  || +1 |  javadoc  |   0m 42s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   1m 38s |  hbase-procedure in the patch failed.  || -1 |  unit  | 158m 37s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m  5s |  The patch does not generate ASF License warnings.  ||  |   | 213m 23s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestStateMachineProcedure ||   | hadoop.hbase.procedure2.TestChildProcedures ||   | hadoop.hbase.procedure2.TestProcedureNonce ||   | hadoop.hbase.procedure2.TestProcedureRecovery ||   | hadoop.hbase.procedure2.TestProcedureEvents ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.balancer.TestStochasticLoadBalancerRegionReplicaSameHosts ||   | hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure ||   | hadoop.hbase.master.locking.TestLockProcedure ||   | hadoop.hbase.master.procedure.TestModifyTableProcedure ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.master.procedure.TestCreateNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestModifyNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestDisableTableProcedure ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.master.procedure.TestProcedureAdmin ||   | hadoop.hbase.master.procedure.TestCloneSnapshotProcedure ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure ||   | hadoop.hbase.master.procedure.TestServerCrashProcedure ||   | hadoop.hbase.master.balancer.TestStochasticLoadBalancerRegionReplicaHighReplication |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 36e7249a9fce 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b1d6f576aa || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4218 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 38 **
Failures are probably related but retrying in case not.

** Comment 39 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 58s |  master passed  || +1 |  compile  |   2m  7s |  master passed  || +1 |  checkstyle  |   1m 29s |  master passed  || +1 |  shadedjars  |   4m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 26s |  master passed  || +1 |  javadoc  |   0m 44s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 42s |  the patch passed  || +1 |  compile  |   2m  3s |  the patch passed  || +1 |  javac  |   2m  3s |  the patch passed  || +1 |  checkstyle  |   1m 29s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 22s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 48s |  the patch passed  || +1 |  javadoc  |   0m 42s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   1m 35s |  hbase-procedure in the patch failed.  || -1 |  unit  | 156m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 37s |  The patch does not generate ASF License warnings.  ||  |   | 209m  4s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestStateMachineProcedure ||   | hadoop.hbase.procedure2.TestChildProcedures ||   | hadoop.hbase.procedure2.TestProcedureNonce ||   | hadoop.hbase.procedure2.TestProcedureRecovery ||   | hadoop.hbase.procedure2.TestProcedureEvents ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure ||   | hadoop.hbase.master.locking.TestLockProcedure ||   | hadoop.hbase.master.procedure.TestModifyTableProcedure ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.master.procedure.TestCreateNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestModifyNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestDisableTableProcedure ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.master.procedure.TestProcedureAdmin ||   | hadoop.hbase.master.procedure.TestCloneSnapshotProcedure ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure ||   | hadoop.hbase.master.procedure.TestServerCrashProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7e3b224aa105 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 5bdb52af2f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4426 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 40 **
[Comment excluded]

** Comment 41 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 39s |  branch-2.0 passed  || +1 |  compile  |   2m  0s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 24s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 24s |  branch-2.0 passed  || +1 |  javadoc  |   0m 42s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 40s |  the patch passed  || +1 |  compile  |   2m  5s |  the patch passed  || +1 |  javac  |   2m  5s |  the patch passed  || +1 |  checkstyle  |   1m 24s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 41s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 48s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 40s |  hbase-procedure in the patch passed.  || +1 |  unit  | 110m 28s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 156m 14s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:369877d || JIRA Issue | HBASE-20169 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2c681d1c227d 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 8886c844f9 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4152 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 42 **
[Comment excluded]

** Comment 43 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 44 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 45 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20178,https://issues.apache.org/jira/browse/HBASE-20178,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/EnableTableProcedure.java,[AMv2] Throw exception if hostile environment,NO,"New pattern where we throw exception on procedure construction if cluster is going down, hosting master is stopping, table is offline, or table is read-only. Fail fast rather than later internal to Procedure so can flag caller there is a problem.

Changed Move/Split/Merge Procedures.

No point queuing a move region for a table that is offline and which may never be re-enabled.","** Comment 1 **
.001 Fail-fast by throwing exception out of Procedure constructor ifmove but table is disabled, etc.M [file java] Test stolen from HBASE-20131M [file java] Add convenience isEnabled/isDisabledM [file java] Promote assert state to throw exception.M [file java] Add isClusterUpM [file java] Move constructor now throws exceptionM [file java]M [file java]M [file java]M [file java]M [file java]M [file java]M [file java] Do environment check at construction and fail-fast if hostile.M [file java] Ad checkTableOnline utility method.M [file java] Moved to procedure package.Will probably provoke test failures. Let me see.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 48s |  branch-2 passed  || +1 |  compile  |   2m 23s |  branch-2 passed  || +1 |  checkstyle  |   1m 47s |  branch-2 passed  || +1 |  shadedjars  |   5m 47s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 55s |  branch-2 passed  || +1 |  javadoc  |   0m 45s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 28s |  the patch passed  || +1 |  compile  |   2m 14s |  the patch passed  || +1 |  javac  |   2m 14s |  the patch passed  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 7 new + 524 unchanged - 1 fixed = 531 total (was 525)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m  0s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  5s |  the patch passed  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  0s |  hbase-client in the patch passed.  || -1 |  unit  | 150m 26s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 55s |  The patch does not generate ASF License warnings.  ||  |   | 197m 44s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.assignment.TestAssignmentManager ||   | hadoop.hbase.regionserver.wal.TestAsyncWALReplayCompressed ||   | hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient ||   | hadoop.hbase.master.TestTableStateManager ||   | hadoop.hbase.quotas.TestMasterSpaceQuotaObserver ||   | hadoop.hbase.client.TestScannersFromClientSide ||   | hadoop.hbase.TestNamespace ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.regionserver.wal.TestWALReplayCompressed ||   | hadoop.hbase.client.TestMobCloneSnapshotFromClient ||   | hadoop.hbase.regionserver.TestHRegionFileSystem ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.master.procedure.TestCloneSnapshotProcedure ||   | hadoop.hbase.filter.TestFilterWrapper ||   | hadoop.hbase.client.TestEnableTable ||   | hadoop.hbase.master.procedure.TestProcedurePriority ||   | hadoop.hbase.master.procedure.TestMasterObserverPostCalls ||   | hadoop.hbase.client.TestAsyncNonMetaRegionLocator ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure ||   | hadoop.hbase.regionserver.TestCompactionState ||   | hadoop.hbase.io.encoding.TestChangingEncoding ||   | hadoop.hbase.master.procedure.TestModifyTableProcedure ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.security.access.TestAccessController3 ||   | hadoop.hbase.regionserver.TestCompactSplitThread ||   | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.master.procedure.TestDisableTableProcedure ||   | hadoop.hbase.master.procedure.TestMasterProcedureEvents ||   | hadoop.hbase.TestAcidGuaranteesWithEagerPolicy ||   | hadoop.hbase.regionserver.wal.TestSecureAsyncWALReplay ||   | hadoop.hbase.regionserver.TestCompactionLifeCycleTracker ||   | hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk ||   | hadoop.hbase.regionserver.wal.TestAsyncWALReplay ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.quotas.TestSpaceQuotas ||   | hadoop.hbase.client.TestSnapshotWithAcl ||   | hadoop.hbase.client.TestAsyncMetaRegionLocator ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.client.TestSnapshotCloneIndependence ||   | hadoop.hbase.client.TestFlushFromClient ||   | hadoop.hbase.regionserver.wal.TestWALReplay ||   | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.backup.TestHFileArchiving ||   | hadoop.hbase.TestAcidGuaranteesWithAdaptivePolicy ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.security.access.TestScanEarlyTermination ||   | hadoop.hbase.client.TestMvccConsistentScanner ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestMalformedCellFromClient ||   | hadoop.hbase.regionserver.TestFlushLifeCycleTracker ||   | hadoop.hbase.master.balancer.TestRegionLocationFinder ||   | hadoop.hbase.quotas.TestSnapshotQuotaObserverChore ||   | hadoop.hbase.security.access.TestAccessController ||   | hadoop.hbase.client.TestAsyncTableAdminApi2 ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.TestAcidGuaranteesWithBasicPolicy ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.constraint.TestConstraint ||   | hadoop.hbase.TestRegionRebalancing ||   | hadoop.hbase.coprocessor.TestCoprocessorMetrics ||   | hadoop.hbase.security.access.TestWithDisabledAuthorization ||   | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.coprocessor.TestOpenTableInCoprocessor ||   | hadoop.hbase.replication.regionserver.TestReplicationSink ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.client.TestMetaWithReplicas ||   | hadoop.hbase.master.assignment.TestRogueRSAssignment ||   | hadoop.hbase.master.TestDLSAsyncFSWAL ||   | hadoop.hbase.tool.TestLoadIncrementalHFiles ||   | hadoop.hbase.regionserver.TestRemoveRegionMetrics ||   | hadoop.hbase.security.access.TestCoprocessorWhitelistMasterObserver ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.security.access.TestCellACLs ||   | hadoop.hbase.snapshot.TestFlushSnapshotFromClient ||   | hadoop.hbase.security.access.TestAccessController2 ||   | hadoop.hbase.mob.compactions.TestMobCompactor ||   | hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestCreateTableProcedure ||   | hadoop.hbase.regionserver.wal.TestAsyncLogRollPeriod ||   | hadoop.hbase.client.TestSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.filter.TestFilterWithScanLimits ||   | hadoop.hbase.client.TestMobSnapshotFromClient ||   | hadoop.hbase.master.TestMirroringTableStateManager ||   | hadoop.hbase.regionserver.TestDeleteMobTable ||   | hadoop.hbase.filter.TestScanRowPrefix ||   | hadoop.hbase.client.TestAsyncTableAdminApi ||   | hadoop.hbase.regionserver.wal.TestWALReplayBoundedLogWriterCreation ||   | hadoop.hbase.replication.TestNamespaceReplication ||   | hadoop.hbase.TestPartialResultsFromClientSide ||   | hadoop.hbase.regionserver.TestCompactionFileNotFound ||   | hadoop.hbase.regionserver.wal.TestLogRollPeriod ||   | hadoop.hbase.master.procedure.TestTableDescriptorModificationFromClient ||   | hadoop.hbase.coprocessor.TestMasterObserver ||   | hadoop.hbase.client.TestSmallReversedScanner ||   | hadoop.hbase.TestHColumnDescriptorDefaultVersions ||   | hadoop.hbase.client.TestSplitOrMergeStatus ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.client.TestTableSnapshotScanner ||   | hadoop.hbase.client.TestAsyncTableAdminApi3 ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.coprocessor.TestRegionObserverInterface ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence ||   | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.client.TestAsyncDecommissionAdminApi ||   | hadoop.hbase.client.TestIllegalTableDescriptor ||   | hadoop.hbase.client.TestCloneSnapshotFromClient ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.client.TestSnapshotMetadata ||   | hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd ||   | hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure ||   | hadoop.hbase.client.TestAsyncSnapshotAdminApi ||   | hadoop.hbase.master.cleaner.TestSnapshotFromMaster ||   | hadoop.hbase.TestRegionMetrics ||   | hadoop.hbase.master.TestRollingRestart ||   | hadoop.hbase.regionserver.TestRegionMove ||   | hadoop.hbase.client.TestAdmin2 ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.TestMetaTableAccessor ||   | hadoop.hbase.client.TestAsyncProcedureAdminApi ||   | hadoop.hbase.security.access.TestCellACLWithMultipleVersions ||   | hadoop.hbase.regionserver.TestTags ||   | hadoop.hbase.quotas.TestQuotaAdmin ||   | hadoop.hbase.client.TestAsyncClusterAdminApi ||   | hadoop.hbase.tool.TestLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.master.procedure.TestDeleteColumnFamilyProcedureFromClient ||   | hadoop.hbase.client.TestLeaseRenewal ||   | hadoop.hbase.master.TestDLSFSHLog ||   | hadoop.hbase.wal.TestDisabledWAL ||   | hadoop.hbase.client.TestMultiRespectsLimits ||   | hadoop.hbase.regionserver.TestHRegionOnCluster ||   | hadoop.hbase.regionserver.TestRegionReplicasWithModifyTable ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.master.TestMasterRestartAfterDisablingTable ||   | hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient ||   | hadoop.hbase.regionserver.TestRegionReplicasAreDistributed ||   | hadoop.hbase.client.TestSnapshotFromClient ||   | hadoop.hbase.TestAcidGuaranteesWithNoInMemCompaction ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.master.TestWarmupRegion ||   | hadoop.hbase.regionserver.TestRegionServerMetrics ||   | hadoop.hbase.mob.TestExpiredMobFileCleaner ||   | hadoop.hbase.util.TestHBaseFsckMOB ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction ||   | hadoop.hbase.master.procedure.TestDeleteTableProcedure ||   | hadoop.hbase.master.TestCatalogJanitorInMemoryStates ||   | hadoop.hbase.client.TestAsyncSingleRequestRpcRetryingCaller ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient ||   | hadoop.hbase.util.TestRegionMover ||   | hadoop.hbase.regionserver.wal.TestSecureWALReplay ||   | hadoop.hbase.master.TestMaster |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux da824d75aca4 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / d42886f4fe || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4787 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 44s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m  7s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 53s |  branch-2 passed  || +1 |  compile  |   2m 19s |  branch-2 passed  || +1 |  checkstyle  |   1m 39s |  branch-2 passed  || +1 |  shadedjars  |   5m 31s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 57s |  branch-2 passed  || +1 |  javadoc  |   0m 52s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 26s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || +1 |  checkstyle  |   0m 28s |  The patch hbase-client passed checkstyle  || +1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 0 new + 485 unchanged - 1 fixed = 485 total (was 486)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 52s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 12s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  6s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  3s |  hbase-client in the patch passed.  || -1 |  unit  | 195m 14s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 44s |  The patch does not generate ASF License warnings.  ||  |   | 245m 24s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionMove ||   | hadoop.hbase.coprocessor.TestIncrementTimeRange ||   | hadoop.hbase.snapshot.TestFlushSnapshotFromClient ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.master.assignment.TestAssignmentManager ||   | hadoop.hbase.coprocessor.TestMasterObserver ||   | hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.coprocessor.TestAppendTimeRange ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b4d78e7a399a 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / d42886f4fe || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3864 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   3m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 5 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 21s |  branch-2 passed  || +1 |  compile  |   2m 10s |  branch-2 passed  || +1 |  checkstyle  |   1m 49s |  branch-2 passed  || +1 |  shadedjars  |   7m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  5s |  branch-2 passed  || +1 |  javadoc  |   0m 44s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 23s |  the patch passed  || +1 |  compile  |   2m  9s |  the patch passed  || -1 |  javac  |   1m 35s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   0m 28s |  hbase-client: The patch generated 1 new + 36 unchanged - 1 fixed = 37 total (was 37)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 582 unchanged - 1 fixed = 582 total (was 583)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 21s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 45s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m  5s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 55s |  hbase-client in the patch passed.  || -1 |  unit  |  25m 19s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   |  76m 11s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Call to org.apache.hadoop.hbase.client.TableState.equals(org.apache.hadoop.hbase.client.TableState$State) in org.apache.hadoop.hbase.master.TableNamespaceManager.isTableEnabled()  At [file java]: At [file java]: || Failed junit tests | hadoop.hbase.TestClientClusterMetrics |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9769200b3fe8 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 260ee0da60 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 604 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 32s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 5 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 52s |  branch-2 passed  || +1 |  compile  |   2m 22s |  branch-2 passed  || +1 |  checkstyle  |   1m 48s |  branch-2 passed  || +1 |  shadedjars  |   5m 50s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 56s |  branch-2 passed  || +1 |  javadoc  |   0m 57s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 24s |  the patch passed  || +1 |  compile  |   2m 12s |  the patch passed  || +1 |  javac  |   2m 12s |  the patch passed  || +1 |  checkstyle  |   0m 28s |  hbase-client: The patch generated 0 new + 36 unchanged - 1 fixed = 36 total (was 37)  || +1 |  checkstyle  |   1m 18s |  hbase-server: The patch generated 0 new + 582 unchanged - 1 fixed = 582 total (was 583)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 56s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 59s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 26s |  the patch passed  || +1 |  javadoc  |   0m 47s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 54s |  hbase-client in the patch passed.  || -1 |  unit  | 151m 53s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 200m 47s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.coprocessor.TestRegionObserverInterface ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.master.cleaner.TestSnapshotFromMaster ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.TestAcidGuaranteesWithBasicPolicy ||   | hadoop.hbase.security.access.TestAccessController ||   | hadoop.hbase.regionserver.wal.TestSecureAsyncWALReplay ||   | hadoop.hbase.master.TestRollingRestart ||   | hadoop.hbase.tool.TestLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.regionserver.TestSCVFWithMiniCluster ||   | hadoop.hbase.master.TestCatalogJanitorInMemoryStates ||   | hadoop.hbase.tool.TestLoadIncrementalHFiles ||   | hadoop.hbase.client.TestSnapshotMetadata ||   | hadoop.hbase.client.TestAsyncTableAdminApi2 ||   | hadoop.hbase.wal.TestDisabledWAL ||   | hadoop.hbase.quotas.TestSpaceQuotas ||   | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.client.TestEnableTable ||   | hadoop.hbase.regionserver.wal.TestAsyncWALReplayCompressed ||   | hadoop.hbase.client.TestSmallReversedScanner ||   | hadoop.hbase.client.TestAsyncProcedureAdminApi ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.io.encoding.TestChangingEncoding ||   | hadoop.hbase.client.TestSnapshotWithAcl ||   | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.filter.TestFilterWithScanLimits ||   | hadoop.hbase.client.TestAsyncSnapshotAdminApi ||   | hadoop.hbase.client.TestMultiRespectsLimits ||   | hadoop.hbase.master.procedure.TestCloneSnapshotProcedure ||   | hadoop.hbase.regionserver.TestFlushLifeCycleTracker ||   | hadoop.hbase.master.assignment.TestRogueRSAssignment ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.regionserver.TestHRegionOnCluster ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.security.access.TestScanEarlyTermination ||   | hadoop.hbase.master.TestDLSAsyncFSWAL ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.master.TestMaster ||   | hadoop.hbase.mob.compactions.TestMobCompactor ||   | hadoop.hbase.client.TestAsyncMetaRegionLocator ||   | hadoop.hbase.regionserver.wal.TestLogRollPeriod ||   | hadoop.hbase.master.assignment.TestAssignmentManager ||   | hadoop.hbase.client.TestAsyncNonMetaRegionLocator ||   | hadoop.hbase.client.TestTableSnapshotScanner ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction ||   | hadoop.hbase.filter.TestFilterWrapper ||   | hadoop.hbase.regionserver.TestDeleteMobTable ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.master.TestDLSFSHLog ||   | hadoop.hbase.client.TestIllegalTableDescriptor ||   | hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.client.TestSnapshotCloneIndependence ||   | hadoop.hbase.regionserver.wal.TestAsyncWALReplay ||   | hadoop.hbase.client.TestMetaWithReplicas ||   | hadoop.hbase.regionserver.wal.TestAsyncLogRollPeriod ||   | hadoop.hbase.quotas.TestSnapshotQuotaObserverChore ||   | hadoop.hbase.TestNamespace ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.regionserver.TestHRegionFileSystem ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure ||   | hadoop.hbase.regionserver.TestTags ||   | hadoop.hbase.TestRegionMetrics ||   | hadoop.hbase.regionserver.wal.TestWALReplayBoundedLogWriterCreation ||   | hadoop.hbase.filter.TestScanRowPrefix ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.client.TestAsyncDecommissionAdminApi ||   | hadoop.hbase.master.balancer.TestRegionLocationFinder ||   | hadoop.hbase.client.TestFlushFromClient ||   | hadoop.hbase.constraint.TestConstraint ||   | hadoop.hbase.regionserver.TestRegionReplicasAreDistributed ||   | hadoop.hbase.quotas.TestQuotaAdmin ||   | hadoop.hbase.util.TestHBaseFsckMOB ||   | hadoop.hbase.coprocessor.TestCoprocessorMetrics ||   | hadoop.hbase.client.TestSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.client.TestSnapshotFromClient ||   | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.regionserver.wal.TestWALReplayCompressed ||   | hadoop.hbase.client.TestAdmin2 ||   | hadoop.hbase.TestPartialResultsFromClientSide ||   | hadoop.hbase.snapshot.TestFlushSnapshotFromClient ||   | hadoop.hbase.master.TestWarmupRegion ||   | hadoop.hbase.regionserver.TestCompactSplitThread ||   | hadoop.hbase.master.procedure.TestDeleteTableProcedure ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.TestAcidGuaranteesWithEagerPolicy ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.client.TestMvccConsistentScanner ||   | hadoop.hbase.TestAcidGuaranteesWithNoInMemCompaction ||   | hadoop.hbase.regionserver.wal.TestSecureWALReplay ||   | hadoop.hbase.TestRegionRebalancing ||   | hadoop.hbase.security.access.TestCoprocessorWhitelistMasterObserver ||   | hadoop.hbase.regionserver.TestCompactionState ||   | hadoop.hbase.client.TestMalformedCellFromClient ||   | hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure ||   | hadoop.hbase.master.procedure.TestDisableTableProcedure ||   | hadoop.hbase.master.procedure.TestMasterObserverPostCalls ||   | hadoop.hbase.client.TestMobSnapshotFromClient ||   | hadoop.hbase.master.procedure.TestModifyTableProcedure ||   | hadoop.hbase.client.TestAsyncSingleRequestRpcRetryingCaller ||   | hadoop.hbase.regionserver.TestRegionReplicasWithModifyTable ||   | hadoop.hbase.replication.TestNamespaceReplication ||   | hadoop.hbase.TestMetaTableAccessor ||   | hadoop.hbase.security.access.TestAccessController2 ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.master.procedure.TestDeleteColumnFamilyProcedureFromClient ||   | hadoop.hbase.TestHColumnDescriptorDefaultVersions ||   | hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.regionserver.TestCompactionFileNotFound ||   | hadoop.hbase.util.TestRegionMover ||   | hadoop.hbase.quotas.TestMasterSpaceQuotaObserver ||   | hadoop.hbase.regionserver.wal.TestWALReplay ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.coprocessor.TestOpenTableInCoprocessor ||   | hadoop.hbase.security.access.TestWithDisabledAuthorization ||   | hadoop.hbase.master.procedure.TestProcedurePriority ||   | hadoop.hbase.coprocessor.TestMasterObserver ||   | hadoop.hbase.security.access.TestCellACLWithMultipleVersions ||   | hadoop.hbase.client.TestAsyncTableAdminApi3 ||   | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController ||   | hadoop.hbase.regionserver.TestRegionServerMetrics ||   | hadoop.hbase.client.TestSplitOrMergeStatus ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.client.TestAsyncClusterAdminApi ||   | hadoop.hbase.client.TestMobCloneSnapshotFromClient ||   | hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk ||   | hadoop.hbase.master.procedure.TestCreateTableProcedure ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.coprocessor.TestIncrementTimeRange ||   | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.regionserver.TestRegionMove ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.master.TestMasterRestartAfterDisablingTable ||   | hadoop.hbase.client.TestLeaseRenewal ||   | hadoop.hbase.backup.TestHFileArchiving ||   | hadoop.hbase.regionserver.TestCompactionLifeCycleTracker ||   | hadoop.hbase.mob.TestExpiredMobFileCleaner ||   | hadoop.hbase.coprocessor.TestAppendTimeRange ||   | hadoop.hbase.replication.regionserver.TestReplicationSink ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.master.procedure.TestTableDescriptorModificationFromClient ||   | hadoop.hbase.client.TestScannersFromClientSide ||   | hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence ||   | hadoop.hbase.client.TestCloneSnapshotFromClient ||   | hadoop.hbase.master.TestMirroringTableStateManager ||   | hadoop.hbase.master.procedure.TestMasterProcedureEvents ||   | hadoop.hbase.TestAcidGuaranteesWithAdaptivePolicy ||   | hadoop.hbase.security.access.TestAccessController3 ||   | hadoop.hbase.client.TestAsyncTableAdminApi ||   | hadoop.hbase.security.access.TestCellACLs ||   | hadoop.hbase.master.TestTableStateManager ||   | hadoop.hbase.regionserver.TestRemoveRegionMetrics ||   | hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure ||   | hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f9f6babc1608 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 260ee0da60 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5449 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m  1s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  2s |  branch-2 passed  || +1 |  compile  |   2m  8s |  branch-2 passed  || +1 |  checkstyle  |   1m 28s |  branch-2 passed  || +1 |  shadedjars  |   4m 54s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 49s |  branch-2 passed  || +1 |  javadoc  |   0m 49s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m  2s |  the patch passed  || +1 |  compile  |   2m  0s |  the patch passed  || -1 |  javac  |   0m 32s |  hbase-client generated 1 new + 103 unchanged - 1 fixed = 104 total (was 104)  || +1 |  checkstyle  |   0m 26s |  hbase-client: The patch generated 0 new + 102 unchanged - 1 fixed = 102 total (was 103)  || +1 |  checkstyle  |   1m  1s |  hbase-server: The patch generated 0 new + 585 unchanged - 1 fixed = 585 total (was 586)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 54s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 13s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 58s |  hbase-client in the patch passed.  || -1 |  unit  | 179m 28s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 37s |  The patch does not generate ASF License warnings.  ||  |   | 224m 14s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.coprocessor.TestIncrementTimeRange ||   | hadoop.hbase.security.access.TestAccessController ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.master.procedure.TestDisableTableProcedure ||   | hadoop.hbase.client.TestAsyncTableAdminApi ||   | hadoop.hbase.master.assignment.TestAssignmentManager ||   | hadoop.hbase.regionserver.TestRegionReplicasWithModifyTable ||   | hadoop.hbase.client.TestAsyncReplicationAdminApiWithClusters ||   | hadoop.hbase.client.TestAsyncSnapshotAdminApi ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.master.procedure.TestTableDescriptorModificationFromClient ||   | hadoop.hbase.client.TestSmallReversedScanner ||   | hadoop.hbase.regionserver.TestSCVFWithMiniCluster ||   | hadoop.hbase.coprocessor.TestMasterObserver ||   | hadoop.hbase.client.TestAsyncTableAdminApi2 ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure ||   | hadoop.hbase.mob.compactions.TestMobCompactor ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence ||   | hadoop.hbase.master.cleaner.TestSnapshotFromMaster ||   | hadoop.hbase.coprocessor.TestAppendTimeRange ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient ||   | hadoop.hbase.quotas.TestSnapshotQuotaObserverChore ||   | hadoop.hbase.client.TestSnapshotMetadata ||   | hadoop.hbase.snapshot.TestFlushSnapshotFromClient ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestSnapshotCloneIndependence ||   | hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient ||   | hadoop.hbase.master.procedure.TestModifyTableProcedure ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.backup.TestHFileArchiving ||   | hadoop.hbase.security.access.TestCoprocessorWhitelistMasterObserver ||   | hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk ||   | hadoop.hbase.master.procedure.TestDeleteColumnFamilyProcedureFromClient ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.io.encoding.TestChangingEncoding ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.client.TestSnapshotWithAcl ||   | hadoop.hbase.quotas.TestQuotaAdmin |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e6c10953a18a 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 260ee0da60 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4510 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 13 **
Failures are good ones. Come mostly of our now failing fast or our making an assert that doesn't hold. .006 does fixes.

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 8 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 28s |  branch-2 passed  || +1 |  compile  |   2m 28s |  branch-2 passed  || +1 |  checkstyle  |   1m 55s |  branch-2 passed  || +1 |  shadedjars  |   6m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  3s |  branch-2 passed  || +1 |  javadoc  |   0m 48s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 27s |  the patch passed  || +1 |  compile  |   2m 24s |  the patch passed  || -1 |  javac  |   0m 41s |  hbase-client generated 1 new + 103 unchanged - 1 fixed = 104 total (was 104)  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 102 unchanged - 1 fixed = 102 total (was 103)  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 1 new + 587 unchanged - 1 fixed = 588 total (was 588)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m  8s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 24s |  the patch passed  || +1 |  javadoc  |   0m 49s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 56s |  hbase-client in the patch passed.  || -1 |  unit  | 146m 31s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 36s |  The patch does not generate ASF License warnings.  ||  |   | 194m 31s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.locking.TestLockManager ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.master.procedure.TestRestoreSnapshotProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0d8ad86946f5 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / b06aec4450 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4517 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 44s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 9 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   7m 56s |  branch-2 passed  || +1 |  compile  |   3m 42s |  branch-2 passed  || +1 |  checkstyle  |   3m 47s |  branch-2 passed  || +1 |  shadedjars  |  10m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 47s |  branch-2 passed  || +1 |  javadoc  |   2m 21s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 37s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   6m  8s |  the patch passed  || +1 |  compile  |   4m 30s |  the patch passed  || -1 |  javac  |   1m 27s |  hbase-client generated 1 new + 103 unchanged - 1 fixed = 104 total (was 104)  || +1 |  checkstyle  |   1m 12s |  hbase-client: The patch generated 0 new + 102 unchanged - 1 fixed = 102 total (was 103)  || -1 |  checkstyle  |   2m 15s |  hbase-server: The patch generated 1 new + 587 unchanged - 1 fixed = 588 total (was 588)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  21m  2s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 15s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 11s |  hbase-client in the patch passed.  || +1 |  unit  | 149m 59s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 229m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20178 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e91a67c2c0ef 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / ad425e8603 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4168 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 18 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 19 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 20 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-13300,https://issues.apache.org/jira/browse/HBASE-13300,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java,Fix casing in getTimeStamp() and setTimestamp() for Mutations,NO,For some reason we have two ways of writing this method. It should be consistent.,"** Comment 1 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 16s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 2 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  2m 48s  |  master passed  |
| +1 |  compile  |  1m 23s  |  master passed  |
| +1 |  checkstyle  |  1m 24s  |  master passed  |
| +1 |  mvneclipse  |  0m 48s  |  master passed  |
| +1 |  findbugs  |  3m 53s  |  master passed  |
| +1 |  javadoc  |  1m 14s  |  master passed  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 33s  |  the patch passed  |
| +1 |  compile  |  1m 24s  |  the patch passed  |
| +1 |  javac  |  1m 24s  |  the patch passed  |
| +1 |  checkstyle  |  1m 24s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 48s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  25m 42s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  4m 42s  |  the patch passed  |
| +1 |  javadoc  |  1m 21s  |  the patch passed  |
| +1 |  unit  |  0m 58s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  93m 7s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 37s  |  hbase-thrift in the patch passed.  |
| +1 |  unit  |  2m 46s  |  hbase-rest in the patch passed.  |
| +1 |  asflicense  |  0m 43s  |  The patch does not generate ASF License warnings.  |
|  |   |  148m 8s  |   |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hbase.replication.TestSerialReplication |
| Timed out junit tests | org.apache.hadoop.hbase.master.TestMasterFailover |
|   | org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 |
|   | org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics |
|   | org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer |
|   | org.apache.hadoop.hbase.master.TestDistributedLogSplitting |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-13300 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux 1b6b64e2da5f 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 03423fe |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
| unit test logs |  [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-thrift hbase-rest U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Both ways are fine to me. We can either close this ticket or I can change the patch to deprecate the old method name.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| 0 |  reexec  |  0m 16s  |  Docker mode activated.  |
| +1 |  hbaseanti  |  0m 0s  |  Patch does not have any anti-patterns.  |
| +1 |  @author  |  0m 0s  |  The patch does not contain any @author tags.  |
| +1 |  test4tests  |  0m 0s  |  The patch appears to include 3 new or modified test files.  |
| 0 |  mvndep  |  0m 10s  |  Maven dependency ordering for branch  |
| +1 |  mvninstall  |  3m 2s  |  master passed  |
| +1 |  compile  |  1m 28s  |  master passed  |
| +1 |  checkstyle  |  1m 26s  |  master passed  |
| +1 |  mvneclipse  |  0m 51s  |  master passed  |
| +1 |  findbugs  |  4m 3s  |  master passed  |
| +1 |  javadoc  |  1m 14s  |  master passed  |
| 0 |  mvndep  |  0m 11s  |  Maven dependency ordering for patch  |
| +1 |  mvninstall  |  1m 34s  |  the patch passed  |
| +1 |  compile  |  1m 30s  |  the patch passed  |
| +1 |  javac  |  1m 30s  |  the patch passed  |
| +1 |  checkstyle  |  1m 30s  |  the patch passed  |
| +1 |  mvneclipse  |  0m 49s  |  the patch passed  |
| +1 |  whitespace  |  0m 0s  |  The patch has no whitespace issues.  |
| +1 |  hadoopcheck  |  26m 39s  |  Patch does not cause any errors with Hadoop 2.6.1 2.6.2 2.6.3 2.6.4 2.6.5 2.7.1 2.7.2 2.7.3 or 3.0.0-alpha1.  |
| +1 |  findbugs  |  4m 35s  |  the patch passed  |
| +1 |  javadoc  |  1m 15s  |  the patch passed  |
| +1 |  unit  |  0m 55s  |  hbase-client in the patch passed.  |
| -1 |  unit  |  91m 38s  |  hbase-server in the patch failed.  |
| +1 |  unit  |  0m 29s  |  hbase-thrift in the patch passed.  |
| +1 |  unit  |  2m 48s  |  hbase-rest in the patch passed.  |
| +1 |  asflicense  |  0m 49s  |  The patch does not generate ASF License warnings.  |
|  |   |  148m 7s  |   |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.12.3 Server=1.12.3 Image:yetus/hbase:8d52d23 |
| JIRA Patch URL | [link] |
| JIRA Issue | HBASE-13300 |
| Optional Tests |  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  |
| uname | Linux d58d6351b0fb 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh |
| git revision | master / 61220e4 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | [link] |
|  Test Results | [link] |
| modules | C: hbase-client hbase-server hbase-thrift hbase-rest U: . |
| Console output | [link] |
| Powered by | Apache Yetus 0.3.0   [link] |
This message was automatically generated.


** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
 I've gone through the code base before making the patch. It seems that both variations are used a lot. Within the *Mutations* classes the *Delete* class uses the lowercase version.
Delete : public Delete setTimestamp(long timestamp)
{code}
But I'm fine to change it to the uppercase version in the *Mutations* classes if this should be the version for consistency.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 10 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 35s |  master passed  || +1 |  compile  |   3m 22s |  master passed  || +1 |  checkstyle  |   3m 12s |  master passed  || +1 |  shadedjars  |   7m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   2m  7s |  master passed  || +1 |  scaladoc  |   1m 53s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 31s |  the patch passed  || +1 |  compile  |   3m 24s |  the patch passed  || +1 |  javac  |   3m 24s |  the patch passed  || +1 |  scalac  |   3m 24s |  the patch passed  || -1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 1 new + 476 unchanged - 1 fixed = 477 total (was 477)  || -1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 1 new + 490 unchanged - 1 fixed = 491 total (was 491)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 41s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 11s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   2m  7s |  the patch passed  || +1 |  scaladoc  |   1m 52s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 35s |  hbase-client in the patch passed.  || +1 |  unit  | 103m  1s |  hbase-server in the patch passed.  || +1 |  unit  |  13m 55s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m 12s |  hbase-thrift in the patch passed.  || +1 |  unit  |   1m 55s |  hbase-examples in the patch passed.  || +1 |  unit  |   3m 56s |  hbase-rest in the patch passed.  || +1 |  unit  |   4m 49s |  hbase-spark in the patch passed.  || +1 |  asflicense  |   2m 33s |  The patch does not generate ASF License warnings.  ||  |   | 190m 28s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  scalac  scaladoc  || uname | Linux 3b0ce02d4eb1 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8580ba7b6f || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest hbase-spark U: . || Console output | [link] || Powered by | Apache Yetus 0.6.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 34s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 11 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  2s |  branch-2 passed  || +1 |  compile  |   4m 16s |  branch-2 passed  || +1 |  checkstyle  |   3m 24s |  branch-2 passed  || +1 |  shadedjars  |   7m 50s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 47s |  branch-2 passed  || +1 |  javadoc  |   1m 59s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 31s |  the patch passed  || +1 |  compile  |   4m 29s |  the patch passed  || +1 |  javac  |   4m 29s |  the patch passed  || -1 |  checkstyle  |   0m 40s |  hbase-client: The patch generated 2 new + 429 unchanged - 1 fixed = 431 total (was 430)  || -1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 1 new + 443 unchanged - 2 fixed = 444 total (was 445)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m  0s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   6m 35s |  the patch passed  || +1 |  javadoc  |   2m  0s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 57s |  hbase-client in the patch passed.  || -1 |  unit  |  19m 43s |  hbase-server in the patch failed.  || +1 |  unit  |  13m 56s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m  7s |  hbase-thrift in the patch passed.  || +1 |  unit  |   1m 33s |  hbase-examples in the patch passed.  || +1 |  unit  |   3m  8s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   1m 22s |  The patch does not generate ASF License warnings.  ||  |   | 106m 19s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestDateTieredCompactionPolicy |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 37a8a1b683a3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 0a94c9c250 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4042 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   3m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 12 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 27s |  branch-2 passed  || +1 |  compile  |   5m 31s |  branch-2 passed  || +1 |  checkstyle  |   3m 28s |  branch-2 passed  || +1 |  shadedjars  |   8m 10s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 48s |  branch-2 passed  || +1 |  javadoc  |   2m 16s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  0s |  the patch passed  || +1 |  compile  |   5m 15s |  the patch passed  || +1 |  javac  |   5m 15s |  the patch passed  || +1 |  checkstyle  |   0m 44s |  hbase-client: The patch generated 0 new + 429 unchanged - 1 fixed = 429 total (was 430)  || +1 |  checkstyle  |   1m 30s |  hbase-server: The patch generated 0 new + 428 unchanged - 17 fixed = 428 total (was 445)  || +1 |  checkstyle  |   0m 24s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 36s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 17s |  The patch hbase-examples passed checkstyle  || +1 |  checkstyle  |   0m 19s |  The patch hbase-rest passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 44s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 50s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   8m 25s |  the patch passed  || +1 |  javadoc  |   2m 32s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 16s |  hbase-client in the patch passed.  || +1 |  unit  | 110m 28s |  hbase-server in the patch passed.  || +1 |  unit  |  13m 27s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m  8s |  hbase-thrift in the patch passed.  || -1 |  unit  |   1m  8s |  hbase-examples in the patch failed.  || +1 |  unit  |   3m  5s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   2m 10s |  The patch does not generate ASF License warnings.  ||  |   | 210m 30s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.example.TestHttpProxyExample ||   | hadoop.hbase.coprocessor.example.TestValueReplacingCompaction ||   | hadoop.hbase.client.example.TestAsyncClientExample ||   | hadoop.hbase.coprocessor.example.TestWriteHeavyIncrementObserver ||   | hadoop.hbase.coprocessor.example.TestZooKeeperScanPolicyObserver ||   | hadoop.hbase.coprocessor.example.TestWriteHeavyIncrementObserverWithMemStoreCompaction ||   | hadoop.hbase.coprocessor.example.TestScanModifyingObserver ||   | hadoop.hbase.coprocessor.example.TestRefreshHFilesEndpoint |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b8f13f00a1d3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / dd9fe813ec || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4896 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 29 **
Retry. The test failures HBASE-20224 which has since been fixed.

** Comment 30 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 41s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 12 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 39s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  3s |  branch-2 passed  || +1 |  compile  |   4m  1s |  branch-2 passed  || +1 |  checkstyle  |   2m 35s |  branch-2 passed  || +1 |  shadedjars  |   6m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 18s |  branch-2 passed  || +1 |  javadoc  |   1m 41s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 26s |  the patch passed  || +1 |  compile  |   4m  6s |  the patch passed  || +1 |  javac  |   4m  6s |  the patch passed  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 429 unchanged - 1 fixed = 429 total (was 430)  || +1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 0 new + 428 unchanged - 17 fixed = 428 total (was 445)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 25s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-examples passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-rest passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 57s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   6m  4s |  the patch passed  || +1 |  javadoc  |   1m 36s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  4s |  hbase-client in the patch passed.  || -1 |  unit  | 161m 51s |  hbase-server in the patch failed.  || +1 |  unit  |  15m 46s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m 52s |  hbase-thrift in the patch passed.  || +1 |  unit  |   1m 40s |  hbase-examples in the patch passed.  || +1 |  unit  |   7m 31s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   1m 50s |  The patch does not generate ASF License warnings.  ||  |   | 251m 47s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2f36a27b3a8d 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 705d150386 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4774 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 31 **
I ran the failing TestReplicationKillMasterRSCompressedWithMultipleWAL a few times and passed locally. 

** Comment 32 **
[Comment excluded]

** Comment 33 **
Let me rerun  I'm not in a hurry to commit and the last test run failed late in the run in hbase-examples. Let me see if an issue beyond hbase-examples....

** Comment 34 **
[Comment excluded]

** Comment 35 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 12 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 19s |  master passed  || +1 |  compile  |   5m  2s |  master passed  || +1 |  checkstyle  |   3m 12s |  master passed  || +1 |  shadedjars  |   8m 13s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 47s |  master passed  || +1 |  javadoc  |   1m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   1m 21s |  root in the patch failed.  || -1 |  compile  |   0m 34s |  hbase-client in the patch failed.  || -1 |  compile  |   0m 29s |  hbase-server in the patch failed.  || -1 |  compile  |   0m 23s |  hbase-mapreduce in the patch failed.  || -1 |  compile  |   0m 24s |  hbase-thrift in the patch failed.  || -1 |  compile  |   0m 21s |  hbase-examples in the patch failed.  || -1 |  compile  |   0m 24s |  hbase-rest in the patch failed.  || -1 |  javac  |   0m 34s |  hbase-client in the patch failed.  || -1 |  javac  |   0m 29s |  hbase-server in the patch failed.  || -1 |  javac  |   0m 23s |  hbase-mapreduce in the patch failed.  || -1 |  javac  |   0m 24s |  hbase-thrift in the patch failed.  || -1 |  javac  |   0m 21s |  hbase-examples in the patch failed.  || -1 |  javac  |   0m 24s |  hbase-rest in the patch failed.  || -1 |  checkstyle  |   0m 29s |  hbase-client: The patch generated 1 new + 0 unchanged - 419 fixed = 1 total (was 419)  || -1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 1 new + 0 unchanged - 443 fixed = 1 total (was 443)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   2m 17s |  patch has 52 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   3m 33s |  The patch causes 52 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   4m 47s |  The patch causes 52 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   6m  4s |  The patch causes 52 errors with Hadoop v3.0.0.  || -1 |  findbugs  |   0m 12s |  hbase-client in the patch failed.  || -1 |  findbugs  |   0m 29s |  hbase-server in the patch failed.  || -1 |  findbugs  |   0m 18s |  hbase-mapreduce in the patch failed.  || -1 |  findbugs  |   0m 25s |  hbase-thrift in the patch failed.  || -1 |  findbugs  |   0m 18s |  hbase-examples in the patch failed.  || -1 |  findbugs  |   0m 20s |  hbase-rest in the patch failed.  || +1 |  javadoc  |   2m  5s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m 24s |  hbase-client in the patch failed.  || -1 |  unit  |   0m 33s |  hbase-server in the patch failed.  || -1 |  unit  |   0m 21s |  hbase-mapreduce in the patch failed.  || -1 |  unit  |   0m 25s |  hbase-thrift in the patch failed.  || -1 |  unit  |   0m 22s |  hbase-examples in the patch failed.  || -1 |  unit  |   0m 24s |  hbase-rest in the patch failed.  || +1 |  asflicense  |   0m 49s |  The patch does not generate ASF License warnings.  ||  |   |  49m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7b6f88863107 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ad47c2daf4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || javac | [link] || javac | [link] || javac | [link] || javac | [link] || javac | [link] || javac | [link] || checkstyle | [link] || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || unit | [link] || unit | [link] || unit | [link] || unit | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 87 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 36 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 12 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   3m 46s |  master passed  || +1 |  checkstyle  |   2m 58s |  master passed  || +1 |  shadedjars  |   7m 28s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 44s |  master passed  || +1 |  javadoc  |   2m  5s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 57s |  the patch passed  || +1 |  compile  |   4m 27s |  the patch passed  || +1 |  javac  |   4m 27s |  the patch passed  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 418 unchanged - 1 fixed = 418 total (was 419)  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 426 unchanged - 17 fixed = 426 total (was 443)  || +1 |  checkstyle  |   0m 16s |  The patch hbase-mapreduce passed checkstyle  || +1 |  checkstyle  |   0m 27s |  The patch hbase-thrift passed checkstyle  || +1 |  checkstyle  |   0m 12s |  The patch hbase-examples passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-rest passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 42s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 30s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   6m 55s |  the patch passed  || +1 |  javadoc  |   2m  1s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  unit  | 109m 25s |  hbase-server in the patch passed.  || +1 |  unit  |  11m 32s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m  5s |  hbase-thrift in the patch passed.  || +1 |  unit  |   1m 36s |  hbase-examples in the patch passed.  || +1 |  unit  |   3m  9s |  hbase-rest in the patch passed.  || +1 |  asflicense  |   2m  9s |  The patch does not generate ASF License warnings.  ||  |   | 199m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-13300 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6f9fc316c7f0 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 88eac3ca18 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4286 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-mapreduce hbase-thrift hbase-examples hbase-rest U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 37 **
[Comment excluded]

** Comment 38 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 39 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 40 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 41 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20298,https://issues.apache.org/jira/browse/HBASE-20298,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Doc change in read/write/total accounting metrics,NO,"Doc the change wrought by the parent issue. Get it up into the refguide as part of the difference between old hbases and hbase2.

The change confused me and took me a while to untangle.

The read count is for reads that return a non-empty result now. In old hbase1, we'd increment the read-count even if an empty result. This makes reads look bad in YCSB runs when compared to hbase1 (see how totalRequestCount in hbase2 can be way above the sum of reads+writes; it is because it increments even if the row is not found).

Let me get this into refguide otherwise poor old operators will be baffled. The release note on the parent is great; it just needs to be in our guide.","** Comment 1 **
.001 Updates metric descriptions, adds doc to upgrade section on metrics changes, fix a javadoc warning and remove unused mbean reference found while messing in here trying to figure metrics.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   7m  7s |  master passed  || +1 |  checkstyle  |   3m 51s |  master passed  || +1 |  shadedjars  |   8m 52s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 24s |  master passed  || +1 |  javadoc  |   3m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  2s |  the patch passed  || +1 |  compile  |   7m 28s |  the patch passed  || +1 |  javac  |   7m 28s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 2 new + 87 unchanged - 1 fixed = 89 total (was 88)  || -1 |  checkstyle  |   2m 29s |  root: The patch generated 2 new + 87 unchanged - 1 fixed = 89 total (was 88)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  20m 26s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 33s |  the patch passed  || +1 |  javadoc  |   3m 26s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 173m 13s |  root in the patch failed.  || +1 |  asflicense  |   1m  3s |  The patch does not generate ASF License warnings.  ||  |   | 245m 30s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.TestClientOperationTimeout |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20298 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 50a2a1ed3e3c 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 19d7bdcb4a || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4777 (vs. ulimit of 10000) || modules | C: hbase-hadoop-compat hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   6m 18s |  master passed  || +1 |  checkstyle  |   3m 17s |  master passed  || +1 |  shadedjars  |   7m 35s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m  1s |  master passed  || +1 |  javadoc  |   3m  4s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 13s |  the patch passed  || +1 |  compile  |   6m 24s |  the patch passed  || +1 |  javac  |   6m 24s |  the patch passed  || -1 |  checkstyle  |   1m  1s |  hbase-server: The patch generated 2 new + 87 unchanged - 1 fixed = 89 total (was 88)  || -1 |  checkstyle  |   2m  4s |  root: The patch generated 2 new + 87 unchanged - 1 fixed = 89 total (was 88)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 18s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 12s |  the patch passed  || +1 |  javadoc  |   3m  5s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 237m 27s |  root in the patch failed.  || +1 |  asflicense  |   1m 12s |  The patch does not generate ASF License warnings.  ||  |   | 299m 45s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.thrift.TestThriftHttpServer |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20298 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 248b8fbe659c 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c88ca54c16 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4690 (vs. ulimit of 10000) || modules | C: hbase-hadoop-compat hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 33s |  master passed  || +1 |  compile  |   7m  2s |  master passed  || +1 |  checkstyle  |   3m 51s |  master passed  || +1 |  shadedjars  |   8m 49s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 15s |  master passed  || +1 |  javadoc  |   3m 16s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 47s |  the patch passed  || +1 |  compile  |   7m 11s |  the patch passed  || +1 |  javac  |   7m 11s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-hadoop-compat passed checkstyle  || +1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 0 new + 87 unchanged - 1 fixed = 87 total (was 88)  || +1 |  checkstyle  |   2m 28s |  root: The patch generated 0 new + 87 unchanged - 1 fixed = 87 total (was 88)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 57s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 46s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 22s |  the patch passed  || +1 |  javadoc  |   3m 15s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 175m 40s |  root in the patch passed.  || +1 |  asflicense  |   1m 14s |  The patch does not generate ASF License warnings.  ||  |   | 245m 17s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20298 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2bcb40abd856 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bf29a1fee9 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4267 (vs. ulimit of 10000) || modules | C: hbase-hadoop-compat hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 10 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20259,https://issues.apache.org/jira/browse/HBASE-20259,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java,Doc configs for in-memory-compaction and add detail to in-memory-compaction logging,YES,"I set {{hbase.systemtables.compacting.memstore.type}} to NONE but it seems like in-memory is still on. My table looks like this:
{code}
Table ycsb is ENABLED
ycsb
COLUMN FAMILIES DESCRIPTION
{NAME => 'family', VERSIONS => '1', EVICT_BLOCKS_ON_CLOSE => 'false', NEW_VERSION_BEHAVIOR => 'false', KEEP_DELETED_CELLS => 'FALSE', CACHE_DATA_ON_WRITE => 'false', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', MIN_VERSIONS => '0', REPLICATION_SCOPE => '0', BLOOMFILTER =
> 'ROW', CACHE_INDEX_ON_WRITE => 'false', IN_MEMORY => 'false', CACHE_BLOOMS_ON_WRITE => 'false', PREFETCH_BLOCKS_ON_OPEN => 'false', COMPRESSION => 'NONE', BLOCKCACHE => 'true', BLOCKSIZE => '65536'}
{code}
Looks like table doesn't have it on either (IN_MEMORY_COMPACTION doesn't show in the above).","** Comment 1 **
Also, logging needs to be clearer about what is on or off.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
 Review please.{code}    Changes default for in-memory compaction from BASIC to NONE.    Adds logging of CompactingMemStore configuration on construction.    Add logging of detail about Store on creation including memstore type.    Add chapter to refguide on new in-memory compaction feature.{code}

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 50s |  master passed  || +1 |  compile  |   7m 15s |  master passed  || +1 |  checkstyle  |   4m 10s |  master passed  || +1 |  shadedjars  |   9m  0s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   3m  5s |  master passed  || +1 |  javadoc  |   3m 41s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 49s |  the patch passed  || +1 |  compile  |   7m 20s |  the patch passed  || +1 |  javac  |   7m 20s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 2 new + 52 unchanged - 0 fixed = 54 total (was 52)  || -1 |  checkstyle  |   2m 32s |  root: The patch generated 2 new + 84 unchanged - 0 fixed = 86 total (was 84)  || -1 |  whitespace  |   0m  0s |  The patch has 2 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || +1 |  shadedjars  |   4m 51s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  21m  8s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || -1 |  findbugs  |   2m 16s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   4m 16s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 135m 15s |  root in the patch failed.  || +1 |  asflicense  |   0m 59s |  The patch does not generate ASF License warnings.  ||  |   | 210m 39s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Dead store to className in org.apache.hadoop.hbase.regionserver.HStore.getMemstore()  At [file java]:org.apache.hadoop.hbase.regionserver.HStore.getMemstore()  At [file java]: || Failed junit tests | hadoop.hbase.regionserver.TestPerColumnFamilyFlush ||   | hadoop.hbase.regionserver.TestHStore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20259 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8e0ad073dc77 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / d57001ee2d || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4628 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 35s |  master passed  || +1 |  compile  |   6m 59s |  master passed  || +1 |  checkstyle  |   4m 14s |  master passed  || +1 |  shadedjars  |   8m 57s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 48s |  master passed  || +1 |  javadoc  |   3m 20s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 10s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   7m  0s |  the patch passed  || +1 |  javac  |   7m  0s |  the patch passed  || +1 |  checkstyle  |   4m  7s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 13s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 57s |  the patch passed  || +1 |  javadoc  |   3m 23s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 190m 55s |  root in the patch passed.  || +1 |  asflicense  |   1m 26s |  The patch does not generate ASF License warnings.  ||  |   | 261m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20259 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 471b357292e7 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c8dff328cb || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4541 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
.003 doc and logging changes only to provide more detail on in-memory-configuration deploy

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   1m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 21s |  master passed  || +1 |  compile  |   6m 21s |  master passed  || +1 |  checkstyle  |   3m 32s |  master passed  || +1 |  shadedjars  |   7m 49s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 33s |  master passed  || +1 |  javadoc  |   3m 14s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   6m 10s |  the patch passed  || +1 |  javac  |   6m 10s |  the patch passed  || +1 |  checkstyle  |   3m 32s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m  2s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 46s |  the patch passed  || +1 |  javadoc  |   3m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 231m 27s |  root in the patch passed.  || +1 |  asflicense  |   1m 11s |  The patch does not generate ASF License warnings.  ||  |   | 298m 10s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20259 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 914716e84320 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 1e56938757 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4633 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 23 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 29 **
[Comment excluded]

** Comment 30 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 31 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 32 **
[Comment excluded]
"
HBASE-20043,https://issues.apache.org/jira/browse/HBASE-20043,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Leases.java,ITBLL fails against hadoop3,YES,"This has been failing for a while, I haven't tried to bisec but it was before my changes for HBASE-19991 at least.

{code}
mvn clean verify -pl hbase-it -Dhadoop.profile=3.0 -Dit.test=IntegrationTestBigLinkedList -Dtest=none -am
{code}

{code}
2018-02-21 16:43:13,265 ERROR [RpcServer.default.FPBQ.Fifo.handler=3,queue=0,port=60450] ipc.RpcServer(464): Unexpected throwable object 
java.lang.AssertionError: hri=IntegrationTestBigLinkedList,\x8E8\xE3\x8E8\xE3\x8E5,1519252895022.236bbedde32e4549691c108a1a7005a8., source=, destination=mdrob-mbp.hsd1.tx.comcast.net,60456,1519252856027
	at org.apache.hadoop.hbase.master.HMaster.move(HMaster.java:1691)
	at org.apache.hadoop.hbase.master.MasterRpcServices.moveRegion(MasterRpcServices.java:1348)
	at org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod(MasterProtos.java)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:406)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:324)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:304)
2018-02-21 16:43:13,276 DEBUG [RpcServer.default.FPBQ.Fifo.handler=3,queue=0,port=60450] ipc.CallRunner(141): callId: 49 service: MasterService methodName: MoveRegion size: 106 connection: 192.168.1.134:60743 deadline: 1519253053263
java.io.IOException: hri=IntegrationTestBigLinkedList,\x8E8\xE3\x8E8\xE3\x8E5,1519252895022.236bbedde32e4549691c108a1a7005a8., source=, destination=mdrob-mbp.hsd1.tx.comcast.net,60456,1519252856027
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:465)
	at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:130)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:324)
	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run(RpcExecutor.java:304)
Caused by: java.lang.AssertionError: hri=IntegrationTestBigLinkedList,\x8E8\xE3\x8E8\xE3\x8E5,1519252895022.236bbedde32e4549691c108a1a7005a8., source=, destination=mdrob-mbp.hsd1.tx.comcast.net,60456,1519252856027
	at org.apache.hadoop.hbase.master.HMaster.move(HMaster.java:1691)
	at org.apache.hadoop.hbase.master.MasterRpcServices.moveRegion(MasterRpcServices.java:1348)
	at org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod(MasterProtos.java)
	at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:406)
	... 3 more
{code}

The assertion that it trips is:

{code}
    // Now we can do the move
    RegionPlan rp = new RegionPlan(hri, regionState.getServerName(), dest);
    assert rp.getDestination() != null: rp.toString() + "" "" + dest;
    assert rp.getSource() != null: rp.toString();
{code}","** Comment 1 **
Taking me a while. On h3 we take longer, so long that the Chaos Monkey that does server killing steps in (test is over on hadoop2 before server killing has a chance). There is no restart of killed servers for some reason either so after we get the master -- inevitable -- we are dead in the water until the failsafe 30min timeout cuts in. Still looking...

** Comment 2 **
Do the move region commands fail after we've already killed a server? That seems reasonable?

** Comment 3 **
bq. Do the move region commands fail after we've already killed a server? That seems reasonable?As it happens, this turned out to be something else. This is a nice test. Does random stuff to see what happens. There is a random move region Action that the Chaos Monkey runs as one of its optional operations. This 'Action' was stale, from hbase1 AM days. It was doing an unassign only (in pre-AMv2, if you did unassign, we'd close the region and then open it elsewhere... in hbase2, when you unassign a region.... ahem).  So, an unassign was happening, and then we'd do a move of a random region... but it had been unassigned... 'closed'... It was not deployed anywhere. So the assert was 'right'... We had a region with a null source (I fixed the random move action...).Other interesting stuff in here is we were using a hadoop2 netty but it is changed in hadoop3 which was causing job to fail. Also at one point during this test run we had 1k threads up in the one JVM (we need to pare back how many we spin up by default....  have executors run w/ keepalive and die-off if no work...).On the ""h3 we take longer"", because what happens in a run is random, it seems like high-variance in the run-rate. I've been running hadoop2 and then hadoop3s and they seem in same ballpark.... 5-11 minutes or so.Doing a bit more study before putting up a patch.

** Comment 4 **
bq. This 'Action' was stale, from hbase1 AM daysglad our tests are finding things! even if it's only problems with the tests... do we need a review of the other actions, or we think test framework will shake bad ones loose?bq. Other interesting stuff in here is we were using a hadoop2 netty but it is changed in hadoop3 which was causing job to fail. we need to put the version property in a profile?bq. Also at one point during this test run we had 1k threads up in the one JVM (we need to pare back how many we spin up by default.... have executors run w/ keepalive and die-off if no work...).any idea which ones? follow up jiras?

** Comment 5 **
There's a lot going on in this patch... lots of logging cleanup, lots of updating HRI to RegionInfo, lots of refactoring things into methods... hard to review all at once. Put it on RB?Edit: I see it's already there, nevermind.

** Comment 6 **
 Yeah, sorry. The log for this test is unreadable. While trying to figure it, was doing edits as I went.... Two main things are pom.xml change and the change to random region move Action.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 20s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m  1s |  branch-2 passed  || +1 |  compile  |   2m 57s |  branch-2 passed  || +1 |  checkstyle  |   6m  4s |  branch-2 passed  || +1 |  shadedjars  |  12m  1s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   8m 47s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 34s |  the patch passed  || +1 |  compile  |   3m 58s |  the patch passed  || +1 |  javac  |   3m 58s |  the patch passed  || -1 |  checkstyle  |   0m 59s |  hbase-server: The patch generated 1 new + 596 unchanged - 4 fixed = 597 total (was 600)  || -1 |  checkstyle  |   0m 16s |  hbase-it: The patch generated 1 new + 8 unchanged - 0 fixed = 9 total (was 8)  || -1 |  checkstyle  |   1m 55s |  root: The patch generated 2 new + 610 unchanged - 4 fixed = 612 total (was 614)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  2s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   3m 25s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 56s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   3m 14s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 207m  4s |  root in the patch failed.  || +1 |  asflicense  |   1m 54s |  The patch does not generate ASF License warnings.  ||  |   | 266m 43s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.snapshot.TestMobSecureExportSnapshot ||   | hadoop.hbase.thrift.TestThriftHttpServer |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20043 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 244ec154f678 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 4ddfdaffdc || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5700 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server hbase-it . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 27s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 30s |  branch-2 passed  || +1 |  compile  |   3m 10s |  branch-2 passed  || +1 |  checkstyle  |   4m 25s |  branch-2 passed  || +1 |  shadedjars  |   8m 29s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || -1 |  findbugs  |   0m 39s |  hbase-common in branch-2 has 2 extant Findbugs warnings.  || -1 |  findbugs  |   0m 25s |  hbase-procedure in branch-2 has 2 extant Findbugs warnings.  || -1 |  findbugs  |   2m  7s |  hbase-server in branch-2 has 22 extant Findbugs warnings.  || +1 |  javadoc  |   3m 41s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 25s |  the patch passed  || +1 |  compile  |   3m 12s |  the patch passed  || +1 |  javac  |   3m 12s |  the patch passed  || +1 |  checkstyle  |   0m 23s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 13s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 596 unchanged - 4 fixed = 596 total (was 600)  || +1 |  checkstyle  |   0m 21s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   2m 17s |  root: The patch generated 0 new + 610 unchanged - 4 fixed = 610 total (was 614)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m  0s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   3m 43s |  the patch passed  || +1 |  javadoc  |   3m 29s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 138m 32s |  root in the patch failed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 199m 35s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestBlockEvictionFromClient |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20043 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 1a8626e27b04 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / a66fa85a16 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || findbugs | [link] || findbugs | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4595 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server hbase-it . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
findbugs issues look unrelatedTestBlockEvictionFromClient is not in the flaky list - haven't checked to see if that failure would be related.

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 31s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 39s |  branch-2 passed  || +1 |  compile  |   3m  9s |  branch-2 passed  || +1 |  checkstyle  |   4m 33s |  branch-2 passed  || +1 |  shadedjars  |   8m 34s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || -1 |  findbugs  |   0m 35s |  hbase-common in branch-2 has 2 extant Findbugs warnings.  || -1 |  findbugs  |   0m 25s |  hbase-procedure in branch-2 has 2 extant Findbugs warnings.  || -1 |  findbugs  |   2m  3s |  hbase-server in branch-2 has 22 extant Findbugs warnings.  || +1 |  javadoc  |   3m 27s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m  9s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 21s |  the patch passed  || +1 |  compile  |   3m  9s |  the patch passed  || +1 |  javac  |   3m  9s |  the patch passed  || +1 |  checkstyle  |   0m 23s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 596 unchanged - 4 fixed = 596 total (was 600)  || +1 |  checkstyle  |   0m 20s |  The patch hbase-it passed checkstyle  || +1 |  checkstyle  |   2m 21s |  root: The patch generated 0 new + 610 unchanged - 4 fixed = 610 total (was 614)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  2s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 48s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   3m 17s |  the patch passed  || +1 |  javadoc  |   3m 32s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 162m 46s |  root in the patch passed.  || +1 |  asflicense  |   2m  3s |  The patch does not generate ASF License warnings.  ||  |   | 223m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20043 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux 940d6ad7cdcd 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 62b8da927e || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || findbugs | [link] || findbugs | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 4791 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server hbase-it . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4645 (See )
HBASE-20043 ITBLL fails against hadoop3 (stack: rev 549a6d93d4a0716f2965c6119b6417f4a3634b12)
* (edit) pom.xml

"
HBASE-20111,https://issues.apache.org/jira/browse/HBASE-20111,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java,Able to split region explicitly even on shouldSplit return false from split policy,NO,Currently able to split the region explicitly even when the split policy returns from shouldSplit.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
{code}diff --git [file java] [file java]index 70ddbe5..54fb827 100644--- [file java]+++ [file java]@@ -173,7 +173,7 @@ public class SplitTableRegionProcedure     }     if (!splittable) {-      IOException e = new IOException(regionToSplit.getShortNameToLog() + "" NOT splittable"");+      IOException e = new DoNotRetryIOException(regionToSplit.getShortNameToLog() + "" NOT splittable"");       if (splittableCheckIOE != null) e.initCause(splittableCheckIOE);       throw e;     }diff --git [file java] [file java]index 6dbced2..ba38078 100644--- [file java]+++ [file java]@@ -1732,7 +1732,7 @@ public class RSRpcServices implements HBaseRPCErrorHandler,       if (request.hasCompactionState() && request.getCompactionState()) {         builder.setCompactionState(ProtobufUtil.createCompactionState(region.getCompactionState()));       }-      builder.setSplittable(region.isSplittable());+      builder.setSplittable(region.isSplittable() && region.getSplitPolicy().shouldSplit());       builder.setMergeable(region.isMergeable());       if (request.hasBestSplitRow() && request.getBestSplitRow() && bestSplitRow != null) {         builder.setBestSplitRow(UnsafeByteOperations.unsafeWrap(bestSplitRow));{code}I feel like this might incorrectly change the semantics. A region is normally un-splittable because of something transient: not closing, not closed, has no reference files. The Phoenix case where we are setting a RegionSplitPolicy which always returns {{false}} is an edge case -- HBase normally expects split policies to return varied results over time (e.g. based on size, busy-ness of the region).Was there another reason you switched this form IOE or DNRIOE?

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 45s |  master passed  || +1 |  compile  |   0m 50s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   6m  8s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 10s |  master passed  || +1 |  javadoc  |   0m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 49s |  the patch passed  || +1 |  compile  |   0m 50s |  the patch passed  || +1 |  javac  |   0m 50s |  the patch passed  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 10 new + 174 unchanged - 0 fixed = 184 total (was 174)  || -1 |  whitespace  |   0m  0s |  The patch 8 line(s) with tabs.  || +1 |  shadedjars  |   4m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  19m 34s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 18s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 127m 47s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 172m 40s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestMultiRespectsLimits ||   | hadoop.hbase.master.TestMaster ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction ||   | hadoop.hbase.client.TestTableSnapshotScanner ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.tool.TestLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.master.TestCatalogJanitorInMemoryStates ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.client.TestSplitOrMergeStatus ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.client.TestSnapshotCloneIndependence ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.regionserver.TestCompactionFileNotFound ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20111 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2f7fd31486de 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / b7b8683925 || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4049 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
 Actually the region won't be split when1)  the region is closing/closed 2) when it's already has references.3) If it's meta or namespace table.4) when region split policy say's no.To check these conditions we are having two methods in region.Region#checkSplit()  /**   * Return the splitpoint. null indicates the region isn't splittable   * If the splitpoint isn't explicitly specified, it will go over the stores   * to find the best splitpoint. Currently the criteria of best splitpoint   * is based on the size of the store.   */  public byte checkSplit() {    // Can't split META    if (this.getRegionInfo().isMetaRegion() ||        TableName.NAMESPACE_TABLE_NAME.equals(this.getRegionInfo().getTable())) {      if (shouldForceSplit()) {        LOG.warn(""Cannot split meta region in HBase 0.20 and above"");      }      return null;    }    // Can't split a region that is closing.    if (this.isClosing()) {      return null;    }    if (!splitPolicy.shouldSplit()) {      return null;    }    byte ret = splitPolicy.getSplitPoint();    if (ret != null) {      try {        checkRow(ret, ""calculated split"");      } catch (IOException e) {        LOG.error(""Ignoring invalid split"", e);        return null;      }    }    return ret;  }Region#isSplittable  @Override  public boolean isAvailable() {    return isClosing();  }  @Override  public boolean isSplittable() {    return isAvailable() && !hasReferences();  }But currently the Region#checkSplit is returning null when the region should not split but we are not taking that into consideration when we pass split key explicitly.  Due to this now we are able to split the meta and system tables even it says no to split.bq. Was there another reason you switched this form IOE or DNRIOE?Currently when we are not able split or any failures we are retrying the split so when we can't split the region better not to retry that's why changed to DNRIOE.

** Comment 7 **
{quote}Currently when we are not able split or any failures we are retrying the split so when we can't split the region better not to retry that's why changed to DNRIOE.{quote}Ok, so this is implicitly getting retried client-side when, for Phoenix, we'd just want it to fail-fast, right?I think that this change is at odds with a situation like the following: Balancer moves Region1, user issues a split on a key which falls in the range of Region1, split fails because Region1 is closed (being moved), split is retried and succeeds after that Region1 is re-opened on the new server. With your change, it would require users to re-issue the split since the retry wouldn't happen.I think that would mean that we have to differentiate splitPolicy decisions that we know will never allow splits to happen from our normal {{isSplittable}} checks.

** Comment 8 **
Good discussion here. How about RN'ing the change in behavior, that split may fail if region moved in the midst of a submission, and going ahead w/ the  suggested basic fix? Patch LGTM?

** Comment 9 **
{quote}How about RN'ing the change in behavior, that split may fail if region moved in the midst of a submission, and going ahead w/ the  suggested basic fix{quote}If you are OK with it, I am OK with it :). This is a tricky one.Let me rekick QA as well (old patch) and will commit upon that.

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| +1 |  mvninstall  |   6m 31s |  branch-2.0 passed  || +1 |  compile  |   1m 40s |  branch-2.0 passed  || +1 |  checkstyle  |   1m  7s |  branch-2.0 passed  || +1 |  shadedjars  |   5m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 55s |  branch-2.0 passed  || +1 |  javadoc  |   0m 35s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 12s |  the patch passed  || +1 |  compile  |   1m 35s |  the patch passed  || +1 |  javac  |   1m 35s |  the patch passed  || -1 |  checkstyle  |   1m  3s |  hbase-server: The patch generated 10 new + 174 unchanged - 0 fixed = 184 total (was 174)  || -1 |  whitespace  |   0m  0s |  The patch 8 line(s) with tabs.  || +1 |  shadedjars  |   3m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m  7s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  7s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 185m 38s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 225m  6s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.master.TestMaster ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.regionserver.TestCompactionFileNotFound ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.client.TestSplitOrMergeStatus ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.tool.TestLoadIncrementalHFilesSplitRecovery ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction ||   | hadoop.hbase.master.TestCatalogJanitorInMemoryStates ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.client.TestMultiRespectsLimits ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.client.TestTableSnapshotScanner ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.client.TestSnapshotCloneIndependence |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-20111 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3145ee4b0ba3 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 907ec67757 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_151 || findbugs | v3.1.0-RC3 || checkstyle | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3706 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
 Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 32.159 s <<< FAILURE! - in org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction testFromClientSideWhileSplitting(org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction)  Time elapsed: 2.867 s  <<< FAILURE!java.lang.AssertionError: regionSplitter	at org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction.testFromClientSideWhileSplitting([file java]:125)Caused by: org.apache.hadoop.hbase.DoNotRetryIOException: org.apache.hadoop.hbase.DoNotRetryIOException: 1b1903abee2ceaab63e5fbbee6611aaf NOT splittable	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.checkSplittable([file java]:176)	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.<init>([file java]:108)	at org.apache.hadoop.hbase.master.assignment.AssignmentManager.createSplitProcedure([file java]:767)	at org.apache.hadoop.hbase.master.HMaster$2.run([file java]:1612)	at org.apache.hadoop.hbase.master.procedure.MasterProcedureUtil.submitProcedure([file java]:131)	at org.apache.hadoop.hbase.master.HMaster.splitRegion([file java]:1604)	at org.apache.hadoop.hbase.master.MasterRpcServices.splitRegion([file java]:776)	at org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod([file java])	at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:409)	at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:130)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:324)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:304)Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException: org.apache.hadoop.hbase.DoNotRetryIOException: 1b1903abee2ceaab63e5fbbee6611aaf NOT splittable	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.checkSplittable([file java]:176)	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.<init>([file java]:108)	at org.apache.hadoop.hbase.master.assignment.AssignmentManager.createSplitProcedure([file java]:767)	at org.apache.hadoop.hbase.master.HMaster$2.run([file java]:1612)	at org.apache.hadoop.hbase.master.procedure.MasterProcedureUtil.submitProcedure([file java]:131)	at org.apache.hadoop.hbase.master.HMaster.splitRegion([file java]:1604)	at org.apache.hadoop.hbase.master.MasterRpcServices.splitRegion([file java]:776)	at org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod([file java])	at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:409)	at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:130)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:324)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:304Looks like these test failures are real.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 14s |  master passed  || +1 |  compile  |   1m 32s |  master passed  || +1 |  checkstyle  |   1m  2s |  master passed  || +1 |  shadedjars  |   5m 13s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 42s |  master passed  || +1 |  javadoc  |   0m 23s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 11s |  the patch passed  || +1 |  compile  |   1m 29s |  the patch passed  || +1 |  javac  |   1m 29s |  the patch passed  || -1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 9 new + 174 unchanged - 0 fixed = 183 total (was 174)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 18s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   6m 23s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   8m 26s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  10m 37s |  The patch causes 10 errors with Hadoop v3.0.0.  || +1 |  findbugs  |   1m 50s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 106m 40s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 14s |  The patch does not generate ASF License warnings.  ||  |   | 142m 14s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20111 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 59d72e2d4784 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e2fc21e4a1 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hadoopcheck | [link] ||  Test Results | [link] || Max. process+thread count | 4978 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
{code}+        // Even after setting force split if split policy says no to split then we should not split.+        shouldSplit =+            region.getSplitPolicy().shouldSplit()+                && !(info.isMetaRegion() && TableName.NAMESPACE_TABLE_NAME.equals(info.getTable()));{code}Don't you want this to be: {{!(info.isMetaRegion() || TableName.NAMESPACE_TABLE_NAME.equals(info.getTable()))}}? The part of the conditional will never be true because {{isMetaRegion}} is only true for the {} table.I would have assumed that the hbase:namespace table is splittable too. So, this should be something like...{code}+        // Even after setting force split if split policy says no to split then we should not split.+        shouldSplit =+            region.getSplitPolicy().shouldSplit() && !region.isMetaRegion();{code}Not 100% sure

** Comment 17 **
bq.Don't you want this to be: !(info.isMetaRegion() || TableName.NAMESPACE_TABLE_NAME.equals(info.getTable()))? The part of the conditional will never be true because isMetaRegion is only true for the hbase:meta table.Yes  it's my blunder. Now in the patch just checking for meta only to not split anytime.  can you confirm whether we can allow splitting namespace or not as Josh mentioned in the above comment. If it's ok to split the namespace then I can commit this patch.

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 27s |  master passed  || +1 |  compile  |   1m 32s |  master passed  || +1 |  checkstyle  |   1m  2s |  master passed  || +1 |  shadedjars  |   5m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 43s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 11s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed  || +1 |  javac  |   1m 31s |  the patch passed  || -1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 9 new + 110 unchanged - 0 fixed = 119 total (was 110)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 21s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 18s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 52s |  the patch passed  || +1 |  javadoc  |   0m 26s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 161m 35s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 202m 18s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20111 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 60a830e4f80c 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2a2258656b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4572 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
{code}+        // Even after setting force split if split policy says no to split then we should not split.+        shouldSplit = region.getSplitPolicy().shouldSplit() && !(info.isMetaRegion());         bestSplitRow = r.checkSplit();{code}{{checkSplit}} already has check w.r.t. system tables:{code}    if (this.getRegionInfo().isMetaRegion() ||        TableName.NAMESPACE_TABLE_NAME.equals(this.getRegionInfo().getTable())) {{code}It seems {{shouldSplit}} should take into account the value of {{bestSplitRow}} - if {{bestSplitRow}} is null, {{shouldSplit}} should be false.

** Comment 21 **
{quote}{{checkSplit}} already has check w.r.t. system tables:{quote}I think I'd disagree with you, although I see what lead you to this opinion. I read this code as the intent of {{splittable}} is more about overt details of this region which are not tied to the lifecycle of this region: e.g. split policy, not a 'special' system table. {{checkSplit}} more encapsulates logic about whether we can (right now) split the region.{quote}It seems {{shouldSplit}} should take into account the value of {{bestSplitRow}} - if {{bestSplitRow}} is null, {{shouldSplit}} should be false.{quote}This is handled in the Master which I think is the right place for it to happen. You're right that if this RPC would return that the region is splittable, the user did not provide a row to split upon, and the region could not provide a row to split upon, that should be an assertion failure.    if (node != null) {      try {        if (bestSplitRow == null || bestSplitRow.length == 0) {          LOG.info(""splitKey isn't explicitly specified, "" + "" will try to find a best split key from RS"");        }        // Always set bestSplitRow request as true here,        // need to call Region#checkSplit to check it splittable or not        GetRegionInfoResponse response =            Util.getRegionInfoResponse(env, node.getRegionLocation(), node.getRegionInfo(), true);        if(bestSplitRow == null || bestSplitRow.length == 0) {          bestSplitRow = response.hasBestSplitRow() ? response.getBestSplitRow().toByteArray() : null;        }        splittable = response.hasSplittable() && response.getSplittable();        if (LOG.isDebugEnabled()) {          LOG.debug(""Splittable="" + splittable + "" "" + node.toShortString());        }      } catch (IOException e) {        splittableCheckIOE = e;      }    }    if (!splittable) {      IOException e = new DoNotRetryIOException(regionToSplit.getShortNameToLog() + "" NOT splittable"");      if (splittableCheckIOE != null) e.initCause(splittableCheckIOE);      throw e;    }    if(bestSplitRow == null || bestSplitRow.length == 0) {      throw new DoNotRetryIOException(""Region not splittable because bestSplitPoint = null, ""          + ""maybe table is too small for auto split. For force split, try specifying split row"");    }{code}IMO, what we have already covers this pretty well since the SplitTableProcedure could still proceed with a user-provided split key if the Region could not compute one for some reason.That said, the {{isClosing()}} check done in {{HRegion.checkSplit()}} does sound like it should be lifted out of this method and set explicitly on {{isSplittable}}..

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 28 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 29 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 30 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20232,https://issues.apache.org/jira/browse/HBASE-20232,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java,[LOGGING] Formatting around close and flush,YES,More log formatting. Fix issue where we had a param too many identified in parent issue. Remove some redundancy logging around flush and close. Use encoded regionname instead of full beast. Use SLF4J params. Remove some if debug tests.  Use same formatter everywhere in flush when printing out data sizes (we had two types). A miscellany.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 3 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 5 **
Results for branch HBASE-19064
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19970,https://issues.apache.org/jira/browse/HBASE-19970,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java,Remove unused functions from TableAuthManager,NO,"Functions deleted in TableAuthManager:
- setTableUserPermissions
- setTableGroupPermissions
- setNamespaceUserPermissions
- setNamespaceGroupPermissions
- writeTableToZooKeeper
- writeNamespaceToZooKeeper

To make sure it was not a bug, and that relevant functionality moved to some alternate code path, tried to find out why and when these functions went out of use. But just couldn't figure out...until i reached the patch which added them. Looks like they were dead functions to start with :)
Jira which added them: HBASE-8409. Commit id: ac10b3c13d6b66e12d0c9601204b01dfa525ed19","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m  2s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   0m 42s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   5m 56s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 57s |  the patch passed  || +1 |  compile  |   1m  1s |  the patch passed  || +1 |  javac  |   1m  1s |  the patch passed  || -1 |  checkstyle  |   1m 31s |  hbase-server: The patch generated 3 new + 89 unchanged - 12 fixed = 92 total (was 101)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  23m 59s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 104m 12s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 31s |  The patch does not generate ASF License warnings.  ||  |   | 151m  5s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestHRegionWithInMemoryFlush |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19970 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 23045f8699f1 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2b63af376e || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4831 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
+1 Failure related?

** Comment 5 **
No, the failure doesn't seem related. Ran it locally too, passed.However, it was interesting to see 4.2 GB log from single test. It's something around batchMutate and getRowLockInternal. Mind taking a look sir since you were around these parts recently (in separate jira). At the very least, we should nerf the logging...4.2 gb logs is crazy!  :)Pushing to master and backporting --all the way back.-- stopped at branch-1. Didn't backport to maintenance release since it's not a bug.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
 It looks like this is failing since this went in....java.lang.AssertionError	at org.apache.hadoop.hbase.security.access.TestZKPermissionWatcher.testPermissionsWatcher([file java]:168)It is plain to see here: [link]

** Comment 10 **
Reopening to address the failing test.

** Comment 11 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4575 (See )
HBASE-19970 Remove unused functions from TableAuthManager. (appy: rev 7cc239fb5ac0ce3f22d93d1dbf7e80609427710a)


** Comment 12 **
This jira seems to have introduced a find bug warning..Bug type DLS_DEAD_LOCAL_STORE (click for details) In class org.apache.hadoop.hbase.security.access.AccessControllerIn method org.apache.hadoop.hbase.security.access.AccessController.initialize(RegionCoprocessorEnvironment)Local variable named confAt [file java]:

** Comment 13 **
[Comment excluded]

** Comment 14 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4579 (See )
Revert ""HBASE-19970 Remove unused functions from TableAuthManager."" (stack: rev ba402b1e7b446144d4d20f90cb71e6aa19ecce3c)


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]
"
HBASE-20048,https://issues.apache.org/jira/browse/HBASE-20048,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java,Revert serial replication feature,NO,,"** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  8s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 25s |  master passed  || +1 |  compile  |   4m 10s |  master passed  || +1 |  checkstyle  |   4m 37s |  master passed  || +1 |  shadedjars  |   9m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   3m 47s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 21s |  the patch passed  || +1 |  compile  |   4m  6s |  the patch passed  || +1 |  cc  |   4m  6s |  the patch passed  || +1 |  javac  |   4m  6s |  the patch passed  || -1 |  checkstyle  |   0m 30s |  hbase-client: The patch generated 2 new + 234 unchanged - 7 fixed = 236 total (was 241)  || -1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 5 new + 315 unchanged - 51 fixed = 320 total (was 366)  || -1 |  checkstyle  |   2m 20s |  root: The patch generated 7 new + 549 unchanged - 58 fixed = 556 total (was 607)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  18m 45s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   4m 21s |  the patch passed  || -1 |  javadoc  |   0m 20s |  hbase-client generated 3 new + 2 unchanged - 0 fixed = 5 total (was 2)  || -1 |  javadoc  |   2m 46s |  root generated 3 new + 29 unchanged - 0 fixed = 32 total (was 29)  ||| || || ||  Other Tests  ||| -1 |  unit  | 150m 28s |  root in the patch failed.  || +1 |  asflicense  |   1m 26s |  The patch does not generate ASF License warnings.  ||  |   | 214m 51s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.master.TestAssignmentListener ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.client.TestTableSnapshotScanner ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.regionserver.TestRegionServerMetrics ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.ipc.TestRpcServerSlowConnectionSetup ||   | hadoop.hbase.master.TestCatalogJanitorInMemoryStates ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20048 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  cc  hbaseprotoc  || uname | Linux 30e9599da980 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2440f807bf || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || javadoc | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4482 (vs. ulimit of 10000) || modules | C: hbase-common hbase-protocol hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 18s |  master passed  || +1 |  compile  |   4m  4s |  master passed  || +1 |  checkstyle  |   4m 39s |  master passed  || +1 |  shadedjars  |   9m 25s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   3m 44s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 17s |  the patch passed  || +1 |  compile  |   4m  5s |  the patch passed  || +1 |  cc  |   4m  5s |  the patch passed  || +1 |  javac  |   4m  5s |  the patch passed  || +1 |  checkstyle  |   0m 22s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 233 unchanged - 8 fixed = 233 total (was 241)  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 332 unchanged - 51 fixed = 332 total (was 383)  || +1 |  checkstyle  |   2m 25s |  root: The patch generated 0 new + 565 unchanged - 59 fixed = 565 total (was 624)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  18m 35s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   4m 19s |  the patch passed  || +1 |  javadoc  |   3m 48s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 116m 45s |  root in the patch failed.  || +1 |  asflicense  |   1m 37s |  The patch does not generate ASF License warnings.  ||  |   | 180m 53s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionServerMetrics |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20048 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  cc  hbaseprotoc  || uname | Linux e279d015f389 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2440f807bf || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4726 (vs. ulimit of 10000) || modules | C: hbase-common hbase-protocol hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
Say why  ? Looks like you want to redo? After explanation and check of test failure, +1 sir.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 5 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 35s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 55s |  master passed  || +1 |  compile  |   6m 20s |  master passed  || +1 |  checkstyle  |   6m 27s |  master passed  || +1 |  shadedjars  |  12m 38s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   3m 21s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 11s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 56s |  the patch passed  || +1 |  compile  |   3m 46s |  the patch passed  || +1 |  cc  |   3m 46s |  the patch passed  || +1 |  javac  |   3m 46s |  the patch passed  || +1 |  checkstyle  |   0m 18s |  The patch hbase-common passed checkstyle  || +1 |  checkstyle  |   0m  7s |  The patch hbase-protocol passed checkstyle  || +1 |  checkstyle  |   0m 25s |  hbase-client: The patch generated 0 new + 233 unchanged - 8 fixed = 233 total (was 241)  || +1 |  checkstyle  |   0m 54s |  hbase-server: The patch generated 0 new + 337 unchanged - 51 fixed = 337 total (was 388)  || +1 |  checkstyle  |   1m 57s |  root: The patch generated 0 new + 570 unchanged - 59 fixed = 570 total (was 629)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   6m  3s |  The patch causes 10 errors with Hadoop v2.6.5.  || -1 |  hadoopcheck  |   7m 58s |  The patch causes 10 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |  10m  3s |  The patch causes 10 errors with Hadoop v3.0.0.  || +1 |  hbaseprotoc  |   3m 47s |  the patch passed  || +1 |  javadoc  |   3m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 120m 50s |  root in the patch failed.  || +1 |  asflicense  |   1m 38s |  The patch does not generate ASF License warnings.  ||  |   | 182m 14s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-20048 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  cc  hbaseprotoc  || uname | Linux d708fce09aca 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 51f7b75f1f || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5940 (vs. ulimit of 10000) || modules | C: hbase-common hbase-protocol hbase-client hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]
"
HBASE-18792,https://issues.apache.org/jira/browse/HBASE-18792,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java,hbase-2 needs to defend against hbck operations,NO,"hbck needs updating to run against hbase2. Meantime, if an hbck from hbase1 is run against hbck2, it may do damage. hbase2 should defend itself against hbck1 ops.","** Comment 1 **
Update. Running hbck1 against a cluster of 416 tables each of 50 regions, it seems fine. Maybe hbck1 is ok checking an hbase2 cluster. We just have to stop it doing edits.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Here is the list of supported and unsupported hbck operations for HBase 2.0:{code}-----------------------------------------------------------------------NOTE: As of HBase version 2.0, the hbck tool is significantly changed.In general, all Read-Only options are supported and can be be usedsafely. Most -fix/ -repair options are NOT supported. Please see usagebelow for details on which options are not supported.-----------------------------------------------------------------------Usage: fsck  {only tables} where  are:   -help Display help options (this)   -details Display full report of all regions.   -timelag <timeInSeconds>  Process only regions that  have not experienced any metadata updates in the last  <timeInSeconds> seconds.   -sleepBeforeRerun <timeInSeconds> Sleep this many seconds before checking if the fix worked if run with -fix   -summary Print only summary of the tables and status.   -metaonly Only check the state of the hbase:meta table.   -sidelineDir <hdfs://> HDFS path to backup existing meta.   -boundaries Verify that regions boundaries are the same between META and store files.   -exclusive Abort if another hbck is exclusive or fixing.  Datafile Repair options: (expert features, use with caution!)   -checkCorruptHFiles     Check all Hfiles by opening them to make sure they are valid   -sidelineCorruptHFiles  Quarantine corrupted HFiles.  implies -checkCorruptHFiles Replication options   -fixReplication   Deletes replication queues for removed peers  Metadata Repair options supported as of version 2.0: (expert features, use with caution!)   -fixVersionFile   Try to fix missing hbase.version file in hdfs.   -fixReferenceFiles  Try to offline lingering reference store files   -fixHFileLinks  Try to offline lingering HFileLinks   -noHdfsChecking   Don't load/check region info from HDFS. Assumes hbase:meta region info is good. Won't check/fix any HDFS issue, e.g. hole, orphan, or overlap   -ignorePreCheckPermission  ignore filesystem permission pre-checkNOTE: Following options are NOT supported as of HBase version 2.0+.  UNSUPPORTED Metadata Repair options: (expert features, use with caution!)   -fix              Try to fix region assignments.  This is for backwards compatiblity   -fixAssignments   Try to fix region assignments.  Replaces the old -fix   -fixMeta          Try to fix meta problems.  This assumes HDFS region info is good.   -fixHdfsHoles     Try to fix region holes in hdfs.   -fixHdfsOrphans   Try to fix region dirs with no .regioninfo file in hdfs   -fixTableOrphans  Try to fix table dirs with no .tableinfo file in hdfs (online mode only)   -fixHdfsOverlaps  Try to fix region overlaps in hdfs.   -maxMerge <n>     When fixing region overlaps, allow at most <n> regions to merge. (n=5 by default)   -sidelineBigOverlaps  When fixing region overlaps, allow to sideline big overlaps   -maxOverlapsToSideline <n>  When fixing region overlaps, allow at most <n> regions to sideline per group. (n=2 by default)   -fixSplitParents  Try to force offline split parents to be online.   -removeParents    Try to offline and sideline lingering parents and keep daughter regions.   -fixEmptyMetaCells  Try to fix hbase:meta entries not referencing any region (empty REGIONINFO_QUALIFIER rows)  UNSUPPORTED Metadata Repair shortcuts   -repair           Shortcut for -fixAssignments -fixMeta -fixHdfsHoles -fixHdfsOrphans -fixHdfsOverlaps -fixVersionFile -sidelineBigOverlaps -fixReferenceFiles-fixHFileLinks   -repairHoles      Shortcut for -fixAssignments -fixMeta -fixHdfsHoles{code}Please review and let me know of any changes.

** Comment 10 **
[Comment excluded]

** Comment 11 **
bq. As someone who has relied on some of these fix options in the past (especially fixAssigments and fixMeta), what should an operator do instead if a table gets into a bad state?HBase 2.0 includes AMv2 which handles assignments through procedures that are persisted in meta. With every restart of Master, procedures are re-tried from the last persisted state/ step. Whatever is in meta takes precedence over view that region servers have or HDFS. Same applies for .regioninfo and .tableinfo files. HBase 2.0 doesn't use those files. So options like: -fixAssignments, -fixHdfsOrphans, -fixTableOrphans are not required. Submitting/ re-submitting procedures (operations) can sometimes replace -fixMeta.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   1m 56s |  master passed  || +1 |  checkstyle  |   1m 22s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 17s |  master passed  || +1 |  javadoc  |   0m 41s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   1m 59s |  the patch passed  || -1 |  javac  |   0m 25s |  hbase-common generated 1 new + 40 unchanged - 2 fixed = 41 total (was 42)  || +1 |  checkstyle  |   0m 21s |  hbase-common: The patch generated 0 new + 1 unchanged - 2 fixed = 1 total (was 3)  || -1 |  checkstyle  |   1m  0s |  hbase-server: The patch generated 5 new + 94 unchanged - 3 fixed = 99 total (was 97)  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 59s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 27s |  the patch passed  || +1 |  javadoc  |   0m 40s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 21s |  hbase-common in the patch passed.  || +1 |  unit  | 101m 22s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 43s |  The patch does not generate ASF License warnings.  ||  |   | 148m 11s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-18792 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8ed70cd2dea2 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 17a29ac231 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4452 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
+  /**+   * Returns the version components as Integer and String objects+   * Examples: ""1.2.3"" returns , ""4.5.6-SNAPSHOT"" returns +   * @return the components of the version string+   */+  public static Object getVersionComponents(final String version) {{code}VersionInfo is IA.Public, so any public methods become a part of our supported API. Can we make this method private?

** Comment 18 **
[Comment excluded]

** Comment 19 **
{code}-    if (index < s1.length) {+    if (index < v1Comps.length) {       // s1 is longer       return 1;     }{code}I think this is wrong? like version ""2.0.0"" should be after ""2.0.0-SNAPSHOT"". it's also after ""2.0.0-alpha-3"" or ""2.0.0-beta-1""Can we expand the versions checked in {{TestVersionInfo}} to include a) some ""same major different minor"", b) ""same minor different maintenance"", c) both of the above, but SNAPSHOT, d) ""-alpha"" / ""-beta""?

** Comment 20 **
[Comment excluded]

** Comment 21 **
Thanks for your review .{quote}VersionInfo is IA.Public, so any public methods become a part of our supported API. Can we make this method private?{quote}Good catch, fixed. Made package private.{quote}ooof. man that's rough. How about a comment before the if(va == VERY_LARGE_NUMBER) that says something like ""va and vb must both be the same and indicate that the version part is a String""?{quote}Added comment as you have suggested.{quote}Also make va, vb, and VERY_LARGE_NUMBER all type Integer instead of int and use Integer#compareTo(Integer) so that we're not going through a bunch of autoboxing.{quote}We may have to go through autoboxing 2 times on first 2 lines below. If va, vb and VERY_LARGE_NUMBER are changed to type Integer then we will have to go through autoboxing in return statement one or two time even if one of the version components is of type String.      int va = v1Comps instanceof Integer ? (Integer)v1Comps : VERY_LARGE_NUMBER;      int vb = v2Comps instanceof Integer ? (Integer)v2Comps : VERY_LARGE_NUMBER;      if (va != vb) {        return va - vb;      }{code}{quote}I think this is wrong? like version ""2.0.0"" should be after ""2.0.0-SNAPSHOT"". it's also after ""2.0.0-alpha-3"" or ""2.0.0-beta-1"". Can we expand the versions checked in TestVersionInfo to include a) some ""same major different minor"", b) ""same minor different maintenance"", c) both of the above, but SNAPSHOT, d) ""-alpha"" / ""-beta""?{quote}This comment is on existing comparison logic and needs separate JIRA to track it. Please see HBASE-20444.I think the existing version comparison logic is generic and tries to follow lexicographic comparison. Its not specific to HBase versions. As commented, 2.0.0 should be after 2.0.0-SNAPSHOT and 2.0.0-alpha-3 but it should be before 2.0.0-patchXXXX or 2.0.0.1. Similarly 2.0 should be before 2.0.1 As improving comparison for HBase specific version strings and adding unit tests are not in scope of hbck changes I have created separate JIRA.{quote}nit: We should use something like commons-lang's StringUtils#isNumeric to check this so that we're not relying on exceptions for control flow. on the other hand, this is a standard Java idiom so no big deal if we keep it.{quote}Agree, as these hbck changes doesn't really focus on existing parsing/ comparison logic. This can be addressed with the newly created JIRA HBASE-20444.Please see the new patch. Thanks!

** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 56s |  master passed  || +1 |  compile  |   2m 20s |  master passed  || +1 |  checkstyle  |   1m 40s |  master passed  || +1 |  shadedjars  |   4m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 51s |  master passed  || +1 |  javadoc  |   0m 50s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 58s |  the patch passed  || +1 |  compile  |   2m 19s |  the patch passed  || -1 |  javac  |   0m 31s |  hbase-common generated 1 new + 40 unchanged - 2 fixed = 41 total (was 42)  || +1 |  checkstyle  |   0m 25s |  hbase-common: The patch generated 0 new + 1 unchanged - 2 fixed = 1 total (was 3)  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 5 new + 94 unchanged - 3 fixed = 99 total (was 97)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 57s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 27s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 22s |  the patch passed  || +1 |  javadoc  |   0m 51s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 26s |  hbase-common in the patch passed.  || +1 |  unit  | 126m 21s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 42s |  The patch does not generate ASF License warnings.  ||  |   | 181m 58s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-18792 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6ae1cea31672 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 357a089e06 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4265 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 23 **
{quote}javac: hbase-common generated 1 new + 40 unchanged - 2 fixed = 41 total (was 42){quote}The  new warning is not really new. It because code is moved and its required for return type to be an array.{quote}hbase-server: The patch generated 5 new + 94 unchanged - 3 fixed = 99 total (was 97){quote}Mostly because lines are moved. It complains about string in usage message are longer than 100 chars. But limit of 100 is not followed in this section of code (may be) because of readability.

** Comment 24 **
Patch looks good. I tried to run a -fix and got the below:{code}ERROR: option '-fix' is not supportted!-----------------------------------------------------------------------NOTE: As of HBase version 2.0, the hbck tool is significantly changed.In general, all Read-Only options are supported and can be be usedsafely. Most -fix/ -repair options are NOT supported. Please see usagebelow for details on which options are not supported.-----------------------------------------------------------------------Usage: fsck  {only tables} where  are:   -help Display help options (this)   -details Display full report of all regions.   -timelag <timeInSeconds>  Process only regions that  have not experienced any metadata updates in the last  <timeInSeconds> seconds.   -sleepBeforeRerun <timeInSeconds> Sleep this many seconds before checking if the fix worked if run with -fix   -summary Print only summary of the tables and status.   -metaonly Only check the state of the hbase:meta table.   -sidelineDir <hdfs://> HDFS path to backup existing meta.   -boundaries Verify that regions boundaries are the same between META and store files.   -exclusive Abort if another hbck is exclusive or fixing.  Datafile Repair options: (expert features, use with caution!)   -checkCorruptHFiles     Check all Hfiles by opening them to make sure they are valid   -sidelineCorruptHFiles  Quarantine corrupted HFiles.  implies -checkCorruptHFiles Replication options   -fixReplication   Deletes replication queues for removed peers  Metadata Repair options supported as of version 2.0: (expert features, use with caution!)   -fixVersionFile   Try to fix missing hbase.version file in hdfs.   -fixReferenceFiles  Try to offline lingering reference store files   -fixHFileLinks  Try to offline lingering HFileLinks   -noHdfsChecking   Don't load/check region info from HDFS. Assumes hbase:meta region info is good. Won't check/fix any HDFS issue, e.g. hole, orphan, or overlap   -ignorePreCheckPermission  ignore filesystem permission pre-checkNOTE: Following options are NOT supported as of HBase version 2.0+.  UNSUPPORTED Metadata Repair options: (expert features, use with caution!)   -fix              Try to fix region assignments.  This is for backwards compatiblity   -fixAssignments   Try to fix region assignments.  Replaces the old -fix   -fixMeta          Try to fix meta problems.  This assumes HDFS region info is good.   -fixHdfsHoles     Try to fix region holes in hdfs.   -fixHdfsOrphans   Try to fix region dirs with no .regioninfo file in hdfs   -fixTableOrphans  Try to fix table dirs with no .tableinfo file in hdfs (online mode only)   -fixHdfsOverlaps  Try to fix region overlaps in hdfs.   -maxMerge <n>     When fixing region overlaps, allow at most <n> regions to merge. (n=5 by default)   -sidelineBigOverlaps  When fixing region overlaps, allow to sideline big overlaps   -maxOverlapsToSideline <n>  When fixing region overlaps, allow at most <n> regions to sideline per group. (n=2 by default)   -fixSplitParents  Try to force offline split parents to be online.   -removeParents    Try to offline and sideline lingering parents and keep daughter regions.   -fixEmptyMetaCells  Try to fix hbase:meta entries not referencing any region (empty REGIONINFO_QUALIFIER rows)  UNSUPPORTED Metadata Repair shortcuts   -repair           Shortcut for -fixAssignments -fixMeta -fixHdfsHoles -fixHdfsOrphans -fixHdfsOverlaps -fixVersionFile -sidelineBigOverlaps -fixReferenceFiles-fixHFileLinks   -repairHoles      Shortcut for -fixAssignments -fixMeta -fixHdfsHoles{code}LGTM. Let me push it.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 29 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 30 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 31 **
when I use command hbase hbck {code}{{to check hbase region,it prompt for problem}}ERROR: There is a hole in the region chain between and . You need to create a new .regioninfo and region dir in hdfs to plug the hole.ERROR: Found inconsistency in table data_set_test{code}.regioninfo{code}{{ already in hdfs dir}}hdfs dfs -ls /hbase/data/default/data_set_test/69db2c240bb89b2131de1d15e3c71566 Found 3 items rw-rr- 2 hadoop supergroup 48 2018-10-11 16:51 /hbase/data/default/data_set_test/69db2c240bb89b2131de1d15e3c71566/.regioninfo{code}so I use command to fix region. hbase hbck -fixAssignments{code}{{but It didn't work with error}}ERROR: option '-fixAssignments' is not supportted!.{code}How can I fix the region is not online problem?thanks.

** Comment 32 **
[Comment excluded]

** Comment 33 **
I use hbase hbck  to found this problemERROR: There is a hole in the region chain between and . You need to create a new .regioninfo and region dir in hdfs to plug the hole. ERROR: Found inconsistency in table data_set_test{code}some table region always in opening.

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]
"
HBASE-20442,https://issues.apache.org/jira/browse/HBASE-20442,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java,clean up incorrect use of commons-collections 3,NO,"we upgraded to commons-collections 4 in HBASE-18704 and then to an internal-only hbase-thirdparty version in HBASE-20223, but we've regressed:

{code}
$ git grep ""import org.apache.commons.collections""
hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:import org.apache.commons.collections.MapUtils;
hbase-client/src/main/java/org/apache/hadoop/hbase/client/RowMutations.java:import org.apache.commons.collections.CollectionUtils;
hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:import org.apache.commons.collections.CollectionUtils;
hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorage.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java:import org.apache.commons.collections.CollectionUtils;
hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALSplitter.java:import org.apache.commons.collections.MapUtils;
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 57s |  master passed  || +1 |  compile  |   3m 37s |  master passed  || +1 |  checkstyle  |   2m 38s |  master passed  || +1 |  shadedjars  |   4m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 50s |  master passed  || +1 |  javadoc  |   1m 33s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 51s |  the patch passed  || +1 |  compile  |   3m 32s |  the patch passed  || +1 |  javac  |   3m 32s |  the patch passed  || +1 |  checkstyle  |   2m 36s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 50s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 10s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   5m 43s |  the patch passed  || +1 |  javadoc  |   1m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 35s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 11s |  hbase-client in the patch passed.  || +1 |  unit  |   0m 50s |  hbase-replication in the patch passed.  || -1 |  unit  | 147m 34s |  hbase-server in the patch failed.  || +1 |  unit  |  14m  6s |  hbase-backup in the patch passed.  || +1 |  asflicense  |   1m 34s |  The patch does not generate ASF License warnings.  ||  |   | 235m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20442 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f65cef6964e9 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 357a089e06 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4310 (vs. ulimit of 10000) || modules | C: hbase-common hbase-client hbase-replication hbase-server hbase-backup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 20s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   3m  0s |  master passed  || +1 |  checkstyle  |   2m 18s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m  3s |  master passed  || +1 |  javadoc  |   1m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 14s |  the patch passed  || +1 |  compile  |   3m  7s |  the patch passed  || +1 |  javac  |   3m  7s |  the patch passed  || +1 |  checkstyle  |   2m 18s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  6s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   4m 47s |  the patch passed  || +1 |  javadoc  |   1m 21s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 25s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 53s |  hbase-client in the patch passed.  || +1 |  unit  |   0m 31s |  hbase-replication in the patch passed.  || -1 |  unit  | 158m 37s |  hbase-server in the patch failed.  || +1 |  unit  |  17m 29s |  hbase-backup in the patch passed.  || +1 |  asflicense  |   1m 35s |  The patch does not generate ASF License warnings.  ||  |   | 238m 15s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.TestReplicationChangingPeerRegionservers |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20442 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2625c2bca80d 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fd2cec75f3 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_162 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4373 (vs. ulimit of 10000) || modules | C: hbase-common hbase-client hbase-replication hbase-server hbase-backup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-19951,https://issues.apache.org/jira/browse/HBASE-19951,https://github.com/apache/hbase/blob/rel/2.0.0/hbase-server/src/test/java/org/apache/hadoop/hbase/master/procedure/TestWALProcedureStoreOnHDFS.java,Cleanup the explicit timeout value for test method,NO,As said in the parent issue.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 174 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 29s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 38s |  branch-2 passed  || +1 |  compile  |   3m 30s |  branch-2 passed  || +1 |  checkstyle  |   4m  9s |  branch-2 passed  || +1 |  shadedjars  |   8m 27s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   2m 46s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 45s |  the patch passed  || +1 |  compile  |   3m 42s |  the patch passed  || +1 |  javac  |   3m 42s |  the patch passed  || -1 |  checkstyle  |   1m 23s |  hbase-server: The patch generated 8 new + 663 unchanged - 8 fixed = 671 total (was 671)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 41s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   2m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 32s |  hbase-common in the patch passed.  || +1 |  unit  |   3m  8s |  hbase-client in the patch passed.  || +1 |  unit  |   0m 46s |  hbase-zookeeper in the patch passed.  || +1 |  unit  |   0m 49s |  hbase-http in the patch passed.  || +1 |  unit  |   2m 49s |  hbase-procedure in the patch passed.  || +1 |  unit  |  97m 39s |  hbase-server in the patch passed.  || +1 |  unit  |  13m 23s |  hbase-mapreduce in the patch passed.  || +1 |  unit  |   2m  9s |  hbase-thrift in the patch passed.  || +1 |  unit  |   0m 53s |  hbase-it in the patch passed.  || +1 |  asflicense  |   3m  1s |  The patch does not generate ASF License warnings.  ||  |   | 179m 22s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:9f2f2db || JIRA Issue | HBASE-19951 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7bb6a603820a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 26ccbc49be || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 5303 (vs. ulimit of 10000) || modules | C: hbase-common hbase-client hbase-zookeeper hbase-http hbase-procedure hbase-server hbase-mapreduce hbase-thrift hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4563 (See )
HBASE-19951 Cleanup the explicit timeout value for test method (stack: rev 0593dda66359dbd1ba3a06dbd12b8f2521eef6b9)

"
HBASE-20505,https://issues.apache.org/jira/browse/HBASE-20505,https://github.com/apache/hbase/blob/rel/2.0.1/hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java,PE should support multi column family read and write cases,NO,"PerformanceEvaluation has a --columns parameter but this adjusts the number of distinct column qualifiers to write (and, with --addColumns, to add to the scan), not the number of column families. 

We need something like a new --families parameter that will increase the number of column families defined in the test table schema, written to, and included in gets and scans. Default is 1, current behavior.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 9 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 10 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 12 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 13 **
Results for branch branch-1.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20700,https://issues.apache.org/jira/browse/HBASE-20700,https://github.com/apache/hbase/blob/rel/2.0.1/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/UnassignProcedure.java,Move meta region when server crash can cause the procedure to be stuck,NO,As said in HBASE-20682.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Oh for meta there is another problem... The RecoverMetaProcedure will hold the exclusive lock for the meta table, and since the MRP for meta will hold the shared lock on meta table so the RecoverMetaProcedure can not be executed...This is not correct I believe. In SCP we do not hold any table/region lock so that we are free to execute and then we can fail other RIT procedures to let our assign procedures go.For me, the RecoverMetaProcedure is a bit strange. In general, if an RS is crashed then we will have a SCP for it and if it carries meta then we will assign meta somewhere else finally. When master start up, we just need to wait until the RS is online and do not need to mess up the recovery processing...

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 36s |  master passed  || +1 |  compile  |   2m  1s |  master passed  || +1 |  checkstyle  |   1m 26s |  master passed  || +1 |  shadedjars  |   4m 49s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 24s |  master passed  || +1 |  javadoc  |   0m 41s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 40s |  the patch passed  || +1 |  compile  |   2m  2s |  the patch passed  || +1 |  javac  |   2m  2s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 1 new + 280 unchanged - 4 fixed = 281 total (was 284)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 45s |  the patch passed  || +1 |  javadoc  |   0m 42s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 37s |  hbase-procedure in the patch passed.  || -1 |  unit  | 110m 13s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 157m  3s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestServerCrashProcedureCarryingMetaStuck |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 179178fdc30f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / cfeb26d27a || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4599 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
Yes, the new 'meta' queue will always be served first. Typically there will be no procedures in it so I do not think we will slow down the scheduler, just a small number of in memory operations...And in RecoverMetaProcedure we will do the log splitting work and assign meta, so ideally there is no problem if the meta is on a crash RS before. Of course the logic here is not clear enough I'd say and there maybe races, we can file new issue to fix it.And for the new lock, we need to prevent two RMPs run at the same time so I think we need it...

** Comment 12 **
[Comment excluded]

** Comment 13 **
Looking at patch....I worry the below check of ONLINE. Is it too specific?971	      if (serverNode.isInState(ServerState.SPLITTING, ServerState.OFFLINE)) {	972	      if (!serverNode.isInState(ServerState.ONLINE)) {We can see I suppose. Would be good if we could get away with it.I'm wary of calls to this method below settting server state inside setServerState because it will create the server node if it doesn't exist (It may not exist because it has been processed by SCP). If we call the below after SCP is done w/ it, the server comes back to life. You sure we will not do this? ServerStateNode serverNode = getOrCreateServer(serverName);What is the lifecycle for a server node now? ONLINE => SPLITTING => OFFLINE is what it used to be. It can still do this? But it can also go ONLINE => META_SPLITTING => META_SPLITTING_DONE => SPLITTING => OFFLINE? We might want to not this somewhere. Not obvious.Oh... this is interesting.... adding the synchronized....public synchronized void remoteCallFailed(final MasterProcedureEnv env,... Up to this we've been synchronizing on the objects whose state we change. What you thinking by adding the synchronize? I can't see anything wrong w/ it.....If MoveRegionProcedure gets scheduled before RecoverMetaProcedure, what happens now?No need of evolving if private23	@InterfaceAudience.Private24	@InterfaceStability.Evolvings/MetaProcedureInterface/MetaProcedure/getMetaOperationType is not used? .... but makes sense I suppose. You are following pattern.Otherwise, nice cleanup and appreciate the doc -- especially the edit by another.

** Comment 14 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 44s |  master passed  || +1 |  compile  |   2m  1s |  master passed  || +1 |  checkstyle  |   1m 25s |  master passed  || +1 |  shadedjars  |   4m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 22s |  master passed  || +1 |  javadoc  |   0m 43s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 47s |  the patch passed  || +1 |  compile  |   2m  3s |  the patch passed  || +1 |  javac  |   2m  3s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 0 new + 280 unchanged - 4 fixed = 280 total (was 284)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 46s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 55s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 31s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || +1 |  unit  | 115m 33s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 42s |  The patch does not generate ASF License warnings.  ||  |   | 162m 48s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9578c0a80b1e 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 30a052b3e5 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4464 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 15 **
{quote}I worry the below check of ONLINE. Is it too specific?971	if (serverNode.isInState(ServerState.SPLITTING, ServerState.OFFLINE)) {	972	if (!serverNode.isInState(ServerState.ONLINE)) {We can see I suppose. Would be good if we could get away with it.{quote}I think this is the common case? If the server is not in state ONLINE then it means there is a SCP for it which means it has already crashed...{quote}I'm wary of calls to this method below settting server state inside setServerState because it will create the server node if it doesn't exist (It may not exist because it has been processed by SCP). If we call the below after SCP is done w/ it, the server comes back to life. You sure we will not do this?{quote}These methods will only be called in SCP, and at the end of SCP we will call removeServer to remove the ServerStateNode. Let me add some comments.{quote}What is the lifecycle for a server node now? ONLINE => SPLITTING => OFFLINE is what it used to be. It can still do this? But it can also go ONLINE => META_SPLITTING => META_SPLITTING_DONE => SPLITTING => OFFLINE? We might want to not this somewhere. Not obvious.{quote}If not carrying meta then ONLINE=>SPLITTING=>OFFLINE, otherwise ONLINE=>META_SPLITTING_META_SPLITTING_DONE=>SPLITTING=>OFFLINE.I've added comments in UnassignProcedure to say why we need these state. We can only fail an unassign after we make sure that the log splitting is finished, otherwise we may schedule an AssignProcedure which will cause data loss. And for unassign meta, the SCP will wait until the RMP is finished before splitting other logs, so if we do not introduce special states for meta splitting, we will stuck there forever...{quote}Oh... this is interesting.... adding the synchronized....public synchronized void remoteCallFailed(final MasterProcedureEnv env,... Up to this we've been synchronizing on the objects whose state we change. What you thinking by adding the synchronize? I can't see anything wrong w/ it.....{quote}It could be called in two places, one is from the RemoteProcedureScheduler, where the remote call is failed, and the other is from SCP or RMP's handleRIT, I think there is no strong guarantee that they will not happen at the same time so it is better to add a synchronized on the method...{quote}If MoveRegionProcedure gets scheduled before RecoverMetaProcedure, what happens now?{quote}Now the RMP will not hold the same lock with MRP, so it could break the execution of UnassignProcedure scheduled by MRP. And also, if the UnassignProcedure is scheduled after we calling handleRIT, when calling isLogSplittingDone method in remoteCallFailed, it will find that the meta log splitting has already been done and give up. So there will be no dead lock any more.{quote}s/MetaProcedureInterface/MetaProcedure/{quote}Just follow the patterns, we have TableProcedureInterface, RegionProcedureInterface, ServerProcedureInterface, etc.

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 42s |  master passed  || +1 |  compile  |   2m 26s |  master passed  || +1 |  checkstyle  |   1m 41s |  master passed  || +1 |  shadedjars  |   5m 25s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 51s |  master passed  || +1 |  javadoc  |   0m 49s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 57s |  the patch passed  || +1 |  compile  |   2m 36s |  the patch passed  || +1 |  javac  |   2m 36s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 24s |  hbase-server: The patch generated 0 new + 280 unchanged - 4 fixed = 280 total (was 284)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 44s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 10s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 10s |  the patch passed  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 45s |  hbase-procedure in the patch passed.  || -1 |  unit  | 109m 41s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 164m 47s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9eac7ba0c1a2 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 519236b4af || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4245 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 19s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 57s |  branch-2.0 passed  || +1 |  compile  |   2m  9s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 27s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 31s |  branch-2.0 passed  || +1 |  javadoc  |   0m 50s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 58s |  the patch passed  || +1 |  compile  |   2m  9s |  the patch passed  || -1 |  javac  |   1m 47s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 274 unchanged - 4 fixed = 274 total (was 278)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 34s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 49s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 37s |  hbase-procedure in the patch passed.  || -1 |  unit  | 121m  2s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 168m 25s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2499fff18f94 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 3b319f1427 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javac | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4227 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 21 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 16s |  branch-2.0 passed  || +1 |  compile  |   1m 47s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 13s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 40s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 14s |  branch-2.0 passed  || +1 |  javadoc  |   0m 39s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m  9s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 0 new + 274 unchanged - 4 fixed = 274 total (was 278)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  3s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 25s |  the patch passed  || +1 |  javadoc  |   0m 34s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 32s |  hbase-procedure in the patch passed.  || -1 |  unit  | 106m 29s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 146m 32s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestProcedurePriority |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2e6d02e6ddaf 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 3b319f1427 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4778 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 23 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 40s |  branch-2.0 passed  || +1 |  compile  |   2m  0s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 27s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 41s |  branch-2.0 passed  || +1 |  javadoc  |   0m 43s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 41s |  the patch passed  || +1 |  compile  |   2m  2s |  the patch passed  || +1 |  javac  |   2m  2s |  the patch passed  || +1 |  checkstyle  |   0m 15s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 0 new + 274 unchanged - 4 fixed = 274 total (was 278)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 22s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 38s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  4s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 45s |  hbase-procedure in the patch passed.  || +1 |  unit  | 124m 16s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 171m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20700 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c20df5b21f39 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 59a61e99d9 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 3978 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20867,https://issues.apache.org/jira/browse/HBASE-20867,https://github.com/apache/hbase/blob/rel/2.0.2/hbase-client/src/main/java/org/apache/hadoop/hbase/security/NettyHBaseSaslRpcClientHandler.java,RS may get killed while master restarts,NO,"If the master is dispatching a RPC call to RS when aborting. A connection exception may be thrown by the RPC layer(A IOException with ""Connection closed"" message in this case). The RSProcedureDispatcher will regard is as an un-retryable exception and pass it to UnassignProcedue.remoteCallFailed, which will expire the RS.
Actually, the RS is very healthy, only the master is restarting.
I think we should deal with those kinds of connection exceptions in RSProcedureDispatcher and retry the rpc call","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   1m  2s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 41s |  branch-2.0 passed  || +1 |  compile  |   2m 25s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 45s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 30s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  0s |  branch-2.0 passed  || +1 |  javadoc  |   1m  0s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 51s |  the patch passed  || +1 |  compile  |   2m 21s |  the patch passed  || +1 |  javac  |   2m 21s |  the patch passed  || -1 |  checkstyle  |   0m 30s |  hbase-client: The patch generated 3 new + 15 unchanged - 0 fixed = 18 total (was 15)  || -1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 1 new + 36 unchanged - 0 fixed = 37 total (was 36)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m  9s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 25s |  the patch passed  || +1 |  javadoc  |   0m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 53s |  hbase-client in the patch passed.  || +1 |  unit  | 107m 41s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 42s |  The patch does not generate ASF License warnings.  ||  |   | 160m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20867 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d84591ea15e7 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / cd1ecae0d1 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4213 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   1m  2s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 22s |  branch-2.0 passed  || +1 |  compile  |   2m 16s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 31s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 43s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 58s |  branch-2.0 passed  || +1 |  javadoc  |   0m 53s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 22s |  the patch passed  || +1 |  compile  |   2m 12s |  the patch passed  || +1 |  javac  |   2m 12s |  the patch passed  || -1 |  checkstyle  |   0m 25s |  hbase-client: The patch generated 1 new + 13 unchanged - 2 fixed = 14 total (was 15)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 44s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 24s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  8s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 57s |  hbase-client in the patch passed.  || +1 |  unit  | 183m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 33s |  The patch does not generate ASF License warnings.  ||  |   | 231m  5s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20867 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c4f9dd9c6829 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 5594f0b9fd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4244 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
Will we be stuck there for ever when master shutdown? The reason we close the connection when shutdown master is that we want the operations against the connection fail quickly and give up immediately.The patch LGTM. Above is the only concern for me.Thanks.

** Comment 5 **
{code}Will we be stuck there for ever when master shutdown? The reason we close the connection when shutdown master is that we want the operations against the connection fail quickly and give up immediately.{code}It won't stuck. Retrying happens in a thread pool in RemoteProcedureDispatcher, we shut it down when stopping.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 19s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 21s |  branch-2.0 passed  || +1 |  compile  |   2m 14s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 25s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 46s |  branch-2.0 passed  || +1 |  javadoc  |   0m 45s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 22s |  the patch passed  || +1 |  compile  |   2m 11s |  the patch passed  || +1 |  javac  |   2m 11s |  the patch passed  || -1 |  checkstyle  |   0m 28s |  hbase-client: The patch generated 1 new + 13 unchanged - 2 fixed = 14 total (was 15)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 42s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 21s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  8s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  2s |  hbase-client in the patch passed.  || +1 |  unit  | 180m 16s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 32s |  The patch does not generate ASF License warnings.  ||  |   | 224m 28s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20867 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d32238f62848 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 5594f0b9fd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 3976 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 28s |  branch-2.0 passed  || +1 |  compile  |   2m 20s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 32s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 54s |  branch-2.0 passed  || +1 |  javadoc  |   0m 44s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 28s |  the patch passed  || +1 |  compile  |   2m 19s |  the patch passed  || +1 |  javac  |   2m 19s |  the patch passed  || +1 |  checkstyle  |   0m 29s |  hbase-client: The patch generated 0 new + 13 unchanged - 2 fixed = 13 total (was 15)  || +1 |  checkstyle  |   1m  3s |  The patch hbase-server passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 58s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m  6s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  8s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  4s |  hbase-client in the patch passed.  || +1 |  unit  | 143m 13s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 44s |  The patch does not generate ASF License warnings.  ||  |   | 189m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20867 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2eec5b2d9380 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 5594f0b9fd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4210 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 9 **
bq. I think we should deal with those kinds of connection exceptions in RSProcedureDispatcher and retry the rpc callThe Master is aborting? Why then retry? Or is it that the Master is aborting and the retry may or may not happen... better retry than have the RS do an abort?Should extend HBaseIOException: 29	public class ConnectionClosedException extends IOException { See [link]We have to do this?180	    } else if (exception instanceof ConnectionClosedException) {181	      return (ConnectionClosedException) new ConnectionClosedException(182	          ""Call to "" + addr + "" failed because "" + exception).initCause(exception);Can we not get above info from ChannelHandlerContext where we throw the exceptions?Otherwise, nice patch.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
{quote}The Master is aborting? Why then retry? Or is it that the Master is aborting and the retry may or may not happen... better retry than have the RS do an abort?{quote}Yes, the master is aborting, but it does not matter, what really matters is that if the RPC layer throw a exception(in this case, master is aborting, and closed the connection, but there maybe other connection exception too) to RSProcedureDispatcher, we shouldn't think there is a problem in RS and abort the health RS.{quote}Should extend HBaseIOException: 29	public class ConnectionClosedException extends IOException{quote}Done!{quote}else if (exception instanceof ConnectionClosedException) {181	return (ConnectionClosedException) new ConnectionClosedException(182	""Call to "" + addr + "" failed because "" + exception).initCause(exception);{quote}Done!

** Comment 13 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 13s |  branch-2.0 passed  || +1 |  compile  |   2m 46s |  branch-2.0 passed  || +1 |  checkstyle  |   2m  2s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 41s |  branch-2.0 passed  || +1 |  javadoc  |   0m 58s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 22s |  the patch passed  || +1 |  compile  |   2m 43s |  the patch passed  || +1 |  javac  |   2m 43s |  the patch passed  || +1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 0 new + 13 unchanged - 2 fixed = 13 total (was 15)  || +1 |  checkstyle  |   1m 18s |  The patch hbase-server passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 40s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 19s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   4m 13s |  the patch passed  || +1 |  javadoc  |   1m  1s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 18s |  hbase-client in the patch passed.  || +1 |  unit  | 120m 15s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 176m 26s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-20867 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3ca82b2cee59 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 3c49d558f4 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4157 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 16 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop2 checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 17 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-20403,https://issues.apache.org/jira/browse/HBASE-20403,https://github.com/apache/hbase/blob/rel/2.0.2/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java,Prefetch sometimes doesn't work with encrypted file system,NO,"Log from long running test has following stack trace a few times:
{code}
2018-04-09 18:33:21,523 WARN org.apache.hadoop.hbase.io.hfile.HFileReaderImpl: Prefetch path=hdfs://ns1/hbase/data/default/IntegrationTestBigLinkedList_20180409172704/35f1a7ef13b9d327665228abdbcdffae/meta/9089d98b2a6b4847b3fcf6aceb124988, offset=36884200, end=231005989
java.lang.IllegalArgumentException
  at java.nio.Buffer.limit(Buffer.java:275)
  at org.apache.hadoop.hdfs.ByteBufferStrategy.readFromBlock(ReaderStrategy.java:183)
  at org.apache.hadoop.hdfs.DFSInputStream.readBuffer(DFSInputStream.java:705)
  at org.apache.hadoop.hdfs.DFSInputStream.readWithStrategy(DFSInputStream.java:766)
  at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:831)
  at org.apache.hadoop.crypto.CryptoInputStream.read(CryptoInputStream.java:197)
  at java.io.DataInputStream.read(DataInputStream.java:149)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock.readWithExtra(HFileBlock.java:762)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderImpl.readAtOffset(HFileBlock.java:1559)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderImpl.readBlockDataInternal(HFileBlock.java:1771)
  at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderImpl.readBlockData(HFileBlock.java:1594)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.readBlock(HFileReaderImpl.java:1488)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$1.run(HFileReaderImpl.java:278)
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
{code}

Size on disk calculations seem to get messed up due to encryption. Possible fixes can be:
* if file is encrypted with FileStatus#isEncrypted() and do not prefetch.
* document that hbase.rs.prefetchblocksonopen cannot be true if file is encrypted.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Out of 4 ITBLL runs, this stack showed up in log files for 3 runs. 4 runs after disabling prefetch pass and no logs have the above stack trace.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
This bug seems to have different facets:2018-06-12 10:35:45,613 WARN org.apache.hadoop.hbase.io.hfile.HFileReaderImpl: Prefetch path=hdfs://ns1/hbase/data/default/IntegrationTestBigLinkedList_20180606004324/1fc1713dc72a0d3351b3214add699e59/meta/543bace1c8f545a5a34d8f1dc6be6063, offset=0, end=153035java.lang.NegativeArraySizeException        at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderImpl.readBlockDataInternal([file java]:1768)        at org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReaderImpl.readBlockData([file java]:1594)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.readBlock([file java]:1488)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$1.run([file java]:278)        at java.util.concurrent.Executors$RunnableAdapter.call([file java]:511)        at java.util.concurrent.FutureTask.run([file java]:266)        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201([file java]:180)        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run([file java]:293)        at java.util.concurrent.ThreadPoolExecutor.runWorker([file java]:1149)        at java.util.concurrent.ThreadPoolExecutor$Worker.run([file java]:624)        at java.lang.Thread.run([file java]:748)2018-06-12 10:35:45,614 WARN org.apache.hadoop.hbase.io.hfile.HFile: HBase checksum verification failed for file hdfs://ns1/hbase/data/default/IntegrationTestBigLinkedList_20180606004324/1fc1713dc72a0d3351b3214add699e59/meta/543bace1c8f545a5a34d8f1dc6be6063 at offset 0 filesize 157916. Retrying read with HDFS checksums turned on...2018-06-12 10:35:45,626 WARN org.apache.hadoop.hbase.io.hfile.HFile: HDFS checksum verification succeeded for file hdfs://ns1/hbase/data/default/IntegrationTestBigLinkedList_20180606004324/1fc1713dc72a0d3351b3214add699e59/meta/543bace1c8f545a5a34d8f1dc6be6063 at offset 0 filesize 157916

** Comment 9 **
[Comment excluded]

** Comment 10 **
Attached patch has a test which reproduces a failure even on non-encrypted systems. Changing the prefetch to use pread instead of streaming read seems to fix the issue. We should verify that it also fixes it on encrypted filesystems.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 32s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 30s |  master passed  || +1 |  compile  |   1m 37s |  master passed  || +1 |  checkstyle  |   0m 57s |  master passed  || +1 |  shadedjars  |   4m  2s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 47s |  master passed  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 21s |  the patch passed  || +1 |  compile  |   1m 35s |  the patch passed  || +1 |  javac  |   1m 35s |  the patch passed  || -1 |  checkstyle  |   0m 57s |  hbase-server: The patch generated 1 new + 54 unchanged - 0 fixed = 55 total (was 54)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 54s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 55s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 109m 45s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 148m 31s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20403 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6ff5bdee580e 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 72784c2d83 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4667 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
bq. even though the underlying, wrapped DFSInputStream seems mostly thread-safeThat's an interesting point. I just looked at DFSInputStream and sure enough these non-positional methods are marked synchronized. However, it's somewhat odd because you'd still need some external synchronization to know where you're reading from. That is to say, if one thread is doing a 'seek, then read' at the same time as the other, they could interleave and one thread reads from the other thread's position.That said, I could see the synchronization of DFSInputStream hiding bugs -- maybe it happens that sometimes one thread reads the data meant for another thread and just proceeds having read the wrong block. Or, it reads the wrong data because of the race, sees it as an HBase-level checksum failure, and performs a retry. In the Crypto case, because the input stream is not synchronized, it now ends up in a crash or an odd exception instead of ""just reading the wrong data"".I think on the HDFS side (Hadoop common, really), we should add some sanity checking to prevent concurrent use and throw ConcurrentModificationException when we detect it so such bugs are obvious in the future instead of being very difficult to diagnose.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  1s |  master passed  || +1 |  compile  |   1m 49s |  master passed  || +1 |  checkstyle  |   1m 11s |  master passed  || +1 |  shadedjars  |   4m 31s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  9s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 23s |  the patch passed  || +1 |  compile  |   1m 46s |  the patch passed  || +1 |  javac  |   1m 46s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 24s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  6s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 132m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   | 175m  8s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20403 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8b6974dfd586 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / bc9f9ae080 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4328 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 31 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 32 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-20401,https://issues.apache.org/jira/browse/HBASE-20401,https://github.com/apache/hbase/blob/rel/2.0.2/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileCleaner.java,Make `MAX_WAIT` and `waitIfNotFinished` in CleanerContext configurable,NO,"When backporting HBASE-18309 in HBASE-20352, the deleteFiles calls CleanerContext.java#getResult with a waitIfNotFinished timeout to wait for notification (notify) from the fs.delete file thread. there might be two situation need to tune the MAX_WAIT in CleanerContext or waitIfNotFinished when LogClearner call getResult.
 # fs.delete never complete (strange but possible), then we need to wait for a max of 60 seconds. here, 60 seconds might be too long
 # getResult is waiting in the period of 500 milliseconds, but the fs.delete has completed and setFromClear is set but yet notify(). one might want to tune this 500 milliseconds to 200 or less .","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
 thanks for reviewing this, I have attached master branch and other branches with adding {{OLD_WALS_}} those constants. NOTE that branch-1 has a minor difference in {{LOG.warn}} line. 

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 23s |  master passed  || +1 |  compile  |   1m 42s |  master passed  || +1 |  checkstyle  |   0m 58s |  master passed  || +1 |  shadedjars  |   4m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 58s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 33s |  the patch passed  || +1 |  compile  |   1m 39s |  the patch passed  || +1 |  javac  |   1m 39s |  the patch passed  || +1 |  checkstyle  |   0m 58s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  9s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 195m 57s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 233m 51s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.TestSyncReplicationStandbyKillMaster |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 89f5595b7a3f 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 8c85763327 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4827 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 23s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 20s |  master passed  || +1 |  compile  |   1m 46s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  9s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  2s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || +1 |  checkstyle  |   1m 11s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 42s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 13s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 45s |  the patch passed  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 143m 41s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 24s |  The patch does not generate ASF License warnings.  ||  |   | 187m 45s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6b879fd5b882 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8c85763327 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4074 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 31s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   2m 12s |  branch-1 passed  || +1 |  compile  |   0m 46s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 46s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 29s |  branch-1 passed  || +1 |  shadedjars  |   3m 43s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 37s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 45s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 52s |  the patch passed  || +1 |  compile  |   0m 44s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 44s |  the patch passed  || +1 |  compile  |   0m 42s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 42s |  the patch passed  || +1 |  checkstyle  |   1m 23s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 55s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 35s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 44s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 135m 45s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 158m 43s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1719fa0455db 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 15ed2e8 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3831 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   4m 50s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   7m 47s |  master passed  || +1 |  compile  |   2m 25s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   6m  1s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 52s |  master passed  || +1 |  javadoc  |   0m 39s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m 18s |  the patch passed  || +1 |  compile  |   2m 30s |  the patch passed  || +1 |  javac  |   2m 30s |  the patch passed  || +1 |  checkstyle  |   1m 25s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  4s |  the patch passed  || +1 |  javadoc  |   0m 38s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 177m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 237m 27s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux bbcfae429eae 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c92cda8420 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4779 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 55s |  master passed  || +1 |  compile  |   7m 24s |  master passed  || +1 |  checkstyle  |   2m  1s |  master passed  || 0 |  refguide  |   5m  9s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 26s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m  5s |  master passed  || +1 |  javadoc  |   3m  4s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 30s |  the patch passed  || +1 |  compile  |   6m 59s |  the patch passed  || +1 |  javac  |   6m 59s |  the patch passed  || +1 |  checkstyle  |   1m 59s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   4m 50s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 21s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 43s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 13s |  the patch passed  || +1 |  javadoc  |   3m  8s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 245m  5s |  root in the patch passed.  || +1 |  asflicense  |   1m  2s |  The patch does not generate ASF License warnings.  ||  |   | 314m 26s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux eea50fa63240 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e66a6603e3 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] ||  Test Results | [link] || Max. process+thread count | 5484 (vs. ulimit of 10000) || modules | C: hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 34s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 32s |  master passed  || +1 |  compile  |   8m 47s |  master passed  || +1 |  checkstyle  |   2m 23s |  master passed  || 0 |  refguide  |   5m 37s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   5m 37s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 53s |  master passed  || +1 |  javadoc  |   3m 52s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 59s |  the patch passed  || +1 |  compile  |   8m 37s |  the patch passed  || +1 |  javac  |   8m 37s |  the patch passed  || +1 |  checkstyle  |   2m 37s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   6m 41s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   5m 30s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 54s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 59s |  the patch passed  || +1 |  javadoc  |   4m  0s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 318m  6s |  root in the patch failed.  || +1 |  asflicense  |   1m  2s |  The patch does not generate ASF License warnings.  ||  |   | 405m 59s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdminShell |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux eb90a8fb6d2f 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 682aa69677 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4896 (vs. ulimit of 10000) || modules | C: hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus    [link] |This message was automatically generated.

** Comment 29 **
Pushed to master, branch-2, branch-2.0, branch-2.1.Thanks for you contributions. And hbase community recommends you to generate your patch using git-format so that your information can be included in commit message, please try it next time.

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  21m 34s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   2m 23s |  branch-1 passed  || +1 |  compile  |   0m 46s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 45s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 32s |  branch-1 passed  || +1 |  shadedjars  |   3m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 35s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 46s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   2m  3s |  the patch passed  || +1 |  compile  |   0m 47s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 47s |  the patch passed  || +1 |  compile  |   0m 45s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 45s |  the patch passed  || +1 |  checkstyle  |   1m 35s |  hbase-server: The patch generated 0 new + 14 unchanged - 1 fixed = 14 total (was 15)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   2m  7s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 33s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 42s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| -1 |  unit  | 145m 52s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 190m  0s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestAssignmentManagerOnCluster ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-20401 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a9fa0e3083c5 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 896b69a || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3963 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 34 **
Unrelated failed UTs.Pushed to branch-1 and branch-1.4.

** Comment 35 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- Something went wrong running this stage, please .
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 36 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 37 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 38 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 39 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 40 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 41 **
[Comment excluded]

** Comment 42 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21468,https://issues.apache.org/jira/browse/HBASE-21468,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java,separate workers for meta table is not working,NO,"This is an addendum for HBASE-21423, since HBASE-21423 is already closed, the QA won't be triggered.
It is my mistake that the separate workers for meta table is not working, since when polling from queue, the onlyUrgent flag is not passed in.
And for some UT that only require one worker thread, urgent workers should set to 0 to ensure there is one worker at time.","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 16 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m 43s |  branch-2.0 passed  || +1 |  compile  |   2m  3s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 24s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 32s |  branch-2.0 passed  || +1 |  javadoc  |   0m 41s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 37s |  the patch passed  || +1 |  compile  |   2m  3s |  the patch passed  || +1 |  javac  |   2m  3s |  the patch passed  || +1 |  checkstyle  |   1m 24s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 54s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 45s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 56s |  the patch passed  || +1 |  javadoc  |   0m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 17s |  hbase-procedure in the patch passed.  || -1 |  unit  | 125m 32s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 48s |  The patch does not generate ASF License warnings.  ||  |   | 166m 56s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.TestRegionRebalancing ||   | hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithRemove ||   | hadoop.hbase.TestCheckTestClasses |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21468 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f188948af1fd 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 56640292ad || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4234 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 16 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m 55s |  branch-2.0 passed  || +1 |  compile  |   2m  6s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 30s |  branch-2.0 passed  || +1 |  shadedjars  |   4m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 58s |  branch-2.0 passed  || +1 |  javadoc  |   0m 43s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 42s |  the patch passed  || +1 |  compile  |   2m 11s |  the patch passed  || +1 |  javac  |   2m 11s |  the patch passed  || +1 |  checkstyle  |   1m 26s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 57s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 27s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 56s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 25s |  hbase-procedure in the patch passed.  || +1 |  unit  | 138m 35s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 48s |  The patch does not generate ASF License warnings.  ||  |   | 180m 59s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21468 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e696d24c05fb 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 5361ed9613 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4286 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Pls update the RN in main issue with this new config info. Tks

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21321,https://issues.apache.org/jira/browse/HBASE-21321,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java,Backport HBASE-21278 to branch-2.1 and branch-2.0,NO,As the assign\unassign part is a bit different.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Most code can be reused. I think the only difference is that, when rolling back MergeTableRegionsProcedure and SplitTableRegionProcedure, we use TRSP in 2,2+, and AssignProcedure in 2.0 and 2.1. The changes for this part in the patch is to make the rollback operation idempotent, otherwise the testRollbackAndDoubleExecution will fail.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 12 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  2s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 45s |  branch-2.1 passed  || +1 |  compile  |   2m 13s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 27s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 39s |  branch-2.1 passed  || +1 |  javadoc  |   0m 48s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  7s |  the patch passed  || +1 |  compile  |   2m 10s |  the patch passed  || +1 |  javac  |   2m 10s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 17 unchanged - 1 fixed = 17 total (was 18)  || +1 |  checkstyle  |   1m 10s |  The patch passed checkstyle in hbase-server  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 46s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 46s |  the patch passed  || +1 |  javadoc  |   0m 50s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 19s |  hbase-procedure in the patch passed.  || +1 |  unit  | 123m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 169m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21321 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3f89dd9940c0 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / afa7d6ed43 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4413 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21490,https://issues.apache.org/jira/browse/HBASE-21490,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,WALProcedure may remove proc wal files still with active procedures,NO,"It happens for me several times. After master restart, all the procedures are gone.

And the proc wal files were deleted before restarting, I see this in the master's log

{noformat}
2018-11-16,20:57:40,177 INFO [WALProcedureStoreSyncThread] org.apache.hadoop.hbase.procedure2.store.wal.WALProcedureStore: Remove all state logs with ID less than 184, since all the active procedures are in the latest log
2018-11-16,20:57:40,177 INFO [WALProcedureStoreSyncThread] org.apache.hadoop.hbase.procedure2.store.wal.ProcedureWALFile: Archiving hdfs://c4tst-xiaomi/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000184.log to hdfs://c4tst-xiaomi/hbase/c4tst-sync1/oldWALs/pv2-00000000000000000184.log
{noformat}

Let me dig...","** Comment 1 **
OK, the root cause is a bug in RecoverStandByProcedure, there is a NPE when loading it and then causes the master down. But after two times of restarts, the file contains the procedures is deleted.2018-11-16,20:43:37,454 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.33	cmd=create	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   perm=hbase_tst:supergroup:rw-r-----	proto=rpc2018-11-16,21:05:58,652 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=open	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   proto=rpc2018-11-16,21:05:58,747 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=open	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   proto=rpc2018-11-16,21:06:04,196 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=open	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   proto=rpc2018-11-16,21:06:04,305 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=open	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   proto=rpc2018-11-16,21:06:04,669 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=rename	src=/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log   dst=/hbase/c4tst-sync1/oldWALs/pv2-00000000000000000185.log	perm=hbase_tst:supergroup:rw-r-----	proto=rpc2018-11-16,21:07:12,776 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit: allowed=true	ugi=hbase_tst/hadoop@XIAOMI.HADOOP (auth:KERBEROS)	ip=/10.132.16.34	cmd=delete	src=/hbase/c4tst-sync1/oldWALs/pv2-00000000000000000185.log	Let me check what is going on here...

** Comment 2 **
OK I found this2018-11-16,21:06:04,667 INFO  org.apache.hadoop.hbase.procedure2.store.wal.WALProcedureStore: Remove the oldest log hdfs://c4tst-xiaomi/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log2018-11-16,21:06:04,667 INFO  org.apache.hadoop.hbase.procedure2.store.wal.ProcedureWALFile: Archiving hdfs://c4tst-xiaomi/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log to hdfs://c4tst-xiaomi/hbase/c4tst-sync1/oldWALs/pv2-00000000000000000185.log2018-11-16,21:06:04,672 DEBUG  org.apache.hadoop.hbase.procedure2.store.wal.WALProcedureStore: Removed log=hdfs://c4tst-xiaomi/hbase/c4tst-sync1/MasterProcWALs/pv2-00000000000000000185.log, activeLogs=I think there maybe something wrong when building the holdingCleanupTracker under some special case. Let me dig.

** Comment 3 **
OK I think I found the problem...In ProcedureExecutor.load, we will do this in the finally block{code}      try {        // try to cleanup inactive wals and complete the operation        buildHoldingCleanupTracker();        tryCleanupLogsOnLoad();        loading.set(false);      } finally {        lock.unlock();      }{code}And also, in ProcedureExecutor.stop, we will close the current log stream, and persist the current storeTracker into the file.And this is the code when loading procedures{code}  public static void load(Iterator<ProcedureWALFile> logs, ProcedureStoreTracker tracker,      Loader loader) throws IOException {    ProcedureWALFormatReader reader = new ProcedureWALFormatReader(tracker, loader);    tracker.setKeepDeletes(true);    try {      // Ignore the last log which is current active log.      while (logs.hasNext()) {        ProcedureWALFile log = logs.next();        log.open();        try {          reader.read(log);        } finally {          log.close();        }      }      reader.finish();      // The tracker is now updated with all the procedures read from the logs      if (tracker.isPartial()) {        tracker.setPartialFlag(false);      }      tracker.resetModified();    } finally {      tracker.setKeepDeletes(false);    }  }{code}And for HBASE-21494, we will throw exception at reader.finish, so we do not unset the partial flag, and more important, we do not call resetModified, this means that the current storeTracker will have all the active procedures modified.So after the first crash, we will persist the broken storeTracker into the file, and when loading the second time, we will load this storeTracker, and since we will open another new file, this will not be the last file, which means we will use its modified bits when building holdingCleanupTracker, and no doubt, it contains all active procedures so we think it is OK to delete the all the files before it...And although the second time we will still crashes, the buildHoldingCleanupTracker and removeInactiveLogs are in the finally block, the above logic will still be executed and then we will delete all the proc wal files...Let me think how to fix.  FYI.

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
We do not set abort to true when aborting master, this is why the UT will fail. But in a real production I think we should do more, as we'd better not rely on the abort flag, we should know that the store tracker is in a broken state...

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  0s |  master passed  || +1 |  compile  |   2m 10s |  master passed  || +1 |  checkstyle  |   1m 18s |  master passed  || +1 |  shadedjars  |   3m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 18s |  master passed  || +1 |  javadoc  |   0m 44s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  3s |  the patch passed  || +1 |  compile  |   2m 10s |  the patch passed  || +1 |  javac  |   2m 10s |  the patch passed  || +1 |  checkstyle  |   1m 19s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 19s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 36s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   3m 41s |  hbase-procedure in the patch failed.  || +1 |  unit  | 131m 13s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 50s |  The patch does not generate ASF License warnings.  ||  |   | 174m 36s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestForceUpdateProcedure ||   | hadoop.hbase.procedure2.store.wal.TestWALProcedureStore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21490 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux db803b92b851 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f874232a67 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4921 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Let me check the failed UT, they should be related.The problem could also happen for branch-2,1 & 2.0, as the root cause is that, we fail when loading and leave the storeTracker in an intermediate state and then persist it with a proc wal file.

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  1s |  master passed  || +1 |  compile  |   2m 49s |  master passed  || +1 |  checkstyle  |   1m 38s |  master passed  || +1 |  shadedjars  |   4m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  4s |  master passed  || +1 |  javadoc  |   0m 54s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  0s |  the patch passed  || +1 |  compile  |   2m 55s |  the patch passed  || +1 |  javac  |   2m 55s |  the patch passed  || +1 |  checkstyle  |   1m 39s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 44s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 32s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 22s |  the patch passed  || +1 |  javadoc  |   0m 54s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   3m 54s |  hbase-procedure in the patch failed.  || -1 |  unit  | 282m 24s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 49s |  The patch does not generate ASF License warnings.  ||  |   | 336m  7s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestForceUpdateProcedure ||   | hadoop.hbase.procedure2.store.wal.TestWALProcedureStore ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClientAfterSplittingRegions ||   | hadoop.hbase.client.TestCloneSnapshotFromClientAfterSplittingRegion ||   | hadoop.hbase.client.TestRestoreSnapshotFromClientAfterSplittingRegions ||   | hadoop.hbase.master.procedure.TestServerCrashProcedureWithReplicas ||   | hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.client.TestMobCloneSnapshotFromClientAfterSplittingRegion ||   | hadoop.hbase.client.TestAdmin1 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21490 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e7388e1233f9 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f555258e7a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4913 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 14 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 56s |  master passed  || +1 |  compile  |   2m  7s |  master passed  || +1 |  checkstyle  |   1m 20s |  master passed  || +1 |  shadedjars  |   3m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 23s |  master passed  || +1 |  javadoc  |   0m 43s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  2s |  the patch passed  || +1 |  compile  |   2m 10s |  the patch passed  || +1 |  javac  |   2m 10s |  the patch passed  || +1 |  checkstyle  |   1m 20s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 18s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 35s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 32s |  hbase-procedure in the patch passed.  || +1 |  unit  | 130m 49s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 51s |  The patch does not generate ASF License warnings.  ||  |   | 174m  1s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21490 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f48da578f574 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b329e6e3f2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4937 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 15 **
[Comment excluded]

** Comment 16 **
{quote}can we just use abort flag?{quote}No we don't. As said above, the sync thread will do periodicalRoll if not in loading state, in this method we just call the close method with abort = false. And it could happen that we fail to load procedures, and before we actually call stop with abort = true, the sync thread has already deleted some inactive logs based on the broken store tracker.So generally speaking, we should store the 'failed loading' state in the class to prevent further damage, since damage could happen before we call stop with abort = true.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 21 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 23 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21266,https://issues.apache.org/jira/browse/HBASE-21266,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/DeadServer.java,"Not running balancer because processing dead regionservers, but empty dead rs list",NO,"Found during ITBLL testing. AM in master gets into a state where manual attempts from the shell to run the balancer always return false and this is printed in the master log:

2018-10-03 19:17:14,892 DEBUG [RpcServer.default.FPBQ.Fifo.handler=21,queue=0,port=8100] master.HMaster: Not running balancer because processing dead regionserver(s): 

Note the empty list. 

This errant state did not recover without intervention by way of master restart, but the test environment was chaotic so needs investigation.","** Comment 1 **
Took a quick look at the related code, I have one question,  did you see this line in log ""Number of dead servers in processing should always be non-negative""?If so, it could be a race condition happened to int 'numProcessing' or hashMap 'deadServers'.

** Comment 2 **
bq.  ""Number of dead servers in processing should always be non-negative""You are looking at that assert in DeadServer#finish, right? Those aren't evaulated unless the JVM is started with the -ea command line flag, which I didn't do. We can see from the log line I did see that the dead server map was empty at the time so I agree we should look at accounting in [file java].""Not running balancer because processing dead regionserver(s)"" is printed from [file java]:1846 based on the result from ServerManager#areDeadServersInProgress, which passes through the result from DeadServer#areDeadServersInProgress, which is simply{code}  public synchronized boolean areDeadServersInProgress() { return processing; }{code}This boolean is cleared in DeadServer#finish when{code}if (numProcessing == 0) { processing = false; }{code}So the first question I have is why do we even need this boolean field? It can easily be derived cheaply from other state. In areDeadServersInProgress just return the result of {{!(numProcessing == 0)}}. That assert you observed should be replaced by use of Preconditions so we will get a RuntimeException that will get noticed. 

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
This is going to need more work.With this change in place a unit in TestAssignmentManagerOnCluster will fail.Also, in ITBLL test scenarios with serverKilling policy, if the master is terminated while a region is splitting upon restart we can get this:2018-10-09 20:59:46,242 WARN  master.AssignmentManager: Dropped splitting! Not in state good for SPLITTING; rs_p={332d04e88521c71ea4505592e434c9d1 state=SPLITTING, ts=1539118786241, server=ip-172-31-13-83.us-west-2.compute.internal,8120,1539118587733}, rs_a={1bbe77be39dfd903b31d00b98b02f842 state=OFFLINE, ts=1539118786229, server=null}, rs_b={6d6f67867f14d37c4fe35f3fe23f6cd8 state=OFFLINE, ts=1539118786230, server=null}and the daughter regions will remain unassigned and unavailable, requiring hbck -fixAssignments. I think I see a mistake in the patch. Let me try again. 

** Comment 10 **
[Comment excluded]

** Comment 11 **
Updated patch. Improved logging

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
I think Mingliang's point is because every method is synchronized there can never be more than one thread accessing or updating {{numProcessing}} at once. If someone changes that there should be a findbugs warning about a partially synchronized class. That said I'm testing what we have now and it looks good, loathe to make another change if not really needed.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m 17s |  branch-1 passed  || +1 |  compile  |   0m 32s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 35s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 15s |  branch-1 passed  || +1 |  shadedjars  |   2m 24s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 32s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 32s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 28s |  the patch passed  || +1 |  compile  |   0m 32s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 32s |  the patch passed  || +1 |  compile  |   0m 36s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 36s |  the patch passed  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 2 new + 1 unchanged - 5 fixed = 3 total (was 6)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 27s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 34s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 25s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 34s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 139m 21s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   | 163m 40s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.security.visibility.TestVisibilityLabelsWithACL ||   | hadoop.hbase.master.TestDeadServer ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.master.TestMasterBalanceThrottling ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.master.procedure.TestServerCrashProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0f5fd7a7dedf 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / ac94011 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3873 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 21 **
Better WIP patch. Same as previous WIP patch but toString dumps servers in both deadServers and processingServers sets, and puts an asterisk next to servers in the processing set, better for debugging

** Comment 22 **
Yeah those precommit failures were expected. Let me set this back to open until ready

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 33s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   7m 46s |  branch-1 passed  || +1 |  compile  |   0m 34s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 35s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 15s |  branch-1 passed  || +1 |  shadedjars  |   2m 35s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 31s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 34s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 35s |  the patch passed  || +1 |  compile  |   0m 33s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 33s |  the patch passed  || +1 |  compile  |   0m 35s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 35s |  the patch passed  || -1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 1 new + 3 unchanged - 5 fixed = 4 total (was 8)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 41s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 25s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 33s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 146m 17s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 170m 48s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS ||   | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7cf1e572a217 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 1cba67b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4438 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 27 **
All unit tests pass for me locally. The remaining failures in precommit do not seem related to this change but I'll come back and look at them again. Now moving to ITBLL testing of the latest.

** Comment 28 **
Update patch to address checkstyle ImportOrder warning

** Comment 29 **
With latest patch this issue cannot be reproduced and the AM is stable in ITBLL testing 500M rows with serverKilling chaos policy, which completes successfully. Verified with added debug logging in DeadServer, periodic hbck invocation (cluster always returned to a 0 inconsistencies detected state), and periodic balancer invocation, and the unit test suite. We no longer rely on an integer counter and boolean to track the processing status of dead servers. Instead DeadServer uses a Set from which expected state checks are derived, logging is improved, and there is a new runtime visible assert for incorrect API usage (which doesn't assert in any testing). 

** Comment 30 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   1m 39s |  branch-1 passed  || +1 |  compile  |   0m 34s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 38s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 17s |  branch-1 passed  || +1 |  shadedjars  |   2m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 27s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 35s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 34s |  the patch passed  || +1 |  compile  |   0m 35s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 35s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 37s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 0 new + 3 unchanged - 5 fixed = 3 total (was 8)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 41s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 32s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| +1 |  unit  | 111m 17s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 31s |  The patch does not generate ASF License warnings.  ||  |   | 130m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1bd0a354d67a 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / ed7beac || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 ||  Test Results | [link] || Max. process+thread count | 3595 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 31 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m  4s |  branch-1 passed  || +1 |  compile  |   0m 41s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 45s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 41s |  branch-1 passed  || +1 |  shadedjars  |   3m 17s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 41s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 37s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 54s |  the patch passed  || +1 |  compile  |   0m 41s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 41s |  the patch passed  || +1 |  compile  |   0m 43s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 43s |  the patch passed  || +1 |  checkstyle  |   1m 31s |  hbase-server: The patch generated 0 new + 3 unchanged - 5 fixed = 3 total (was 8)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 47s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 33s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 41s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 107m  5s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 135m 16s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestReplicasClient |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 53af7bf43ba7 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / ed7beac || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3933 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 32 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  2s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m 14s |  branch-1 passed  || +1 |  compile  |   0m 43s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 41s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 30s |  branch-1 passed  || +1 |  shadedjars  |   3m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 37s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 38s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 40s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 37s |  the patch passed  || +1 |  compile  |   0m 40s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 40s |  the patch passed  || +1 |  checkstyle  |   1m 20s |  hbase-server: The patch generated 0 new + 3 unchanged - 5 fixed = 3 total (was 8)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 39s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 37s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 27s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 103m 49s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   | 130m  6s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestZKLessSplitOnCluster ||   | hadoop.hbase.regionserver.TestEndToEndSplitTransaction |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 440f79487978 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / ed7beac || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4135 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 33 **
Those test failures in precommit might be flakes, let me see if I can reproduce them. I ran split, merge, assignment, and balancer tests, including the tests in question, and am not seeing any issues.  Running org.apache.hadoop.hbase.util.TestMergeTable Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 26.85 s - in org.apache.hadoop.hbase.util.TestMergeTable Running org.apache.hadoop.hbase.util.TestMergeTool Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 19.995 s - in org.apache.hadoop.hbase.util.TestMergeTool Running org.apache.hadoop.hbase.util.TestRegionSplitter Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.962 s - in org.apache.hadoop.hbase.util.TestRegionSplitter Running org.apache.hadoop.hbase.util.TestRegionSplitCalculator Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.968 s - in org.apache.hadoop.hbase.util.TestRegionSplitCalculator Running org.apache.hadoop.hbase.wal.TestWALSplit Tests run: 33, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 46.067 s - in org.apache.hadoop.hbase.wal.TestWALSplit Running org.apache.hadoop.hbase.wal.TestWALSplitBoundedLogWriterCreation Tests run: 33, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 43.419 s - in org.apache.hadoop.hbase.wal.TestWALSplitBoundedLogWriterCreation Running org.apache.hadoop.hbase.wal.TestWALSplitCompressed Tests run: 33, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 46.075 s - in org.apache.hadoop.hbase.wal.TestWALSplitCompressed Running org.apache.hadoop.hbase.mapred.TestSplitTable Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.774 s - in org.apache.hadoop.hbase.mapred.TestSplitTable Running org.apache.hadoop.hbase.regionserver.TestRegionSplitPolicy Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.836 s - in org.apache.hadoop.hbase.regionserver.TestRegionSplitPolicy Running org.apache.hadoop.hbase.regionserver.TestCompactSplitThread Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 30.692 s - in org.apache.hadoop.hbase.regionserver.TestCompactSplitThread Running org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 87.588 s - in org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster Running org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.796 s - in org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss Running org.apache.hadoop.hbase.regionserver.TestSplitTransaction Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.14 s - in org.apache.hadoop.hbase.regionserver.TestSplitTransaction Running org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.715 s - in org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction Running org.apache.hadoop.hbase.regionserver.TestZKLessSplitOnCluster Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 71.721 s - in org.apache.hadoop.hbase.regionserver.TestZKLessSplitOnCluster Running org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 59.082 s - in org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction Running org.apache.hadoop.hbase.regionserver.TestSplitLogWorker Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.689 s - in org.apache.hadoop.hbase.regionserver.TestSplitLogWorker Running org.apache.hadoop.hbase.regionserver.TestZKLessMergeOnCluster Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 28.068 s - in org.apache.hadoop.hbase.regionserver.TestZKLessMergeOnCluster Running org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 35.386 s - in org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster Running org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 185.692 s - in org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster Running org.apache.hadoop.hbase.master.TestDistributedLogSplitting Tests run: 18, Failures: 0, Errors: 0, Skipped: 15, Time elapsed: 90.971 s - in org.apache.hadoop.hbase.master.TestDistributedLogSplitting Running org.apache.hadoop.hbase.master.TestAssignmentListener Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.569 s - in org.apache.hadoop.hbase.master.TestAssignmentListener Running org.apache.hadoop.hbase.master.TestMasterBalanceThrottling Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 35.732 s - in org.apache.hadoop.hbase.master.TestMasterBalanceThrottling Running org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 382.057 s - in org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 Running org.apache.hadoop.hbase.master.balancer.TestBalancerStatusTagInJMXMetrics Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 12.546 s - in org.apache.hadoop.hbase.master.balancer.TestBalancerStatusTagInJMXMetrics Running org.apache.hadoop.hbase.master.balancer.TestFavoredNodeAssignmentHelper Tests run: 8, Failures: 0, Errors: 0, Skipped: 8, Time elapsed: 0.053 s - in org.apache.hadoop.hbase.master.balancer.TestFavoredNodeAssignmentHelper Running org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.029 s - in org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer Running org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer Tests run: 24, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 194.946 s - in org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer Running org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.936 s - in org.apache.hadoop.hbase.master.balancer.TestBaseLoadBalancer Running org.apache.hadoop.hbase.master.TestSplitLogManager Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 137.272 s - in org.apache.hadoop.hbase.master.TestSplitLogManager Running org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.514 s - in org.apache.hadoop.hbase.master.TestAssignmentManagerMetrics Running org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.396 s - in org.apache.hadoop.hbase.master.TestMasterFailoverBalancerPersistence Running org.apache.hadoop.hbase.TestStochasticBalancerJmxMetrics Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.019 s - in org.apache.hadoop.hbase.TestStochasticBalancerJmxMetrics Running org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 75.973 s - in org.apache.hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFilesSplitRecovery Running org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 80.267 s - in org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFilesSplitRecovery Running org.apache.hadoop.hbase.mapreduce.TestTableSplit Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.967 s - in org.apache.hadoop.hbase.mapreduce.TestTableSplit Running org.apache.hadoop.hbase.client.TestSplitOrMergeStatus Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 149.744 s - in org.apache.hadoop.hbase.client.TestSplitOrMergeStatus Results: Tests run: 344, Failures: 0, Errors: 0, Skipped: 27 Running org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.206 s - in org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal Running org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancer Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.665 s - in org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancer Running org.apache.hadoop.hbase.rsgroup.TestRSGroupsBalance Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 39.346 s - in org.apache.hadoop.hbase.rsgroup.TestRSGroupsBalance Results: Tests run: 9, Failures: 0, Errors: 0, Skipped: 0

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 3 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m 20s |  branch-1 passed  || +1 |  compile  |   0m 37s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 40s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 29s |  branch-1 passed  || +1 |  shadedjars  |   2m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 36s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 37s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 42s |  the patch passed  || +1 |  compile  |   0m 48s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 48s |  the patch passed  || +1 |  compile  |   0m 45s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 45s |  the patch passed  || +1 |  checkstyle  |   1m 41s |  hbase-server: The patch generated 0 new + 68 unchanged - 5 fixed = 68 total (was 73)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 56s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 48s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 27s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 38s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 129m 43s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 156m 56s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestReplicasClient ||   | hadoop.hbase.client.TestAdmin2 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a93cdffc2032 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / b73aab8 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4114 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 38 **
I just ran into this testing tip of branch-2.1Patch looks good to me.Are the check for logging level and avoidance of interpolation because this a branch-1 patch?  e.g.161	        if (LOG.isDebugEnabled()) {162	          LOG.debug(""Removing old instance of server from processingServers set: "" + sn +163	            "" (numProcessing="" + processingServers.size() + "")"");164	        }Any value in checking the add/remove to set return values? If only to log?

** Comment 39 **
bq. Are the check for logging level and avoidance of interpolation because this a branch-1 patch? e.g.Yesbq. Any value in checking the add/remove to set return values? If only to log?Yes, let me update. Back in a bit.

** Comment 40 **
Updated patch with suggestion from *, also fixed something dumb I did with logging* - Logging only, no change to API. Ok?

** Comment 41 **
[Comment excluded]

** Comment 42 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 3 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   7m 57s |  branch-1 passed  || +1 |  compile  |   0m 43s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   0m 43s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   1m 27s |  branch-1 passed  || +1 |  shadedjars  |   2m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 44s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 43s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 58s |  the patch passed  || +1 |  compile  |   0m 45s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   0m 45s |  the patch passed  || +1 |  compile  |   0m 43s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   0m 43s |  the patch passed  || +1 |  checkstyle  |   1m 29s |  hbase-server: The patch generated 0 new + 68 unchanged - 5 fixed = 68 total (was 73)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 59s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 30s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   0m 39s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| +1 |  unit  | 113m 45s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 36s |  The patch does not generate ASF License warnings.  ||  |   | 141m 33s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1fabe85234fb 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / d385ba1 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 ||  Test Results | [link] || Max. process+thread count | 3853 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 43 **
[Comment excluded]

** Comment 44 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 3 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   8m  5s |  branch-1 passed  || +1 |  compile  |   1m 18s |  branch-1 passed with JDK v1.8.0_181  || +1 |  compile  |   1m  2s |  branch-1 passed with JDK v1.7.0_191  || +1 |  checkstyle  |   2m  4s |  branch-1 passed  || +1 |  shadedjars  |   3m 57s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m 15s |  branch-1 passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m  1s |  branch-1 passed with JDK v1.7.0_191  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   2m 37s |  the patch passed  || +1 |  compile  |   1m 21s |  the patch passed with JDK v1.8.0_181  || +1 |  javac  |   1m 21s |  the patch passed  || +1 |  compile  |   1m  6s |  the patch passed with JDK v1.7.0_191  || +1 |  javac  |   1m  6s |  the patch passed  || +1 |  checkstyle  |   1m 56s |  hbase-server: The patch generated 0 new + 68 unchanged - 5 fixed = 68 total (was 73)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   2m 36s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   1m  6s |  the patch passed with JDK v1.8.0_181  || +1 |  javadoc  |   1m  3s |  the patch passed with JDK v1.7.0_191  ||| || || ||  Other Tests  ||| -1 |  unit  | 144m 32s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 180m 14s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestMasterBalanceThrottling ||   | hadoop.hbase.regionserver.TestPerColumnFamilyFlush |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6c53abad2425 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / d385ba1 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_191 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_181 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_191 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3904 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 45 **
[Comment excluded]

** Comment 46 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 55s |  branch-2.1 passed  || +1 |  compile  |   2m 14s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 24s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 11s |  branch-2.1 passed  || +1 |  javadoc  |   0m 38s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   1m 58s |  the patch passed  || +1 |  javac  |   1m 58s |  the patch passed  || -1 |  checkstyle  |   1m 18s |  hbase-server: The patch generated 2 new + 2 unchanged - 5 fixed = 4 total (was 7)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  9s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 32s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 111m 39s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 152m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21266 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 02728695d635 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 72af27b8c9 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4368 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
[Comment excluded]

** Comment 54 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 55 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 56 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 57 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 58 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 59 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 60 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21191,https://issues.apache.org/jira/browse/HBASE-21191,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java,Add a holding-pattern if no assign for meta or namespace (Can happen if masterprocwals have been cleared).,NO,"If the masterprocwals have been removed -- operator error, hdfs dataloss, or because we have gotten ourselves into a pathological state where we have hundreds of masterprocwals too process and it is taking too long so we just want to startover -- then master startup will have a dilemma. Master startup needs hbase:meta to be online. If the masterprocwals have been removed, there may be no outstanding assign or a servercrashprocedure with coverage for hbase:meta (I ran into this issue repeatedly in internal testing purging masterprocwals on a large test cluster). Worse, when master startup cannot find an online hbase:meta, it exits after exhausting the RPC retries.

So, we need a holding-pattern for master startup if hbase:meta is not online if only so an operator can schedule an assign for meta or so they can assign fixup procedures (HBASE-21035 has discussion on why we cannot just auto-schedule an assign of meta).","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Playing w/ this patch... I removed master wal procs content. Had to remove WALs for any old servers too else the meta assign was getting scheduled; i.e. its hard to manufacture case where there is no assign for hbase:meta.I tried to use straight shell assign to do the hbase:meta assign but it came back with:{code}ERROR: org.apache.hadoop.hbase.PleaseHoldException: Master is initializing	at org.apache.hadoop.hbase.master.HMaster.checkInitialized([file java]:2966)	at org.apache.hadoop.hbase.master.MasterRpcServices.assignRegion([file java]:558)	at org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod([file java])	at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:413)	at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:130)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:324)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:304){code}So, ok, this should be an hbck2 task. Working on it. 

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  4s |  branch-2.1 passed  || +1 |  compile  |   2m  8s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 39s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 28s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 36s |  branch-2.1 passed  || +1 |  javadoc  |   0m 48s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  3s |  the patch passed  || +1 |  compile  |   2m 12s |  the patch passed  || +1 |  javac  |   2m 12s |  the patch passed  || -1 |  checkstyle  |   1m 21s |  hbase-server: The patch generated 8 new + 366 unchanged - 0 fixed = 374 total (was 366)  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 50s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 51s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 54s |  the patch passed  || +1 |  javadoc  |   0m 47s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 28s |  hbase-common in the patch passed.  || -1 |  unit  | 133m 13s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 176m 52s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 5b9a113f1725 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 487f713c63 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4649 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m 29s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 26s |  branch-2.1 passed  || +1 |  compile  |   2m 24s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 47s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 43s |  branch-2.1 passed  || +1 |  javadoc  |   0m 54s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 16s |  the patch passed  || +1 |  compile  |   2m 18s |  the patch passed  || +1 |  javac  |   2m 18s |  the patch passed  || -1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 8 new + 366 unchanged - 0 fixed = 374 total (was 366)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 55s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 39s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 24s |  hbase-common in the patch passed.  || -1 |  unit  | 156m 59s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 41s |  The patch does not generate ASF License warnings.  ||  |   | 204m 57s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0d8e4e1883ab 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 487f713c63 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4600 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
Just reviewed the patch. It is a bit of hack I think...I think we don't have to scan the meta table to make sure it is online. We can just check the RegionState.The logic should like this:if RegionSate of meta shows offline, then schedule a initMetaProc (don't if there is already one)if RegionSate of meta shows online, then check if the server is aliveif the server is not alive , thenLoop wait here to check the RegionState, until meta is online on a alive server. Meatime, we can log a message to tell the operator to do something as in the patch.Another opinion is that we don't have to wait namespace region. Since we are already doing it async in initClusterSchemaService(). 

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  7s |  branch-2.1 passed  || +1 |  compile  |   2m 11s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 39s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 27s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 37s |  branch-2.1 passed  || +1 |  javadoc  |   0m 50s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  5s |  the patch passed  || +1 |  compile  |   2m 20s |  the patch passed  || +1 |  javac  |   2m 20s |  the patch passed  || -1 |  checkstyle  |   1m 18s |  hbase-server: The patch generated 11 new + 366 unchanged - 0 fixed = 377 total (was 366)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  1s |  the patch passed  || +1 |  javadoc  |   0m 50s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 29s |  hbase-common in the patch passed.  || -1 |  unit  | 134m 28s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 178m 23s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux fd338e4636ad 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 589c1e4078 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4813 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 19s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 12s |  branch-2.1 passed  || +1 |  compile  |   2m 16s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 47s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 38s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 35s |  branch-2.1 passed  || +1 |  javadoc  |   0m 50s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   2m 11s |  the patch passed  || +1 |  javac  |   2m 11s |  the patch passed  || -1 |  checkstyle  |   1m 21s |  hbase-server: The patch generated 4 new + 366 unchanged - 0 fixed = 370 total (was 366)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 41s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 40s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  0s |  the patch passed  || +1 |  javadoc  |   0m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 27s |  hbase-common in the patch passed.  || -1 |  unit  | 136m 10s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 180m 16s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ab6c6155be21 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 589c1e4078 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4354 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 15s |  branch-2.1 passed  || +1 |  compile  |   2m 17s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 42s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 32s |  branch-2.1 passed  || +1 |  javadoc  |   0m 47s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 12s |  the patch passed  || +1 |  compile  |   2m 38s |  the patch passed  || +1 |  javac  |   2m 38s |  the patch passed  || -1 |  checkstyle  |   1m 29s |  hbase-server: The patch generated 4 new + 366 unchanged - 0 fixed = 370 total (was 366)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  9s |  the patch passed  || +1 |  javadoc  |   0m 53s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 48s |  hbase-common in the patch passed.  || -1 |  unit  | 130m 52s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 40s |  The patch does not generate ASF License warnings.  ||  |   | 177m 52s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 5c02e71bf859 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 198aa90665 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4798 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 13 **
.006 is more review by Speculation has it that the reordering around startup will cause FavoredNodes and other balancers grief. I tried to verify this was the case locally w/ a test that ran with FavoredNodes enabled but it seems fine. Rather than go off and spend time on the undocumented and a feature few if any run, I'm going to punt until complaint.Will push this patch if it comes back good.

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 14s |  branch-2.1 passed  || +1 |  compile  |   2m 19s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 43s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 29s |  branch-2.1 passed  || +1 |  javadoc  |   0m 53s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  5s |  the patch passed  || +1 |  compile  |   2m 14s |  the patch passed  || +1 |  javac  |   2m 14s |  the patch passed  || +1 |  checkstyle  |   1m 41s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 56s |  the patch passed  || +1 |  javadoc  |   0m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 27s |  hbase-common in the patch passed.  || +1 |  unit  | 112m 57s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 36s |  The patch does not generate ASF License warnings.  ||  |   | 156m 56s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c2338408ef1b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 842e0c974d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4904 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 15s |  branch-2.1 passed  || +1 |  compile  |   2m 19s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 41s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 37s |  branch-2.1 passed  || +1 |  javadoc  |   0m 48s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   2m 42s |  the patch passed  || +1 |  javac  |   2m 42s |  the patch passed  || -1 |  checkstyle  |   1m 28s |  hbase-server: The patch generated 4 new + 366 unchanged - 0 fixed = 370 total (was 366)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 56s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 24s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 48s |  hbase-common in the patch passed.  || +1 |  unit  | 133m 10s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 180m 46s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7f3f4c0733a9 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 842e0c974d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4532 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 21 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 22 **
[Comment excluded]

** Comment 23 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| +1 |  mvninstall  |   3m  7s |  branch-2.0 passed  || +1 |  compile  |   1m 53s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 22s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 12s |  branch-2.0 passed  || +1 |  javadoc  |   0m 30s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   2m 43s |  the patch passed  || +1 |  compile  |   1m 44s |  the patch passed  || +1 |  javac  |   1m 44s |  the patch passed  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 397 unchanged - 5 fixed = 397 total (was 402)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 10s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 22s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 115m 42s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 150m 51s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21191 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux be2071208471 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / a3b2686114 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4198 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 28 **
[Comment excluded]

** Comment 29 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21259,https://issues.apache.org/jira/browse/HBASE-21259,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java,[amv2] Revived deadservers; recreated serverstatenode,NO,"On startup, I see servers being revived; i.e. their serverstatenode is getting marked online even though its just been processed by ServerCrashProcedure. It looks like this (in a patched server that reports on whenever a serverstatenode is created):

{code}
2018-09-29 03:45:40,963 INFO org.apache.hadoop.hbase.procedure2.ProcedureExecutor: Finished pid=3982597, state=SUCCESS; ServerCrashProcedure server=vb1442.halxg.cloudera.com,22101,1536675314426, splitWal=true, meta=false in 1.0130sec
...

2018-09-29 03:45:43,733 INFO org.apache.hadoop.hbase.master.assignment.RegionStates: CREATING! vb1442.halxg.cloudera.com,22101,1536675314426
java.lang.RuntimeException: WHERE AM I?
        at org.apache.hadoop.hbase.master.assignment.RegionStates.getOrCreateServer(RegionStates.java:1116)
        at org.apache.hadoop.hbase.master.assignment.RegionStates.addRegionToServer(RegionStates.java:1143)
        at org.apache.hadoop.hbase.master.assignment.AssignmentManager.markRegionAsClosing(AssignmentManager.java:1464)
        at org.apache.hadoop.hbase.master.assignment.UnassignProcedure.updateTransition(UnassignProcedure.java:200)
        at org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure.execute(RegionTransitionProcedure.java:369)
        at org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure.execute(RegionTransitionProcedure.java:97)
        at org.apache.hadoop.hbase.procedure2.Procedure.doExecute(Procedure.java:953)
        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure(ProcedureExecutor.java:1716)
        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure(ProcedureExecutor.java:1494)
        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900(ProcedureExecutor.java:75)
        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run(ProcedureExecutor.java:2022)

{code}

See how we've just finished a SCP which will have removed the serverstatenode... but then we come across an unassign that references the server that was just processed. The unassign will attempt to update the serverstatenode and therein we create one if one not present. We shouldn't be creating one.

I think I see this a lot because I am scheduling unassigns with hbck2. The servers crash and then come up with SCPs doing cleanup of old server and unassign procedures in the procedure executor queue to be processed still....  but could happen at any time on cluster should an unassign happen get scheduled near an SCP.","** Comment 1 **
[Comment excluded]

** Comment 2 **
 It prevents our being able to finish unassigns when the server involved has been crash processed; they end up hanging around suspended forever (STUCK).The way unassign works when remote server is 'crashed' being processed or finished being processed is that we ask the ServerStateNode if log split has been done or if it is online. If not, we suspend ourselves waiting on SCP to tell us when it is ok to proceed. If the server becomes 'online' again unintentionally, then we have a bunch of regions STUCK, suspended (For detail, see UnassignProcedure#remoteCallFailed).I've been running this patch on cluster and seems to do the job. Let me run it longer to be sure.

** Comment 3 **
Could you upload the log, ? I tried hard to construct a UT to reproduce this, but I can't find a case that a UnassignProcedure scheduled before SCP can be stuck because of this.If the UnassignProcedure is executed after SCP, it should send close request to the new RS(According to RegionStateNode). If the UnassignProcedure is executed before SCP, it should receive the remoteCallFailed.

** Comment 4 **
Scenario is this: * meta has regions that reference a regionserver that is long gone. It was processed (or not if all MasterProcWALs have been removed) many restarts ago. * The table is borked. Some regions are not unassigned though their table is. * We run a mass unassign. Because table has many unassigned regions, it takes a while. * The first unassign queues a SCP for the long-dead server. It quickly runs through the SCP and finishes.. no logs to split. * Soon after, another scheduled unassign for same server is run. It queues an SCP (remember, if the unassign is against a server that is not online, we queue SCP and then wait on the SCP to wake the unassign so we do proper unassign cleanup in the handleRIT callback)... only in this case, the server is in the deadserver list and has been processed.... so this last assign just hangs for ever because the check for server state creates a new serverstatenode and new serverstatenodes default ONLINE.It is sort of wonky and not 'usual' but I've been trashing my cluster and then trying to repair with hbck2. This is how I run into the odd state reported above.  In particular, on start, the load of meta will put all regions into RIT. If no online server associated, then the regions are considered STUCK. I then do a bulk assign or unassign of the OPENING/CLOSING regions to clean up the RITs... (Tens of thousands on this big cluster) and then I run into the issue described here... where a bunch of unassigns end-up suspended never to be woken up.A test would be sort of tough given the state is not normal.Thanks 

** Comment 5 **
Let me backup . I was playing with a patch and it seems to bring on new sets of issues. Let me back it out and start over. I'll paste you a log then.bq. It seems like a bug, but, adding a crashed server into ServerStateNode will casue any trouble?I was freaked out by the number of SCPs.... was about one per region of which there were hundreds and then hundreds of different servers.I'll be back.

** Comment 6 **
 * meta  has a region in CLOSING state against a server that has no mention in fs, is not online, nor has it a znode so it is 'unknown' to the system. * I try to move the region 'manually' via hbck2 from CLOSING to CLOSED -- i.e. unassign -- so I can assign it elsewhere. The CLOSING dispatch fails because no such server and the UP expires the server which queues a SCP. * The SCP runs. Finds no logs to splits. Finds the stuck UP and calls it's handleFailure. The UP then moves to CLOSED and all is good. * Except, the SCP has now resulted in their being a deadserver element. * So, when the next region that references the 'unknown' server comes along, it goes to unassign, fails, and tries to queue a server expiration..... * But the attempt at expiration is rejected because 'there is one in progress already' (because the server has an entry in dead servers -- See ServerManager#expireServer) so we skip out without queuing a new SCP. * This second UP and all subsequent regions that were pointing to the 'unknown' server end up 'hung', suspended waiting for someone to wake them.I have to call 'bypass' on each to get them out of suspend. I cannot unassign the regions, not in bulk at least.If a server is dead we should not be reviving it. It causes more headache that it solves.My first patch was stopping our reviving a server if it unknown but it messed up startup. Let me try and be more clinical.

** Comment 7 **
.001 seems to work mostly (it has worked 99% of the time... trying to figure where the holes are). It is simply an undo of all the places we auto-create ServerStateNodes so that we don't create one long after a server has been dead and gone (messing up UP#remoteCallFailed processing).Let me figure where the holes are and see if I can do a test too.

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 26s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 15s |  branch-2.1 passed  || +1 |  compile  |   1m 46s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 15s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 57s |  branch-2.1 passed  || +1 |  javadoc  |   0m 32s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| -1 |  mvninstall  |   2m 23s |  root in the patch failed.  || -1 |  compile  |   0m 20s |  hbase-server in the patch failed.  || -1 |  javac  |   0m 20s |  hbase-server in the patch failed.  || +1 |  checkstyle  |   1m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   2m 24s |  patch has 14 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 23s |  The patch causes 14 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   3m  2s |  The patch causes 14 errors with Hadoop v3.0.0.  || -1 |  findbugs  |   0m 22s |  hbase-server in the patch failed.  || -1 |  javadoc  |   0m 18s |  hbase-server in the patch failed.  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m 22s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  24m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21259 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3ed150ee22d2 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 3df8b6f7bb || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || javac | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || findbugs | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 87 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 9 **
Let me put up patch .002. It plugs the holes mentioned above. It still has the debug that  pointed to in his review of this patch, for the moment. This new patch results in this sort of thing where we skip the SCP if no mention of crashed server in meta, fs, or dead servers list:{code}2018-10-08 16:39:29,616 DEBUG org.apache.hadoop.hbase.procedure2.ProcedureExecutor: Stored pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,15381852014942018-10-08 16:39:29,616 INFO org.apache.hadoop.hbase.procedure2.ProcedureExecutor: Finished pid=961711, state=SUCCESS; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=566a0a0a93cb4705bf36dc84db7a7205, server=ve0815.halxg.cloudera.com,22101,1538114138702 in 108msec2018-10-08 16:39:29,616 INFO org.apache.hadoop.hbase.master.procedure.MasterProcedureScheduler: xlock for pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,15381852014942018-10-08 16:39:29,637 INFO org.apache.hadoop.hbase.master.assignment.RegionStateStore: pid=961713 updating hbase:meta row=79b5367f6579126707c231efdac9fd63, regionState=CLOSING, regionLocation=vd0803.halxg.cloudera.com,22101,15381852014942018-10-08 16:39:29,637 WARN org.apache.hadoop.hbase.ipc.RpcServer: (responseTooSlow): {""call"":""Unassigns(org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$UnassignsRequest)"",""starttimems"":1539041944370,""responsesize"":1024,""method"":""Unassigns"",""param"":""TODO: class org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$UnassignsRequest"",""processingtimems"":25246,""client"":""10.17.208.17:42428"",""queuetimems"":0,""class"":""HMaster""}2018-10-08 16:39:29,638 INFO org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure: Dispatch pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH, locked=true; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,15381852014942018-10-08 16:39:29,638 WARN org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure: Remote call failed rit=CLOSING, location=vd0803.halxg.cloudera.com,22101,1538185201494; pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH, locked=true; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,1538185201494org.apache.hadoop.hbase.procedure2.NoServerDispatchException: vd0803.halxg.cloudera.com,22101,1538185201494; pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH, locked=true; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,1538185201494        at org.apache.hadoop.hbase.procedure2.RemoteProcedureDispatcher.addOperationToNode([file java]:177)        at org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure.addToRemoteDispatcher([file java]:276)        at org.apache.hadoop.hbase.master.assignment.UnassignProcedure.updateTransition([file java]:206)        at org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure.execute([file java]:369)        at org.apache.hadoop.hbase.master.assignment.RegionTransitionProcedure.execute([file java]:97)        at org.apache.hadoop.hbase.procedure2.Procedure.doExecute([file java]:953)        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure([file java]:1727)        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1495)        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900([file java]:75)        at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:2033)2018-10-08 16:39:29,639 WARN org.apache.hadoop.hbase.master.assignment.UnassignProcedure: Expiring vd0803.halxg.cloudera.com,22101,1538185201494, pid=961713, state=RUNNABLE:REGION_TRANSITION_DISPATCH, locked=true; UnassignProcedure table=IntegrationTestBigLinkedList_20180620132845, region=79b5367f6579126707c231efdac9fd63, server=vd0803.halxg.cloudera.com,22101,1538185201494 rit=CLOSING, location=vd0803.halxg.cloudera.com,22101,1538185201494; exception=NoServerDispatchException2018-10-08 16:39:29,643 INFO org.apache.hadoop.hbase.master.ServerManager: Skipping expire; vd0803.halxg.cloudera.com,22101,1538185201494 is not online, not in deadservers, not in fs -- presuming long gone server instance!{code}This patch makes it so hbck2 can unassign CLOSING methods. Previously, calling unassign on a region that was against a server long gone would result in an SCP that found no logs and because it was not carrying any regions, failed to cleanup the hung RPC dispatch that made the CLOSE call to the non-existent server. Skipping it saves the SCP that does nothing and avoids this hung RPC/STUCK procedure.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   7m  9s |  branch-2.1 passed  || +1 |  compile  |   1m 52s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 21s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 43s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  8s |  branch-2.1 passed  || +1 |  javadoc  |   0m 43s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 21s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || -1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 2 new + 93 unchanged - 0 fixed = 95 total (was 93)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 51s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 53s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 12s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 178m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 220m 22s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21259 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3d328872750b 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / c96ecbde67 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4899 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   6m 55s |  branch-2.1 passed  || +1 |  compile  |   1m 52s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 16s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  0s |  branch-2.1 passed  || +1 |  javadoc  |   0m 38s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  4s |  the patch passed  || +1 |  compile  |   1m 46s |  the patch passed  || +1 |  javac  |   1m 46s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 8 new + 111 unchanged - 0 fixed = 119 total (was 111)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 46s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m 11s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 139m 42s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 179m 13s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Possible null pointer dereference of fss in org.apache.hadoop.hbase.master.MasterWalManager.isWALDirectoryNameWithWALs(ServerName) on exception path  Dereferenced at [file java]:fss in org.apache.hadoop.hbase.master.MasterWalManager.isWALDirectoryNameWithWALs(ServerName) on exception path  Dereferenced at [file java]: || Failed junit tests | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.regionserver.TestEncryptionKeyRotation ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleWAL ||   | hadoop.hbase.replication.TestReplicationDroppedTables ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationDisableInactivePeer ||   | hadoop.hbase.master.TestRestartCluster ||   | hadoop.hbase.master.balancer.TestFavoredNodeTableImport ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.regionserver.TestRegionServerCrashDisableWAL ||   | hadoop.hbase.TestMultiVersions |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21259 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ed997a79a062 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 2c43656a16 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4279 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 13 **
.004 Fix checkstyle, findbugs, and unit tests. Remove the DEBUG I'd left in place.

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 27s |  branch-2.1 passed  || +1 |  compile  |   1m 54s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 16s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  1s |  branch-2.1 passed  || +1 |  javadoc  |   0m 29s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 59s |  the patch passed  || +1 |  compile  |   1m 43s |  the patch passed  || +1 |  javac  |   1m 43s |  the patch passed  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 9 new + 113 unchanged - 1 fixed = 122 total (was 114)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 28s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 18s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  21m  2s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 13s |  The patch does not generate ASF License warnings.  ||  |   |  57m 40s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestMasterWALManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21259 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 98ca7bfa7c80 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / e283963533 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 645 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 11s |  branch-2.1 passed  || +1 |  compile  |   1m 47s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 12s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 54s |  branch-2.1 passed  || +1 |  javadoc  |   0m 29s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  1s |  the patch passed  || +1 |  compile  |   1m 42s |  the patch passed  || +1 |  javac  |   1m 42s |  the patch passed  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 1 new + 113 unchanged - 1 fixed = 114 total (was 114)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 35s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 12s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 115m 23s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   | 152m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21259 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 90356ce0625b 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / e283963533 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4672 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 22 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21440,https://issues.apache.org/jira/browse/HBASE-21440,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure.java,Assign procedure on the crashed server is not properly interrupted,NO,"When the server crashes, it's SCP checks if there is already a procedure assigning the region on this crashed server. If we found one, SCP will just interrupt the already running AssignProcedure by calling remoteCallFailed which internally just changes the region node state to OFFLINE and send the procedure back with transition queue state for assignment with a new plan. 

But, due to the race condition between the calling of the remoteCallFailed and current state of the already running assign procedure(REGION_TRANSITION_FINISH: where the region is already opened), it is possible that assign procedure goes ahead in updating the regionStateNode to OPEN on a crashed server. 

As SCP had already skipped this region for assignment as it was relying on existing assign procedure to do the right thing, this whole confusion leads region to a not accessible state.","** Comment 1 **
Yes, I think it is possible. But it should be a very rare case. Since if an AssignProcedure is in REGION_TRANSITION_FINISH state, it should have finished long time ago before the corresponding SCP begin to handle RIT. But, anyway, it can happen, e.g. the meta table is also on the crashed server, so the AssignProcedure is stucking there retrying to update meta, while sleeping, the SCP called remoteCallFailed on this AssignProcedure.I think we can do this. if the procedure found in handleRIT is a assign procedure, and it is in REGION_TRANSITION_FINISH , we should not remove it from regions to assign list.We can count on AssignProcedure's state, since, if it do not enter REGION_TRANSITION_FINISH state when handleRIT, it won't have a chance later(the server is already dead).

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.0 Compile Tests  ||| +1 |  mvninstall  |   7m 35s |  branch-2.0 passed  || +1 |  compile  |   3m 14s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 59s |  branch-2.0 passed  || +1 |  shadedjars  |   5m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 11s |  branch-2.0 passed  || +1 |  javadoc  |   0m 43s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   2m 36s |  the patch passed  || +1 |  compile  |   1m 45s |  the patch passed  || +1 |  javac  |   1m 45s |  the patch passed  || +1 |  checkstyle  |   1m  6s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  5s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 12s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 159m 47s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 204m 50s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 04a27d4c10c4 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / d703081600 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4367 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 8 **
 Errors:  org.apache.hadoop.hbase.master.TestRollingRestart.org.apache.hadoop.hbase.master.TestRollingRestart   Run 1: TestRollingRestart.testBasicRollingRestart:177->waitForRSShutdownToStartAndFinish:218 Â» TestTimedOut   Run 2: TestRollingRestart.org.apache.hadoop.hbase.master.TestRollingRestart Â»  Appear...   TestRollingRestart.testBasicRollingRestart:177->waitForRSShutdownToStartAndFinish:218 Â» Interrupted Flakes:  org.apache.hadoop.hbase.master.procedure.TestSchedulerQueueDeadLock.testTableProcedureSubProcedureDeadLock(org.apache.hadoop.hbase.master.procedure.TestSchedulerQueueDeadLock)   Run 1: TestSchedulerQueueDeadLock.testTableProcedureSubProcedureDeadLock:267 Waiting timed out after  msec   Run 2: PASSTestSchedulerQueueDeadLock looks a little flakey, but not sure what happened to TestRollingRestart., do you have any suggestions around an explicit unit test for this case? I'd have to go digging to see if I could suggest somewhere to start...

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Oh, one more tidbit of information from the environment which we saw this one:The region in question that was ""orphaned"" was {}. Thus, putting us in a pickle as the Master would eventually take a nose-dive any time it was started. Because we got the wires crossed (SCP saw the AP running, called the remoteCallFailed which put the AP back on the queue, but its state was already OPEN on the dead server, then the re-run of the AP did nothing), that left us in this state where user-intervention was required.

** Comment 12 **
Thanks for the ping. Patch looks good. One thought  was that rather than SCP have to know about AP states (and open AP#getTransitionState so SCP can use it), could your check be done inside in AP#remoteCallFailed ?  In here it looks at the state and determines if it should skip? Thanks.

** Comment 13 **
I think  has a very good idea about not exposing internal state of AP to SCP. I think we can let RegionTransitionProcedure#remoteCallFailed return a boolean to indicate whether if the failure is handled properly. If not(e.g. AP is already in REGION_TRANSITION_FINISH ), SCP need to schedule a new AP for it(only if AP fails). I also think writing a UT for this case is hard... 

** Comment 14 **
{quote}rather than SCP have to know about AP states (and open AP#getTransitionState so SCP can use it), could your check be done inside in AP#remoteCallFailed ? In here it looks at the state and determines if it should skip?{quote}{quote}we can let RegionTransitionProcedure#remoteCallFailed return a boolean to indicate whether if the failure is handled properly. If not(e.g. AP is already in REGION_TRANSITION_FINISH ), SCP need to schedule a new AP for it(only if AP fails).{quote}Great suggestions, both!{quote}I also think writing a UT for this case is hard...{quote}hehe, yeah. I glanced through the code yesterday and came to the conclusion that I didn't think we could make a realistic UT for this :)

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m 40s |  branch-2.0 passed  || +1 |  compile  |   2m  3s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 24s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 54s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 36s |  branch-2.0 passed  || +1 |  javadoc  |   0m 41s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 33s |  the patch passed  || +1 |  compile  |   2m  1s |  the patch passed  || +1 |  javac  |   2m  1s |  the patch passed  || -1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 4 new + 38 unchanged - 0 fixed = 42 total (was 38)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  4s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 48s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 19s |  hbase-procedure in the patch passed.  || -1 |  unit  | 119m 38s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 37s |  The patch does not generate ASF License warnings.  ||  |   | 159m 33s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.TestCheckTestClasses |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0fe26ebcda64 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / e8404c7c21 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4565 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 18 **
Patch is great. I like patches that remove stuff.My guess is that the test failures are because you can return false out of RTP in remoteCallFailed? You might have to return true always since that is how it used work?Or test failure could be because of whats in SCP? ServerCrashProcedure+1 on patch after figuring the failures. Thanks 

** Comment 19 **
[Comment excluded]

** Comment 20 **
Ah, I think I see what the issue is. The change to AP#remoteCallFailed to return false would leave the AP suspended whereas before it will wake up the procedure again (see UP#remoteCallFailed). Might need to rework out we propagate the success/failure back up the stack.

** Comment 21 **
I see that hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures is not accessing the code path we changed (not sure if there is any problem with my debug setup) but looks that it get stuck with the last patch. I tried restricting the patch to the calls made by SCP only, this test is passing locally but let's see how it goes now on the Jenkins.

** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   1m 30s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  6s |  branch-2.0 passed  || +1 |  compile  |   2m 15s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 26s |  branch-2.0 passed  || +1 |  shadedjars  |   3m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 56s |  branch-2.0 passed  || +1 |  javadoc  |   0m 50s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 42s |  the patch passed  || +1 |  compile  |   2m 10s |  the patch passed  || +1 |  javac  |   2m 10s |  the patch passed  || -1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 5 new + 38 unchanged - 0 fixed = 43 total (was 38)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 46s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 33s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 41s |  the patch passed  || +1 |  javadoc  |   0m 49s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |   2m 33s |  hbase-procedure in the patch failed.  || -1 |  unit  | 141m 33s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 32s |  The patch does not generate ASF License warnings.  ||  |   | 185m 37s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestProcedureMetrics ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 88636a5f9fab 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 5361ed9613 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4456 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 23 **
Still the same failures on Jenkins, looking into itThough TestMasterFailoverWithProcedures is passing for me locally (need to check if my environment is not proper or not same as jenkins). {code} Running org.apache.hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 73.43 s - in org.apache.hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures{code}And, TestMergeTableRegionsProcedure never passes even without the patch. Need to be debugged separately.

** Comment 24 **
 Legit failures then in your opinion sir? Related?

** Comment 25 **
bq. Legit failures then in your opinion sir? Related?Actually,  test failures seem to be not related. (and also the code path in the patch is not even accessed during these tests).TestMasterFailoverWithProcedures is flaky, I can see it is getting failed multiple times in night builds.{code}[link][link][link]{code}So asked  help to verify TestMasterFailoverWithProcedures with my patch, and he also finds it passing locally. Thanks, Ted.TestMergeTableRegionsProcedure fails everytime in branch-2.0/2.1 at least. {code}[link]#showFailuresLink{code} , WDYT, can this be committed now?

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 47s |  branch-2.0 passed  || +1 |  compile  |   2m 27s |  branch-2.0 passed  || +1 |  checkstyle  |   1m 43s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 31s |  branch-2.0 passed  || +1 |  javadoc  |   0m 49s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 11s |  the patch passed  || +1 |  compile  |   2m 31s |  the patch passed  || +1 |  javac  |   2m 31s |  the patch passed  || +1 |  checkstyle  |   1m 34s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 27s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 36s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 30s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 22s |  hbase-procedure in the patch passed.  || +1 |  unit  | 123m 55s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 43s |  The patch does not generate ASF License warnings.  ||  |   | 172m 26s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7d04b089f69f 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 2fcf961e73 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4235 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  6s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 30s |  branch-2.1 passed  || +1 |  compile  |   2m 13s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 24s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 22s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 31s |  branch-2.1 passed  || +1 |  javadoc  |   0m 48s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 52s |  the patch passed  || +1 |  compile  |   2m  5s |  the patch passed  || +1 |  javac  |   2m  5s |  the patch passed  || +1 |  checkstyle  |   1m 18s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 22s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 11s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 30s |  the patch passed  || +1 |  javadoc  |   1m 16s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 39s |  hbase-procedure in the patch passed.  || +1 |  unit  | 111m 28s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 156m 32s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 482f899755b8 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / f8213a719f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4368 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 32 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 23s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  5s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 27s |  branch-2.1 passed  || +1 |  compile  |   2m  6s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 23s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 27s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 31s |  branch-2.1 passed  || +1 |  javadoc  |   0m 48s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 50s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 19s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 11s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 33s |  the patch passed  || +1 |  javadoc  |   0m 41s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 26s |  hbase-procedure in the patch passed.  || +1 |  unit  | 179m 48s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 49s |  The patch does not generate ASF License warnings.  ||  |   | 224m 17s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21440 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 22d95ccc0193 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / f8213a719f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4724 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 33 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 34 **
[Comment excluded]

** Comment 35 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]
"
HBASE-21439,https://issues.apache.org/jira/browse/HBASE-21439,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,StochasticLoadBalancer RegionLoads aren’t being used in RegionLoad cost functions,NO,"In StochasticLoadBalancer.updateRegionLoad() the region loads are being put into the map with Bytes.toString(regionName).

First, this is a problem because Bytes.toString() assumes that the byte array is a UTF8 encoded String but there is no guarantee that regionName bytes are legal UTF8.

Secondly, in BaseLoadBalancer.registerRegion, we are reading the region loads out of the load map not using Bytes.toString() but using region.getRegionNameAsString() and region.getEncodedName().  So the load balancer will not see or use any of the cluster's RegionLoad history.

There are 2 primary ways to solve this issue, assuming we want to stay with String keys for the load map (seems reasonable to aid debugging).  We can either fix updateRegionLoad to store the regionName as a string properly or we can update both the reader & writer to use a new common valid String representation.

Will post a patch assuming we want to pursue the original intention, i.e. store regionNameAsAString for the loadmap key, but I'm open to fixing this a different way.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
Hi  which mistake -- using different String conversions to get/put a region in a map, or using Bytes.toString() for a byte array that may not be the equivalent of some encoded UTF8 string?For mistake #1, I’m not aware of any other similar bugs in the codebase though it’s possible.I think we make mistake #2 in other parts of the code base particularly for printing debug messages for start/end keys of regions.Depending on how exotic your rowkey-space is (how far it is from the UTF8 plane), you could run into an issue.By 'issue,' I mean that parts of the start/end key will be silently dropped during decoding and replaced with new characters to indicate malformed input.  It would be a bit misleading or strange but it would not crash.I can create a Jira ticket to audit the Bytes.toString() calls (there are many) but don’t have bandwidth to look at it unfortunately.

** Comment 3 **
[Comment excluded]

** Comment 4 **
Note: This patch submitted is if we want to use the 'actual region name as a string' in the load map key.  If we're fine with just any String representation that works, Bytes.toStringBinary() could also be used in reader/writer and would be much simpler (would be backwards compatible with tests instead of requiring the tests be fixed and doesn't require refactoring out the region name as a string method.)

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m  9s |  master passed  || +1 |  compile  |   3m 16s |  master passed  || +1 |  checkstyle  |   1m 55s |  master passed  || +1 |  shadedjars  |   5m  3s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 41s |  master passed  || +1 |  javadoc  |   1m  4s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   6m  7s |  the patch passed  || +1 |  compile  |   3m 11s |  the patch passed  || +1 |  javac  |   0m 49s |  hbase-client generated 0 new + 100 unchanged - 3 fixed = 100 total (was 103)  || +1 |  javac  |   2m 22s |  hbase-server in the patch passed.  || -1 |  checkstyle  |   0m 39s |  hbase-client: The patch generated 3 new + 63 unchanged - 0 fixed = 66 total (was 63)  || -1 |  checkstyle  |   1m 21s |  hbase-server: The patch generated 2 new + 65 unchanged - 0 fixed = 67 total (was 65)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 33s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   4m  6s |  the patch passed  || +1 |  javadoc  |   1m  2s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 33s |  hbase-client in the patch passed.  || -1 |  unit  | 257m 58s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 44s |  The patch does not generate ASF License warnings.  ||  |   | 319m 23s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21439 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0de11b974147 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 86cbbdea9e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5170 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 6 **
The test that failed looks like it's irrelevant (an XML error in some other part of the code base).  I will submit a new patch to fix the checkstyle issues.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   2m 21s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   3m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 48s |  master passed  || +1 |  javadoc  |   0m 48s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   2m 19s |  the patch passed  || +1 |  javac  |   0m 34s |  hbase-client generated 0 new + 100 unchanged - 3 fixed = 100 total (was 103)  || +1 |  javac  |   1m 45s |  hbase-server in the patch passed.  || +1 |  checkstyle  |   1m 43s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 54s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  7s |  the patch passed  || +1 |  javadoc  |   0m 49s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 59s |  hbase-client in the patch passed.  || +1 |  unit  | 134m 38s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 56s |  The patch does not generate ASF License warnings.  ||  |   | 180m 27s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21439 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 314579c0967c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 468c1e77bf || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5363 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Although TestStochasticLoadBalancer passes on all branches, including 1.3/1.5/1 with the backport patch I attached here, an rsgroups balancer test fails. I noticed this first when testing branch-1, but it also fails on master.We will need an addendum to fix the test failure please.I don't know why this failure wasn't picked up during precommit. Anyway, it is 100% reproducible locally. -------------------------------------------------------  T E S T S ------------------------------------------------------- Running org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.844 s <<< FAILURE! - in org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal testBalanceCluster(org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal)  Time elapsed: 0.543 s  <<< FAILURE!java.lang.AssertionError: expected:<2> but was:<0>    at org.apache.hadoop.hbase.master.balancer.TestRSGroupBasedLoadBalancerWithStochasticLoadBalancerAsInternal.testBalanceCluster([file java]:148)

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 43s |  master passed  || +1 |  compile  |   0m 36s |  master passed  || +1 |  checkstyle  |   0m 13s |  master passed  || +1 |  shadedjars  |   4m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 36s |  master passed  || +1 |  javadoc  |   0m 17s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 23s |  the patch passed  || +1 |  compile  |   0m 39s |  the patch passed  || +1 |  javac  |   0m 39s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  7s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 42s |  the patch passed  || +1 |  javadoc  |   0m 17s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 24s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  33m 17s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21439 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f77140ffb34b 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / d9f32137b6 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 3384 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  2s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 33s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m  7s |  branch-1 passed  || +1 |  compile  |   1m 35s |  branch-1 passed with JDK v1.8.0_192  || +1 |  compile  |   1m 33s |  branch-1 passed with JDK v1.7.0_201  || +1 |  checkstyle  |   2m 26s |  branch-1 passed  || +1 |  shadedjars  |   3m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m  9s |  branch-1 passed with JDK v1.8.0_192  || +1 |  javadoc  |   1m 24s |  branch-1 passed with JDK v1.7.0_201  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m  3s |  the patch passed  || +1 |  compile  |   1m 36s |  the patch passed with JDK v1.8.0_192  || +1 |  javac  |   1m 36s |  the patch passed  || +1 |  compile  |   1m 32s |  the patch passed with JDK v1.7.0_201  || +1 |  javac  |   1m 32s |  the patch passed  || -1 |  checkstyle  |   0m 35s |  hbase-client: The patch generated 1 new + 56 unchanged - 0 fixed = 57 total (was 56)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 56s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 33s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 53s |  the patch passed with JDK v1.8.0_192  || +1 |  javadoc  |   1m 10s |  the patch passed with JDK v1.7.0_201  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 21s |  hbase-client in the patch passed.  || -1 |  unit  | 111m 51s |  hbase-server in the patch failed.  || +1 |  unit  |   8m 14s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 59s |  The patch does not generate ASF License warnings.  ||  |   | 152m 45s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.util.TestHBaseFsck |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21439 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2cfd612ab3be 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 36178f7 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_201 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_192 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_201 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4169 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 22 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 23 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 24 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 25 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 26 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 27 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 28 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 29 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21251,https://issues.apache.org/jira/browse/HBASE-21251,https://github.com/apache/hbase/blob/rel/2.0.3/hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java,Refactor RegionMover,NO,"1. Move connection and admin to RegionMover's member variables. No need create connection many times.
2. use try-with-resource to reduce code
3. use ServerName instead of String
4. don't use Deprecated method
5. remove duplicate code
......","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m 17s |  master passed  || +1 |  compile  |   2m  3s |  master passed  || +1 |  checkstyle  |   1m 24s |  master passed  || +1 |  shadedjars  |   4m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 22s |  master passed  || +1 |  javadoc  |   0m 37s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m  2s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 2 new + 25 unchanged - 10 fixed = 27 total (was 35)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 43s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m 46s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || +1 |  javadoc  |   0m 40s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 128m 53s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 177m  1s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Call to org.apache.hadoop.hbase.ServerName.equals(String) in org.apache.hadoop.hbase.util.RegionMover.loadRegions(List)  At [file java]: At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21251 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 639a40383b3e 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e8df847d4e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 5458 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 50s |  master passed  || +1 |  compile  |   1m 53s |  master passed  || +1 |  checkstyle  |   1m 14s |  master passed  || +1 |  shadedjars  |   4m 22s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 20s |  master passed  || +1 |  javadoc  |   0m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 28s |  the patch passed  || +1 |  compile  |   1m 54s |  the patch passed  || +1 |  javac  |   1m 54s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 0 new + 3 unchanged - 32 fixed = 3 total (was 35)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 38s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 15s |  the patch passed  || +1 |  javadoc  |   0m 35s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 209m 16s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 254m  8s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21251 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 31163978adc6 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4355 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m  6s |  master passed  || +1 |  compile  |   1m 55s |  master passed  || +1 |  checkstyle  |   1m 19s |  master passed  || +1 |  shadedjars  |   4m 24s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 16s |  master passed  || +1 |  javadoc  |   0m 41s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 11s |  the patch passed  || +1 |  compile  |   1m 47s |  the patch passed  || +1 |  javac  |   1m 47s |  the patch passed  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 3 unchanged - 32 fixed = 3 total (was 35)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 14s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 50s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 13s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 126m 20s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   | 172m 17s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21251 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c290c2956c4e 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5033 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 4 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 11s |  master passed  || +1 |  compile  |   1m 55s |  master passed  || +1 |  checkstyle  |   1m 11s |  master passed  || +1 |  shadedjars  |   4m 18s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  4s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   1m 52s |  the patch passed  || +1 |  javac  |   1m 52s |  the patch passed  || +1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 0 new + 3 unchanged - 32 fixed = 3 total (was 35)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 24s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 15s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 10s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 140m 34s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 183m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21251 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c1b7d3d0cd46 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c9213f752e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5396 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
The RegionMover we have in branch-2.0 works but is just resource heavy and ugly code? If so, its probably fine . Let me know if you think otherwise sir.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21524,https://issues.apache.org/jira/browse/HBASE-21524,https://github.com/apache/hbase/blob/rel/2.0.4/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java,Unnecessary DEBUG log in ConnectionImplementation#isTableEnabled,YES,"Too much crap coming out of isTableEnabled for ""normal"" situations. Don't need a DEBUG message to tell us that the table is available.","** Comment 1 **
Cleaned up the logging in this method. Avoid giving the user an affirmative DEBUG message when things are ok. Moves over to slf4j logger calls the ""something's wrong"" messages and removes the if-log-level conditionals.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  17m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.0 Compile Tests  ||| +1 |  mvninstall  |   6m  2s |  branch-2.0 passed  || +1 |  compile  |   0m 53s |  branch-2.0 passed  || +1 |  checkstyle  |   0m 37s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 56s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 24s |  branch-2.0 passed  || +1 |  javadoc  |   0m 32s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 33s |  the patch passed  || +1 |  compile  |   0m 49s |  the patch passed  || +1 |  javac  |   0m 49s |  the patch passed  || -1 |  checkstyle  |   0m 37s |  hbase-client: The patch generated 2 new + 5 unchanged - 0 fixed = 7 total (was 5)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 55s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 21s |  the patch passed  || +1 |  javadoc  |   0m 25s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 32s |  hbase-client in the patch passed.  || +1 |  asflicense  |   0m 14s |  The patch does not generate ASF License warnings.  ||  |   |  58m 30s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21524 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 4cbfb7be83b9 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 0baddc6aed || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 292 (vs. ulimit of 10000) || modules | C: hbase-client U: hbase-client || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 8 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22340,https://issues.apache.org/jira/browse/HBASE-22340,https://github.com/apache/hbase/blob/rel/2.0.6/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,Corrupt KeyValue is silently ignored,NO,"When a KeyValue is constructed from a corrupt byte array then IllegalArgumentException is thrown with a detailed message where the issue is in the array. This is part of a sanity check introduced in HBASE-21401.
However, this is not logged at this time and the exception goes up to ProtobufLogReader.readNext where it is caught, wrapped into EOFException and the processing of the current WAL file is stopped.
There is only a TRACE level log message that could indicate if something went wrong.

This will cause data loss without log message not just for the single corrupted KV but for the rest of the WAL file.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-20775,https://issues.apache.org/jira/browse/HBASE-20775,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java,TestMultiParallel is flakey,NO,"Seems the problem is related to HBASE-20708, where we will give states other than OPEN to meta region.

Let me dig more.","** Comment 1 **
Seems the problem is that, there is no retry if we failed to locate meta. I guess the problem is that the exception in relocateRegion will be thrown out directly, so I moved the relocateRegion call to the top which inside the try block.If pre commit is OK then I will push it to master branch first to see if it could help.

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 51s |  master passed  || +1 |  compile  |   0m 37s |  master passed  || +1 |  checkstyle  |   0m 31s |  master passed  || +1 |  shadedjars  |   4m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m  3s |  master passed  || +1 |  javadoc  |   0m 24s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  0s |  the patch passed  || +1 |  compile  |   0m 40s |  the patch passed  || +1 |  javac  |   0m 40s |  the patch passed  || +1 |  checkstyle  |   0m 32s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 20s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m  3s |  the patch passed  || +1 |  javadoc  |   0m 20s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 12s |  hbase-client in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  38m 31s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20775 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 4a38a5cd28f5 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 98245ca6e4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 252 (vs. ulimit of 10000) || modules | C: hbase-client U: hbase-client || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 38s |  master passed  || +1 |  compile  |   2m 52s |  master passed  || +1 |  checkstyle  |   1m 57s |  master passed  || +1 |  shadedjars  |   4m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 19s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 38s |  the patch passed  || +1 |  compile  |   2m 50s |  the patch passed  || +1 |  javac  |   2m 50s |  the patch passed  || +1 |  checkstyle  |   1m 59s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  2s |  The patch has no ill-formed XML file.  || +1 |  shadedjars  |   5m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 48s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 45s |  the patch passed  || +1 |  javadoc  |   1m  2s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 14s |  hbase-client in the patch passed.  || -1 |  unit  | 122m 54s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 36s |  The patch does not generate ASF License warnings.  ||  |   | 180m 19s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestSplitTransactionOnCluster |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20775 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  xml  || uname | Linux a843115848c5 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 98245ca6e4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4364 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
The error message has been changed. Let me dig more.

** Comment 6 **
2018-06-22 21:27:54,741 INFO   procedure2.ProcedureExecutor(1516): Initialized subprocedures=2018-06-22 21:27:54,822 INFO   procedure.RSProcedureDispatcher(119): Fallback to compat rpc execution for serverName=asf911.gq1.ygridcore.net,45228,1529702849085 version=0This should have been fixed? , although for assign region this is not a big problem...

** Comment 7 **
The problem now is that we failed to call master.balance...The exception isorg.apache.hadoop.hbase.client.DoNotRetryRegionException: 96929d953c6fdd69d4977414f7b5da04 is not OPEN	at org.apache.hadoop.hbase.client.TestMultiParallel.before([file java]:120)

** Comment 8 **
""Fallback to compat rpc execution"" should not happen... Only dead rs's version is 0 and it will use DeadRSRemoteCall to call failed. Let me take a try.

** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   3m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 22s |  master passed  || +1 |  compile  |   1m 32s |  master passed  || +1 |  checkstyle  |   0m 57s |  master passed  || +1 |  shadedjars  |   3m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 51s |  master passed  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed  || +1 |  javac  |   1m 31s |  the patch passed  || +1 |  checkstyle  |   0m 58s |  hbase-server: The patch generated 0 new + 3 unchanged - 6 fixed = 3 total (was 9)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 51s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 50s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 52s |  the patch passed  || +1 |  javadoc  |   0m 26s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 142m 58s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 181m 40s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20775 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux edc24dc11c12 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 14087cc919 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4594 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-20745,https://issues.apache.org/jira/browse/HBASE-20745,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java,Log when master proc wal rolls,NO,"Emit when we roll master proc WAL so can see when they happen. Want to correlate instances of corruption w/ events on Master. Currently hard to do on  a server where log-level is INFO (default for many deploys).

Also, we log STUCK regions every 5 seconds. If a bundle of regions get stuck, we can log so frequently, we roll away where the problem happened so lose the chance to debug. Let me fix that too....

Need both debugging instances of parent issue.","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 36s |  master passed  || +1 |  compile  |   2m  0s |  master passed  || +1 |  checkstyle  |   1m 21s |  master passed  || +1 |  shadedjars  |   4m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 21s |  master passed  || +1 |  javadoc  |   0m 43s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   2m  4s |  the patch passed  || +1 |  javac  |   2m  4s |  the patch passed  || +1 |  checkstyle  |   1m 22s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 45s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 48s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 34s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || +1 |  unit  | 111m  9s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 157m 40s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20745 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 4867bec8e62c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ac5bb8155b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4087 (vs. ulimit of 10000) || modules | C: hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
[Comment excluded]

** Comment 7 **
Intentional unless I changed wrong thing?  In description I talk of how the 5 seconds is too frequent.  Logs fill quickly.  Issue that caused prob rolls away.  What you thinking ?

** Comment 8 **
Commit log talks about logging not config default change is all. 

** Comment 9 **
 Sorry about that. Should have made mention. Yeah, the logging every 5 seconds was worse that useless causing roll-away of actual problems.
"
HBASE-20659,https://issues.apache.org/jira/browse/HBASE-20659,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java,Implement a reopen table regions procedure,NO,"For serial replication peer, and sync replication peer on branch HBASE-19064, sometimes we need to reopen the regions for a table to make sure that we have some wal edits which have not been replicated yet, or let the region switch a wal implementation. But for peer related procedures, we do not hold the table lock so if there are region split or merge than we may fail to reopen all the regions and cause problems.

So I think we need to introduce a table procedure which is used to reopen all the regions for a table, and like other table procedures, such as ModifyTableProcedure, it will hold the exclusive lock on a table so we will not miss the new regions.","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 32s |  master passed  || +1 |  compile  |   2m 46s |  master passed  || +1 |  checkstyle  |   1m 21s |  master passed  || +1 |  shadedjars  |   4m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 13s |  master passed  || +1 |  javadoc  |   0m 50s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 11s |  the patch passed  || +1 |  compile  |   2m 42s |  the patch passed  || +1 |  cc  |   2m 42s |  the patch passed  || +1 |  javac  |   2m 42s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 6 unchanged - 2 fixed = 6 total (was 8)  || +1 |  checkstyle  |   0m 59s |  The patch hbase-server passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  3s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 10s |  the patch passed  || +1 |  findbugs  |   4m 33s |  the patch passed  || +1 |  javadoc  |   0m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 37s |  hbase-procedure in the patch passed.  || +1 |  unit  | 106m  1s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 59s |  The patch does not generate ASF License warnings.  ||  |   | 162m  5s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20659 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c14af60fe606 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / eb4b854dc2 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4644 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20691,https://issues.apache.org/jira/browse/HBASE-20691,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,Storage policy should allow deferring to HDFS,NO,"In HBase 1.1 - 1.4 we can defer storage policy decisions to HDFS by using ""NONE"" as the storage policy in hbase configs.

As described on this [dev@hbase thread ""WAL storage policies and interactions with Hadoop admin tools.""|https://lists.apache.org/thread.html/d220726fab4bb4c9e117ecc8f44246402dd97bfc986a57eb22311117@%3Cdev.hbase.apache.org%3E] we no longer have that option in 2.0.0 and 1.5.0 (as the branch is now). Additionally, we can't set the policy to HOT in the event that HDFS has changed the policy for a parent directory of our WALs.

We should put back that ability. Presuming this is done by re-adopting the ""NONE"" placeholder variable, we need to ensure that value doesn't get passed to HDFS APIs. Since it isn't a valid storage policy attempting to use it will cause a bunch of logging churn (which will be a regression of the problem HBASE-18118 sought to fix).","** Comment 1 **
[Comment excluded]

** Comment 2 **
From the codes I don't find any place trying to pass NONE to HDFS API, will check the HadoopQA report to make sure no warning about ""NONE is not a valid policy"" stuff.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 41s |  master passed  || +1 |  compile  |   0m 27s |  master passed  || +1 |  checkstyle  |   0m 23s |  master passed  || +1 |  shadedjars  |   4m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 34s |  master passed  || +1 |  javadoc  |   0m 17s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 44s |  the patch passed  || +1 |  compile  |   0m 27s |  the patch passed  || +1 |  javac  |   0m 27s |  the patch passed  || +1 |  checkstyle  |   0m 22s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 54s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 58s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 41s |  the patch passed  || +1 |  javadoc  |   0m 17s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 21s |  hbase-common in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  35m 46s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a06000b895a4 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b002b0b8b0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 296 (vs. ulimit of 10000) || modules | C: hbase-common U: hbase-common || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
bq. From the codes I don't find any place trying to pass NONE to HDFS API, will check the HadoopQA report to make sure no warning about ""NONE is not a valid policy"" stuff.Could we add a unit test for this? maybe something like a FileSystem that just throws when given NONE and then call our utility method with defaults?

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
two properties would make it easier for us to avoid messing up the implementation, but isn't very ops friendly given that configuring it only required one property before.I guess I can see either way being fine.

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 40s |  master passed  || +1 |  compile  |   2m 11s |  master passed  || +1 |  checkstyle  |   1m 30s |  master passed  || +1 |  shadedjars  |   4m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 52s |  master passed  || +1 |  javadoc  |   0m 50s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 50s |  the patch passed  || +1 |  compile  |   2m 21s |  the patch passed  || +1 |  javac  |   2m 21s |  the patch passed  || +1 |  checkstyle  |   1m 32s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 52s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 12s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 39s |  the patch passed  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 23s |  hbase-common in the patch passed.  || -1 |  unit  | 116m  5s |  hbase-server in the patch failed.  || +1 |  asflicense  |   2m 12s |  The patch does not generate ASF License warnings.  ||  |   | 166m 11s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.balancer.TestStochasticLoadBalancerRegionReplicaHighReplication |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9f6149b89f2f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / cfeb26d27a || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4325 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 10 **
The test is a nice addition, but it won't confirm the issue Andrew was concerned about with HBASE-18118 right? The concern wasn't that Hadoop would actually use the invalid storage policy, it was that we'd pass our placeholder and get a log message about how that was no good.

** Comment 11 **
bq. it was that we'd pass our placeholder and get a log message about how that was no good.I see, I guess patch v3 covers the concerned case? Thanks.

** Comment 12 **
Below is what I observed in my local run with patch v3, FYI.2018-06-08 22:59:39,059 DEBUG  util.TestFSUtils(350): Before set storage policy to NONE2018-06-08 22:59:39,062 DEBUG  util.TestFSUtils(353): After set storage policy to NONE2018-06-08 22:59:39,063 WARN   util.CommonFSUtils(572): Unable to set storagePolicy=HOT for path=non-exist. DEBUG log level might have more details.java.lang.reflect.InvocationTargetException	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:62)	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:43)	at java.lang.reflect.Method.invoke([file java]:498)	at org.apache.hadoop.hbase.util.CommonFSUtils.invokeSetStoragePolicy([file java]:563)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:524)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:484)	at org.apache.hadoop.hbase.util.TestFSUtils.verifyNoHDFSApiInvocationForDefaultPolicy([file java]:356)	at org.apache.hadoop.hbase.util.TestFSUtils.testSetStoragePolicyDefault([file java]:341)	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	...Caused by: java.io.IOException: The setStoragePolicy method is invoked unexpectedly	at org.apache.hadoop.hbase.util.TestFSUtils$AlwaysFailSetStoragePolicyFileSystem.setStoragePolicy([file java]:364)	... 30 more

** Comment 13 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 45s |  master passed  || +1 |  compile  |   2m 29s |  master passed  || +1 |  checkstyle  |   1m 48s |  master passed  || +1 |  shadedjars  |   5m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 17s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 40s |  the patch passed  || +1 |  compile  |   2m 32s |  the patch passed  || +1 |  javac  |   2m 32s |  the patch passed  || +1 |  checkstyle  |   1m 44s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 34s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 22s |  the patch passed  || +1 |  javadoc  |   1m  0s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 52s |  hbase-common in the patch passed.  || +1 |  unit  | 116m  5s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 39s |  The patch does not generate ASF License warnings.  ||  |   | 172m 27s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux eb1af6e00245 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 30a052b3e5 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4304 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
CommonFSUtils should be updated to check against {{DEFER_TO_HDFS_STORAGE_POLICY}} rather than against a passed in default of {{DEFAULT_WAL_STORAGE_POLICY}}. They're the same thing now, but they won't necessarily be.Since the {{setStoragePolicy}} code is in CommonFSUtils, the test should be in TestCommonFSUtils.{code}354	    LOG.debug(""Before set storage policy to NONE"");355	    FSUtils.setStoragePolicy(testFs, conf, new Path(""non-exist""), HConstants.WAL_STORAGE_POLICY,356	            HConstants.DEFAULT_WAL_STORAGE_POLICY);357	    LOG.debug(""After set storage policy to NONE"");358	    conf.set(HConstants.WAL_STORAGE_POLICY, ""HOT"");359	    // warning log is expected when passing some valid policy360	    FSUtils.setStoragePolicy(testFs, conf, new Path(""non-exist""), HConstants.WAL_STORAGE_POLICY,361	            HConstants.DEFAULT_WAL_STORAGE_POLICY);{code}Shouldn't this second invocation have thrown an IOException?

** Comment 17 **
bq. CommonFSUtils should be updated to check against DEFER_TO_HDFS_STORAGE_POLICYIt should check against the default storage policy and let through if so. Currently the default policy is set to ""NONE"", and we give it a comprehensive constant name {{DEFER_TO_HDFS_STORAGE_POLICY}}bq. the test should be in TestCommonFSUtilsAgree that they should be. Checking commit history, the set-storage related test cases were added in {{TestFSUtils}} by HBASE-13498 and somehow left there during the code refactor in HBASE-18784... How about we open a follow-on JIRA to move all set-storage test cases into {{TestCommonFSUtils}} after this one?bq. Shouldn't this second invocation have thrown an IOException?Personally I think it's OK to let it fail silently with some warning log if the given policy is invalid or the set policy attempt failed, as the current implementation does. Throwing an IOE and cause region fail to open is too much IMHO.

** Comment 18 **
{quote}bq. CommonFSUtils should be updated to check against DEFER_TO_HDFS_STORAGE_POLICYIt should check against the default storage policy and let through if so. Currently the default policy is set to ""NONE"", and we give it a comprehensive constant name DEFER_TO_HDFS_STORAGE_POLICY{quote}Right now the code in CommonFSUtils just checks against the default passed into the call to {{setStoragePolicy}}, not against any constant. That's incorrect. E.g. if someone calls {{CommonFSUtils.setStoragePolicy(fs, conf, ""get.this.storage.policy.key"", ""HOT"")}} then if ""get.this.storage.policy.key"" isn't set it should a) use the value ""HOT"" and b) actually pass that value to the FileSystem implementation. When checking against a constant, the one it should check is DEFER_TO_HDFS_STORAGE_POLICY because changing our default policy for WALs shouldn't change which values are passed through to the FileSystem instance.{quote}bq. the test should be in TestCommonFSUtilsAgree that they should be. Checking commit history, the set-storage related test cases were added in TestFSUtils by HBASE-13498 and somehow left there during the code refactor in HBASE-18784... How about we open a follow-on JIRA to move all set-storage test cases into TestCommonFSUtils after this one?{quote}Sure. please link it here.{quote}bq. Shouldn't this second invocation have thrown an IOException?Personally I think it's OK to let it fail silently with some warning log if the given policy is invalid or the set policy attempt failed, as the current implementation does. Throwing an IOE and cause region fail to open is too much IMHO.{quote}I don't mean in the region server, I mean just here in this test. the second call effectively uses ""HOT"" as the storage policy. That's a policy that we should give to the underlying FileSystem. The call in the test passes {{testFs}} as the FileSystem instance, which is an instance of the newly added ""throw an IOException if anyone calls setStoragePolicy"" FileSystem. If the use doesn't throw an exception then either a) CommonFSUtils isn't passing values to the FileSystem it should or b) the newly added FileSystem doesn't actually throw and exception when called.if the problem is a) then we haven't solved part of the problem this jira addresses. if the problem is b) then we also don't have confirmation that CommonFSUtils didn't pass the ""NONE"" value along to the FileSystem implementation.

** Comment 19 **
bq. Right now the code in CommonFSUtils just checks against the default passed into the call to setStoragePolicy, not against any constant. That's incorrectOk, got your point, it follows this mode since introduced by HBASE-12848. Let me remove the {{setStoragePolicy}} method with the *defaultPolicy* parameter and directly check against constant in the {{setStoragePolicy}} method with 3 parameters.bq. I don't mean in the region server, I mean just here in this test.Ah I see, the test case here simply tries to prove the HDFS api won't be called if we tries to set the storage policy to default, and vice versa. Please check the new patch and I think it will be much more clear. Please note that the IOException thrown will be caught and *logged as a warning* like below (I guess you ignored the UT result I pasted above sir, so allow me to repeat):2018-06-08 22:59:39,063 WARN   util.CommonFSUtils(572): Unable to set storagePolicy=HOT for path=non-exist. DEBUG log level might have more details.java.lang.reflect.InvocationTargetException	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:62)	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:43)	at java.lang.reflect.Method.invoke([file java]:498)	at org.apache.hadoop.hbase.util.CommonFSUtils.invokeSetStoragePolicy([file java]:563)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:524)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:484)	at org.apache.hadoop.hbase.util.TestFSUtils.verifyNoHDFSApiInvocationForDefaultPolicy([file java]:356)	at org.apache.hadoop.hbase.util.TestFSUtils.testSetStoragePolicyDefault([file java]:341)	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	...Caused by: java.io.IOException: The setStoragePolicy method is invoked unexpectedly	at org.apache.hadoop.hbase.util.TestFSUtils$AlwaysFailSetStoragePolicyFileSystem.setStoragePolicy([file java]:364)	... 30 more

** Comment 20 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 19s |  master passed  || +1 |  compile  |   2m 22s |  master passed  || +1 |  checkstyle  |   1m 34s |  master passed  || +1 |  shadedjars  |   3m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 43s |  master passed  || +1 |  javadoc  |   0m 58s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 15s |  the patch passed  || +1 |  compile  |   2m 17s |  the patch passed  || +1 |  javac  |   2m 17s |  the patch passed  || +1 |  checkstyle  |   1m 29s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  4s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  5s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  4s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 39s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 43s |  hbase-procedure in the patch passed.  || +1 |  unit  | 153m  7s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  0s |  The patch does not generate ASF License warnings.  ||  |   | 202m 20s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3cb25f386069 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 72784c2d83 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4494 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 21 **
{quote}Ah I see, the test case here simply tries to prove the HDFS api won't be called if we tries to set the storage policy to default, and vice versa. Please check the new patch and I think it will be much more clear. Please note that the IOException thrown will be caught and logged as a warning like below (I guess you ignored the UT result I pasted above sir, so allow me to repeat):{code}2018-06-08 22:59:39,063 WARN   util.CommonFSUtils(572): Unable to set storagePolicy=HOT for path=non-exist. DEBUG log level might have more details.java.lang.reflect.InvocationTargetException	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at sun.reflect.NativeMethodAccessorImpl.invoke([file java]:62)	at sun.reflect.DelegatingMethodAccessorImpl.invoke([file java]:43)	at java.lang.reflect.Method.invoke([file java]:498)	at org.apache.hadoop.hbase.util.CommonFSUtils.invokeSetStoragePolicy([file java]:563)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:524)	at org.apache.hadoop.hbase.util.CommonFSUtils.setStoragePolicy([file java]:484)	at org.apache.hadoop.hbase.util.TestFSUtils.verifyNoHDFSApiInvocationForDefaultPolicy([file java]:356)	at org.apache.hadoop.hbase.util.TestFSUtils.testSetStoragePolicyDefault([file java]:341)	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	...Caused by: java.io.IOException: The setStoragePolicy method is invoked unexpectedly	at org.apache.hadoop.hbase.util.TestFSUtils$AlwaysFailSetStoragePolicyFileSystem.setStoragePolicy([file java]:364)	... 30 more{code}{quote}Oh I see. We need the unit test to fail if the call goes through. Could we refactor CommonFSUtils to have a package-private method that allows IOExceptions out, have the public access method wrap the new method to do the catch/logging, and then have the test use the one that throws?If the unit test can't fail it will have very limited utility; the vast majority of folks aren't going to examine log output.

** Comment 22 **
{code}486	    if (storagePolicy.equals(HConstants.DEFAULT_WAL_STORAGE_POLICY)) {487	      if (LOG.isTraceEnabled()) {488	        LOG.trace(""default policy of "" + storagePolicy + "" requested, exiting early."");489	      }490	      return;491	    }{code}This check should be against DEFER_TO_HDFS_STORAGE_POLICY instead.

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  6s |  master passed  || +1 |  compile  |   2m 15s |  master passed  || +1 |  checkstyle  |   1m 30s |  master passed  || +1 |  shadedjars  |   3m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 42s |  master passed  || +1 |  javadoc  |   0m 55s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   2m 15s |  the patch passed  || +1 |  javac  |   2m 15s |  the patch passed  || +1 |  checkstyle  |   1m 30s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 53s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  3s |  the patch passed  || +1 |  javadoc  |   0m 56s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 31s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 34s |  hbase-procedure in the patch passed.  || +1 |  unit  | 151m 33s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  0s |  The patch does not generate ASF License warnings.  ||  |   | 199m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ba2131371abe 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7357b0ce9f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 3844 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 25 **
{code}+      if (LOG.isTraceEnabled()) {+        LOG.trace(""We were passed the defer-to-hdfs policy "" + storagePolicy + "", exiting early."");+      }{code}please use parameterized logging, and I don't think we need the conditional check.{code}+      toThrow = e;{code}Do we want to be rethrowing the reflection related exceptions too? Not just the ones related to HDFS execution? This confuses me. Also, will need to update the comment about ""// This swallows FNFE, should we be throwing it?""{code}+  static void setStoragePolicy(final FileSystem fs, final Path path, final String storagePolicy,+      boolean throwException) throws IOException {{code}Is it too tight coupling to do something like...{code}static void setStoragePolicy(final FileSystem fs, final Path path, boolean throwException) throws IOException {final String storagePolicy = fs.getConf().get(HConstants.WAL_STORAGE_POLICY, HConstants.DEFAULT_WAL_STORAGE_POLICY);{code}Can see argument going either way, probably personal preference at that point.

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
Patch v6 uses parameterized logging, and the conditional check follows the same pattern with other loggings in this method.

** Comment 29 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 51s |  master passed  || +1 |  compile  |   2m 39s |  master passed  || +1 |  checkstyle  |   1m 47s |  master passed  || +1 |  shadedjars  |   4m 38s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 59s |  master passed  || +1 |  javadoc  |   1m  1s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 32s |  the patch passed  || +1 |  compile  |   2m 58s |  the patch passed  || +1 |  javac  |   2m 58s |  the patch passed  || +1 |  checkstyle  |   1m 55s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 58s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   4m 23s |  the patch passed  || +1 |  javadoc  |   1m 16s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 41s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 54s |  hbase-procedure in the patch passed.  || -1 |  unit  | 159m 27s |  hbase-server in the patch failed.  || +1 |  asflicense  |   3m 51s |  The patch does not generate ASF License warnings.  ||  |   | 221m 27s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.balancer.TestStochasticLoadBalancerRegionReplicaHighReplication |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 844baf12a01c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 6a0c67344a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4052 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
{code}482	    } catch (IOException e) {483	      // should never arrive here484	    }{code}This needs a log message. since we expect it to never happen, probably at WARN or ERROR.{code}try {366	      FSUtils.setStoragePolicy(testFs, new Path(""non-exist""), ""HOT"", true);367	      Assert.fail(""Should have invoked the FS API but haven't"");368	    } catch (IOException e) {369	      // expected given an invalid path370	    }{code}Aren't we expecting an IOException because the storage policy setting is a legit one and so it goes to the test FS implementation? If we can also get an IOException due to a bad path, then we need some way to differentiate which is happening.

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
[Comment excluded]

** Comment 35 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 44s |  master passed  || +1 |  compile  |   2m 32s |  master passed  || +1 |  checkstyle  |   1m 46s |  master passed  || +1 |  shadedjars  |   4m 28s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  7s |  master passed  || +1 |  javadoc  |   0m 58s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 40s |  the patch passed  || +1 |  compile  |   2m 29s |  the patch passed  || +1 |  javac  |   2m 29s |  the patch passed  || +1 |  checkstyle  |   1m 44s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 26s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  5s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 24s |  the patch passed  || +1 |  javadoc  |   0m 59s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 22s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 34s |  hbase-procedure in the patch passed.  || +1 |  unit  | 115m 16s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 59s |  The patch does not generate ASF License warnings.  ||  |   | 168m 21s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 3a1ac491687a 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 13e4578be8 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4909 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 36 **
[Comment excluded]

** Comment 37 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 39s |  master passed  || +1 |  compile  |   2m 26s |  master passed  || +1 |  checkstyle  |   1m 46s |  master passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 12s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   2m 33s |  the patch passed  || +1 |  javac  |   2m 33s |  the patch passed  || +1 |  checkstyle  |   1m 44s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 26s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 55s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 37s |  the patch passed  || +1 |  javadoc  |   1m  0s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 23s |  hbase-common in the patch passed.  || +1 |  unit  |   2m 39s |  hbase-procedure in the patch passed.  || +1 |  unit  | 123m 51s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 59s |  The patch does not generate ASF License warnings.  ||  |   | 176m 55s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 63e2c7edd2c5 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2d2d9957a7 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4517 (vs. ulimit of 10000) || modules | C: hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 38 **
[Comment excluded]

** Comment 39 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 44s |  branch-1 passed  || +1 |  compile  |   0m 50s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 55s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 46s |  branch-1 passed  || +1 |  shadedjars  |   2m 36s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 43s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 53s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 33s |  the patch passed  || +1 |  compile  |   0m 48s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 48s |  the patch passed  || +1 |  compile  |   0m 55s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 55s |  the patch passed  || +1 |  checkstyle  |   1m 46s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 33s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 42s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 52s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  4s |  hbase-common in the patch passed.  || -1 |  unit  |  96m  0s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 35s |  The patch does not generate ASF License warnings.  ||  |   | 120m 31s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.util.TestFSUtils |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 7eadcd788170 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / a25cf7b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3224 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 40 **
[Comment excluded]

** Comment 41 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 42 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 43 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 44 **
[Comment excluded]

** Comment 45 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 46 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   1m 40s |  branch-1 passed  || +1 |  compile  |   0m 49s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   0m 55s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   1m 48s |  branch-1 passed  || +1 |  shadedjars  |   2m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 40s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 54s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 31s |  the patch passed  || +1 |  compile  |   0m 50s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 50s |  the patch passed  || +1 |  compile  |   0m 57s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   0m 57s |  the patch passed  || +1 |  checkstyle  |   1m 48s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 35s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 43s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   0m 54s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  7s |  hbase-common in the patch passed.  || -1 |  unit  | 101m 41s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 35s |  The patch does not generate ASF License warnings.  ||  |   | 126m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux fdfbd9651ebe 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / a25cf7b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3987 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 47 **
The failures on TestFSUtils got resolved, but we could see below message in the test output:ExecutionException The forked VM terminated without properly saying goodbye. VM crash or System.exit called?Re-attach the branch-1 patch for another check

** Comment 48 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |  20m 59s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  1s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-1 Compile Tests  ||| 0 |  mvndep  |   1m 16s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   7m 15s |  branch-1 passed  || +1 |  compile  |   0m 57s |  branch-1 passed with JDK v1.8.0_172  || +1 |  compile  |   1m  8s |  branch-1 passed with JDK v1.7.0_181  || +1 |  checkstyle  |   2m  4s |  branch-1 passed  || +1 |  shadedjars  |   2m 56s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 50s |  branch-1 passed with JDK v1.8.0_172  || +1 |  javadoc  |   1m  6s |  branch-1 passed with JDK v1.7.0_181  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   1m 53s |  the patch passed  || +1 |  compile  |   0m 57s |  the patch passed with JDK v1.8.0_172  || +1 |  javac  |   0m 57s |  the patch passed  || +1 |  compile  |   1m  6s |  the patch passed with JDK v1.7.0_181  || +1 |  javac  |   1m  6s |  the patch passed  || -1 |  checkstyle  |   0m 29s |  hbase-common: The patch generated 1 new + 9 unchanged - 1 fixed = 10 total (was 10)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m  0s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   2m  2s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 48s |  the patch passed with JDK v1.8.0_172  || +1 |  javadoc  |   1m  3s |  the patch passed with JDK v1.7.0_181  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 28s |  hbase-common in the patch passed.  || -1 |  unit  | 136m  8s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 32s |  The patch does not generate ASF License warnings.  ||  |   | 191m 26s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.mapreduce.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFiles ||   | hadoop.hbase.mapreduce.TestLoadIncrementalHFilesUseSecurityEndPoint |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:1f3957d || JIRA Issue | HBASE-20691 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2246813180d5 4.4.0-98-generic #121-Ubuntu SMP Tue Oct 10 14:24:03 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / a25cf7b || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_181 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_172 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_181 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3922 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 49 **
The new HadoopQA looks good, locally checked the failed cases and confirmed they could pass (the failure of HadoopQA is test timed out).Pushed into branch-1 and closing jira.

** Comment 50 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-20784,https://issues.apache.org/jira/browse/HBASE-20784,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java,Will lose the SNAPSHOT suffix if we get the version of RS from ServerManager,NO,"In HBASE-20722 we removed the usage of RegionServerTracker when getting information for region server. And version in server manager is a int, and we convert it to a String when displaying it on the master ui, so we will lose the SNAPSHOT suffix. Not a big one as this is not a problem for normal releases. Open a issue for it.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 14s |  master passed  || +1 |  compile  |   2m 24s |  master passed  || +1 |  checkstyle  |   1m 45s |  master passed  || +1 |  shadedjars  |   4m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 11s |  master passed  || +1 |  javadoc  |   0m 52s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 15s |  the patch passed  || +1 |  compile  |   2m 53s |  the patch passed  || +1 |  javac  |   2m 53s |  the patch passed  || +1 |  checkstyle  |   2m  3s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  12m 16s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 51s |  the patch passed  || +1 |  javadoc  |   1m  2s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 17s |  hbase-client in the patch passed.  || +1 |  unit  | 128m 36s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 38s |  The patch does not generate ASF License warnings.  ||  |   | 184m 45s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20784 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2fc5f7e91915 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 1ade4d2f44 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4453 (vs. ulimit of 10000) || modules | C: hbase-client hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-20708,https://issues.apache.org/jira/browse/HBASE-20708,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure.java,Remove the usage of RecoverMetaProcedure in master startup,NO,"In HBASE-20700, we make RecoverMetaProcedure use a special lock which is only used by RMP to avoid dead lock with MoveRegionProcedure. But we will always schedule a RMP when master starting up, so we still need to make sure that there is no race between this RMP and other RMPs and SCPs scheduled before the master restarts.

Please see [#[accompanying design document |https://docs.google.com/document/d/1_872oHzrhJq4ck7f6zmp1J--zMhsIFvXSZyX1Mxg5MA/edit#heading=h.xy1z4alsq7uy] ]where we call out the problem being addressed by this issue in more detail and in which we describe our new approach to Master startup.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
And there is another problem for master restart is that, we need to find out the RSes crashed after the old master quits and before the new master starts. For now this is done at two places, first we will do it in MasterMetaBootstrap.processDeadServers, and second in AssignmentManager after we finish loading meta. And now we have two guards for SCP. After master bootstrap we will enable server crash processing, but if the SCP is not for a RS with meta region, then it will need to wait for the assignment to finish loading the meta.I think we could make the logic a little simpler here. When master starts, we load all the procedures first but do not start procedure workers, initialize RegionServerTracker to get the current online server lists, and scan the wal directory to get RSes which have been alive for sometime, and finally we can use these informations to find out the crashed RSes. And we can use the loaded procedures to filter out the RSes which have not been processed, i.e, do not have a SCP yet.And I think we can remove the enable server crash processing guard, if a SCP is for a RS with meta, then we could let it go until it reaches the SERVER_CRASH_GET_REGIONS state.And when reading the code, I found something strange, when updating meta location, we always mark it as OPEN.{code}  private void updateMetaLocation(final RegionInfo regionInfo, final ServerName serverName)      throws IOException {    try {      MetaTableLocator.setMetaLocation(master.getZooKeeper(), serverName,        regionInfo.getReplicaId(), State.OPEN);    } catch (KeeperException e) {      throw new IOException(e);    }  }{code}Any reason why we do this?  Thanks.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Let's see how many UTs will fail... It is known that TestServerCrashProcedure can not pass. I need to read the code to understand what is going on there...

** Comment 14 **
[Comment excluded]

** Comment 15 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 20 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 24s |  master passed  || +1 |  compile  |   2m 41s |  master passed  || +1 |  checkstyle  |   1m 21s |  master passed  || +1 |  shadedjars  |   4m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 28s |  master passed  || +1 |  javadoc  |   0m 45s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   1m 44s |  root in the patch failed.  || +1 |  compile  |   2m 49s |  the patch passed  || +1 |  cc  |   2m 49s |  the patch passed  || +1 |  javac  |   2m 49s |  the patch passed  || +1 |  checkstyle  |   0m  8s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 11s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m  4s |  hbase-server: The patch generated 0 new + 329 unchanged - 7 fixed = 329 total (was 336)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   3m 19s |  patch has 11 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 45s |  The patch causes 11 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   3m 44s |  The patch causes 11 errors with Hadoop v3.0.0.  || -1 |  hbaseprotoc  |   0m 23s |  hbase-server in the patch failed.  || +1 |  findbugs  |   4m 41s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 30s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 48s |  hbase-procedure in the patch passed.  || -1 |  unit  |   0m 43s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   |  45m 52s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 292df97db2cd 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 9e9db3245f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || mvninstall | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hbaseprotoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 312 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 16 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 20 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 23s |  master passed  || +1 |  compile  |   3m 41s |  master passed  || +1 |  checkstyle  |   1m 55s |  master passed  || +1 |  shadedjars  |   5m 55s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 20s |  master passed  || +1 |  javadoc  |   1m  6s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   2m 20s |  root in the patch failed.  || +1 |  compile  |   3m 16s |  the patch passed  || +1 |  cc  |   3m 16s |  the patch passed  || +1 |  javac  |   3m 16s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 16s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 24s |  hbase-server: The patch generated 0 new + 336 unchanged - 9 fixed = 336 total (was 345)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   3m 57s |  patch has 11 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   2m 21s |  The patch causes 11 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   4m 41s |  The patch causes 11 errors with Hadoop v3.0.0.  || -1 |  hbaseprotoc  |   0m 26s |  hbase-server in the patch failed.  || +1 |  findbugs  |   4m 57s |  the patch passed  || +1 |  javadoc  |   0m 51s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 30s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 39s |  hbase-procedure in the patch passed.  || -1 |  unit  |   0m 44s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   |  53m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 92b72f3136bf 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 0b28155d27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || mvninstall | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hbaseprotoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 279 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 38s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 20 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   8m 21s |  master passed  || +1 |  compile  |   6m  7s |  master passed  || +1 |  checkstyle  |   3m 35s |  master passed  || +1 |  shadedjars  |   7m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 20s |  master passed  || +1 |  javadoc  |   0m 53s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 51s |  the patch passed  || +1 |  compile  |   5m  7s |  the patch passed  || +1 |  cc  |   5m  7s |  the patch passed  || +1 |  javac  |   5m  7s |  the patch passed  || +1 |  checkstyle  |   0m 32s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 42s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   2m  8s |  hbase-server: The patch generated 0 new + 331 unchanged - 14 fixed = 331 total (was 345)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   7m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m 27s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   3m 15s |  the patch passed  || +1 |  findbugs  |  10m 53s |  the patch passed  || +1 |  javadoc  |   1m 39s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 37s |  hbase-procedure in the patch passed.  || -1 |  unit  | 137m 15s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 56s |  The patch does not generate ASF License warnings.  ||  |   | 231m  2s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.regionserver.TestEncryptionKeyRotation ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleWAL ||   | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleAsyncWAL ||   | hadoop.hbase.replication.TestReplicationDisableInactivePeer ||   | hadoop.hbase.replication.TestReplicationSyncUpTool ||   | hadoop.hbase.master.TestTableStateManager ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.master.balancer.TestFavoredNodeTableImport ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.TestZooKeeper ||   | hadoop.hbase.client.TestTableFavoredNodes ||   | hadoop.hbase.TestMultiVersions ||   | hadoop.hbase.client.TestMetaWithReplicas |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 792217865e5d 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 0b28155d27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4155 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
Fix master failover, and add more comments.

** Comment 25 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 20 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 54s |  master passed  || +1 |  compile  |   3m  8s |  master passed  || +1 |  checkstyle  |   1m 38s |  master passed  || +1 |  shadedjars  |   4m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 17s |  master passed  || +1 |  javadoc  |   0m 50s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   2m 57s |  the patch passed  || +1 |  cc  |   2m 57s |  the patch passed  || +1 |  javac  |   2m 57s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 14s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 342 unchanged - 14 fixed = 342 total (was 356)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 53s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 20s |  the patch passed  || +1 |  findbugs  |   4m 48s |  the patch passed  || +1 |  javadoc  |   0m 51s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || -1 |  unit  | 123m 25s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 54s |  The patch does not generate ASF License warnings.  ||  |   | 179m 51s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.wal.TestWALOpenAfterDNRollingStart ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.master.balancer.TestFavoredNodeTableImport ||   | hadoop.hbase.TestZooKeeper ||   | hadoop.hbase.client.TestTableFavoredNodes |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux e7afd7b4a367 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 0b28155d27 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4242 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
[Comment excluded]

** Comment 28 **
{quote}If a Master joins a cluster where there is no crashed RS, it just scans meta and away we go?{quote}The basic idea is that, all the recovery works should be done in SCP, including assigning meta region. And then, we know that the region state information for meta region is on zk, not in meta region itself, so we can start processing recovery for meta region in SCP before AssignmentManager loads region states from meta region. So theoretically this could work. And actually it does work, as I've already uploaded a patch here.So the second problem here is that, we need to make sure that every crashed RS should have a SCP for it. This is not straight forward when master restarts. In the old implementation, the work is done after we loading all the region states from meta, since then we can get all the RSes which have carry regions, and compare it with the online servers to find out the dead ones.But this will not work if we want to change to the logic above as it introduces cyclic dependency. As the SCP scheduling will depend on AM loads the region states first, but loading region states need the meta region to be online, so it depends on SCP to bring meta region online...So we need to find another way to do this. The basic idea is that, we can get the live servers by scanning the wal directory, as a RS must initialize the wal system before carrying regions(there maybe a problem that if all the regions on that RS is WAL less, but I think at least we can create the parent directory first). This does not depend on region states so can happen before AM loads the region states.{quote}We'll still need serverCrashProcessingEnabled type flag to hold up Master startup until meta is online?{quote}Just use AM.metaRegionLoaded is fine. The serverCrashProcessingEnabled flag is useless now.{quote}I like this idea too... Since a server can only crash once... so queue per server....{quote}Will fine a new issue for it, as the patch here is already big enough...

** Comment 29 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 20 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 44s |  master passed  || +1 |  compile  |   3m  0s |  master passed  || +1 |  checkstyle  |   1m 40s |  master passed  || +1 |  shadedjars  |   5m  1s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  3s |  master passed  || +1 |  javadoc  |   0m 59s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 53s |  the patch passed  || +1 |  compile  |   3m  1s |  the patch passed  || +1 |  cc  |   3m  1s |  the patch passed  || +1 |  javac  |   3m  1s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 15s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 342 unchanged - 14 fixed = 342 total (was 356)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  0s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 22s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 25s |  the patch passed  || +1 |  findbugs  |   5m 46s |  the patch passed  || +1 |  javadoc  |   1m  3s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 50s |  hbase-procedure in the patch passed.  || -1 |  unit  | 126m 30s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 55s |  The patch does not generate ASF License warnings.  ||  |   | 186m 16s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.TestMetaTableAccessor ||   | hadoop.hbase.master.balancer.TestFavoredNodeTableImport ||   | hadoop.hbase.master.normalizer.TestSimpleRegionNormalizerOnCluster ||   | hadoop.hbase.master.balancer.TestFavoredStochasticBalancerPickers ||   | hadoop.hbase.client.TestTableFavoredNodes |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 31c7ffc3d11f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 86653c708f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4880 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 30 **
[Comment excluded]

** Comment 31 **
OK I found the side effect to not always set meta state to OPEN. In AsyncProcess, if we fail to locate a region, then we will fail directly without retrying. So TestMetaTableAccessor.testRetrying will be very easy to fail since in the old time, it will always get a location and then fail to send request to the RS, and then it will retry. But now it may receive a meta table in OPENING state error and then fail directly...But I think this is a problem for AsyncProcess?

** Comment 32 **
[Comment excluded]

** Comment 33 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 21 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 38s |  master passed  || +1 |  compile  |   3m 36s |  master passed  || +1 |  checkstyle  |   2m  9s |  master passed  || +1 |  shadedjars  |   4m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  9s |  master passed  || +1 |  javadoc  |   1m 11s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 40s |  the patch passed  || +1 |  compile  |   3m 31s |  the patch passed  || +1 |  cc  |   3m 31s |  the patch passed  || +1 |  javac  |   3m 31s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  The patch hbase-client passed checkstyle  || +1 |  checkstyle  |   0m 14s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 363 unchanged - 16 fixed = 363 total (was 379)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 52s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 34s |  the patch passed  || +1 |  findbugs  |   5m 39s |  the patch passed  || +1 |  javadoc  |   1m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 57s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-procedure in the patch passed.  || +1 |  unit  | 123m 21s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 18s |  The patch does not generate ASF License warnings.  ||  |   | 187m 37s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 4a2c758087fa 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 86653c708f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4089 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 34 **
[Comment excluded]

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 21 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 47s |  master passed  || +1 |  compile  |   3m 45s |  master passed  || +1 |  checkstyle  |   2m 13s |  master passed  || +1 |  shadedjars  |   5m  4s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 33s |  master passed  || +1 |  javadoc  |   1m 12s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  5s |  the patch passed  || +1 |  compile  |   4m 17s |  the patch passed  || +1 |  cc  |   4m 17s |  the patch passed  || +1 |  javac  |   4m 17s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 39s |  The patch hbase-client passed checkstyle  || +1 |  checkstyle  |   0m 17s |  The patch hbase-procedure passed checkstyle  || +1 |  checkstyle  |   1m 25s |  hbase-server: The patch generated 0 new + 363 unchanged - 16 fixed = 363 total (was 379)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 30s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 41s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  3s |  the patch passed  || +1 |  findbugs  |   7m 15s |  the patch passed  || +1 |  javadoc  |   1m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 41s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m 20s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 55s |  hbase-procedure in the patch passed.  || -1 |  unit  | 127m 20s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 19s |  The patch does not generate ASF License warnings.  ||  |   | 200m  5s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestProcedurePriority |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 2473bdb86f68 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 86653c708f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4090 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 38 **
[Comment excluded]

** Comment 39 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 21 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 35s |  master passed  || +1 |  compile  |   3m 35s |  master passed  || +1 |  checkstyle  |   2m 10s |  master passed  || +1 |  shadedjars  |   4m 52s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 11s |  master passed  || +1 |  javadoc  |   1m 10s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   3m 31s |  the patch passed  || +1 |  cc  |   3m 31s |  the patch passed  || +1 |  javac  |   3m 31s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  The patch hbase-client passed checkstyle  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 43 unchanged - 1 fixed = 43 total (was 44)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 351 unchanged - 17 fixed = 351 total (was 368)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 54s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 35s |  the patch passed  || +1 |  findbugs  |   5m 45s |  the patch passed  || +1 |  javadoc  |   1m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 30s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  4s |  hbase-client in the patch passed.  || -1 |  unit  |   1m 46s |  hbase-procedure in the patch failed.  || -1 |  unit  | 112m 38s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 16s |  The patch does not generate ASF License warnings.  ||  |   | 176m 27s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.procedure2.TestProcedureMetrics |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux ea696a9499eb 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ac5bb8155b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4572 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 40 **
[Comment excluded]

** Comment 41 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 21 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 39s |  master passed  || +1 |  compile  |   3m 30s |  master passed  || +1 |  checkstyle  |   2m  7s |  master passed  || +1 |  shadedjars  |   4m 28s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 10s |  master passed  || +1 |  javadoc  |   1m 13s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 45s |  the patch passed  || +1 |  compile  |   3m 37s |  the patch passed  || +1 |  cc  |   3m 37s |  the patch passed  || +1 |  javac  |   3m 37s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  The patch hbase-client passed checkstyle  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 43 unchanged - 1 fixed = 43 total (was 44)  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 1 new + 359 unchanged - 17 fixed = 360 total (was 376)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 22s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 40s |  the patch passed  || +1 |  findbugs  |   6m 20s |  the patch passed  || +1 |  javadoc  |   1m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  3s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-procedure in the patch passed.  || +1 |  unit  | 113m 22s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 16s |  The patch does not generate ASF License warnings.  ||  |   | 178m 54s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20708 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 1ab2f00152eb 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 78da0e3669 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4617 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 42 **
Will commit shortly after fixing the checkstyle warnings.

** Comment 43 **
[Comment excluded]

** Comment 44 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 45 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 46 **
[Comment excluded]

** Comment 47 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-20625,https://issues.apache.org/jira/browse/HBASE-20625,https://github.com/apache/hbase/blob/rel/2.1.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,refactor some WALCellCodec related code,NO,"Currently I'm working on export HLog to another FileSystem, then I found the code of WALCellCodec and  its related classes is not that clean. And there are several TODOs. Thus I tried to refactor the code based one these TODOs. e.g.
{code}
  // TODO: it sucks that compression context is in WAL.Entry. It'd be nice if it was here.
  //       Dictionary could be gotten by enum; initially, based on enum, context would create
  //       an array of dictionaries.
  static class BaosAndCompressor extends ByteArrayOutputStream implements ByteStringCompressor {
    public ByteString toByteString() {
      // We need this copy to create the ByteString as the byte[] 'buf' is not immutable. We reuse
      // them.
      return ByteString.copyFrom(this.buf, 0, this.count);
    }
{code}","** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  7s |  master passed  || +1 |  compile  |   1m 43s |  master passed  || +1 |  checkstyle  |   1m 12s |  master passed  || +1 |  shadedjars  |   4m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 52s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 41s |  the patch passed  || +1 |  compile  |   1m 41s |  the patch passed  || +1 |  javac  |   1m 41s |  the patch passed  || -1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 3 new + 48 unchanged - 3 fixed = 51 total (was 51)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 47s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 33s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 12s |  the patch passed  || +1 |  javadoc  |   0m 35s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 125m  5s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 171m  8s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpointNoMaster ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 9876d24743df 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 5721150c6d || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4416 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
fix failed UTs.

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 24s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m 12s |  master passed  || +1 |  compile  |   1m 53s |  master passed  || +1 |  checkstyle  |   1m  9s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   1m 59s |  hbase-server in master has 2 extant Findbugs warnings.  || +1 |  javadoc  |   0m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 25s |  the patch passed  || +1 |  compile  |   1m 36s |  the patch passed  || +1 |  javac  |   1m 36s |  the patch passed  || +1 |  checkstyle  |   0m 58s |  hbase-server: The patch generated 0 new + 48 unchanged - 3 fixed = 48 total (was 51)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  14m 50s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  3s |  the patch passed  || +1 |  javadoc  |   0m 26s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 241m  3s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   | 291m 47s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a6583554fda9 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c253f8f809 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4978 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   1m 33s |  master passed  || +1 |  checkstyle  |   1m  1s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   1m 46s |  hbase-server in master has 2 extant Findbugs warnings.  || +1 |  javadoc  |   0m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   1m 31s |  the patch passed  || +1 |  javac  |   1m 31s |  the patch passed  || +1 |  checkstyle  |   1m  0s |  hbase-server: The patch generated 0 new + 48 unchanged - 3 fixed = 48 total (was 51)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  3s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 56s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 110m  4s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 150m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 42eebb69c1a4 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 320a3332e0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4882 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -1 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 40s |  master passed  || +1 |  compile  |   1m 41s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   4m 56s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   1m 55s |  hbase-server in master has 2 extant Findbugs warnings.  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 42s |  the patch passed  || +1 |  compile  |   1m 43s |  the patch passed  || +1 |  javac  |   1m 43s |  the patch passed  || +1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 0 new + 48 unchanged - 3 fixed = 48 total (was 51)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 53s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  15m 29s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  3s |  the patch passed  || +1 |  javadoc  |   0m 34s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 140m 13s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 186m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:d8b550f || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 65e3c3dca89f 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 320a3332e0 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4366 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 34s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 33s |  master passed  || +1 |  compile  |   1m 58s |  master passed  || +1 |  checkstyle  |   1m 14s |  master passed  || +1 |  shadedjars  |   5m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  7s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  6s |  the patch passed  || +1 |  compile  |   1m 54s |  the patch passed  || +1 |  javac  |   1m 54s |  the patch passed  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 1 new + 72 unchanged - 3 fixed = 73 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m  1s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 37s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  8s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 114m 46s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   | 161m 19s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d731f0daf05d 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 573b57d437 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4298 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 22s |  master passed  || +1 |  compile  |   1m 57s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   4m 53s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  2s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 53s |  the patch passed  || +1 |  compile  |   1m 50s |  the patch passed  || +1 |  javac  |   1m 50s |  the patch passed  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 72 unchanged - 3 fixed = 72 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 47s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  6s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 130m 14s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 21s |  The patch does not generate ASF License warnings.  ||  |   | 173m 27s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0105409ca2ff 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / edf60b965b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4354 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 37s |  master passed  || +1 |  compile  |   1m 59s |  master passed  || +1 |  checkstyle  |   1m 17s |  master passed  || +1 |  shadedjars  |   5m 30s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 11s |  master passed  || +1 |  javadoc  |   0m 36s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 38s |  the patch passed  || +1 |  compile  |   2m 13s |  the patch passed  || +1 |  javac  |   2m 13s |  the patch passed  || +1 |  checkstyle  |   1m 22s |  hbase-server: The patch generated 0 new + 72 unchanged - 3 fixed = 72 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 49s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 22s |  the patch passed  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 118m 15s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 20s |  The patch does not generate ASF License warnings.  ||  |   | 166m 14s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f85d0269aa56 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / edf60b965b || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4142 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 30s |  master passed  || +1 |  compile  |   1m 52s |  master passed  || +1 |  checkstyle  |   1m 18s |  master passed  || +1 |  shadedjars  |   5m  0s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  2s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 22s |  the patch passed  || +1 |  compile  |   2m  5s |  the patch passed  || +1 |  javac  |   2m  5s |  the patch passed  || +1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 0 new + 72 unchanged - 3 fixed = 72 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 22s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 50s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 18s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 119m 51s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 164m 54s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 924ada1afe89 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8648af07d4 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4572 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| +1 |  mvninstall  |   6m  6s |  branch-2 passed  || +1 |  compile  |   1m 42s |  branch-2 passed  || +1 |  checkstyle  |   1m 11s |  branch-2 passed  || +1 |  shadedjars  |   3m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 45s |  branch-2 passed  || +1 |  javadoc  |   0m 34s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 22s |  the patch passed  || +1 |  compile  |   1m 39s |  the patch passed  || +1 |  javac  |   1m 39s |  the patch passed  || +1 |  checkstyle  |   1m  2s |  hbase-server: The patch generated 0 new + 72 unchanged - 3 fixed = 72 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m  1s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 56s |  the patch passed  || +1 |  javadoc  |   0m 25s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 115m 13s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 150m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 60d52b3385e9 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2 / 075523dd1e || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4701 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 24s |  master passed  || +1 |  compile  |   2m  4s |  master passed  || +1 |  checkstyle  |   1m 18s |  master passed  || +1 |  shadedjars  |   5m 30s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 24s |  master passed  || +1 |  javadoc  |   0m 37s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m  0s |  the patch passed  || +1 |  compile  |   2m  7s |  the patch passed  || +1 |  javac  |   2m  7s |  the patch passed  || -1 |  checkstyle  |   1m 23s |  hbase-server: The patch generated 1 new + 72 unchanged - 3 fixed = 73 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 38s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 26s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 32s |  the patch passed  || +1 |  javadoc  |   0m 34s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 113m 43s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 161m 44s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 80979cea4011 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ec66434380 || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4708 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 16s |  master passed  || +1 |  compile  |   1m 33s |  master passed  || +1 |  checkstyle  |   1m  1s |  master passed  || +1 |  shadedjars  |   4m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 47s |  master passed  || +1 |  javadoc  |   0m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 20s |  the patch passed  || +1 |  compile  |   1m 32s |  the patch passed  || +1 |  javac  |   1m 32s |  the patch passed  || +1 |  checkstyle  |   0m 59s |  hbase-server: The patch generated 0 new + 72 unchanged - 3 fixed = 72 total (was 75)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  7s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m 52s |  the patch passed  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 107m 52s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 144m 46s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20625 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 380cbf5e0a1d 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 9e9db3245f || maven | version: Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T19:49:05Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5063 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
 patch for branch2 and master are both uploaded. These failed tests are not related to my patch

** Comment 21 **
[Comment excluded]

** Comment 22 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 23 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21363,https://issues.apache.org/jira/browse/HBASE-21363,https://github.com/apache/hbase/blob/rel/2.1.1/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java,Rewrite the buildingHoldCleanupTracker method in WALProcedureStore,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  2s |  master passed  || +1 |  compile  |   0m 21s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   3m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 24s |  master passed  || +1 |  javadoc  |   0m 12s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 46s |  the patch passed  || +1 |  compile  |   0m 22s |  the patch passed  || +1 |  javac  |   0m 22s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  2s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 58s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 29s |  the patch passed  || +1 |  javadoc  |   0m 13s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 14s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  34m 23s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0140da2d5fce 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 603bf4c551 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 304 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
{quote}As I commented in HBASE-21354. If a procWAL closed normally, the tracker's partial flag is already false...{quote}Then it is fine to use it to decide whether a procedure is deleted when building the holding cleanup tracker, as it contains all the deleted information for the procedures which are appeared so far.

** Comment 4 **
Talked with  offline, as all the deleted procedures can be decided by the global one, we do not need to check deleted when applying other procedures, so I modified the code a bit. And since the logs is a linked list, we should not use the get(index) method, so I changed to use iterator.

** Comment 5 **
{code}    holdingCleanupTracker.setDeletedIfModifiedInBothOrDeletedByThem(storeTracker);{code}This won't cause a logic error, but, in global tracker, all the modifed bits are reset to 0, it is useless to check modified in global tracker.

** Comment 6 **
[Comment excluded]

** Comment 7 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 39s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m  8s |  master passed  || +1 |  compile  |   0m 30s |  master passed  || +1 |  checkstyle  |   0m 18s |  master passed  || +1 |  shadedjars  |   4m 59s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 26s |  master passed  || +1 |  javadoc  |   0m 14s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 22s |  the patch passed  || +1 |  compile  |   0m 22s |  the patch passed  || +1 |  javac  |   0m 22s |  the patch passed  || +1 |  checkstyle  |   0m 15s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 11s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 35s |  the patch passed  || +1 |  javadoc  |   0m 13s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 11s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  41m 38s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ce1e461a5428 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3b68e5393e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 276 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   0m 20s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 24s |  master passed  || +1 |  javadoc  |   0m 12s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  4s |  the patch passed  || +1 |  compile  |   0m 20s |  the patch passed  || +1 |  javac  |   0m 20s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 36s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 32s |  the patch passed  || +1 |  javadoc  |   0m 13s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  6s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  35m 36s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux ccddf2be3a28 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3b68e5393e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 277 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   6m 11s |  master passed  || +1 |  compile  |   0m 23s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 17s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 27s |  master passed  || +1 |  javadoc  |   0m 13s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  7s |  the patch passed  || +1 |  compile  |   0m 21s |  the patch passed  || +1 |  javac  |   0m 21s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 30s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 32s |  the patch passed  || +1 |  javadoc  |   0m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  8s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  37m  5s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1194f80ac5e4 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 1f437ac221 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 278 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   8m  6s |  master passed  || +1 |  compile  |   0m 27s |  master passed  || +1 |  checkstyle  |   0m 18s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 36s |  master passed  || +1 |  javadoc  |   0m 22s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 28s |  the patch passed  || +1 |  compile  |   0m 22s |  the patch passed  || +1 |  javac  |   0m 22s |  the patch passed  || +1 |  checkstyle  |   0m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 13s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 42s |  the patch passed  || +1 |  javadoc  |   0m 14s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 36s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m 15s |  The patch does not generate ASF License warnings.  ||  |   |  41m 33s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b207abd0da91 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 1f437ac221 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 273 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 22 **
[Comment excluded]

** Comment 23 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 16s |  master passed  || +1 |  compile  |   0m 22s |  master passed  || +1 |  checkstyle  |   0m 15s |  master passed  || +1 |  shadedjars  |   4m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 27s |  master passed  || +1 |  javadoc  |   0m 15s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 17s |  the patch passed  || +1 |  compile  |   0m 23s |  the patch passed  || +1 |  javac  |   0m 23s |  the patch passed  || +1 |  checkstyle  |   0m 16s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m  1s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 34s |  the patch passed  || +1 |  javadoc  |   0m 13s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 16s |  hbase-procedure in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  37m  1s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21363 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 5615fc1d5f9b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 1f437ac221 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 272 (vs. ulimit of 10000) || modules | C: hbase-procedure U: hbase-procedure || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 24 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 25 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 26 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 27 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21380,https://issues.apache.org/jira/browse/HBASE-21380,https://github.com/apache/hbase/blob/rel/2.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/master/DeadServer.java,TestRSGroups failing,YES,only failing on branch-2.1,"** Comment 1 **
Bisect shows that this started failing after HBASE-21266 was committed. Will investigate further.

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
{{testRSGroupsWithHBaseQuota}} does not exist in branch-2.0, so that's why we don't see this failure there.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
I already did that locally, but still had test failure

** Comment 8 **
[Comment excluded]

** Comment 9 **
 Mind if I add @Ignore to TestRSGroups#testRSGroupsWithHBaseQuota in subtask so I can cut an RC? It is the difference between branch-2.0 and branch-2.1 and the culprit that brings on the failures in TestRSGroups post HBASE-21266? Thanks.

** Comment 10 **
Failures over on [link] are not the same as balancer-not-running.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Continuing to look into this...Here's a snippet from my logs:2018-10-25 10:34:18,231 DEBUG  procedure2.ProcedureExecutor(522): Completed pid=9, state=SUCCESS; ServerCrashProcedure server=mdrob-mbp.hsd1.tx.comcast.net,60040,1540481628186, splitWal=true, meta=true2018-10-25 10:34:18,232 DEBUG  procedure2.ProcedureExecutor(522): Completed pid=10, state=SUCCESS; ServerCrashProcedure server=mdrob-mbp.hsd1.tx.comcast.net,60037,1540481628106, splitWal=true, meta=false2018-10-25 10:34:18,232 DEBUG  procedure2.ProcedureExecutor(522): Completed pid=11, state=SUCCESS; ServerCrashProcedure server=mdrob-mbp.hsd1.tx.comcast.net,60111,1540481641705, splitWal=true, meta=false2018-10-25 10:34:18,232 DEBUG  procedure2.ProcedureExecutor(522): Completed pid=12, state=SUCCESS; ServerCrashProcedure server=mdrob-mbp.hsd1.tx.comcast.net,60034,1540481627993, splitWal=true, meta=false2018-10-25 10:34:18,233 DEBUG  procedure2.ProcedureExecutor(522): Completed pid=16, state=SUCCESS; CreateTableProcedure table=hbase:quota2018-10-25 10:34:18,233 INFO   procedure2.ProcedureExecutor(729): Loaded WALProcedureStore in 14msec2018-10-25 10:34:18,233 INFO   procedure2.RemoteProcedureDispatcher(97): Instantiated, coreThreads=128 (allowCoreThreadTimeOut=true), queueMaxSize=32, operationDelay=1502018-10-25 10:34:18,235 INFO   master.RegionServerTracker(123): Starting RegionServerTracker; 4 have existing ServerCrashProcedures, 3 possibly 'live' servers, and 0 'splitting'.2018-10-25 10:34:18,236 DEBUG  master.DeadServer(136): Added mdrob-mbp.hsd1.tx.comcast.net,60040,1540481628186; numProcessing=1java.lang.Exception: trace2018-10-25 10:34:18,236 DEBUG  master.DeadServer(139): Added mdrob-mbp.hsd1.tx.comcast.net,60037,1540481628106; numProcessing=22018-10-25 10:34:18,236 DEBUG  master.DeadServer(139): Added mdrob-mbp.hsd1.tx.comcast.net,60111,1540481641705; numProcessing=32018-10-25 10:34:18,236 DEBUG  master.DeadServer(139): Added mdrob-mbp.hsd1.tx.comcast.net,60034,1540481627993; numProcessing=42018-10-25 10:34:18,237 DEBUG  master.DeadServer(139): Added mdrob-mbp.hsd1.tx.comcast.net,60145,1540481644975; numProcessing=5The line numbers for the DeadServer log messages are a bit off from what's in branch-2.1 because I added some additional checks around there. The trace for those calls is:	at org.apache.hadoop.hbase.master.DeadServer.add([file java]:137)	at java.lang.Iterable.forEach([file java]:75)	at org.apache.hadoop.hbase.master.ServerManager.findDeadServersAndProcess([file java]:321)	at org.apache.hadoop.hbase.master.RegionServerTracker.start([file java]:145)	at org.apache.hadoop.hbase.master.HMaster.finishActiveMasterInitialization([file java]:904)	at org.apache.hadoop.hbase.master.HMaster.startActiveMasterManager([file java]:2254)	at org.apache.hadoop.hbase.master.HMaster.lambda$run$0([file java]:583)	at java.lang.Thread.run([file java]:748)With the really interesting part being that the RegionServerTracker starts with a list of servers derived from the current set of SCPs. But if the SCPs are done then they'll never call finish() on the dead servers list and they'll never be removed from the ""processing"" list, and then even a user request won't clear them out of dead server space.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 28s |  master passed  || +1 |  compile  |   1m 48s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 58s |  master passed  || +1 |  javadoc  |   0m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  3s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || +1 |  checkstyle  |   1m 19s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 23s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 55s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 21s |  the patch passed  || +1 |  javadoc  |   0m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 133m 37s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 176m 29s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21380 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux aa38e8cd26e8 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 66469733ec || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5308 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 17 **
 - found a not _too_ hacky way to propagate the information through. WDYT?

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 28s |  branch-2.1 passed  || +1 |  compile  |   1m 51s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 18s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  8s |  branch-2.1 passed  || +1 |  javadoc  |   0m 32s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 15s |  the patch passed  || -1 |  compile  |   0m 41s |  hbase-server in the patch failed.  || -1 |  javac  |   0m 41s |  hbase-server in the patch failed.  || -1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 1 new + 178 unchanged - 0 fixed = 179 total (was 178)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 51s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 15s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 208m 41s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 48s |  The patch does not generate ASF License warnings.  ||  |   | 245m 35s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncTableGetMultiThreaded |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21380 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1998553b7cd2 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / e71c05707e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || compile | [link] || javac | [link] || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4560 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 20 **
Who put that errorprone crap in our build! (smile).It found a good one. Going w/ 001 for now so can put up a 2.1.1 since not an easy fix and I want to push the RC.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 25 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 26 **
[Comment excluded]
"
HBASE-21073,https://issues.apache.org/jira/browse/HBASE-21073,https://github.com/apache/hbase/blob/rel/2.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java,"""Maintenance mode"" master",NO,"Make it so we can bring up a Master in ""maintenance mode"". This is parse of master wal procs but not taking on regionservers. It would be in a state where ""repair"" Procedures could run; e.g. a Procedure that could recover meta by looking for meta WALs, splitting them, dropping recovered.edits, and even making it so meta is readable. See parent issue for why needed (disaster recovery).","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
bq. I have no idea what happens if we try to scan one of the user space tables.We read the table region locations out of meta, try to connect to the previously hosting region server, and then fail with connection refused. The ergonomics of this are not great, but I think maybe we can leave it for follow on work.bq. RSRpcServices can try to reject requests from non-replication peers...bq. I have no idea what happens if we try to come up in a repair mode when replication is enabled.Replication doesn't apply to system tables, so that's why this never gets set up, I think. It's ok to ignore that I think.Another open question though - should we try to fold this in to the maintenance mode features of HBASE-16008, where it is tracked via ZK?

** Comment 10 **
What does this do (smile)?There is already a log message (?) about master being in maintenance mode... You saw that (Perhaps related to HBASE-16008 ?)? Has that been appropriated by this patch?bq. I have no idea what happens if we try to scan one of the user space tables.A client would hang, right, then fail because it would try to go to server hosting the user-space region. Should maintenance mode bring up the Master but only have it listening for Connection from localhost?bq. Why do I need to explicitly set TABLES_ON_MASTER to true in the test? I haven't yet found where Master reads that value to know that it should report as an RS.[file java]:    boolean tablesOnMaster = LoadBalancer.isTablesOnMaster(conf);Is that it? This bit of code here is strange. In usual case -- no regions on master -- we actually seem to hang here... which doesn't seem right.Rather than fold this into HBASE-16008, HBASE-16008 should be purged or folded in here. HBASE-16008's notion of 'maintenance mode' is strange... its setting a running master into a 'state' so hbck1 could run.... and then restoring old state after.

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
bq. All of this work is completely disjoint from the earlier maintenance mode, which is why I gave it a different name. I didn't look too deeply into what old maintenance mode did.Would be good to purge this hbck1 assumption of the label 'maintenance mode'.bq. Maybe? Limiting the access is more work, and I'm not sure what it gains us.We'd avoid confused clients thinking the hbase is 'up'.Can I connect to the Master when in maintenance mode with the shelll? That would be useful I'd say.bq. Going to hack around this by skipping the wait entirely.Ok. But maybe leave that to a follow-on. I was in here a while back convinced that the hang at this spot an error but after spending some time, put it off as a 'later'... to be dealt with when we make the startup sequence more sane such that a Master really can be a RS rather than this fake that we have now.Thanks 

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  4s |  master passed  || +1 |  compile  |   2m 13s |  master passed  || +1 |  checkstyle  |   1m 44s |  master passed  || +1 |  shadedjars  |   4m 57s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 58s |  master passed  || +1 |  javadoc  |   0m 47s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 23s |  the patch passed  || +1 |  compile  |   2m  9s |  the patch passed  || +1 |  javac  |   2m  9s |  the patch passed  || -1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 3 new + 401 unchanged - 0 fixed = 404 total (was 401)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 39s |  the patch passed  || +1 |  javadoc  |   0m 42s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 42s |  hbase-zookeeper in the patch passed.  || -1 |  unit  | 137m 59s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 52s |  The patch does not generate ASF License warnings.  ||  |   | 186m 33s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionReplicasWithRestartScenarios ||   | hadoop.hbase.regionserver.TestScannerHeartbeatMessages ||   | hadoop.hbase.regionserver.TestHdfsSnapshotHRegion ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.regionserver.TestRegionReplicasWithModifyTable |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 0db61cc75099 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 07e2247d2e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5314 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 21 **
stack - i don't have any good ideas on how to test some of the various failure conditions that you suggest you are interested in, from the issue description.bq. a Procedure that could recover meta by looking for meta WALs, splitting them, dropping recovered.edits, and even making it so meta is readable. See parent issue for why needed (disaster recovery)We currently have a solution that will load meta, skip coproc, quotas, favored nodes.Also skips normalizer, balancer, catalogjanitor runs as the old maintenance mode would.Ran the failed tests locally from v5, all passed.v6: fixes checkstyle issues, let's try QA again.

** Comment 22 **
bq. ... i don't have any good ideas on how to test some of the various failure conditions that you suggest you are interested in, from the issue description.The item you cite could be a follow-on. What you have here is a nice first cut at a 'maintenance mode' (or, hang on, let me review it again before I call it 'nice').bq. We currently have a solution that will load meta, skip coproc, quotas, favored nodes.Also skips normalizer, balancer, catalogjanitor runs as the old maintenance mode would.This sounds good.

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 29s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   2m  8s |  master passed  || +1 |  checkstyle  |   1m 28s |  master passed  || +1 |  shadedjars  |   3m 57s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 30s |  master passed  || +1 |  javadoc  |   0m 39s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 40s |  the patch passed  || +1 |  compile  |   2m  3s |  the patch passed  || +1 |  javac  |   2m  3s |  the patch passed  || +1 |  checkstyle  |   1m 17s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 58s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  8s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 48s |  the patch passed  || +1 |  javadoc  |   0m 44s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 45s |  hbase-zookeeper in the patch passed.  || -1 |  unit  | 306m 57s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 51s |  The patch does not generate ASF License warnings.  ||  |   | 351m 47s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.client.replication.TestReplicationAdmin ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure ||   | hadoop.hbase.replication.TestReplicationSmallTestsSync ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.client.TestSnapshotDFSTemporaryDirectory ||   | hadoop.hbase.quotas.TestSpaceQuotas ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.tool.TestLoadIncrementalHFiles ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectory ||   | hadoop.hbase.replication.TestMasterReplication ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.regionserver.TestCompactionInDeadRegionServer ||   | hadoop.hbase.quotas.TestQuotaAdmin |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 840967ad18b8 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / fa652cc610 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4832 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 25s |  master passed  || +1 |  compile  |   2m  9s |  master passed  || +1 |  checkstyle  |   1m 30s |  master passed  || +1 |  shadedjars  |   4m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 22s |  master passed  || +1 |  javadoc  |   0m 42s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  2s |  the patch passed  || +1 |  compile  |   2m  4s |  the patch passed  || +1 |  javac  |   2m  4s |  the patch passed  || +1 |  checkstyle  |   1m 31s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 25s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 38s |  the patch passed  || +1 |  javadoc  |   0m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 42s |  hbase-zookeeper in the patch passed.  || +1 |  unit  | 139m 58s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 49s |  The patch does not generate ASF License warnings.  ||  |   | 186m 39s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 090a91d9f5e5 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 821e4d7de2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4800 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   4m  4s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 27s |  master passed  || +1 |  compile  |   2m 11s |  master passed  || +1 |  checkstyle  |   1m 33s |  master passed  || +1 |  shadedjars  |   4m 23s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 34s |  master passed  || +1 |  javadoc  |   0m 43s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || +1 |  checkstyle  |   1m 30s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m  1s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 51s |  the patch passed  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 44s |  hbase-zookeeper in the patch passed.  || -1 |  unit  | 234m 26s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 20s |  The patch does not generate ASF License warnings.  ||  |   | 286m 54s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 50a632059b93 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 821e4d7de2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5095 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 30s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 35s |  master passed  || +1 |  compile  |   2m 12s |  master passed  || +1 |  checkstyle  |   1m 31s |  master passed  || +1 |  shadedjars  |   4m 18s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 37s |  master passed  || +1 |  javadoc  |   0m 47s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 14s |  the patch passed  || +1 |  compile  |   2m  6s |  the patch passed  || +1 |  javac  |   2m  6s |  the patch passed  || +1 |  checkstyle  |   1m 34s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 18s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 11s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  4s |  the patch passed  || +1 |  javadoc  |   0m 47s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 46s |  hbase-zookeeper in the patch passed.  || +1 |  unit  | 127m 37s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 50s |  The patch does not generate ASF License warnings.  ||  |   | 176m 10s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8d76f0034950 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 3a75505cf2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5166 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 20s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 23s |  master passed  || +1 |  compile  |   7m 34s |  master passed  || +1 |  checkstyle  |   2m 31s |  master passed  || 0 |  refguide  |   5m 35s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 44s |  master passed  || +1 |  javadoc  |   3m 40s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 59s |  the patch passed  || +1 |  compile  |   6m 32s |  the patch passed  || +1 |  javac  |   6m 32s |  the patch passed  || +1 |  checkstyle  |   2m 34s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   5m 35s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 57s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 54s |  the patch passed  || +1 |  javadoc  |   3m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 215m  9s |  root in the patch passed.  || +1 |  asflicense  |   1m 30s |  The patch does not generate ASF License warnings.  ||  |   | 292m 35s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux 666f81bd2b53 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 5fbb227deb || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] ||  Test Results | [link] || Max. process+thread count | 5099 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 35 **
[Comment excluded]

** Comment 36 **
[Comment excluded]

** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 41 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 14s |  branch-2.1 passed  || +1 |  compile  |  20m 30s |  branch-2.1 passed  || +1 |  checkstyle  |   3m 54s |  branch-2.1 passed  || 0 |  refguide  |   5m 10s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   3m 50s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 25s |  branch-2.1 passed  || +1 |  javadoc  |   3m 29s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   2m 52s |  root in the patch failed.  || -1 |  compile  |  18m 16s |  root in the patch failed.  || -1 |  javac  |  18m 16s |  root in the patch failed.  || +1 |  checkstyle  |   3m 31s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   4m 42s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || -1 |  shadedjars  |   2m 39s |  patch has 24 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 41s |  The patch causes 24 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   3m 26s |  The patch causes 24 errors with Hadoop v3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || -1 |  findbugs  |   0m 29s |  hbase-server in the patch failed.  || +1 |  javadoc  |   3m  1s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  11m  8s |  root in the patch failed.  || +1 |  asflicense  |   0m 27s |  The patch does not generate ASF License warnings.  ||  |   |  96m 15s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux 4f11b57eb024 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 0cd23c3dda || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || javac | [link] || refguide | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 279 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 42 **
[Comment excluded]

** Comment 43 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m  3s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 53s |  branch-2 passed  || +1 |  compile  |  21m  0s |  branch-2 passed  || +1 |  checkstyle  |   3m 43s |  branch-2 passed  || 0 |  refguide  |   5m 30s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   3m 50s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 36s |  branch-2 passed  || +1 |  javadoc  |   3m 19s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  3s |  the patch passed  || +1 |  compile  |  21m 19s |  the patch passed  || +1 |  javac  |  21m 19s |  the patch passed  || +1 |  checkstyle  |   3m 32s |  the patch passed  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || 0 |  refguide  |   4m 45s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   3m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  8s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 54s |  the patch passed  || +1 |  javadoc  |   3m 26s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 191m 37s |  root in the patch passed.  || +1 |  asflicense  |   3m 23s |  The patch does not generate ASF License warnings.  ||  |   | 296m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux 218de957406f 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / ca1b5503e1 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] ||  Test Results | [link] || Max. process+thread count | 5080 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 44 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 21s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  4s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 56s |  branch-2.1 passed  || +1 |  compile  |  20m 23s |  branch-2.1 passed  || +1 |  checkstyle  |   3m 39s |  branch-2.1 passed  || 0 |  refguide  |   5m  8s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   3m 38s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 39s |  branch-2.1 passed  || +1 |  javadoc  |   3m 21s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |  20m 35s |  the patch passed  || +1 |  javac  |  20m 35s |  the patch passed  || +1 |  checkstyle  |   3m 43s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   5m 36s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 39s |  the patch passed  || +1 |  javadoc  |   3m  4s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 191m 45s |  root in the patch failed.  || +1 |  asflicense  |   1m  8s |  The patch does not generate ASF License warnings.  ||  |   | 293m 27s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.master.assignment.TestRegionBypass ||   | hadoop.hbase.client.TestAsyncTableGetMultiThreaded |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux bba9e68a495c 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 0cd23c3dda || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4796 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 45 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 46 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  1s |  The patch appears to include 2 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  5s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   6m 33s |  branch-2.1 passed  || +1 |  compile  |  22m 41s |  branch-2.1 passed  || +1 |  checkstyle  |   4m  9s |  branch-2.1 passed  || 0 |  refguide  |   6m 36s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   3m 12s |  branch-2.1 passed  || +1 |  javadoc  |   3m 52s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 25s |  the patch passed  || +1 |  compile  |  23m  5s |  the patch passed  || +1 |  javac  |  23m  5s |  the patch passed  || +1 |  checkstyle  |   3m 57s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || 0 |  refguide  |   5m 14s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   3m 42s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 53s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   2m 41s |  the patch passed  || +1 |  javadoc  |   3m 14s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 198m 26s |  root in the patch failed.  || +1 |  asflicense  |   1m  7s |  The patch does not generate ASF License warnings.  ||  |   | 308m 20s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.rsgroup.TestRSGroups |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21073 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  refguide  || uname | Linux cf36ec6cfc31 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / afa7d6ed43 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.0-RC3 || refguide | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4836 (vs. ulimit of 10000) || modules | C: hbase-zookeeper hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 47 **
That TestRSGroups is flakey. I can't make it fail locally. Fails all the time on GCE flakey build. Need to dig in. Shouldn't prevent commit here I'd say.

** Comment 48 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 49 **
[Comment excluded]

** Comment 50 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 51 **
Some notes after trying this feature: * UI on Master doesn't show. Does NPE. Would be good if it came up so had access to stuff like Procedures and Locks. * Logs show user-space regions as STUCK. Probably just needs doc'ing. * These logs are good 'HMaster: Master is in maintenanceMode mode, don't run balancer.' and 'HMaster: Master is in maintenance mode, don't run region normalizer.'  but says this after Master comes up... 'HMaster: Detected repair mode, skipping final initialization steps.'. Should match the other logs of 'maintenance mode'. * Here is how I started Master only with the maintenance mode flag: ./bin/hbase-daemon.sh start master -Dhbase.master.maintenance_mode=true Could add to doc.Not sure if this feature is useful yet. Dump note in here if find it of use.
"
HBASE-21271,https://issues.apache.org/jira/browse/HBASE-21271,https://github.com/apache/hbase/blob/rel/2.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure.java,[amv2] Don't throw UnsupportedOperationException when rollback called on Assign/Unassign; spiral of death,NO,"I can't repro reliably but if an AssignProcedure or UnassignProcedure is a subprocedure of an Enable/Disable and for whatever reason the parent decides it needs to rollback -- can't get an entity lock -- it will ask the subprocedures to rollback. UP and AP don't support rollback on all steps. For steps where not supported, we have been throwing a UnsupportedOperationException.... The Framework reschedules the rollback. And so on filling logs and Procedure WALs.

Instead just note no rollback supported and intervention may be needed (until we to to 2.2 when AP/UP go away).","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 27s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   6m 44s |  branch-2.1 passed  || +1 |  compile  |   1m 50s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 10s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 22s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  5s |  branch-2.1 passed  || +1 |  javadoc  |   0m 39s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 47s |  the patch passed  || +1 |  compile  |   1m 42s |  the patch passed  || +1 |  javac  |   1m 42s |  the patch passed  || +1 |  checkstyle  |   1m  6s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 23s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 12s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  6s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 221m 24s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   | 259m 20s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin1 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21271 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a183d1c1cc6f 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 9d34b4581c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4803 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 7 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 9 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   6m 34s |  branch-2.1 passed  || +1 |  compile  |   1m 50s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 15s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 40s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 19s |  branch-2.1 passed  || +1 |  javadoc  |   0m 43s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 22s |  the patch passed  || +1 |  compile  |   1m 54s |  the patch passed  || +1 |  javac  |   1m 54s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 39s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 15s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  9s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 110m 29s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 26s |  The patch does not generate ASF License warnings.  ||  |   | 151m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21271 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 52dc1e6e485d 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 72af27b8c9 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4904 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 11 **
Pushed to branch-2.0 and branch-2.1. Doesn't make sense on branch-2+.I see it makes a difference in testing in that the failed rollback eventually finishes where previous it would just cycle forever.

** Comment 12 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21338,https://issues.apache.org/jira/browse/HBASE-21338,https://github.com/apache/hbase/blob/rel/2.1.1/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,"[balancer] If balancer is an ill-fit for cluster size, it gives little indication",NO,"See parent issue. Running balancer on a cluster where the max steps was way inadequate, the balancer gave little to no indication that it was ill-configured. In fact, it only logged its starting and then that there was nothing to do though the cluster was obviously out-of-whack.

Ideally the balancer would complain when say the maxSteps limit is a small fraction of what the cluster's calculated max steps are, or it would notice that the balancer is making little progress on an imbalanced cluster and shout. Can we set balancer configs w/o having to restart Master?","** Comment 1 **
Config for this class is auto-reloadable.  Also, to overcome above mentioned issue, just need to set  ""hbase.master.balancer.stochastic.runMaxSteps"" to true.I added some logging including a WARN message when computedMaxSteps  is greater than maxSteps. 

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 21s |  master passed  || +1 |  compile  |   1m 48s |  master passed  || +1 |  checkstyle  |   1m 13s |  master passed  || +1 |  shadedjars  |   4m 24s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 14s |  master passed  || +1 |  javadoc  |   0m 37s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 15s |  the patch passed  || +1 |  compile  |   1m 48s |  the patch passed  || +1 |  javac  |   1m 48s |  the patch passed  || +1 |  checkstyle  |   1m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 26s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 12s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 10s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 212m 40s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 256m 13s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21338 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 38c3ba328c02 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 931156f66b || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4691 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 12 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #500 (See )
HBASE-21373 (backport from HBASE-21338) Warn if balancer is an ill-fit (apurtell: rev 6f53424f8111b41fada49454d3bfe141007d9104)


** Comment 14 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-21453,https://issues.apache.org/jira/browse/HBASE-21453,https://github.com/apache/hbase/blob/rel/2.1.2/hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ReadOnlyZKClient.java,Convert ReadOnlyZKClient to DEBUG instead of INFO,YES,"Running commands in spark-shell, this is what it looks like on each invocation:
{code}
scala> val count = rdd.count()
2018-11-07 21:01:46,026 INFO  [Executor task launch worker for task 1] zookeeper.ReadOnlyZKClient: Connect 0x18f3d868 to localhost:2181 with session timeout=90000ms, retries 30, retry interval 1000ms, keepAlive=60000ms
2018-11-07 21:01:46,027 INFO  [ReadOnlyZKClient-localhost:2181@0x18f3d868] zookeeper.ZooKeeper: Initiating client connection, connectString=localhost:2181 sessionTimeout=90000 watcher=org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient$$Lambda$20/1362339879@743dab9f
2018-11-07 21:01:46,030 INFO  [ReadOnlyZKClient-localhost:2181@0x18f3d868-SendThread(localhost:2181)] zookeeper.ClientCnxn: Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2018-11-07 21:01:46,031 INFO  [ReadOnlyZKClient-localhost:2181@0x18f3d868-SendThread(localhost:2181)] zookeeper.ClientCnxn: Socket connection established to localhost/127.0.0.1:2181, initiating session
2018-11-07 21:01:46,033 INFO  [ReadOnlyZKClient-localhost:2181@0x18f3d868-SendThread(localhost:2181)] zookeeper.ClientCnxn: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x166f1b283080005, negotiated timeout = 40000
2018-11-07 21:01:46,035 INFO  [Executor task launch worker for task 1] mapreduce.TableInputFormatBase: Input split length: 0 bytes.
[Stage 1:>                                                          (0 + 1) / 1]2018-11-07 21:01:48,074 INFO  [Executor task launch worker for task 1] zookeeper.ReadOnlyZKClient: Close zookeeper connection 0x18f3d868 to localhost:2181
2018-11-07 21:01:48,075 INFO  [ReadOnlyZKClient-localhost:2181@0x18f3d868] zookeeper.ZooKeeper: Session: 0x166f1b283080005 closed
2018-11-07 21:01:48,076 INFO  [ReadOnlyZKClient -localhost:2181@0x18f3d868-EventThread] zookeeper.ClientCnxn: EventThread shut down for session: 0x166f1b283080005
count: Long = 10
{code}

Let me shut down the ReadOnlyZKClient log level.","** Comment 1 **
Converted the info level logs in ReadOnlyZKClient to debug level.

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 47s |  master passed  || +1 |  compile  |   0m 41s |  master passed  || +1 |  checkstyle  |   0m 32s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m  7s |  master passed  || +1 |  javadoc  |   0m 22s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 33s |  the patch passed  || +1 |  compile  |   0m 38s |  the patch passed  || +1 |  javac  |   0m 38s |  the patch passed  || +1 |  checkstyle  |   0m 33s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   1m  8s |  the patch passed  || +1 |  javadoc  |   0m 20s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  36m 23s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21453 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 2c70ee902199 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 59cfe2e31b || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 266 (vs. ulimit of 10000) || modules | C: hbase-client U: hbase-client || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
 Can you do something to change log level for other Zookeeper related logs as well? From the above example this patch will remove the first log message.

** Comment 4 **
Sure , just wanted to keep the scope of this Jira limited to ReadOnlyZKClient only logs as is mentioned in the tile/description. Do we need to change the title or are we okay just making the changes under this title?

** Comment 5 **
You're right that this Jira is really focused on ReadOnlyZKClient class. Let's have this as it is now and have a follow up issue for other zookeeper related log messages.+1 on this patch

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22867,https://issues.apache.org/jira/browse/HBASE-22867,https://github.com/apache/hbase/blob/rel/2.1.6/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,The ForkJoinPool in CleanerChore will spawn thousands of threads in our cluster with thousands table,NO,"The thousands of spawned  threads make the safepoint cost 80+s in our Master JVM processs.
{code}
2019-08-15,19:35:35,861 INFO [main-SendThread(zjy-hadoop-prc-zk02.bj:11000)] org.apache.zookeeper.ClientCnxn: Client session timed out, have not heard from server in 82260ms for sessionid 0x1691332e2d3aae5, closing socket connection and at
tempting reconnect
{code}

The stdout from JVM (can see from here there're 9126 threads & sync cost 80+s)
{code}
vmop                    [threads: total initially_running wait_to_block]    [time: spin block sync cleanup vmop] page_trap_count
32358.859: ForceAsyncSafepoint              [    9126         67            474    ]      [     1    28 86596    87   101    ]  0
{code}

Also we got the jstack: 
{code}
$ cat 31162.stack.1  | grep 'ForkJoinPool-1-worker' | wc -l
8648
{code}

It's a dangerous bug, make it as blocker.
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 18 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 19 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 26 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-22637,https://issues.apache.org/jira/browse/HBASE-22637,https://github.com/apache/hbase/blob/rel/2.1.6/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMetaTableMetrics.java,fix flaky TestMetaTableMetrics test,NO,"coprocessor.TestMetaTableMetrics test is flaky, failing with the same assert error on two branches. e.g.:
- branch 2.0: https://builds.apache.org//job/HBase-Flaky-Tests/job/branch-2.0/3382
- branch 2.1: https://builds.apache.org//job/HBase-Flaky-Tests/job/branch-2.1/3469


{noformat}
java.lang.AssertionError: expected:<5> but was:<0>
	at org.apache.hadoop.hbase.coprocessor.TestMetaTableMetrics.test(TestMetaTableMetrics.java:226)
{noformat}
","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
it looks the hbase-client on hbase 1.4 doesn't really use the get operation to query the meta table information, but is using scan instead. (so for the sake of the test, we now also query the meta table directly on branch-1 to see if the get operation is counted or not)It might be a good idea to extend the MetaMetrics feature with measuring the scan operations as well.

** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 10 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.

"
HBASE-23038,https://issues.apache.org/jira/browse/HBASE-23038,https://github.com/apache/hbase/blob/rel/2.1.8/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Provide consistent and clear logging about disabling chores,YES,"Right now if you want to disable any of our chores you can set the period to be <= 0. Sometimes, if you do this you get a nice message:
{code}
2019-09-16 22:10:16,756 INFO  [master-1:16000.activeMasterManager] master.HMaster: The period is 0 seconds, MobCompactionChore is disabled
{code}
And sometimes you get an opaque message:
{code}
2019-09-16 22:09:45,333 INFO  [master-1:16000.activeMasterManager] hbase.ChoreService: Could not successfully schedule chore: LogsCleaner
2019-09-16 22:09:45,340 INFO  [master-1:16000.activeMasterManager] hbase.ChoreService: Could not successfully schedule chore: HFileCleaner
{code}
This is because sometimes we just blindly submit to ChoreService which submits to a java ScheduledExecutorService and then catches the IllegalArgumentException.

We should remove the one-offs and make it so ChoreService checks the period before accepting a submittal and produces a consistent ""Foo is disabled"" message.","** Comment 1 **
[Comment excluded]

** Comment 2 **
that'd be great! I added you to the Contributor group in this jira instance, so you should be able to assign issues to yourself now.Feel free to either post a PR on github (which should automatically update this jira if you mention it in the commit message) or attach a patch file here (be sure to create it using `git format-patch` so it has your authorship info).

** Comment 3 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 38s |  master passed  || +1 |  compile  |   0m 20s |  master passed  || +1 |  checkstyle  |   0m 26s |  master passed  || +1 |  shadedjars  |   4m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 18s |  master passed  || 0 |  spotbugs  |   0m 46s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   0m 45s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 25s |  the patch passed  || +1 |  compile  |   0m 19s |  the patch passed  || +1 |  javac  |   0m 19s |  the patch passed  || +1 |  checkstyle  |   0m 27s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 58s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   0m 18s |  the patch passed  || +1 |  findbugs  |   0m 53s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 54s |  hbase-common in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  52m  4s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.2 Server=19.03.2 base: [link] || JIRA Issue | HBASE-23038 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux 1f2d54ba0196 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / 52f5a85bfc || Default Java | 1.8.0_181 ||  Test Results | [link] || Max. process+thread count | 257 (vs. ulimit of 10000) || modules | C: hbase-common U: hbase-common || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
nit: we can include variable params with {} in logger:        LOG.info(            ""The period is {} seconds, {} is disabled"", chore.getPeriod(), chore.getName());{code} 

** Comment 6 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 41s |  master passed  || +1 |  compile  |   0m 20s |  master passed  || +1 |  checkstyle  |   0m 27s |  master passed  || +1 |  shadedjars  |   4m 58s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 18s |  master passed  || 0 |  spotbugs  |   0m 48s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   0m 47s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 22s |  the patch passed  || +1 |  compile  |   0m 20s |  the patch passed  || +1 |  javac  |   0m 20s |  the patch passed  || +1 |  checkstyle  |   0m 26s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 51s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 54s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   0m 18s |  the patch passed  || +1 |  findbugs  |   0m 53s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 52s |  hbase-common in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  51m 46s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.0 Server=19.03.0 base: [link] || JIRA Issue | HBASE-23038 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux d19a2d13ce85 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / 52f5a85bfc || Default Java | 1.8.0_181 ||  Test Results | [link] || Max. process+thread count | 263 (vs. ulimit of 10000) || modules | C: hbase-common U: hbase-common || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
thanks for taking this up!can you remove the case in HMaster where we fetch the MobCompactionChore period and check it to log a similar message?

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   1m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 30s |  master passed  || +1 |  compile  |   1m 13s |  master passed  || +1 |  checkstyle  |   1m 55s |  master passed  || +1 |  shadedjars  |   4m 56s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 51s |  master passed  || 0 |  spotbugs  |   4m 16s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   5m  1s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 22s |  the patch passed  || +1 |  compile  |   1m 15s |  the patch passed  || +1 |  javac  |   1m 15s |  the patch passed  || +1 |  checkstyle  |   1m 54s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 56s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 59s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   0m 52s |  the patch passed  || +1 |  findbugs  |   5m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 57s |  hbase-common in the patch passed.  || -1 |  unit  | 263m 22s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 13s |  The patch does not generate ASF License warnings.  ||  |   | 331m 55s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.util.TestFromClientSide3WoUnsafe |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.2 Server=19.03.2 base: [link] || JIRA Issue | HBASE-23038 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux fbfdc0a71e39 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / ea24ea7dd5 || Default Java | 1.8.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5282 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 10 **
[Comment excluded]

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   1m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   8m  3s |  master passed  || +1 |  compile  |   1m 44s |  master passed  || +1 |  checkstyle  |   2m 22s |  master passed  || +1 |  shadedjars  |   6m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m 12s |  master passed  || 0 |  spotbugs  |   4m 58s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   5m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   7m 25s |  the patch passed  || +1 |  compile  |   1m 44s |  the patch passed  || +1 |  javac  |   1m 44s |  the patch passed  || +1 |  checkstyle  |   2m 11s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   6m 19s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  23m 54s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   1m 12s |  the patch passed  || +1 |  findbugs  |   6m 21s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m 16s |  hbase-common in the patch passed.  || -1 |  unit  | 255m  9s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 50s |  The patch does not generate ASF License warnings.  ||  |   | 346m 59s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.2 Server=19.03.2 base: [link] || JIRA Issue | HBASE-23038 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux c1df0a677eed 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / ea24ea7dd5 || Default Java | 1.8.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5211 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 12 **
Hi ,The failing unit test seems to be unrelated to the current issue. Does that need fixing up as a part of this Jira?thanks.

** Comment 13 **
I agree that failure is unrelated and doesn't need to be handled here.+1 on v3 as well.

** Comment 14 **
Results for branch branch-1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 16 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 18 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23679,https://issues.apache.org/jira/browse/HBASE-23679,https://github.com/apache/hbase/blob/rel/2.1.9/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SecureBulkLoadManager.java,FileSystem instance leaks due to bulk loads with Kerberos enabled,NO,"Spent the better part of a week chasing an issue on HBase 2.x where the number of DistributedFileSystem instances on the heap of a RegionServer would grow unbounded. Looking at multiple heap-dumps, it was obvious to see that we had an immense number of DFS instances cached (in FileSystem$Cache) for the same user, with the unique number of Tokens contained in that DFS's UGI member (one hbase delegation token, and two HDFS delegation tokens – we only do this for bulk loads). For the user's clusters, they eventually experienced 10x perf degradation as RegionServers spent all of their time in JVM GC (they were unlucky to not have RegionServers crash outright, as this would've, albeit temporarily, fixed the issue).

The problem seems to be two-fold with changes by HBASE-15291 being largely the cause. This issue tried to close FileSystem instances which were being leaked – however, it did this by instrumenting the method {{SecureBulkLoadManager.cleanupBulkLoad(..)}}. Two big issues with this approach:
 # It relies on clients to call this method (client's hanging up will leak resources in RegionServers)
 # This method is only called on the RegionServer hosting the first Region of the table which was bulk-loaded into. For multiple RegionServers, they are left to leak resources.

HBASE-21342 later tried to fix an issue where FS objects were now being closed prematurely via reference-counting (which appears to work fine), but does not address the other two issues above. Point #2 makes debugging this issue harder than normal because it doesn't manifest on a single node instance :)

Through all of this, I (re)learned the dirty history of UGI and how its caching doesn't work so great HADOOP-6670. I see trying to continue to leverage the FileSystem$CACHE as a potentially dangerous thing (we've been back here multiple times already). My opinion at this point is that we should cleanly create a new FileSystem instance during the call to {{SecureBulkLoadManager#secureBulkLoadHFiles(..)}} and close it in a finally block in that same method. This both simplifies the lifecycle of a FileSystem instance in the bulk-load codepath but also helps us avoid future problems with UGI and FS caching. The one downside is that we pay the penalty to create a new FileSystem instance, but I'm of the opinion that we cross that bridge when we get there.

Thanks for [~jdcryans] and [~busbey] for their help along the way.","** Comment 1 **
Dropping some more details in here, should anyone else ever find themselves back here. * Funny that this user's RegionServers never (rarely?) actually OOME'ed. They were left in this crap state because the JVM just kept hanging on. GC verbose logging showed us that heap was just sitting completely full. We just sat with 30-60s GC pauses, getting next to nothing done. * A heapdump showed (at worst) 60k+ instances of DistributedFileSystem sitting on the heap, nearly all of them referenced by {{FileSystem$CACHE}}. It takes some digging to realize this. * Digging into each DFS -> DFSClient -> UGI -> Tokens, you can see the delegation tokens which let us confirm that Bulk Load was the culprit creating/leaking these. * For the user, it was an extremely slow growth. One RegionServer would get into this state every ~20 days across about that many RegionServers. So, in reality, we were probably looking at even longer than 20days for a single RegionServer to leak enough of these to cause issues. * UGI being a part of FileSystem caching is crap, and we should avoid it for anything other than ""just the HBase user"". It's extremely obtuse and error prone, likely to just give us more heartache (lots of issues around this in the past).

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 6 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21688,https://issues.apache.org/jira/browse/HBASE-21688,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java,Address WAL filesystem issues,NO,"Scan and fix code base to use new way of instantiating WAL File System. 
https://issues.apache.org/jira/browse/HBASE-21457?focusedCommentId=16734688&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16734688","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 53s |  master passed  || +1 |  compile  |   3m 18s |  master passed  || +1 |  checkstyle  |   2m  0s |  master passed  || +1 |  shadedjars  |   5m 27s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 21s |  master passed  || +1 |  javadoc  |   1m  6s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 16s |  the patch passed  || +1 |  compile  |   3m 31s |  the patch passed  || +1 |  javac  |   3m 31s |  the patch passed  || -1 |  checkstyle  |   1m 24s |  hbase-server: The patch generated 5 new + 113 unchanged - 0 fixed = 118 total (was 113)  || -1 |  checkstyle  |   0m 20s |  hbase-backup: The patch generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  || -1 |  checkstyle  |   0m 19s |  hbase-it: The patch generated 3 new + 111 unchanged - 0 fixed = 114 total (was 111)  || -1 |  whitespace  |   0m  0s |  The patch has 2 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  whitespace  |   0m  0s |  The patch 1 line(s) with tabs.  || +1 |  shadedjars  |   5m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 52s |  the patch passed  || +1 |  javadoc  |   1m  4s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 140m 24s |  hbase-server in the patch passed.  || -1 |  unit  |  21m 26s |  hbase-backup in the patch failed.  || +1 |  unit  |   0m 56s |  hbase-it in the patch passed.  || +1 |  asflicense  |   1m  6s |  The patch does not generate ASF License warnings.  ||  |   | 218m  9s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.backup.TestFullRestore |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8936711108dc 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 4f0514e39a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5408 (vs. ulimit of 10000) || modules | C: hbase-server hbase-backup hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
Nice, this looks good to me at a glance, !Looks like TestFullRestore might just be flaky. Have you seen that test fail in this manner before? I can also try to run locally.Happy to clean up the checkstyle stuff on commit since you did the leg-work of the other changes Stephen brought up :)

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
 Thanks for the patches.I think the {{TestMasterWALManager}} testclass would fail with . (I have already ported this in our internal branch and it had failed there). The changes I had made in {{TestMasterWALManager.before()}} were as follows, you may consider using them, if it looks fine:-    this.mwm = new MasterWalManager(this.masterServices);+    this.mwm = new MasterWalManager(this.masterServices) {++      @Override+      Path getWALDirPath() throws IOException {+        return walRootDir;+      }++      @Override+      Path getWALDirectoryName(ServerName serverName) throws IOException {+        return new Path(walRootDir,+            AbstractFSWALProvider.getWALDirectoryName(serverName.toString()));+      }+    };{code}IMO the following change is redundant in {{MasterWalManager}}:-    FileStatus walDirForServerNames = FSUtils.listStatus(fs, walDirPath, filter);+    FileStatus walDirForServerNames = FSUtils.listStatus(CommonFSUtils.getWALFileSystem(conf),+      walDirPath, filter);{code}You should also be removing following javadoc string from {{WALEntryStream()}}, since we have dropped fs param in the patch:  * @param fs {@link FileSystem} to use to create {@link Reader} for this stream{code}

** Comment 19 **
[Comment excluded]

** Comment 20 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 5 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 38s |  branch-2.1 passed  || +1 |  compile  |   2m 35s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 32s |  branch-2.1 passed  || +1 |  shadedjars  |   4m  0s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m  5s |  branch-2.1 passed  || +1 |  javadoc  |   0m 40s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 26s |  the patch passed  || +1 |  compile  |   2m 24s |  the patch passed  || +1 |  javac  |   2m 24s |  the patch passed  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 5 new + 119 unchanged - 0 fixed = 124 total (was 119)  || -1 |  checkstyle  |   0m 16s |  hbase-it: The patch generated 3 new + 111 unchanged - 0 fixed = 114 total (was 111)  || -1 |  whitespace  |   0m  0s |  The patch has 3 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  whitespace  |   0m  0s |  The patch 1 line(s) with tabs.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 17s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 31s |  the patch passed  || +1 |  javadoc  |   0m 40s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  |  23m 57s |  hbase-server in the patch failed.  || +1 |  unit  |   0m 45s |  hbase-it in the patch passed.  || +1 |  asflicense  |   0m 23s |  The patch does not generate ASF License warnings.  ||  |   |  66m 54s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestMasterWALManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d07bea35cecf 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 12ab5bc7dd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 664 (vs. ulimit of 10000) || modules | C: hbase-server hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m  0s |  master passed  || +1 |  compile  |   2m  2s |  master passed  || +1 |  checkstyle  |   1m 16s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 26s |  master passed  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 37s |  the patch passed  || +1 |  compile  |   2m  0s |  the patch passed  || +1 |  javac  |   2m  0s |  the patch passed  || +1 |  checkstyle  |   1m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 33s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 31s |  the patch passed  || +1 |  javadoc  |   0m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 131m 21s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 24s |  The patch does not generate ASF License warnings.  ||  |   | 173m 13s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e09a453aca74 4.4.0-131-generic #157~14.04.1-Ubuntu SMP Fri Jul 13 08:53:17 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / a551149ca7 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4462 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 25 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2.1 Compile Tests  ||| 0 |  mvndep  |   1m  4s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 44s |  branch-2.1 passed  || +1 |  compile  |   2m 53s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 45s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 44s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 50s |  branch-2.1 passed  || +1 |  javadoc  |   1m  2s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 58s |  the patch passed  || +1 |  compile  |   2m 44s |  the patch passed  || +1 |  javac  |   2m 44s |  the patch passed  || -1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 6 new + 119 unchanged - 1 fixed = 125 total (was 120)  || -1 |  checkstyle  |   0m 16s |  hbase-it: The patch generated 3 new + 111 unchanged - 0 fixed = 114 total (was 111)  || -1 |  whitespace  |   0m  0s |  The patch has 3 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  whitespace  |   0m  0s |  The patch 1 line(s) with tabs.  || +1 |  shadedjars  |   3m 46s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 27s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  0s |  the patch passed  || +1 |  javadoc  |   0m 56s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 42s |  hbase-common in the patch passed.  || -1 |  unit  | 213m  8s |  hbase-server in the patch failed.  || +1 |  unit  |   1m 20s |  hbase-it in the patch passed.  || +1 |  asflicense  |   1m 19s |  The patch does not generate ASF License warnings.  ||  |   | 263m 37s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.coprocessor.TestMetaTableMetrics |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1151fcb5a437 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / ba02226302 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4940 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 26 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 40s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 12s |  master passed  || +1 |  compile  |   1m 45s |  master passed  || +1 |  checkstyle  |   0m 55s |  master passed  || +1 |  shadedjars  |   3m 50s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 11s |  master passed  || +1 |  javadoc  |   0m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 45s |  the patch passed  || +1 |  compile  |   2m  5s |  the patch passed  || +1 |  javac  |   2m  5s |  the patch passed  || +1 |  checkstyle  |   0m 58s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 15s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  3s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 47s |  the patch passed  || +1 |  javadoc  |   0m 38s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 183m 28s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 37s |  The patch does not generate ASF License warnings.  ||  |   | 224m 14s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncTableRegionReplicasScan |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux b0c2716715e7 4.4.0-131-generic #157~14.04.1-Ubuntu SMP Fri Jul 13 08:53:17 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / a551149ca7 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4567 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 6 new or modified test files.  ||| || || ||  branch-2.0 Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 17s |  branch-2.0 passed  || +1 |  compile  |   2m 55s |  branch-2.0 passed  || +1 |  checkstyle  |   2m  8s |  branch-2.0 passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m  9s |  branch-2.0 passed  || +1 |  javadoc  |   0m 59s |  branch-2.0 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 54s |  the patch passed  || +1 |  compile  |   3m  1s |  the patch passed  || +1 |  javac  |   3m  1s |  the patch passed  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 6 new + 121 unchanged - 1 fixed = 127 total (was 122)  || -1 |  checkstyle  |   0m 24s |  hbase-it: The patch generated 3 new + 108 unchanged - 0 fixed = 111 total (was 108)  || -1 |  whitespace  |   0m  0s |  The patch has 3 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  whitespace  |   0m  0s |  The patch 1 line(s) with tabs.  || +1 |  shadedjars  |   4m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 19s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 21s |  the patch passed  || +1 |  javadoc  |   1m  0s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 38s |  hbase-common in the patch passed.  || +1 |  unit  | 122m 28s |  hbase-server in the patch passed.  || +1 |  unit  |   0m 56s |  hbase-it in the patch passed.  || +1 |  asflicense  |   1m  0s |  The patch does not generate ASF License warnings.  ||  |   | 171m 42s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:6f01af0 || JIRA Issue | HBASE-21688 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8552ab0f0afd 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.0 / 65427aca0e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || checkstyle | [link] || whitespace | [link] || whitespace | [link] ||  Test Results | [link] || Max. process+thread count | 4023 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server hbase-it U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 31 **
[Comment excluded]

** Comment 32 **
Results for branch branch-2.0
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 33 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 34 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 35 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 36 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 37 **
[Comment excluded]

** Comment 38 **
[Comment excluded]

** Comment 39 **
[Comment excluded]

** Comment 40 **
[Comment excluded]

** Comment 41 **
[Comment excluded]
"
HBASE-19763,https://issues.apache.org/jira/browse/HBASE-19763,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java,Fix Checkstyle errors in hbase-procedure,YES,Fix the remaining Checkstyle errors in the *hbase-procedure* module and enable Checkstyle to fail on violations.,"** Comment 1 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21707,https://issues.apache.org/jira/browse/HBASE-21707,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java,Fix warnings in hbase-rsgroup module and also make the UTs more stable,YES,"By adding a sleep after the stopServer call, the test will hang there forever, need to dig more, maybe something wrong with the TRSP related stuffs.","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 9 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 59s |  master passed  || +1 |  compile  |   0m 42s |  master passed  || +1 |  checkstyle  |   0m 12s |  master passed  || +1 |  shadedjars  |   4m 35s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 38s |  master passed  || +1 |  javadoc  |   0m 17s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   0m 40s |  the patch passed  || +1 |  javac  |   0m 40s |  the patch passed  || -1 |  checkstyle  |   0m 12s |  hbase-rsgroup: The patch generated 1 new + 2 unchanged - 5 fixed = 3 total (was 7)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 39s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  9s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 57s |  the patch passed  || +1 |  javadoc  |   0m 20s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   3m  7s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 12s |  The patch does not generate ASF License warnings.  ||  |   |  36m 59s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21707 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 8dd716cd0c03 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3d2580cd6d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 3316 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 9 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 16s |  master passed  || +1 |  compile  |   0m 34s |  master passed  || +1 |  checkstyle  |   0m 13s |  master passed  || +1 |  shadedjars  |   4m 13s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 35s |  master passed  || +1 |  javadoc  |   0m 18s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   0m 33s |  the patch passed  || +1 |  javac  |   0m 33s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  hbase-rsgroup: The patch generated 0 new + 2 unchanged - 5 fixed = 2 total (was 7)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 38s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 42s |  the patch passed  || +1 |  javadoc  |   0m 17s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  6s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 10s |  The patch does not generate ASF License warnings.  ||  |   |  31m 49s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21707 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 09003a92613a 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3d2580cd6d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4017 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 12 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22009,https://issues.apache.org/jira/browse/HBASE-22009,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java,Improve RSGroupInfoManagerImpl#getDefaultServers(),YES,"{code:title=RSGroupInfoManagerImpl.java|borderStyle=solid}
private SortedSet<Address> getDefaultServers() throws IOException {
  SortedSet<Address> defaultServers = Sets.newTreeSet();
  for (ServerName serverName : getOnlineRS()) {
    Address server = Address.fromParts(serverName.getHostname(), serverName.getPort());
    boolean found = false;
    for (RSGroupInfo rsgi : listRSGroups()) {
      if (!RSGroupInfo.DEFAULT_GROUP.equals(rsgi.getName()) && rsgi.containsServer(server)) {
        found = true;
        break;
      }
    }
    if (!found) {
      defaultServers.add(server);
    }
  }
  return defaultServers;
}
{code}
That is a logic of 2 nested loops. And for each server, listRSGroups() allocates a new LinkedList and calls Map#values(), both of which are very heavy operations.

Maybe the inner loop could be moved out, that is
# Build a list of servers of other groups than default group
# Iterate each online servers and check if it is in the list above. If it is not, then it belongs to default group.","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 21s |  master passed  || +1 |  compile  |   0m 43s |  master passed  || +1 |  checkstyle  |   0m 14s |  master passed  || +1 |  shadedjars  |   4m 47s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 45s |  master passed  || +1 |  javadoc  |   0m 18s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 19s |  the patch passed  || +1 |  compile  |   0m 37s |  the patch passed  || +1 |  javac  |   0m 37s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 40s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 56s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 46s |  the patch passed  || +1 |  javadoc  |   0m 17s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 26s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  34m  5s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-22009 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux e8ef88775cbd 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 65149bd8fc || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 ||  Test Results | [link] || Max. process+thread count | 3414 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Hi Pardon me for the late reply. (super busy at work)You mentioned "" almost each test in hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup verifies the function modified, covering the following conditions"" but I failed to see that. Could you please give an example?I will review the test then and move forward this patch. 

** Comment 7 **
Hi , sorry, my bad. Have to correct my comments... It is : almost each test in hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup -verifies- calls the function modified.getDefaultServers() (addressed by this JIRA) is deeply invoked when HMaster starts (I uploaded the call stack just for your information), so I think it might not be easy to verify it directly, but it is verified indirectly by(1) TestRSGroupsBasics#testBasicStartUp() for the condition where there is no servers in other groups (all are in default group)assertEquals(4, defaultInfo.getServers().size());/* TestRSGroupsBase#setUpTestBeforeClass() puts NUM_SLAVES_BASE=4 region servers into default rsgroup, as verified */{code}and (2) TestRSGroupsBasics#testClearDeadServers() for the condition where there are some servers in other groups as well as default group{code}assertEquals(2, newGroupServers.size());/* testClearDeadServers() moves 3 region servers from default rsgroup into a specific rsgroup (while keeping 1 server in default rsgroup) and then stop 1 region server, making 2 left, as verified*/{code} 

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 14 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 15 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
Hi , I found this patch seems not workable in branch-1. It makes TestRSGroupsBasics#testClearDeadServers() failed, not at the verification points but at afterMethold(), with the following error: Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 15.97 s <<< FAILURE! - in org.apache.hadoop.hbase.rsgroup.TestRSGroupsBasics testClearDeadServers(org.apache.hadoop.hbase.rsgroup.TestRSGroupsBasics)  Time elapsed: 3.59 s  <<< ERROR!org.apache.hadoop.hbase.constraint.ConstraintException:org.apache.hadoop.hbase.constraint.ConstraintException: Target group is the same as source group: default	at org.apache.hadoop.hbase.rsgroup.RSGroupAdminServer.moveServers([file java]:169)	at org.apache.hadoop.hbase.rsgroup.RSGroupAdminEndpoint.moveServers([file java]:216)	at org.apache.hadoop.hbase.protobuf.generated.RSGroupAdminProtos$RSGroupAdminService.callMethod([file java]:13870)	at org.apache.hadoop.hbase.master.MasterRpcServices.execMasterService([file java]:711)	at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod([file java]:63436)	at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:2380)	at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:124)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:297)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:277)	at org.apache.hadoop.hbase.rsgroup.TestRSGroupsBasics.afterMethod([file java]:77)Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException:org.apache.hadoop.hbase.constraint.ConstraintException: Target group is the same as source group: default	at org.apache.hadoop.hbase.rsgroup.RSGroupAdminServer.moveServers([file java]:169)	at org.apache.hadoop.hbase.rsgroup.RSGroupAdminEndpoint.moveServers([file java]:216)	at org.apache.hadoop.hbase.protobuf.generated.RSGroupAdminProtos$RSGroupAdminService.callMethod([file java]:13870)	at org.apache.hadoop.hbase.master.MasterRpcServices.execMasterService([file java]:711)	at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$2.callBlockingMethod([file java]:63436)	at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:2380)	at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:124)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:297)	at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:277){code}I do not figure out the reason yet...Shall we revert this change from branch-1 as well as 1.5.1 ? Sorry for the inconvenience it brings

** Comment 18 **
[Comment excluded]

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 22 **
Hi , I uploaded the patch v000 for branch-1, which is dedicated for that branch. The reason why the previous patch fails branch-1 is due to the following statement:if (!serversInOtherGroup.contains(server)){code}""serversInOtherGroup"" is a Set of Address, but ""server"" is an instance of ServerName. Set#contains() could accepts an ""object"" as the input, so no class/type check here... and serversInOtherGroup.contains(server) always returns false. The patch for master branch has the same statement, but its ""server"" is an instance of Address, which is correct...The differences between master and branch-1 causes the confusion here... Sorry, I should have noticed those and uploaded the patch for branch-1 at the very beginning... I also make some changes on the variable names, trying to avoid confusion in the future. Please review the patch v000 for branch-1 at your convenience. It passes all UT on my local machine.

** Comment 23 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   1m 50s |  branch-1 passed  || +1 |  compile  |   0m 15s |  branch-1 passed with JDK v1.8.0_202  || +1 |  compile  |   0m 17s |  branch-1 passed with JDK v1.7.0_211  || +1 |  checkstyle  |   0m 14s |  branch-1 passed  || +1 |  shadedjars  |   2m 43s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 11s |  branch-1 passed with JDK v1.8.0_202  || +1 |  javadoc  |   0m 14s |  branch-1 passed with JDK v1.7.0_211  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 40s |  the patch passed  || +1 |  compile  |   0m 14s |  the patch passed with JDK v1.8.0_202  || +1 |  javac  |   0m 14s |  the patch passed  || +1 |  compile  |   0m 17s |  the patch passed with JDK v1.7.0_211  || +1 |  javac  |   0m 17s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 44s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 11s |  the patch passed with JDK v1.8.0_202  || +1 |  javadoc  |   0m 16s |  the patch passed with JDK v1.7.0_211  ||| || || ||  Other Tests  ||| +1 |  unit  |   5m 12s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  8s |  The patch does not generate ASF License warnings.  ||  |   |  19m 14s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-22009 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 537d9d734156 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-1 / 530bd6f || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_211 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_202 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_211 ||  Test Results | [link] || Max. process+thread count | 979 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 24 **
[Comment excluded]

** Comment 25 **
[Comment excluded]

** Comment 26 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   3m 54s |  master passed  || +1 |  compile  |   0m 35s |  master passed  || +1 |  checkstyle  |   0m 12s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   0m 34s |  master passed  || +1 |  javadoc  |   0m 17s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 47s |  the patch passed  || +1 |  compile  |   0m 33s |  the patch passed  || +1 |  javac  |   0m 33s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 13s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  2s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   0m 43s |  the patch passed  || +1 |  javadoc  |   0m 17s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m  5s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m  9s |  The patch does not generate ASF License warnings.  ||  |   |  30m 30s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-22009 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 34f3cc9bd52f 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c52dd9efa0 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 ||  Test Results | [link] || Max. process+thread count | 4169 (vs. ulimit of 10000) || modules | C: hbase-rsgroup U: hbase-rsgroup || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 27 **
[Comment excluded]

** Comment 28 **
[Comment excluded]

** Comment 29 **
[Comment excluded]

** Comment 30 **
[Comment excluded]

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
[Comment excluded]

** Comment 34 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.

"
HBASE-21588,https://issues.apache.org/jira/browse/HBASE-21588,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination.java,Procedure v2 wal splitting implementation,NO,create a sub task to submit the implementation of procedure v2 wal splitting,"** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 19s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  1s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  1s |  master passed  || +1 |  compile  |   4m 42s |  master passed  || +1 |  checkstyle  |   2m 25s |  master passed  || +1 |  shadedjars  |   4m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 46s |  master passed  || +1 |  javadoc  |   1m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  4s |  the patch passed  || +1 |  compile  |   4m 47s |  the patch passed  || +1 |  cc  |   4m 47s |  the patch passed  || -1 |  javac  |   2m 26s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   1m 29s |  hbase-server: The patch generated 129 new + 298 unchanged - 0 fixed = 427 total (was 298)  || -1 |  whitespace  |   0m  0s |  The patch 3 line(s) with tabs.  || +1 |  shadedjars  |   4m 43s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 30s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  6s |  the patch passed  || -1 |  findbugs  |   2m 45s |  hbase-server generated 4 new + 0 unchanged - 0 fixed = 4 total (was 0)  || +1 |  javadoc  |   1m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 40s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 43s |  hbase-procedure in the patch passed.  || -1 |  unit  | 240m 10s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 41s |  The patch does not generate ASF License warnings.  ||  |   | 315m 18s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Primitive value is boxed and then immediately unboxed in org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer)  At [file java]:then immediately unboxed in org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer)  At [file java]: ||  |  org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead  At [file java]:Integer(int) constructor; use Integer.valueOf(int) instead  At [file java]: ||  |  Value of queue from previous case is overwritten here due to switch statement fall through  At [file java]:case is overwritten here due to switch statement fall through  At [file java]: ||  |  Switch statement found in org.apache.hadoop.hbase.master.procedure.SchemaLocking.getLockResource(LockedResourceType, String) where one case falls through to the next case  At [file java]:String) where one case falls through to the next case  At [file java]: || Failed junit tests | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.master.procedure.TestServerCrashProcedureWithReplicas ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestFromClientSide |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 4bc19d2be11b 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 67d6d5084c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || whitespace | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4698 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  3s |  master passed  || +1 |  compile  |   3m 40s |  master passed  || +1 |  checkstyle  |   1m 57s |  master passed  || +1 |  shadedjars  |   3m 48s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 22s |  master passed  || +1 |  javadoc  |   1m  9s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  5s |  the patch passed  || +1 |  compile  |   3m 40s |  the patch passed  || +1 |  cc  |   3m 40s |  the patch passed  || -1 |  javac  |   1m 49s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 53 new + 298 unchanged - 0 fixed = 351 total (was 298)  || -1 |  whitespace  |   0m  0s |  The patch 3 line(s) with tabs.  || +1 |  shadedjars  |   3m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 40s |  the patch passed  || -1 |  findbugs  |   2m 10s |  hbase-server generated 5 new + 0 unchanged - 0 fixed = 5 total (was 0)  || +1 |  javadoc  |   1m  9s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 22s |  hbase-procedure in the patch passed.  || +1 |  unit  | 121m 46s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 42s |  The patch does not generate ASF License warnings.  ||  |   | 182m 43s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Primitive value is boxed and then immediately unboxed in org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer)  At [file java]:then immediately unboxed in org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer)  At [file java]: ||  |  org.apache.hadoop.hbase.master.SplitLogManager$SplitWorkerAssigner.lambda$acquire$1(ServerName, Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead  At [file java]:Integer(int) constructor; use Integer.valueOf(int) instead  At [file java]: ||  |  Value of queue from previous case is overwritten here due to switch statement fall through  At [file java]:case is overwritten here due to switch statement fall through  At [file java]: ||  |  Switch statement found in org.apache.hadoop.hbase.master.procedure.SchemaLocking.getLockResource(LockedResourceType, String) where one case falls through to the next case  At [file java]:String) where one case falls through to the next case  At [file java]: ||  |  Naked notify in org.apache.hadoop.hbase.regionserver.SplitWalCallable.finish(boolean)  At [file java]:At [file java]: |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 90795fa3b990 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f32d261843 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || whitespace | [link] || findbugs | [link] ||  Test Results | [link] || Max. process+thread count | 4543 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 37s |  master passed  || +1 |  compile  |   3m 49s |  master passed  || +1 |  checkstyle  |   2m  7s |  master passed  || +1 |  shadedjars  |   4m 12s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 30s |  master passed  || +1 |  javadoc  |   1m  9s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 24s |  the patch passed  || +1 |  compile  |   4m 35s |  the patch passed  || +1 |  cc  |   4m 35s |  the patch passed  || +1 |  javac  |   4m 35s |  the patch passed  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 19 new + 294 unchanged - 0 fixed = 313 total (was 294)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 20s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 40s |  the patch passed  || +1 |  findbugs  |   5m 53s |  the patch passed  || +1 |  javadoc  |   1m  7s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 30s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 23s |  hbase-procedure in the patch passed.  || -1 |  unit  | 141m 44s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 32s |  The patch does not generate ASF License warnings.  ||  |   | 206m 31s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRecoveredEdits ||   | hadoop.hbase.master.TestMasterWalManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 8773066d0740 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c448604ceb || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4995 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  0s |  master passed  || +1 |  compile  |   3m 39s |  master passed  || +1 |  checkstyle  |   1m 55s |  master passed  || +1 |  shadedjars  |   3m 46s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 17s |  master passed  || +1 |  javadoc  |   1m 11s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 58s |  the patch passed  || +1 |  compile  |   3m 38s |  the patch passed  || +1 |  cc  |   3m 38s |  the patch passed  || +1 |  javac  |   3m 38s |  the patch passed  || -1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 6 new + 293 unchanged - 0 fixed = 299 total (was 293)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 42s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 28s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 45s |  the patch passed  || +1 |  findbugs  |   5m 52s |  the patch passed  || +1 |  javadoc  |   1m 12s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 43s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 26s |  hbase-procedure in the patch passed.  || -1 |  unit  | 269m 19s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 18s |  The patch does not generate ASF License warnings.  ||  |   | 330m  1s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestServerCrashProcedure ||   | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.master.procedure.TestServerCrashProcedureWithReplicas ||   | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux d914e6a91575 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8991877bb2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5484 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  0s |  master passed  || +1 |  compile  |   3m 36s |  master passed  || +1 |  checkstyle  |   1m 56s |  master passed  || +1 |  shadedjars  |   5m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 15s |  master passed  || +1 |  javadoc  |   1m  7s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  6s |  the patch passed  || +1 |  compile  |   3m 35s |  the patch passed  || +1 |  cc  |   3m 35s |  the patch passed  || +1 |  javac  |   3m 35s |  the patch passed  || -1 |  checkstyle  |   1m  5s |  hbase-server: The patch generated 10 new + 276 unchanged - 0 fixed = 286 total (was 276)  || -1 |  whitespace  |   0m  0s |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  shadedjars  |   2m 57s |  patch has 10 errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 36s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 43s |  the patch passed  || +1 |  findbugs  |   5m 56s |  the patch passed  || +1 |  javadoc  |   1m 13s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-common in the patch passed.  || +1 |  unit  |   3m 15s |  hbase-procedure in the patch passed.  || -1 |  unit  | 234m 46s |  hbase-server in the patch failed.  || -1 |  asflicense  |   1m 38s |  The patch generated 1 ASF License warnings.  ||  |   | 296m 35s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestServerCrashProcedure ||   | hadoop.hbase.regionserver.TestRegionServerAbortTimeout ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.master.TestMasterWalManager ||   | hadoop.hbase.master.procedure.TestServerCrashProcedureWithReplicas ||   | hadoop.hbase.client.TestAdmin1 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 397e93e8cbc0 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8991877bb2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || whitespace | [link] || shadedjars | [link] || unit | [link] ||  Test Results | [link] || asflicense | [link] || Max. process+thread count | 4943 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-procedure hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 8 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 29s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 17s |  master passed  || +1 |  compile  |   3m 20s |  master passed  || +1 |  checkstyle  |   1m 38s |  master passed  || +1 |  shadedjars  |   3m 45s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 18s |  master passed  || +1 |  javadoc  |   1m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 55s |  the patch passed  || +1 |  compile  |   3m 54s |  the patch passed  || +1 |  cc  |   3m 54s |  the patch passed  || +1 |  javac  |   3m 54s |  the patch passed  || -1 |  checkstyle  |   1m 30s |  hbase-server: The patch generated 8 new + 272 unchanged - 0 fixed = 280 total (was 272)  || -1 |  whitespace  |   0m  0s |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || -1 |  shadedjars  |   4m 22s |  patch has 10 errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 23s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 23s |  the patch passed  || +1 |  findbugs  |   5m 16s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 42s |  hbase-common in the patch passed.  || -1 |  unit  | 219m 44s |  hbase-server in the patch failed.  || -1 |  asflicense  |   1m 14s |  The patch generated 1 ASF License warnings.  ||  |   | 278m 22s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.multiwal.TestReplicationSyncUpToolWithMultipleAsyncWAL ||   | hadoop.hbase.master.procedure.TestServerCrashProcedureWithReplicas ||   | hadoop.hbase.master.procedure.TestServerCrashProcedure ||   | hadoop.hbase.client.TestAdmin1 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 491f49473605 4.4.0-139-generic #165-Ubuntu SMP Wed Oct 24 10:58:50 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 8991877bb2 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || whitespace | [link] || shadedjars | [link] || unit | [link] ||  Test Results | [link] || asflicense | [link] || Max. process+thread count | 4833 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 9 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 4 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 25s |  master passed  || +1 |  compile  |   3m 31s |  master passed  || +1 |  checkstyle  |   1m 53s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 57s |  master passed  || +1 |  javadoc  |   0m 56s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 30s |  the patch passed  || +1 |  compile  |   3m 33s |  the patch passed  || +1 |  cc  |   3m 33s |  the patch passed  || -1 |  javac  |   1m 57s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || -1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 1 new + 313 unchanged - 0 fixed = 314 total (was 313)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 15s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 32s |  the patch passed  || +1 |  findbugs  |   5m 39s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 29s |  hbase-common in the patch passed.  || +1 |  unit  | 127m 36s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  3s |  The patch does not generate ASF License warnings.  ||  |   | 184m 36s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux ada24caf1a0b 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ad819380c7 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4823 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 5 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  5s |  master passed  || +1 |  compile  |   3m 19s |  master passed  || +1 |  checkstyle  |   1m 46s |  master passed  || +1 |  shadedjars  |   4m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 54s |  master passed  || +1 |  javadoc  |   1m  0s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 11s |  the patch passed  || +1 |  compile  |   3m 20s |  the patch passed  || +1 |  cc  |   3m 20s |  the patch passed  || +1 |  javac  |   3m 20s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 18 new + 327 unchanged - 1 fixed = 345 total (was 328)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 26s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 26s |  the patch passed  || -1 |  javadoc  |   0m 29s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || +1 |  unit  | 127m 44s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 11s |  The patch does not generate ASF License warnings.  ||  |   | 183m 10s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 0c5190122afc 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 44dec60054 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || javadoc | [link] ||  Test Results | [link] || Max. process+thread count | 4993 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 48s |  master passed  || +1 |  compile  |   3m 42s |  master passed  || +1 |  checkstyle  |   1m 52s |  master passed  || +1 |  shadedjars  |   4m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 47s |  master passed  || +1 |  javadoc  |   1m  4s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 44s |  the patch passed  || +1 |  compile  |   3m 53s |  the patch passed  || +1 |  cc  |   3m 53s |  the patch passed  || +1 |  javac  |   3m 53s |  the patch passed  || -1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 7 new + 327 unchanged - 1 fixed = 334 total (was 328)  || -1 |  whitespace  |   0m  0s |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || +1 |  shadedjars  |   4m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 47s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 36s |  the patch passed  || +1 |  findbugs  |   5m 49s |  the patch passed  || +1 |  javadoc  |   0m 58s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 35s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 33s |  hbase-common in the patch passed.  || +1 |  unit  | 153m 10s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  0s |  The patch does not generate ASF License warnings.  ||  |   | 214m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 3aa951044eac 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 44dec60054 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || whitespace | [link] ||  Test Results | [link] || Max. process+thread count | 5128 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 12 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  1s |  master passed  || +1 |  compile  |   3m 22s |  master passed  || +1 |  checkstyle  |   1m 41s |  master passed  || +1 |  shadedjars  |   4m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 57s |  master passed  || +1 |  javadoc  |   0m 59s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   3m 22s |  the patch passed  || +1 |  cc  |   3m 22s |  the patch passed  || +1 |  javac  |   3m 22s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 327 unchanged - 1 fixed = 327 total (was 328)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 33s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 25s |  the patch passed  || +1 |  javadoc  |   0m 52s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 38s |  hbase-common in the patch passed.  || +1 |  unit  | 132m 40s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 11s |  The patch does not generate ASF License warnings.  ||  |   | 187m 40s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 1350cd9aa9e0 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 44dec60054 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4956 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 31s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 30s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 52s |  master passed  || +1 |  compile  |   3m 32s |  master passed  || +1 |  checkstyle  |   1m 48s |  master passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  7s |  master passed  || +1 |  javadoc  |   0m 55s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 35s |  the patch passed  || +1 |  compile  |   3m 34s |  the patch passed  || +1 |  cc  |   3m 34s |  the patch passed  || +1 |  javac  |   3m 34s |  the patch passed  || -1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 2 new + 327 unchanged - 1 fixed = 329 total (was 328)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 44s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 29s |  the patch passed  || +1 |  findbugs  |   5m 36s |  the patch passed  || +1 |  javadoc  |   0m 56s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 33s |  hbase-common in the patch passed.  || +1 |  unit  | 126m 50s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 55s |  The patch does not generate ASF License warnings.  ||  |   | 188m  0s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux d902dde6a820 4.4.0-131-generic #157~14.04.1-Ubuntu SMP Fri Jul 13 08:53:17 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / c552088877 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4865 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  4s |  master passed  || +1 |  compile  |   3m 19s |  master passed  || +1 |  checkstyle  |   1m 45s |  master passed  || +1 |  shadedjars  |   4m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 56s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   2m 33s |  root in the patch failed.  || -1 |  compile  |   0m 28s |  hbase-server in the patch failed.  || -1 |  cc  |   0m 28s |  hbase-server in the patch failed.  || -1 |  javac  |   0m 28s |  hbase-server in the patch failed.  || +1 |  checkstyle  |   0m 10s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 327 unchanged - 1 fixed = 327 total (was 328)  || +1 |  whitespace  |   0m  1s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   3m  3s |  patch has 105 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   1m 37s |  The patch causes 105 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   3m 19s |  The patch causes 105 errors with Hadoop v3.0.0.  || -1 |  hbaseprotoc  |   0m 34s |  hbase-server in the patch failed.  || -1 |  findbugs  |   0m 31s |  hbase-server in the patch failed.  || -1 |  javadoc  |   0m 28s |  hbase-server generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 42s |  hbase-common in the patch passed.  || -1 |  unit  |   0m 32s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   |  43m 53s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 28b9e7ebe52e 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f5ea00f724 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || cc | [link] || javac | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hbaseprotoc | [link] || findbugs | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 291 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 30s |  master passed  || +1 |  compile  |   3m 31s |  master passed  || +1 |  checkstyle  |   1m 53s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  7s |  master passed  || +1 |  javadoc  |   0m 56s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 36s |  the patch passed  || +1 |  compile  |   3m 32s |  the patch passed  || +1 |  cc  |   3m 32s |  the patch passed  || +1 |  javac  |   3m 32s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 24s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 0 new + 327 unchanged - 1 fixed = 327 total (was 328)  || -1 |  whitespace  |   0m  0s |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || +1 |  shadedjars  |   4m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 26s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 35s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 29s |  hbase-common in the patch passed.  || +1 |  unit  | 125m 52s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  3s |  The patch does not generate ASF License warnings.  ||  |   | 184m 13s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 7c5afc75ca5c 4.4.0-138-generic #164~14.04.1-Ubuntu SMP Fri Oct 5 08:56:16 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7820ba1dbd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || whitespace | [link] ||  Test Results | [link] || Max. process+thread count | 5220 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 20 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 45s |  master passed  || +1 |  compile  |   3m 34s |  master passed  || +1 |  checkstyle  |   1m 53s |  master passed  || +1 |  shadedjars  |   4m 35s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  8s |  master passed  || +1 |  javadoc  |   0m 56s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 41s |  the patch passed  || +1 |  compile  |   3m 35s |  the patch passed  || +1 |  cc  |   3m 35s |  the patch passed  || +1 |  javac  |   3m 35s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 24s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 19s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || -1 |  whitespace  |   0m  0s |  The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer [link]  || +1 |  shadedjars  |   4m 34s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 41s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 31s |  the patch passed  || +1 |  findbugs  |   5m 35s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 35s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 30s |  hbase-common in the patch passed.  || -1 |  unit  | 129m 26s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m  6s |  The patch does not generate ASF License warnings.  ||  |   | 188m 42s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestSplitWALProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 786fba1314c3 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7820ba1dbd || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || whitespace | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4792 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 21 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 40s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   1m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 46s |  master passed  || +1 |  compile  |   3m 24s |  master passed  || +1 |  checkstyle  |   1m 40s |  master passed  || +1 |  shadedjars  |   4m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 10s |  master passed  || +1 |  javadoc  |   0m 59s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   3m 17s |  the patch passed  || +1 |  cc  |   3m 17s |  the patch passed  || +1 |  javac  |   3m 17s |  the patch passed  || -1 |  checkstyle  |   1m  8s |  hbase-server: The patch generated 1 new + 271 unchanged - 1 fixed = 272 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  8s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 44s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 25s |  the patch passed  || +1 |  findbugs  |   5m 17s |  the patch passed  || +1 |  javadoc  |   0m 53s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 31s |  hbase-common in the patch passed.  || -1 |  unit  | 143m 52s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 58s |  The patch does not generate ASF License warnings.  ||  |   | 203m 42s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.filter.TestFilterListOrOperatorWithBlkCnt ||   | hadoop.hbase.TestHBaseOnOtherDfsCluster ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.TestRegionLoad ||   | hadoop.hbase.tool.TestSecureLoadIncrementalHFiles ||   | hadoop.hbase.TestMetaTableAccessor ||   | hadoop.hbase.TestJMXListener ||   | hadoop.hbase.replication.TestSerialReplication ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.replication.TestSyncReplicationActive ||   | hadoop.hbase.replication.regionserver.TestGlobalReplicationThrottler ||   | hadoop.hbase.replication.TestReplicationKillMasterRSWithSeparateOldWALs ||   | hadoop.hbase.replication.TestReplicationStatus ||   | hadoop.hbase.TestAcidGuaranteesWithBasicPolicy ||   | hadoop.hbase.TestNamespace ||   | hadoop.hbase.replication.TestReplicationKillSlaveRS ||   | hadoop.hbase.replication.TestReplicationMetricsforUI ||   | hadoop.hbase.replication.TestSyncReplicationStandBy ||   | hadoop.hbase.replication.TestReplicationKillMasterRS |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 5d93a0fa970b 4.4.0-139-generic #165-Ubuntu SMP Wed Oct 24 10:58:50 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b620334c20 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4125 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 22 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 18s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 43s |  master passed  || +1 |  compile  |   3m 30s |  master passed  || +1 |  checkstyle  |   1m 45s |  master passed  || +1 |  shadedjars  |   4m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 17s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 28s |  the patch passed  || +1 |  compile  |   3m 16s |  the patch passed  || +1 |  cc  |   3m 16s |  the patch passed  || +1 |  javac  |   3m 16s |  the patch passed  || -1 |  checkstyle  |   1m 13s |  hbase-server: The patch generated 1 new + 271 unchanged - 1 fixed = 272 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 27s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 50s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 35s |  the patch passed  || +1 |  javadoc  |   0m 55s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 40s |  hbase-common in the patch passed.  || +1 |  unit  | 124m 37s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 17s |  The patch does not generate ASF License warnings.  ||  |   | 183m 16s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 8045a67322d3 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / b620334c20 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 5177 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 23 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  4s |  master passed  || +1 |  compile  |   3m 20s |  master passed  || +1 |  checkstyle  |   1m 43s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  2s |  master passed  || +1 |  javadoc  |   0m 55s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   3m 20s |  the patch passed  || +1 |  cc  |   3m 20s |  the patch passed  || +1 |  javac  |   3m 20s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 24s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 31s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 31s |  the patch passed  || +1 |  findbugs  |   5m 21s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 45s |  hbase-common in the patch passed.  || +1 |  unit  | 126m  6s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 18s |  The patch does not generate ASF License warnings.  ||  |   | 181m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux af6bc4cf12c1 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7755d4beed || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5232 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  1s |  master passed  || +1 |  compile  |   3m 17s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m  7s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 59s |  master passed  || +1 |  javadoc  |   1m  0s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  8s |  the patch passed  || +1 |  compile  |   3m 22s |  the patch passed  || +1 |  cc  |   3m 22s |  the patch passed  || +1 |  javac  |   3m 22s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  8s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 38s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 25s |  the patch passed  || +1 |  javadoc  |   0m 58s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 45s |  hbase-common in the patch passed.  || +1 |  unit  | 125m 34s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  9s |  The patch does not generate ASF License warnings.  ||  |   | 180m 48s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 5d0cf74c7846 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7755d4beed || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5230 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 25 **
[Comment excluded]

** Comment 26 **
[Comment excluded]

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  5s |  master passed  || +1 |  compile  |   3m 22s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m  8s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 58s |  master passed  || +1 |  javadoc  |   0m 58s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  6s |  the patch passed  || +1 |  compile  |   3m 18s |  the patch passed  || +1 |  cc  |   3m 18s |  the patch passed  || +1 |  javac  |   3m 18s |  the patch passed  || -1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 1 new + 271 unchanged - 1 fixed = 272 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 33s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 29s |  the patch passed  || +1 |  javadoc  |   0m 59s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || -1 |  unit  | 141m 22s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 20s |  The patch does not generate ASF License warnings.  ||  |   | 196m 43s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.locking.TestLockManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 8a8107a7a63c 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e4b6b4afb9 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5011 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 28 **
Carrying my +1 over from rb. Let me rerun the patch build to see if failure related (probably not)

** Comment 29 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 52s |  master passed  || +1 |  compile  |   3m 32s |  master passed  || +1 |  checkstyle  |   1m 50s |  master passed  || +1 |  shadedjars  |   4m 35s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  7s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   3m 31s |  the patch passed  || +1 |  cc  |   3m 31s |  the patch passed  || +1 |  javac  |   3m 31s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 24s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 36s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 31s |  the patch passed  || +1 |  findbugs  |   5m 33s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 31s |  hbase-common in the patch passed.  || -1 |  unit  | 131m 54s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m  9s |  The patch does not generate ASF License warnings.  ||  |   | 191m  4s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestSplitWALProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 213709f212e5 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 466fa920fe || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4859 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 30 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 17s |  master passed  || +1 |  compile  |   3m 21s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m 10s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 53s |  master passed  || +1 |  javadoc  |   0m 56s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   3m 20s |  the patch passed  || +1 |  cc  |   3m 20s |  the patch passed  || +1 |  javac  |   3m 20s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  8s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 32s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 31s |  the patch passed  || +1 |  findbugs  |   5m 20s |  the patch passed  || +1 |  javadoc  |   0m 56s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 45s |  hbase-common in the patch passed.  || -1 |  unit  | 140m 27s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 50s |  The patch does not generate ASF License warnings.  ||  |   | 195m 41s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestSplitWALProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 14ef148d7d25 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 466fa920fe || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4854 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 31 **
Failed UT is stuck at TearDown. Try to kill the HBase cluster before shutdown it.

** Comment 32 **
The ut passed locally and only failed in HADOOP QA?

** Comment 33 **
[Comment excluded]

** Comment 34 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   3m 21s |  master passed  || +1 |  checkstyle  |   1m 43s |  master passed  || +1 |  shadedjars  |   4m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  5s |  master passed  || +1 |  javadoc  |   0m 55s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  7s |  the patch passed  || +1 |  compile  |   3m 18s |  the patch passed  || +1 |  cc  |   3m 18s |  the patch passed  || +1 |  javac  |   3m 18s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 23s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 11s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 32s |  the patch passed  || +1 |  findbugs  |   5m 12s |  the patch passed  || +1 |  javadoc  |   0m 59s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || +1 |  unit  | 127m 36s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 17s |  The patch does not generate ASF License warnings.  ||  |   | 183m 12s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 9787b2f23701 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 466fa920fe || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5128 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 35 **
[Comment excluded]

** Comment 36 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 11s |  master passed  || +1 |  compile  |   3m 17s |  master passed  || +1 |  checkstyle  |   1m 44s |  master passed  || +1 |  shadedjars  |   4m 13s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  2s |  master passed  || +1 |  javadoc  |   0m 58s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 11s |  the patch passed  || +1 |  compile  |   3m 19s |  the patch passed  || +1 |  cc  |   3m 19s |  the patch passed  || +1 |  javac  |   3m 19s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 39s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 27s |  the patch passed  || +1 |  javadoc  |   0m 54s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || -1 |  unit  | 227m 58s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 18s |  The patch does not generate ASF License warnings.  ||  |   | 283m 56s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestServerCrashProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 11346261c5c6 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 466fa920fe || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5338 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 37 **
 org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure Time elapsed: 24.063 s <<< ERRORAccording this log, this TestServerCrashProcedure is not stuck but exceeds time limit since it's too large.it costs 10min 52sec on my own desktop. Let me retry this UT with bounded number of split writer which could make it more stable.

** Comment 38 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 17s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  9s |  master passed  || +1 |  compile  |   3m 21s |  master passed  || +1 |  checkstyle  |   1m 43s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  0s |  master passed  || +1 |  javadoc  |   0m 54s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 12s |  the patch passed  || +1 |  compile  |   3m 19s |  the patch passed  || +1 |  cc  |   3m 19s |  the patch passed  || +1 |  javac  |   3m 19s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 51s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 32s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 34s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || -1 |  unit  | 230m 38s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m  3s |  The patch does not generate ASF License warnings.  ||  |   | 286m 29s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestServerCrashProcedure ||   | hadoop.hbase.master.TestSplitWALManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 1f52c735c690 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3fbdd5bbe9 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5484 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 39 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   3m 21s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m  6s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 58s |  master passed  || +1 |  javadoc  |   0m 58s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 10s |  the patch passed  || +1 |  compile  |   3m 19s |  the patch passed  || +1 |  cc  |   3m 19s |  the patch passed  || +1 |  javac  |   3m 19s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  8s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 35s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 31s |  the patch passed  || +1 |  javadoc  |   0m 59s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-common in the patch passed.  || -1 |  unit  | 129m 22s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 19s |  The patch does not generate ASF License warnings.  ||  |   | 185m  0s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestSplitWALProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 6bfe9eccabf8 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 94093e869a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5063 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 40 **
[Comment excluded]

** Comment 41 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m  7s |  master passed  || +1 |  compile  |   3m 22s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   4m 57s |  master passed  || +1 |  javadoc  |   0m 57s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m  9s |  the patch passed  || +1 |  compile  |   3m 22s |  the patch passed  || +1 |  cc  |   3m 22s |  the patch passed  || +1 |  javac  |   3m 22s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 21s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  7s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 10s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 38s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 29s |  the patch passed  || +1 |  findbugs  |   5m 22s |  the patch passed  || +1 |  javadoc  |   0m 59s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 45s |  hbase-common in the patch passed.  || -1 |  unit  | 132m  9s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 12s |  The patch does not generate ASF License warnings.  ||  |   | 187m 37s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionServerAbortTimeout |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 7df8ec6cee9e 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 94093e869a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5047 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 42 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 11s |  master passed  || +1 |  compile  |   3m 20s |  master passed  || +1 |  checkstyle  |   1m 42s |  master passed  || +1 |  shadedjars  |   4m 11s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  1s |  master passed  || +1 |  javadoc  |   0m 54s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 12s |  the patch passed  || +1 |  compile  |   3m 23s |  the patch passed  || +1 |  cc  |   3m 23s |  the patch passed  || +1 |  javac  |   3m 23s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 22s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m  8s |  hbase-server: The patch generated 0 new + 271 unchanged - 1 fixed = 271 total (was 272)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  7s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 29s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 30s |  the patch passed  || +1 |  findbugs  |   5m 20s |  the patch passed  || +1 |  javadoc  |   0m 57s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 46s |  hbase-common in the patch passed.  || +1 |  unit  | 129m 29s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m 11s |  The patch does not generate ASF License warnings.  ||  |   | 184m 58s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c9bc8af768dc 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 94093e869a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5070 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 43 **
[Comment excluded]

** Comment 44 **
[Comment excluded]

** Comment 45 **
So why the ut failed for 019 patch?

** Comment 46 **
 I checked the code and found some regionserver was still running when tear down. Then I found there is a piece of code in tearDown() of TestServerCrashProcedure:{code}if (master = null) { ProcedureTestingUtility.setKillAndToggleBeforeStoreUpdate( master.getMasterProcedureExecutor(), false);}{code}Thus I add the same code into TestSplitWalProcedure. Besides this, I make the test finish after all procedures done, I guess there is some procedure related thread stuck when we tear down the cluster. But I didn't found that thread from failed test logs.

** Comment 47 **
[Comment excluded]

** Comment 48 **
[Comment excluded]

** Comment 49 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 50 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 20s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 30s |  branch-2 passed  || +1 |  compile  |  16m 56s |  branch-2 passed  || +1 |  checkstyle  |   1m 48s |  branch-2 passed  || +1 |  shadedjars  |   4m  3s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 22s |  branch-2 passed  || +1 |  javadoc  |   1m  0s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 28s |  the patch passed  || +1 |  compile  |  12m  9s |  the patch passed  || +1 |  cc  |  12m  9s |  the patch passed  || +1 |  javac  |  12m  9s |  the patch passed  || -1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 3 new + 277 unchanged - 1 fixed = 280 total (was 278)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  6s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  9s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 32s |  the patch passed  || +1 |  findbugs  |   6m  1s |  the patch passed  || +1 |  javadoc  |   0m 58s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 33s |  hbase-common in the patch passed.  || -1 |  unit  | 150m 44s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 12s |  The patch does not generate ASF License warnings.  ||  |   | 230m 44s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRecoveredEdits |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 70a1ffd7b119 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 97219f1ace || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4750 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 51 **
[Comment excluded]

** Comment 52 **
[Comment excluded]

** Comment 53 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 29s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 7 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 39s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   7m 23s |  branch-2 passed  || +1 |  compile  |  21m 39s |  branch-2 passed  || +1 |  checkstyle  |   1m 53s |  branch-2 passed  || +1 |  shadedjars  |   4m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m  5s |  branch-2 passed  || +1 |  javadoc  |   0m 56s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 21s |  the patch passed  || +1 |  compile  |  17m 39s |  the patch passed  || +1 |  cc  |  17m 39s |  the patch passed  || +1 |  javac  |  17m 39s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch passed checkstyle in hbase-protocol-shaded  || +1 |  checkstyle  |   0m 24s |  The patch passed checkstyle in hbase-common  || +1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 0 new + 277 unchanged - 1 fixed = 277 total (was 278)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 17s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 13s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 32s |  the patch passed  || +1 |  findbugs  |   5m 39s |  the patch passed  || +1 |  javadoc  |   0m 56s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 29s |  hbase-common in the patch passed.  || +1 |  unit  | 136m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   1m  2s |  The patch does not generate ASF License warnings.  ||  |   | 230m 34s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21588 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 47635ab92eae 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / c28e03e5df || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4612 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 54 **
[Comment excluded]

** Comment 55 **
[Comment excluded]

** Comment 56 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 57 **
[Comment excluded]
"
HBASE-22523,https://issues.apache.org/jira/browse/HBASE-22523,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Refactor RegionStates#getAssignmentsByTable to make it easy to understand,NO,,"** Comment 1 **
[Comment excluded]
"
HBASE-21155,https://issues.apache.org/jira/browse/HBASE-21155,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java,Save on a few log strings and some churn in wal splitter by skipping out early if no logs in dir,YES,Trivial change to splitlogmanager that saves us a log line at least per WAL dir when it goes to split. Also saves some not-needed churn in SLM.,"** Comment 1 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 27s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |  10m 31s |  branch-2.1 passed  || +1 |  compile  |   3m 15s |  branch-2.1 passed  || +1 |  checkstyle  |   2m  7s |  branch-2.1 passed  || +1 |  shadedjars  |   6m  3s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 51s |  branch-2.1 passed  || +1 |  javadoc  |   1m 31s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   6m 39s |  the patch passed  || +1 |  compile  |   2m 35s |  the patch passed  || +1 |  javac  |   2m 35s |  the patch passed  || +1 |  checkstyle  |   1m  8s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 41s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 58s |  the patch passed  || +1 |  javadoc  |   1m 17s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 179m 37s |  hbase-server in the patch failed.  || +1 |  asflicense  |   1m 20s |  The patch does not generate ASF License warnings.  ||  |   | 238m 46s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21155 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 78b7352a866d 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 4d7221a68f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4684 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   7m  7s |  branch-2.1 passed  || +1 |  compile  |   1m 55s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 16s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 42s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 13s |  branch-2.1 passed  || +1 |  javadoc  |   0m 50s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 56s |  the patch passed  || +1 |  compile  |   1m 47s |  the patch passed  || +1 |  javac  |   1m 47s |  the patch passed  || +1 |  checkstyle  |   1m 12s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 33s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 42s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  6s |  the patch passed  || +1 |  javadoc  |   0m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 124m 10s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 28s |  The patch does not generate ASF License warnings.  ||  |   | 165m  9s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21155 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c99c9a958402 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 4d7221a68f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4667 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 4 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 35s |  branch-2.1 passed  || +1 |  compile  |   2m  0s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 31s |  branch-2.1 passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 10s |  branch-2.1 passed  || +1 |  javadoc  |   0m 37s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 35s |  the patch passed  || +1 |  compile  |   1m 56s |  the patch passed  || +1 |  javac  |   1m 56s |  the patch passed  || -1 |  checkstyle  |   1m 26s |  hbase-server: The patch generated 2 new + 193 unchanged - 0 fixed = 195 total (was 193)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  4s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  5s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || -1 |  findbugs  |   2m 30s |  hbase-server generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  || +1 |  javadoc  |   0m 36s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 126m 40s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 19s |  The patch does not generate ASF License warnings.  ||  |   | 168m  0s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Null passed for non-null parameter of ServerManager.findDeadServersAndProcess(Set, Set) in org.apache.hadoop.hbase.master.RegionServerTracker.start(Set, Set)  Method invoked at [file java]:of ServerManager.findDeadServersAndProcess(Set, Set) in org.apache.hadoop.hbase.master.RegionServerTracker.start(Set, Set)  Method invoked at [file java]: ||  |  Null passed for non-null parameter of ServerManager.findDeadServersAndProcess(Set, Set) in org.apache.hadoop.hbase.master.RegionServerTracker.start(Set, Set)  Method invoked at [file java]:of ServerManager.findDeadServersAndProcess(Set, Set) in org.apache.hadoop.hbase.master.RegionServerTracker.start(Set, Set)  Method invoked at [file java]: || Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21155 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1a19f6a4c46a 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 4d7221a68f || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4712 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-2.1 Compile Tests  ||| +1 |  mvninstall  |   4m 11s |  branch-2.1 passed  || +1 |  compile  |   1m 45s |  branch-2.1 passed  || +1 |  checkstyle  |   1m 14s |  branch-2.1 passed  || +1 |  shadedjars  |   3m 35s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   1m 56s |  branch-2.1 passed  || +1 |  javadoc  |   0m 30s |  branch-2.1 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  1s |  the patch passed  || +1 |  compile  |   1m 44s |  the patch passed  || +1 |  javac  |   1m 43s |  the patch passed  || +1 |  checkstyle  |   1m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 35s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m  9s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 121m 34s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 36s |  The patch does not generate ASF License warnings.  ||  |   | 158m 10s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.throttle.TestFlushWithThroughputController |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-21155 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1c2c429842ad 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2.1 / 2051b0982d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4745 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
Pushed to branch-2.1+. Failed test is a flakey across multiple recent builds.

** Comment 7 **
[Comment excluded]

** Comment 8 **
Re-resolving after pushing an addendum...{code}commit aab3a8a870b7bbe2d48e2909fd1dad4b20988e00 (HEAD -> m, origin/master, origin/HEAD)Author: Michael Stack <stack@apache.org>Date:   Thu Sep 6 17:24:03 2018 -0700    HBASE-21155 Save on a few log strings and some churn in wal splitter by skipping out early if no logs in dir; ADDENDUM    Address review comments.    Signed-off-by: Mike Drob <mdrob@apache.org>diff --git [file java] [file java]index f24805f7cc..d716a11619 100644--- [file java]+++ [file java]@@ -144,7 +144,7 @@ public class MasterWalManager {   }   /**-   * @return Return listing of ServerNames found in the filesystem under the WAL directory+   * @return listing of ServerNames found in the filesystem under the WAL directory    *   that COULD BE 'alive'; excludes those that have a '-splitting' suffix as these are already    *   being split -- they cannot be 'alive'.    */diff --git [file java] [file java]index 1e4e2ce17e..4d977d3427 100644--- [file java]+++ [file java]@@ -174,7 +174,7 @@ public class SplitLogManager {       }       FileStatus logfiles = FSUtils.listStatus(fs, logDir, filter);       if (logfiles == null || logfiles.length == 0) {-        LOG.info(logDir + "" dir is empty, no logs to split."");+        LOG.info(""{} dir is empty, no logs to split."", logDir);       } else {         Collections.addAll(fileStatus, logfiles);       }@@ -292,7 +292,7 @@ public class SplitLogManager {     String msg = ""Finished splitting (more than or equal to) "" + totalSize +         "" bytes in "" + ((batch == null)? 0: batch.installed) +         "" log files in "" + logDirs + "" in "" +-        ((startTime == -1)? startTime: (EnvironmentEdgeManager.currentTime() - startTime)) + ""ms"";+        ((startTime == 0)? startTime: (EnvironmentEdgeManager.currentTime() - startTime)) + ""ms"";     status.markComplete(msg);     LOG.info(msg);     return totalSize;{code}

** Comment 9 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22365,https://issues.apache.org/jira/browse/HBASE-22365,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java,Region may be opened on two RegionServers,NO,"Found this problem when run ITBLL with our internal branch which is based on branch-2.2. So mark this as a blocker for 2.2.0. A region 7ebdca9cd09e26074749b546586e2156 is moved from RS-st99 to RS-st98 and the TRSP succeed. Meanwhile, RS-st99 crashed and schedule a new SCP for RS-st99. So SCP initialized subprocedures for 7ebdca9cd09e26074749b546586e2156, too. Then the 7ebdca9cd09e26074749b546586e2156 was assigned to two RegionServers.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 24s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m  6s |  master passed  || +1 |  compile  |   0m 49s |  master passed  || +1 |  checkstyle  |   1m  7s |  master passed  || +1 |  shadedjars  |   4m 19s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 54s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 56s |  the patch passed  || +1 |  compile  |   0m 51s |  the patch passed  || +1 |  javac  |   0m 51s |  the patch passed  || +1 |  checkstyle  |   1m  6s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 16s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m  8s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m 16s |  the patch passed  || +1 |  javadoc  |   0m 31s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 144m 58s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   | 182m 15s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce base: [link] || JIRA Issue | HBASE-22365 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 1ce4ade93064 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / e884a25f8d || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4598 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 4 **
 Flakes:  org.apache.hadoop.hbase.master.assignment.TestSCPGetRegionsRace.test(org.apache.hadoop.hbase.master.assignment.TestSCPGetRegionsRace)   Run 1: TestSCPGetRegionsRace.test:216 expected null, but was:<Assign,,1557079960191.f27fa6f9158ad1721a9d455593308bd9.>   Run 2: PASSOK, at least it could fail...Let me prepare the fix.

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 9 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 10 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- Something went wrong running this stage, please .
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)

"
HBASE-22404,https://issues.apache.org/jira/browse/HBASE-22404,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java,Open/Close region request may be executed twice when master restart,NO,"We found this problem when run ITBLL for our internal branch which based branch-2.2.
 # Master A schedule a TRSP which will reopen region1. And this TRSP firstly schdule a sub remote procedure: CloseRegionProcedure and send the close region request to RS.
 # Master A shutdown and Master B is the new active master. And restore this TRSP and the remote procedure CloseRegionProcedure.
 # RS reported to the new Master B and the CloseRegionProcedure finished. Then the TRSP schdule a new OpenRegionProcedure and send open region request to RS.
 # {color:#FF0000}But meanwhile Master B send the close region request to RS again{color}.
 # The open region request finished firstly and report to master succeed. The master thought the region was opened on RS. But the RS excuted the close region request again and closed the region1.
 # The Master thought the region opened but the RS closed the region. Then the new TRSP will stuck forever.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- Something went wrong running this stage, please .
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- Something went wrong running this stage, please .
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 5 **
Hi  & , we are using HBase-2.2.3. Recently we also faced similar problem where regionserver ignored a procedure (closeRegionProcedure) due to duplicate pid which lead region to stuck in RIT.Analysis:1. After Hmaster failover, master in-memory proc-id was reset. 2. Upon new DisableTable client request, Master dispatched a closeRegionProcedure to RS and suspended the proc.3. But RS ignored the current CloseRegionProcedure request without doing anything since RS had already executed a procedure with same id.Since no UnAssignRegionHandler was created at Step-3, so RS did not send any reportRegionStateTransition to HM. And at HMaster side the procedure remain in suspended state because we awake the suspended procedure on reportRegionStateTransition. So region stuck in RIT forever until unless we restart HM & RS.
"
HBASE-21884,https://issues.apache.org/jira/browse/HBASE-21884,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SecureBulkLoadManager.java,Fix box/unbox findbugs warning in secure bulk load,YES,"{code}

Reason	Tests
FindBugs	module:hbase-server
Boxed value is unboxed and then immediately reboxed in org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint.incrementUgiReference(UserGroupInformation) At SecureBulkLoadEndpoint.java:then immediately reboxed in org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint.incrementUgiReference(UserGroupInformation) At SecureBulkLoadEndpoint.java:[line 268]
{code}

Looking at branch-2 and master I suspect we're doing the same wasteful operation but findbugs can't see it through the lambda definition.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 28s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  branch-1 Compile Tests  ||| +1 |  mvninstall  |   7m 32s |  branch-1 passed  || +1 |  compile  |   0m 36s |  branch-1 passed with JDK v1.8.0_201  || +1 |  compile  |   0m 38s |  branch-1 passed with JDK v1.7.0_201  || +1 |  checkstyle  |   1m 22s |  branch-1 passed  || +1 |  shadedjars  |   2m 41s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 35s |  branch-1 passed with JDK v1.8.0_201  || +1 |  javadoc  |   0m 38s |  branch-1 passed with JDK v1.7.0_201  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   1m 36s |  the patch passed  || +1 |  compile  |   0m 36s |  the patch passed with JDK v1.8.0_201  || +1 |  javac  |   0m 36s |  the patch passed  || +1 |  compile  |   0m 40s |  the patch passed with JDK v1.7.0_201  || +1 |  javac  |   0m 40s |  the patch passed  || +1 |  checkstyle  |   1m 18s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   2m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   1m 38s |  Patch does not cause any errors with Hadoop 2.7.4.  || +1 |  javadoc  |   0m 29s |  the patch passed with JDK v1.8.0_201  || +1 |  javadoc  |   0m 36s |  the patch passed with JDK v1.7.0_201  ||| || || ||  Other Tests  ||| -1 |  unit  | 136m 59s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 25s |  The patch does not generate ASF License warnings.  ||  |   | 161m 51s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.mapred.TestTableSnapshotInputFormat ||   | hadoop.hbase.coprocessor.TestMetaTableMetrics ||   | hadoop.hbase.client.TestAdmin1 |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:61288f8 || JIRA Issue | HBASE-21884 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux c5f97322ff33 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-1 / 256c3d9 || maven | version: Apache Maven 3.0.5 || Default Java | 1.7.0_201 || Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_201 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_201 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 3793 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 4 **
[Comment excluded]

** Comment 5 **
The three failed tests for branch-1 don't show up in flaky, but my attempts to get them to fail locally aren't getting anywhere. They also don't overlap with the changed code AFAICT.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 42s |  master passed  || +1 |  compile  |   2m  7s |  master passed  || +1 |  checkstyle  |   1m 15s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 24s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m  1s |  the patch passed  || +1 |  compile  |   2m  7s |  the patch passed  || +1 |  javac  |   2m  7s |  the patch passed  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 1 new + 3 unchanged - 0 fixed = 4 total (was 3)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 36s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  3s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 30s |  the patch passed  || +1 |  javadoc  |   0m 45s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 135m 15s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 178m  6s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21884 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 59f36b121f6f 4.4.0-139-generic #165~14.04.1-Ubuntu SMP Wed Oct 31 10:55:11 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ed849d2d19 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 5169 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 50s |  master passed  || +1 |  compile  |   2m  2s |  master passed  || +1 |  checkstyle  |   1m 16s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   2m 15s |  master passed  || +1 |  javadoc  |   0m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 39s |  the patch passed  || +1 |  compile  |   2m  2s |  the patch passed  || +1 |  javac  |   2m  2s |  the patch passed  || +1 |  checkstyle  |   1m 14s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 49s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   2m 26s |  the patch passed  || +1 |  javadoc  |   0m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 126m 41s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 24s |  The patch does not generate ASF License warnings.  ||  |   | 168m 29s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-21884 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 178bcbb3287d 4.4.0-131-generic #157~14.04.1-Ubuntu SMP Fri Jul 13 08:53:17 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / ed849d2d19 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5151 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.8.0   [link] |This message was automatically generated.

** Comment 10 **
SUCCESS: Integrated in Jenkins build HBase-1.3-IT #526 (See )
HBASE-21884 Fix box/unbox findbugs warning in secure bulk load (busbey: )


** Comment 11 **
Results for branch branch-1.2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 12 **
SUCCESS: Integrated in Jenkins build HBase-1.2-IT #1205 (See )
HBASE-21884 Fix box/unbox findbugs warning in secure bulk load (busbey: )


** Comment 13 **
Results for branch branch-1.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 14 **
Results for branch branch-1.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 15 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 16 **
Results for branch branch-2.0
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 17 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 18 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 19 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 20 **
Results for branch branch-2.1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-22502,https://issues.apache.org/jira/browse/HBASE-22502,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,Purge the logs when we reach the EOF for the last wal file when replication,YES,"Now there will be strange a warn log

{noformat}
2019-05-30 14:59:38,426 WARN  [RS:1;zhangduo-ubuntu:39885.replicationSource.wal-reader.zhangduo-ubuntu%2C39885%2C1559199556433,2] wal.ProtobufLogReader(422): Encountered a malformed edit, seeking back to last good position in file, from 2459 to 2459
java.io.EOFException: First byte is negative at offset 2459
	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext(ProtobufLogReader.java:347)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:98)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:86)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:263)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:176)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:195)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:138)
{noformat}

And in TestReplicationStatus* UTs, we set the retry interval to 100ms, so the logs are flooded with these useless warns...","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 4 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)

"
HBASE-22488,https://issues.apache.org/jira/browse/HBASE-22488,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMetaTableMetrics.java,Cleanup the explicit timeout value for test methods,NO,"After HBASE-19948, no need to add explicit timeout for test methods. But there are some new test methods which used explicit timeout and easy to fail when precommit job run them. One example is [https://builds.apache.org/job/PreCommit-HBASE-Build/436/testReport/org.apache.hadoop.hbase.coprocessor/TestMetaTableMetrics/testConcurrentAccess/]

 

See [http://hbase.apache.org/book.html#hbase.unittests.timeouts]","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 3. . (note that this means we didn't check the Hadoop 3 shaded client)


** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 3. . (note that this means we didn't check the Hadoop 3 shaded client)


** Comment 5 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 3. . (note that this means we didn't check the Hadoop 3 shaded client)


** Comment 6 **
Results for branch branch-2.1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 3. . (note that this means we didn't check the Hadoop 3 shaded client)

"
HBASE-20881,https://issues.apache.org/jira/browse/HBASE-20881,https://github.com/apache/hbase/blob/rel/2.2.0/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterAbortAndRSGotKilled.java,Introduce a region transition procedure to handle all the state transition for a region,NO,"Now have an AssignProcedure, an UnssignProcedure, and also a MoveRegionProcedure which schedules an AssignProcedure and an UnssignProcedure to move a region. This makes the logic a bit complicated, as MRP is not a RIT, so when SCP can not interrupt it directly...","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 15 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 21s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 41s |  master passed  || +1 |  compile  |   4m 12s |  master passed  || +1 |  checkstyle  |   2m 25s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 59s |  master passed  || +1 |  javadoc  |   1m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 45s |  the patch passed  || +1 |  compile  |   4m 11s |  the patch passed  || +1 |  cc  |   4m 11s |  the patch passed  || -1 |  javac  |   1m 44s |  hbase-server generated 1 new + 187 unchanged - 1 fixed = 188 total (was 188)  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || -1 |  checkstyle  |   1m 16s |  hbase-server: The patch generated 14 new + 264 unchanged - 34 fixed = 278 total (was 298)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  2s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 58s |  the patch passed  || -1 |  findbugs  |   2m 14s |  hbase-server generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0)  || -1 |  javadoc  |   0m 30s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 56s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || -1 |  unit  |  20m 44s |  hbase-server in the patch failed.  || +1 |  unit  |   3m 57s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   0m 56s |  The patch does not generate ASF License warnings.  ||  |   |  93m 33s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Inconsistent synchronization of org.apache.hadoop.hbase.master.assignment.RegionRemoteProcedureBase.dispatched; locked 50% of time  Unsynchronized access at [file java]:50% of time  Unsynchronized access at [file java]: ||  |  Inconsistent synchronization of org.apache.hadoop.hbase.master.assignment.RegionRemoteProcedureBase.targetServer; locked 66% of time  Unsynchronized access at [file java]:66% of time  Unsynchronized access at [file java]: ||  |  org.apache.hadoop.hbase.master.assignment.TransitRegionStateProcedure.execute(MasterProcedureEnv) synchronizes on updated field TransitRegionStateProcedure.regionNode  At [file java]:TransitRegionStateProcedure.regionNode  At [file java]: || Failed junit tests | hadoop.hbase.master.procedure.TestRecoverMetaProcedure ||   | hadoop.hbase.master.TestRegionState |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 89a910489ed2 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bd30ca62ef || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javac | [link] || checkstyle | [link] || findbugs | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 2727 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 16 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 41s |  master passed  || +1 |  compile  |   4m 10s |  master passed  || +1 |  checkstyle  |   2m 25s |  master passed  || +1 |  shadedjars  |   4m 31s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 58s |  master passed  || +1 |  javadoc  |   1m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 48s |  the patch passed  || +1 |  compile  |   4m 12s |  the patch passed  || +1 |  cc  |   4m 12s |  the patch passed  || +1 |  javac  |   4m 12s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 6 new + 252 unchanged - 49 fixed = 258 total (was 301)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  0s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 57s |  the patch passed  || -1 |  findbugs  |   2m  6s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  || -1 |  javadoc  |   0m 30s |  hbase-server generated 3 new + 0 unchanged - 0 fixed = 3 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  0s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 39s |  hbase-procedure in the patch passed.  || -1 |  unit  | 121m 12s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  1s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 35s |  The patch does not generate ASF License warnings.  ||  |   | 194m 23s |   |\\\\|| Reason || Tests ||| FindBugs | module:hbase-server ||  |  Inconsistent synchronization of org.apache.hadoop.hbase.master.assignment.RegionRemoteProcedureBase.region; locked 60% of time  Unsynchronized access at [file java]:60% of time  Unsynchronized access at [file java]: || Failed junit tests | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.client.TestConnectionImplementation ||   | hadoop.hbase.regionserver.TestRegionMove ||   | hadoop.hbase.master.procedure.TestCloneSnapshotProcedure ||   | hadoop.hbase.client.TestZKAsyncRegistry ||   | hadoop.hbase.coprocessor.TestCoprocessorMetrics ||   | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.client.TestAdmin2 ||   | hadoop.hbase.client.TestScannersFromClientSide ||   | hadoop.hbase.client.TestMetaWithReplicas |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c21ef47ae8bc 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bd30ca62ef || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || findbugs | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4980 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m  9s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 18 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 47s |  master passed  || +1 |  compile  |   4m 11s |  master passed  || +1 |  checkstyle  |   2m 23s |  master passed  || +1 |  shadedjars  |   4m 37s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  0s |  master passed  || +1 |  javadoc  |   1m 29s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 50s |  the patch passed  || +1 |  compile  |   4m  9s |  the patch passed  || +1 |  cc  |   4m  9s |  the patch passed  || +1 |  javac  |   4m  9s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 6 new + 253 unchanged - 49 fixed = 259 total (was 302)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  6s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  0s |  the patch passed  || +1 |  findbugs  |   6m 40s |  the patch passed  || -1 |  javadoc  |   0m 30s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 40s |  hbase-procedure in the patch passed.  || -1 |  unit  | 121m 54s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  0s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 36s |  The patch does not generate ASF License warnings.  ||  |   | 195m 41s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestOpenSeqNumUnexpectedIncrease |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c4c479d8475f 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bd30ca62ef || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4828 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 19 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 22s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 53s |  master passed  || +1 |  compile  |   4m 40s |  master passed  || +1 |  checkstyle  |   2m 29s |  master passed  || +1 |  shadedjars  |   4m 39s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 32s |  master passed  || +1 |  javadoc  |   1m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 10s |  the patch passed  || +1 |  compile  |   4m 27s |  the patch passed  || +1 |  cc  |   4m 27s |  the patch passed  || +1 |  javac  |   4m 27s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 18s |  hbase-server: The patch generated 0 new + 253 unchanged - 49 fixed = 253 total (was 302)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 52s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 33s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  3s |  the patch passed  || +1 |  findbugs  |   7m  3s |  the patch passed  || -1 |  javadoc  |   0m 31s |  hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0)  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  1s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 54s |  hbase-procedure in the patch passed.  || -1 |  unit  | 137m  7s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  8s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 35s |  The patch does not generate ASF License warnings.  ||  |   | 214m 42s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestTransitRegionStateProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 1334ffc6cde0 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / bd30ca62ef || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || javadoc | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5024 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 19 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 25s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 36s |  master passed  || +1 |  compile  |   4m 11s |  master passed  || +1 |  checkstyle  |   2m 16s |  master passed  || +1 |  shadedjars  |   4m 20s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  3s |  master passed  || +1 |  javadoc  |   1m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 38s |  the patch passed  || +1 |  compile  |   4m 15s |  the patch passed  || +1 |  cc  |   4m 15s |  the patch passed  || +1 |  javac  |   4m 15s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 30s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 253 unchanged - 49 fixed = 253 total (was 302)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 21s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 43s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  2s |  the patch passed  || +1 |  findbugs  |   6m 43s |  the patch passed  || +1 |  javadoc  |   1m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m 13s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 48s |  hbase-procedure in the patch passed.  || -1 |  unit  | 239m 45s |  hbase-server in the patch failed.  || +1 |  unit  |   9m 19s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 50s |  The patch does not generate ASF License warnings.  ||  |   | 318m 38s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.master.procedure.TestCreateTableProcedure ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.replication.TestSyncReplicationMoreLogsInLocalGiveUpSplitting ||   | hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.master.TestAssignmentManagerMetrics ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure ||   | hadoop.hbase.client.TestFromClientSide |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux ad2c95b16998 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bd30ca62ef || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5205 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 12 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 19 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 18s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 47s |  master passed  || +1 |  compile  |   4m 21s |  master passed  || +1 |  checkstyle  |   2m  9s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  4s |  master passed  || +1 |  javadoc  |   1m 27s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 44s |  the patch passed  || +1 |  compile  |   4m 17s |  the patch passed  || +1 |  cc  |   4m 17s |  the patch passed  || +1 |  javac  |   4m 17s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 28s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 10s |  hbase-server: The patch generated 0 new + 253 unchanged - 49 fixed = 253 total (was 302)  || +1 |  checkstyle  |   0m 10s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m  9s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 57s |  the patch passed  || +1 |  findbugs  |   6m 40s |  the patch passed  || +1 |  javadoc  |   1m 26s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  7s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 40s |  hbase-procedure in the patch passed.  || -1 |  unit  | 252m 12s |  hbase-server in the patch failed.  || -1 |  unit  |  14m 45s |  hbase-rsgroup in the patch failed.  || +1 |  asflicense  |   1m 34s |  The patch does not generate ASF License warnings.  ||  |   | 336m 43s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAdmin1 ||   | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.master.assignment.TestMergeTableRegionsProcedure ||   | hadoop.hbase.client.TestRestoreSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.replication.TestReplicationSmallTests ||   | hadoop.hbase.client.TestRestoreSnapshotFromClient ||   | hadoop.hbase.replication.TestReplicationSmallTestsSync ||   | hadoop.hbase.replication.TestMasterReplication ||   | hadoop.hbase.client.TestMobRestoreSnapshotFromClient ||   | hadoop.hbase.client.TestFromClientSide ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.rsgroup.TestRSGroups |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 0e0b81777205 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / bd01fa7639 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5095 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 13 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 22 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  6s |  master passed  || +1 |  compile  |   4m 10s |  master passed  || +1 |  checkstyle  |   2m 30s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 58s |  master passed  || +1 |  javadoc  |   1m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 53s |  the patch passed  || +1 |  compile  |   4m 12s |  the patch passed  || +1 |  cc  |   4m 12s |  the patch passed  || +1 |  javac  |   4m 12s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || -1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 1 new + 249 unchanged - 53 fixed = 250 total (was 302)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 15s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  4s |  the patch passed  || +1 |  findbugs  |   7m 45s |  the patch passed  || +1 |  javadoc  |   1m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  4s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 43s |  hbase-procedure in the patch passed.  || -1 |  unit  | 129m 47s |  hbase-server in the patch failed.  || +1 |  unit  |   4m 40s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 44s |  The patch does not generate ASF License warnings.  ||  |   | 206m 26s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 136a7b5ca272 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / bd01fa7639 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4326 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  1s |  The patch appears to include 22 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 42s |  master passed  || +1 |  compile  |   4m  6s |  master passed  || +1 |  checkstyle  |   2m 22s |  master passed  || +1 |  shadedjars  |   4m 34s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 26s |  master passed  || +1 |  javadoc  |   1m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m  9s |  the patch passed  || +1 |  compile  |   4m 13s |  the patch passed  || +1 |  cc  |   4m 13s |  the patch passed  || +1 |  javac  |   4m 13s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 249 unchanged - 68 fixed = 249 total (was 317)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 31s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 56s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 56s |  the patch passed  || +1 |  findbugs  |   6m 39s |  the patch passed  || +1 |  javadoc  |   1m 36s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 42s |  hbase-procedure in the patch passed.  || +1 |  unit  | 118m  6s |  hbase-server in the patch passed.  || +1 |  unit  |   4m 44s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 193m 10s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 0e6083a27710 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / d921262d38 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4488 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 22 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 27s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m  7s |  master passed  || +1 |  compile  |   4m 12s |  master passed  || +1 |  checkstyle  |   2m 26s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 15s |  master passed  || +1 |  javadoc  |   1m 39s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 13s |  the patch passed  || +1 |  compile  |   4m 43s |  the patch passed  || +1 |  cc  |   4m 43s |  the patch passed  || +1 |  javac  |   4m 44s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 34s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 16s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 17s |  hbase-server: The patch generated 0 new + 249 unchanged - 68 fixed = 249 total (was 317)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 54s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 37s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  2s |  the patch passed  || +1 |  findbugs  |   7m  3s |  the patch passed  || +1 |  javadoc  |   1m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  3s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || -1 |  unit  | 129m 39s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  3s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 206m 58s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux a441a5027457 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 953e5aa88c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4605 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 20 **
 Errors:  org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure.org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure   Run 1: TestSplitTableRegionProcedure.tearDown:136->Object.wait:502->Object.wait:-2 Â» TestTimedOut   Run 2: TestSplitTableRegionProcedure.org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure Â»  org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure.testRecoveryAndDoubleExecution(org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure)   Run 1: TestSplitTableRegionProcedure.testRecoveryAndDoubleExecution:411 expected:<true> but was:<false>   Run 2: TestSplitTableRegionProcedure.tearDown:136 Â» TimeoutIO java.util.concurrent.Ti... org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure.testSplitTableRegionEmptyDaughter(org.apache.hadoop.hbase.master.assignment.TestSplitTableRegionProcedure)   Run 1: TestSplitTableRegionProcedure.testSplitTableRegionEmptyDaughter:240 Â» NullPointer   Run 2: TestSplitTableRegionProcedure.tearDown:136 Â» InterruptedIO Flakes:  org.apache.hadoop.hbase.master.assignment.TestAssignmentOnRSCrash.testStopRsWithUserRegionWithoutData(org.apache.hadoop.hbase.master.assignment.TestAssignmentOnRSCrash)   Run 1: TestAssignmentOnRSCrash.testStopRsWithUserRegionWithoutData:102->testCrashRsWithUserRegion:127 expected:<a441a5027457,36596,1534064268710> but was:<null>   Run 2: PASS org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer.testBalanceClusterOverall(org.apache.hadoop.hbase.master.balancer.TestDefaultLoadBalancer)   Run 1: TestDefaultLoadBalancer.testBalanceClusterOverall:159   Run 2: PASS

** Comment 21 **
Looped 100 times locally and it finally failed with2018-08-12 19:57:18,174 ERROR  helpers.MarkerIgnoringBase(159): CODE-BUG: Uncaught runtime exception for pid=83, state=FAILED:SPLIT_TABLE_REGION_UPDATE_META, hasLock=true, exception=org.apache.hadoop.hbase.client.RetriesExhaustedException via TransitRegionStateProcedure:org.apache.hadoop.hbase.client.RetriesExhaustedException: Max attempts 10 exceeded; SplitTableRegionProcedure table=testRecoveryAndDoubleExecution, parent=2b370ab236c7bd08956fc25f712f49e4, daughterA=de5ab31764b272230cb50ca31b8ecbdb, daughterB=0d190bf20801e4bb12d6aaf40e971340java.lang.UnsupportedOperationException: pid=83, state=FAILED:SPLIT_TABLE_REGION_PRE_OPERATION_AFTER_META, hasLock=true, exception=org.apache.hadoop.hbase.client.RetriesExhaustedException via TransitRegionStateProcedure:org.apache.hadoop.hbase.client.RetriesExhaustedException: Max attempts 10 exceeded; SplitTableRegionProcedure table=testRecoveryAndDoubleExecution, parent=2b370ab236c7bd08956fc25f712f49e4, daughterA=de5ab31764b272230cb50ca31b8ecbdb, daughterB=0d190bf20801e4bb12d6aaf40e971340 unhandled state=SPLIT_TABLE_REGION_PRE_OPERATION_AFTER_META	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.rollbackState([file java]:320)	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.rollbackState([file java]:1)	at org.apache.hadoop.hbase.procedure2.StateMachineProcedure.rollback([file java]:208)	at org.apache.hadoop.hbase.procedure2.Procedure.doRollback([file java]:886)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeRollback([file java]:1436)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeRollback([file java]:1392)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1270)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$7([file java]:1251)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1822)2018-08-12 19:57:18,174 WARN   procedure2.ProcedureExecutor$Testing(98): Toggle KILL before store update to: true2018-08-12 19:57:18,192 ERROR  helpers.MarkerIgnoringBase(159): CODE-BUG: Uncaught runtime exception for pid=83, state=FAILED:SPLIT_TABLE_REGION_PRE_OPERATION_BEFORE_META, hasLock=true, exception=org.apache.hadoop.hbase.client.RetriesExhaustedException via TransitRegionStateProcedure:org.apache.hadoop.hbase.client.RetriesExhaustedException: Max attempts 10 exceeded; SplitTableRegionProcedure table=testRecoveryAndDoubleExecution, parent=2b370ab236c7bd08956fc25f712f49e4, daughterA=de5ab31764b272230cb50ca31b8ecbdb, daughterB=0d190bf20801e4bb12d6aaf40e971340java.lang.UnsupportedOperationException: pid=83, state=FAILED:SPLIT_TABLE_REGION_UPDATE_META, hasLock=true, exception=org.apache.hadoop.hbase.client.RetriesExhaustedException via TransitRegionStateProcedure:org.apache.hadoop.hbase.client.RetriesExhaustedException: Max attempts 10 exceeded; SplitTableRegionProcedure table=testRecoveryAndDoubleExecution, parent=2b370ab236c7bd08956fc25f712f49e4, daughterA=de5ab31764b272230cb50ca31b8ecbdb, daughterB=0d190bf20801e4bb12d6aaf40e971340 unhandled state=SPLIT_TABLE_REGION_UPDATE_META	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.rollbackState([file java]:320)	at org.apache.hadoop.hbase.master.assignment.SplitTableRegionProcedure.rollbackState([file java]:1)	at org.apache.hadoop.hbase.procedure2.StateMachineProcedure.rollback([file java]:208)	at org.apache.hadoop.hbase.procedure2.Procedure.doRollback([file java]:886)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeRollback([file java]:1436)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeRollback([file java]:1392)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1270)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$7([file java]:1251)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1822)Let me dig more.

** Comment 22 **
[Comment excluded]

** Comment 23 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 22 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 26s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   5m 56s |  master passed  || +1 |  compile  |   5m  3s |  master passed  || +1 |  checkstyle  |   2m 57s |  master passed  || +1 |  shadedjars  |   5m  5s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   7m 16s |  master passed  || +1 |  javadoc  |   1m 49s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   5m 36s |  the patch passed  || +1 |  compile  |   5m 23s |  the patch passed  || +1 |  cc  |   5m 23s |  the patch passed  || +1 |  javac  |   5m 23s |  the patch passed  || +1 |  checkstyle  |   0m 13s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 38s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 19s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 27s |  hbase-server: The patch generated 0 new + 249 unchanged - 68 fixed = 249 total (was 317)  || +1 |  checkstyle  |   0m 13s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 16s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  11m 37s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m 21s |  the patch passed  || +1 |  findbugs  |   6m 56s |  the patch passed  || +1 |  javadoc  |   1m 30s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 39s |  hbase-procedure in the patch passed.  || -1 |  unit  | 113m 44s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  8s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 198m  7s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestSplitTableRegionProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 00c6dca6ec26 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 953e5aa88c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4846 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 24 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 24 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 53s |  master passed  || +1 |  compile  |   4m 11s |  master passed  || +1 |  checkstyle  |   2m 24s |  master passed  || +1 |  shadedjars  |   4m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 11s |  master passed  || +1 |  javadoc  |   1m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 57s |  the patch passed  || +1 |  compile  |   4m 26s |  the patch passed  || +1 |  cc  |   4m 26s |  the patch passed  || +1 |  javac  |   4m 26s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 15s |  hbase-procedure: The patch generated 0 new + 20 unchanged - 1 fixed = 20 total (was 21)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 251 unchanged - 68 fixed = 251 total (was 319)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 30s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  10m 14s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  4s |  the patch passed  || +1 |  findbugs  |   6m 53s |  the patch passed  || +1 |  javadoc  |   1m 33s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || +1 |  unit  | 109m  0s |  hbase-server in the patch passed.  || +1 |  unit  |   4m  4s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 184m  9s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 70b3869e3574 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 953e5aa88c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4152 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 25 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 24 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 43s |  master passed  || +1 |  compile  |   4m 26s |  master passed  || +1 |  checkstyle  |   2m 30s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 26s |  master passed  || +1 |  javadoc  |   1m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 52s |  the patch passed  || +1 |  compile  |   4m 23s |  the patch passed  || +1 |  cc  |   4m 23s |  the patch passed  || +1 |  javac  |   4m 23s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 30s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || -1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 3 new + 248 unchanged - 71 fixed = 251 total (was 319)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 35s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 55s |  the patch passed  || +1 |  findbugs  |   6m 34s |  the patch passed  || +1 |  javadoc  |   1m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  3s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 43s |  hbase-procedure in the patch passed.  || +1 |  unit  | 113m 21s |  hbase-server in the patch passed.  || +1 |  unit  |   3m 59s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 30s |  The patch does not generate ASF License warnings.  ||  |   | 182m 37s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 88d3d98e504d 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / e705cf1447 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4865 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 26 **
[Comment excluded]

** Comment 27 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 25 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 43s |  master passed  || +1 |  compile  |   4m 24s |  master passed  || +1 |  checkstyle  |   2m 28s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   7m 15s |  master passed  || +1 |  javadoc  |   1m 51s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 19s |  the patch passed  || +1 |  compile  |   4m 59s |  the patch passed  || +1 |  cc  |   4m 59s |  the patch passed  || +1 |  javac  |   5m  0s |  the patch passed  || +1 |  checkstyle  |   0m 12s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 35s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 16s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 22s |  hbase-server: The patch generated 0 new + 246 unchanged - 73 fixed = 246 total (was 319)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m 17s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m 24s |  the patch passed  || +1 |  findbugs  |   8m 24s |  the patch passed  || +1 |  javadoc  |   1m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 38s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m 13s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 54s |  hbase-procedure in the patch passed.  || -1 |  unit  | 130m 39s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  1s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 40s |  The patch does not generate ASF License warnings.  ||  |   | 208m 13s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.regionserver.TestDrainReplicationQueuesForStandBy ||   | hadoop.hbase.master.locking.TestLockManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 845d72db9fa8 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / e705cf1447 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4608 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 28 **
2018-08-14 17:30:10,343 DEBUG  locking.LockProcedure(309): LOCKED pid=15, state=RUNNABLE, hasLock=false; org.apache.hadoop.hbase.master.locking.LockProcedure, namespace=namespace, type=EXCLUSIVE2018-08-14 17:30:10,348 INFO   procedure2.ProcedureExecutor$WorkerThread(1822): ASSERT pid=15java.lang.AssertionError	at org.apache.hadoop.hbase.procedure2.TimeoutExecutorThread.add([file java]:81)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure([file java]:1573)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1319)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900([file java]:77)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1820)2018-08-14 17:30:10,349 WARN   procedure2.ProcedureExecutor$WorkerThread(1836): Worker terminating UNNATURALLY nulljava.lang.AssertionError	at org.apache.hadoop.hbase.procedure2.TimeoutExecutorThread.add([file java]:81)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure([file java]:1573)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1319)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900([file java]:77)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1820)

** Comment 29 **
And for TestDrainReplicationQueuesForStandBy, I think the problem is that, we need to add a backoff when retrying closing a region. For now, if there is a IOException we will add backoff, but if the target server is crashed and restarted, and SCP has not been started yet, the CloseRegionProcedure will fail immediately and we will schedule a new one also immediately, this will consume all the CPUs on the test machine...Let me fix it, and also add a UT to test the backoff.

** Comment 30 **
The TestLockManager seems to be another problem. The code is like this{code}else if (procedure.getState() == ProcedureState.WAITING_TIMEOUT) {          LOG.trace(""Added to timeoutExecutor {}"", procedure);          timeoutExecutor.add(procedure);        }  public void add(Procedure<TEnvironment> procedure) {    assert procedure.getState() == ProcedureState.WAITING_TIMEOUT;    LOG.info(""ADDED {}; timeout={}, timestamp={}"", procedure, procedure.getTimeout(),      procedure.getTimeoutTimestamp());    queue.add(new DelayedProcedure<>(procedure));  }{code}You can see that there is a WAITING_TIMEOUT check before adding, but in the add method the assertion fails...The full log2018-08-14 17:30:10,342 DEBUG  procedure2.ProcedureExecutor(958): Stored pid=15, state=RUNNABLE, hasLock=false; org.apache.hadoop.hbase.master.locking.LockProcedure, namespace=namespace, type=EXCLUSIVE2018-08-14 17:30:10,343 DEBUG  locking.LockProcedure(309): LOCKED pid=15, state=RUNNABLE, hasLock=false; org.apache.hadoop.hbase.master.locking.LockProcedure, namespace=namespace, type=EXCLUSIVE2018-08-14 17:30:10,348 INFO   procedure2.ProcedureExecutor$WorkerThread(1822): ASSERT pid=15java.lang.AssertionError	at org.apache.hadoop.hbase.procedure2.TimeoutExecutorThread.add([file java]:81)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure([file java]:1573)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1319)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900([file java]:77)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1820)2018-08-14 17:30:10,349 WARN   procedure2.ProcedureExecutor$WorkerThread(1836): Worker terminating UNNATURALLY nulljava.lang.AssertionError	at org.apache.hadoop.hbase.procedure2.TimeoutExecutorThread.add([file java]:81)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.execProcedure([file java]:1573)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.executeProcedure([file java]:1319)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor.access$900([file java]:77)	at org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerThread.run([file java]:1820)Not too much useful information.

** Comment 31 **
[Comment excluded]

** Comment 32 **
[Comment excluded]

** Comment 33 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 10s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 26 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 33s |  master passed  || +1 |  compile  |   4m  9s |  master passed  || +1 |  checkstyle  |   2m 25s |  master passed  || +1 |  shadedjars  |   4m  9s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 45s |  master passed  || +1 |  javadoc  |   1m 32s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 49s |  the patch passed  || +1 |  compile  |   4m 19s |  the patch passed  || +1 |  cc  |   4m 19s |  the patch passed  || +1 |  javac  |   4m 19s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 246 unchanged - 73 fixed = 246 total (was 319)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 28s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 30s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 59s |  the patch passed  || +1 |  findbugs  |   6m 36s |  the patch passed  || +1 |  javadoc  |   1m 28s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 32s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 46s |  hbase-procedure in the patch passed.  || -1 |  unit  | 115m 56s |  hbase-server in the patch failed.  || +1 |  unit  |   4m 15s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 35s |  The patch does not generate ASF License warnings.  ||  |   | 185m 26s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestCloseRegionWhileRSCrash |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux a8a77b83a08b 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 49ae8549cf || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4517 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 34 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 12s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 26 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 33s |  master passed  || +1 |  compile  |   4m 10s |  master passed  || +1 |  checkstyle  |   2m 21s |  master passed  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 22s |  master passed  || +1 |  javadoc  |   1m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 34s |  the patch passed  || +1 |  compile  |   4m  5s |  the patch passed  || +1 |  cc  |   4m  5s |  the patch passed  || +1 |  javac  |   4m  5s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 30s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 246 unchanged - 73 fixed = 246 total (was 319)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 34s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 56s |  the patch passed  || +1 |  findbugs  |   7m  3s |  the patch passed  || +1 |  javadoc  |   1m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  5s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 38s |  hbase-procedure in the patch passed.  || -1 |  unit  | 127m  3s |  hbase-server in the patch failed.  || +1 |  unit  |   4m 24s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 39s |  The patch does not generate ASF License warnings.  ||  |   | 196m 22s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionMove |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 99b7d301df52 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build@2/component/dev-support/hbase-personality.sh || git revision | master / 092efb4274 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_171 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4349 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 35 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 20s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 26 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 28s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 10s |  master passed  || +1 |  compile  |   4m 35s |  master passed  || +1 |  checkstyle  |   2m 36s |  master passed  || +1 |  shadedjars  |   4m 30s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 58s |  master passed  || +1 |  javadoc  |   1m 28s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 13s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 40s |  the patch passed  || +1 |  compile  |   4m  9s |  the patch passed  || +1 |  cc  |   4m  9s |  the patch passed  || +1 |  javac  |   4m  9s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 246 unchanged - 73 fixed = 246 total (was 319)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 16s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 46s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 56s |  the patch passed  || +1 |  findbugs  |   6m 37s |  the patch passed  || +1 |  javadoc  |   1m 27s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  7s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 42s |  hbase-procedure in the patch passed.  || -1 |  unit  | 176m 10s |  hbase-server in the patch failed.  || -1 |  unit  |  13m 50s |  hbase-rsgroup in the patch failed.  || +1 |  asflicense  |   1m 38s |  The patch does not generate ASF License warnings.  ||  |   | 256m  3s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncRegionAdminApi ||   | hadoop.hbase.rsgroup.TestRSGroups |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux bfa0400d448f 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 092efb4274 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4552 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 36 **
[Comment excluded]

** Comment 37 **
Anyway let me try to fix the failing UTs first...

** Comment 38 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 26 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 33s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 51s |  master passed  || +1 |  compile  |   4m 17s |  master passed  || +1 |  checkstyle  |   2m 42s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 17s |  master passed  || +1 |  javadoc  |   1m 34s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 48s |  the patch passed  || +1 |  compile  |   4m 26s |  the patch passed  || +1 |  cc  |   4m 26s |  the patch passed  || +1 |  javac  |   4m 26s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 246 unchanged - 73 fixed = 246 total (was 319)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 11s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   7m 37s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 58s |  the patch passed  || +1 |  findbugs  |   6m 45s |  the patch passed  || +1 |  javadoc  |   1m 29s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  1s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 50s |  hbase-procedure in the patch passed.  || -1 |  unit  | 138m  2s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  5s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 40s |  The patch does not generate ASF License warnings.  ||  |   | 208m 18s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestTruncateTableProcedure ||   | hadoop.hbase.master.procedure.TestEnableTableProcedure |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 0a6e3b30cb9f 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / f9793fafb7 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4756 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 39 **
I believe there are still some bugs, maybe around unassign the regions when deleting a table, but it is hard to catch as we can not see the full log in pre commit result. Maybe we could push it to master first and then focus on the flaky dashboard to fix the problems.

** Comment 40 **
[Comment excluded]

** Comment 41 **
It's fine. Let me prepare a new patch to answer your questions on rb.

** Comment 42 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 15s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 28 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 29s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 54s |  master passed  || +1 |  compile  |   4m 10s |  master passed  || +1 |  checkstyle  |   2m 26s |  master passed  || +1 |  shadedjars  |   4m 15s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  5s |  master passed  || +1 |  javadoc  |   1m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 44s |  the patch passed  || +1 |  compile  |   4m 29s |  the patch passed  || +1 |  cc  |   4m 29s |  the patch passed  || +1 |  javac  |   4m 29s |  the patch passed  || +1 |  checkstyle  |   0m 11s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 35s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 15s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 20s |  hbase-server: The patch generated 0 new + 246 unchanged - 75 fixed = 246 total (was 321)  || +1 |  checkstyle  |   0m 14s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 10s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  8s |  the patch passed  || +1 |  findbugs  |   7m 22s |  the patch passed  || +1 |  javadoc  |   1m 43s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 35s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m 10s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 41s |  hbase-procedure in the patch passed.  || +1 |  unit  | 119m 27s |  hbase-server in the patch passed.  || +1 |  unit  |   4m 11s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 37s |  The patch does not generate ASF License warnings.  ||  |   | 191m 24s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 997a500cf108 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / d159b1f8bb || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4797 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 43 **
I went through the patch again. This is a monster effort. The review is mostly praise for the improvement and cleanup now I understand what is going on (adds a note that need a RN that explains in short at least why this patch is needed -- bucketing all to do w/ the region entity inside of one procedure rather than distributed among a few procedures and a new fencing mechanism that rules out strange states... etc). There are some questions. You might want to cut another patch to address... see what you think. Fine if you put off to follow-ons.I'm good w/ this going into Master. We need to figure how to do the rolling-upgrade before backport to branch-2.Nice work .

** Comment 44 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 28 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 23s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 53s |  master passed  || +1 |  compile  |   4m 22s |  master passed  || +1 |  checkstyle  |   2m 28s |  master passed  || +1 |  shadedjars  |   4m 16s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m 31s |  master passed  || +1 |  javadoc  |   1m 35s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 45s |  the patch passed  || +1 |  compile  |   4m 21s |  the patch passed  || +1 |  cc  |   4m 21s |  the patch passed  || +1 |  javac  |   4m 21s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 33s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 18s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 26s |  hbase-server: The patch generated 0 new + 246 unchanged - 75 fixed = 246 total (was 321)  || +1 |  checkstyle  |   0m 15s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 55s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   9m  6s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m 15s |  the patch passed  || +1 |  findbugs  |   8m 28s |  the patch passed  || +1 |  javadoc  |   1m 48s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 42s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m 26s |  hbase-client in the patch passed.  || +1 |  unit  |   3m  2s |  hbase-procedure in the patch passed.  || -1 |  unit  | 144m  7s |  hbase-server in the patch failed.  || +1 |  unit  |   4m  5s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 35s |  The patch does not generate ASF License warnings.  ||  |   | 219m 59s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.assignment.TestCloseRegionWhileRSCrash ||   | hadoop.hbase.replication.TestSyncReplicationRemoveRemoteWAL |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c109206e8311 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7db116ae1b || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5086 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 45 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 11s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 28 new or modified test files.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   3m 34s |  master passed  || +1 |  compile  |   4m 12s |  master passed  || +1 |  checkstyle  |   2m 25s |  master passed  || +1 |  shadedjars  |   4m 14s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 57s |  master passed  || +1 |  javadoc  |   1m 31s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   3m 36s |  the patch passed  || +1 |  compile  |   4m 10s |  the patch passed  || +1 |  cc  |   4m 10s |  the patch passed  || +1 |  javac  |   4m 10s |  the patch passed  || +1 |  checkstyle  |   0m 10s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 246 unchanged - 75 fixed = 246 total (was 321)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 32s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 52s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m 15s |  the patch passed  || +1 |  findbugs  |   7m  8s |  the patch passed  || +1 |  javadoc  |   1m 34s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 33s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 59s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 43s |  hbase-procedure in the patch passed.  || +1 |  unit  | 116m 27s |  hbase-server in the patch passed.  || +1 |  unit  |   4m  6s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 37s |  The patch does not generate ASF License warnings.  ||  |   | 187m  7s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:b002b0b || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux 4ce39615f619 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 7db116ae1b || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 4324 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 46 **
[Comment excluded]

** Comment 47 **
[Comment excluded]

** Comment 48 **
I think the failing TestCreateTableProcedure on flaky dashboard is related. Let me dig.

** Comment 49 **
[Comment excluded]

** Comment 50 **
[Comment excluded]

** Comment 51 **
[Comment excluded]

** Comment 52 **
In HBASE-21093 I increase the dispatch delay, to allow batching more requests to RS at once. In the successful run, I could see repeated logs like this2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000463,1534870587819.bd87e3924e0683edafb3168e3428d569.2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000496,1534870587819.34f74533f57eac827c94933a1a18e6fc.2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000467,1534870587819.ddb587667d4bdf8f9cec44a027fae399.2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000478,1534870587819.a539a4b1d41ed39c78cc39b32a504286.2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000488,1534870587819.60b3264aae27e8d3ab7d380253d13192.2018-08-21 16:56:40,273 INFO   regionserver.RSRpcServices(2012): Open TestMRegions,00000490,1534870587819.7886e4ccdaaeeee7b245179dba32e384.But for the failed run, these logs are separated, each after several seconds. So I think the problem is that, on a slow machine, the default 150ms is too short for batching remote calls to RS, as we only have 1 procedure worker for these tests. In HBASE-21093 I tried to increase it to 2s. Will commit later to see if it helps.Thanks.

** Comment 53 **
[Comment excluded]

** Comment 54 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 14s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 29 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m  3s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 46s |  branch-2 passed  || +1 |  compile  |  16m  0s |  branch-2 passed  || +1 |  checkstyle  |   2m 28s |  branch-2 passed  || +1 |  shadedjars  |   3m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  2s |  branch-2 passed  || +1 |  javadoc  |   1m 33s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 14s |  Maven dependency ordering for patch  || -1 |  mvninstall  |   0m 47s |  root in the patch failed.  || -1 |  compile  |   0m  8s |  hbase-protocol-shaded in the patch failed.  || -1 |  compile  |   0m 20s |  hbase-client in the patch failed.  || -1 |  compile  |   0m 24s |  hbase-server in the patch failed.  || -1 |  compile  |   0m 18s |  hbase-rsgroup in the patch failed.  || -1 |  cc  |   0m  8s |  hbase-protocol-shaded in the patch failed.  || -1 |  cc  |   0m 20s |  hbase-client in the patch failed.  || -1 |  cc  |   0m 24s |  hbase-server in the patch failed.  || -1 |  cc  |   0m 18s |  hbase-rsgroup in the patch failed.  || -1 |  javac  |   0m  8s |  hbase-protocol-shaded in the patch failed.  || -1 |  javac  |   0m 20s |  hbase-client in the patch failed.  || -1 |  javac  |   0m 25s |  hbase-server in the patch failed.  || -1 |  javac  |   0m 18s |  hbase-rsgroup in the patch failed.  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 15s |  hbase-server: The patch generated 0 new + 247 unchanged - 77 fixed = 247 total (was 324)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || -1 |  shadedjars  |   1m  4s |  patch has 42 errors when building our shaded downstream artifacts.  || -1 |  hadoopcheck  |   0m 13s |  The patch causes 42 errors with Hadoop v2.7.4.  || -1 |  hadoopcheck  |   0m 26s |  The patch causes 42 errors with Hadoop v3.0.0.  || -1 |  hbaseprotoc  |   0m  9s |  hbase-protocol-shaded in the patch failed.  || -1 |  hbaseprotoc  |   0m 21s |  hbase-client in the patch failed.  || -1 |  hbaseprotoc  |   0m 29s |  hbase-server in the patch failed.  || -1 |  hbaseprotoc  |   0m 19s |  hbase-rsgroup in the patch failed.  || -1 |  findbugs  |   0m  8s |  hbase-protocol-shaded in the patch failed.  || -1 |  findbugs  |   0m 17s |  hbase-client in the patch failed.  || -1 |  findbugs  |   0m 27s |  hbase-server in the patch failed.  || -1 |  findbugs  |   0m 21s |  hbase-rsgroup in the patch failed.  || -1 |  javadoc  |   0m  9s |  hbase-protocol-shaded in the patch failed.  || -1 |  javadoc  |   0m 32s |  hbase-server generated 15 new + 1 unchanged - 0 fixed = 16 total (was 1)  || -1 |  javadoc  |   0m 17s |  hbase-rsgroup generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0)  ||| || || ||  Other Tests  ||| -1 |  unit  |   0m  8s |  hbase-protocol-shaded in the patch failed.  || -1 |  unit  |   0m 18s |  hbase-client in the patch failed.  || +1 |  unit  |   2m 44s |  hbase-procedure in the patch passed.  || -1 |  unit  |   0m 28s |  hbase-server in the patch failed.  || -1 |  unit  |   0m 21s |  hbase-rsgroup in the patch failed.  || +1 |  asflicense  |   0m 41s |  The patch does not generate ASF License warnings.  ||  |   |  52m 58s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux c63f1826ba17 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 2b7ef2e623 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || mvninstall | [link] || compile | [link] || compile | [link] || compile | [link] || compile | [link] || cc | [link] || cc | [link] || cc | [link] || cc | [link] || javac | [link] || javac | [link] || javac | [link] || javac | [link] || shadedjars | [link] || hadoopcheck | [link] || hadoopcheck | [link] || hbaseprotoc | [link] || hbaseprotoc | [link] || hbaseprotoc | [link] || hbaseprotoc | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || findbugs | [link] || javadoc | [link] || javadoc | [link] || javadoc | [link] || unit | [link] || unit | [link] || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 272 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 55 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 29 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   0m 24s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   2m 44s |  branch-2 passed  || +1 |  compile  |  15m 58s |  branch-2 passed  || +1 |  checkstyle  |   2m 23s |  branch-2 passed  || +1 |  shadedjars  |   3m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   6m  4s |  branch-2 passed  || +1 |  javadoc  |   1m 31s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 46s |  the patch passed  || +1 |  compile  |  16m 23s |  the patch passed  || +1 |  cc  |  16m 23s |  the patch passed  || +1 |  javac  |  16m 23s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 32s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 14s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 247 unchanged - 77 fixed = 247 total (was 324)  || +1 |  checkstyle  |   0m 12s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 48s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   6m  1s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   2m  3s |  the patch passed  || +1 |  findbugs  |   6m 53s |  the patch passed  || +1 |  javadoc  |   1m 31s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 31s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   3m  8s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 44s |  hbase-procedure in the patch passed.  || -1 |  unit  | 240m 59s |  hbase-server in the patch failed.  || -1 |  unit  |  11m 35s |  hbase-rsgroup in the patch failed.  || +1 |  asflicense  |   1m 59s |  The patch does not generate ASF License warnings.  ||  |   | 337m 34s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.TestDLSFSHLog ||   | hadoop.hbase.snapshot.TestMobRestoreFlushSnapshotFromClient ||   | hadoop.hbase.snapshot.TestMobFlushSnapshotFromClient ||   | hadoop.hbase.regionserver.TestSplitTransactionOnCluster ||   | hadoop.hbase.TestRegionMetrics ||   | hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures ||   | hadoop.hbase.master.TestMasterRestartAfterDisablingTable ||   | hadoop.hbase.regionserver.TestRegionReplicasAreDistributed ||   | hadoop.hbase.replication.regionserver.TestRegionReplicaReplicationEndpoint ||   | hadoop.hbase.client.TestSnapshotFromClientWithRegionReplicas ||   | hadoop.hbase.regionserver.TestRegionReplicaFailover ||   | hadoop.hbase.client.TestReplicaWithCluster ||   | hadoop.hbase.regionserver.TestRegionMove ||   | hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk ||   | hadoop.hbase.client.TestAsyncClusterAdminApi ||   | hadoop.hbase.security.access.TestWithDisabledAuthorization ||   | hadoop.hbase.snapshot.TestFlushSnapshotFromClient ||   | hadoop.hbase.client.TestBlockEvictionFromClient ||   | hadoop.hbase.mob.compactions.TestMobCompactor ||   | hadoop.hbase.client.TestAsyncRegionAdminApi2 ||   | hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster ||   | hadoop.hbase.client.replication.TestReplicationAdminWithClusters ||   | hadoop.hbase.client.TestCloneSnapshotFromClient ||   | hadoop.hbase.client.replication.TestReplicationAdminWithTwoDifferentZKClusters ||   | hadoop.hbase.client.TestAsyncTableAdminApi ||   | hadoop.hbase.client.TestAsyncTableBatch ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.replication.regionserver.TestReplicator ||   | hadoop.hbase.master.TestMasterOperationsForRegionReplicas ||   | hadoop.hbase.quotas.TestSpaceQuotas ||   | hadoop.hbase.security.access.TestAccessController ||   | hadoop.hbase.client.TestMobSnapshotCloneIndependence ||   | hadoop.hbase.client.TestMobSnapshotFromClient ||   | hadoop.hbase.TestSequenceIdMonotonicallyIncreasing ||   | hadoop.hbase.client.TestFlushFromClient ||   | hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient ||   | hadoop.hbase.rsgroup.TestRSGroupsWithACL |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux a7aaa7355163 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 2b7ef2e623 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 || unit | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4416 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 56 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 16s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 29 new or modified test files.  ||| || || ||  branch-2 Compile Tests  ||| 0 |  mvndep  |   1m  3s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 53s |  branch-2 passed  || +1 |  compile  |  16m 21s |  branch-2 passed  || +1 |  checkstyle  |   2m 33s |  branch-2 passed  || +1 |  shadedjars  |   3m 51s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   5m 48s |  branch-2 passed  || +1 |  javadoc  |   1m 34s |  branch-2 passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 15s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   2m 37s |  the patch passed  || +1 |  compile  |  15m 56s |  the patch passed  || +1 |  cc  |  15m 56s |  the patch passed  || +1 |  javac  |  15m 56s |  the patch passed  || +1 |  checkstyle  |   0m  9s |  The patch hbase-protocol-shaded passed checkstyle  || +1 |  checkstyle  |   0m 31s |  hbase-client: The patch generated 0 new + 2 unchanged - 84 fixed = 2 total (was 86)  || +1 |  checkstyle  |   0m 13s |  hbase-procedure: The patch generated 0 new + 19 unchanged - 1 fixed = 19 total (was 20)  || +1 |  checkstyle  |   1m 14s |  hbase-server: The patch generated 0 new + 252 unchanged - 77 fixed = 252 total (was 329)  || +1 |  checkstyle  |   0m 11s |  The patch hbase-rsgroup passed checkstyle  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   3m 29s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   5m 41s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  hbaseprotoc  |   1m 52s |  the patch passed  || +1 |  findbugs  |   6m 23s |  the patch passed  || +1 |  javadoc  |   1m 25s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   0m 29s |  hbase-protocol-shaded in the patch passed.  || +1 |  unit  |   2m 56s |  hbase-client in the patch passed.  || +1 |  unit  |   2m 36s |  hbase-procedure in the patch passed.  || +1 |  unit  | 110m  6s |  hbase-server in the patch passed.  || +1 |  unit  |   1m 20s |  hbase-rsgroup in the patch passed.  || +1 |  asflicense  |   1m 34s |  The patch does not generate ASF License warnings.  ||  |   | 196m 52s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:42ca976 || JIRA Issue | HBASE-20881 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  cc  hbaseprotoc  || uname | Linux a27ccc9b8b45 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | branch-2 / 2b7ef2e623 || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.0-RC3 ||  Test Results | [link] || Max. process+thread count | 5196 (vs. ulimit of 10000) || modules | C: hbase-protocol-shaded hbase-client hbase-procedure hbase-server hbase-rsgroup U: . || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 57 **
[Comment excluded]

** Comment 58 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23078,https://issues.apache.org/jira/browse/HBASE-23078,https://github.com/apache/hbase/blob/rel/2.2.2/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicasWithRestartScenarios.java,BaseLoadBalancer should consider region replicas when randomAssignment and roundRobinAssignment,NO,"Copied the comment in HBASE-23035.

 

There are two problems about the LoadBalancer.

 

1. The cluster means the cluster state of the whole cluster. But hasRegionReplica is false, so it only create clusterstate by the regions which need to assign, not the whole cluster...
{code:java}
Cluster cluster = createCluster(servers, regions, false);
List<RegionInfo> unassignedRegions = new ArrayList<>();
roundRobinAssignment(cluster, regions, unassignedRegions,
  servers, assignments);


  protected Cluster createCluster(List<ServerName> servers, Collection<RegionInfo> regions,
      boolean hasRegionReplica) {
    // Get the snapshot of the current assignments for the regions in question, and then create
    // a cluster out of it. Note that we might have replicas already assigned to some servers
    // earlier. So we want to get the snapshot to see those assignments, but this will only contain
    // replicas of the regions that are passed (for performance).
    Map<ServerName, List<RegionInfo>> clusterState = null;
    if (!hasRegionReplica) {
      clusterState = getRegionAssignmentsByServer(regions);
    } else {
      // for the case where we have region replica it is better we get the entire cluster's snapshot
      clusterState = getRegionAssignmentsByServer(null);
    }    for (ServerName server : servers) {
      if (!clusterState.containsKey(server)) {
        clusterState.put(server, EMPTY_REGION_LIST);
      }
    }
    return new Cluster(regions, clusterState, null, this.regionFinder,
        rackManager);
  }
{code}
2. wouldLowerAvailability method only consider the primary regions. The replica region can't assign to same server with primary region. But can be assigned to same server with other replica regions.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Pushed to branch-2.2+. UT failure when cherry-pick to branch-2.1. Need to dig more.

** Comment 7 **
[Comment excluded]
"
HBASE-23651,https://issues.apache.org/jira/browse/HBASE-23651,https://github.com/apache/hbase/blob/rel/2.2.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Region balance throttling can be disabled,NO,"HBASE-17178 Add region balance throttling, but it can not be disabled, sometimes we need no throttle and balance the cluster as fast as possible.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23191,https://issues.apache.org/jira/browse/HBASE-23191,https://github.com/apache/hbase/blob/rel/2.2.3/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,Log spams on Replication,NO,"If no new active writes in WAL edit, then *WALEntryStream#hasNext -> ReaderBase -> ProtobufLogReader#readNext* will reach end of file. It would be a good idea for changing the log level from INFO to DEBUG. 

 
{code:java}
2019-10-18 22:25:03,572 INFO  [RS_REFRESH_PEER-regionserver/apache303:16020-0.replicationSource,p1hdp314.replicationSource.wal-reader.apache303.openstacklocal%2C16020%2C1571383146790,p1hdp314] wal.ProtobufLogReader: Reached the end of file at position 83
{code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- Something went wrong running this stage, please .
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23383,https://issues.apache.org/jira/browse/HBASE-23383,https://github.com/apache/hbase/blob/rel/2.2.4/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MetaFixer.java,[hbck2] `fixHoles` should queue assignment procedures for any regions its fixing,NO,"Per comment on HBASE-23321, let's have hbck2 finish the job by queuing an assign procedure for all holes it's trying to patch.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 6 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24274,https://issues.apache.org/jira/browse/HBASE-24274,https://github.com/apache/hbase/blob/rel/2.2.5/hbase-it/src/test/java/org/apache/hadoop/hbase/RESTApiClusterManager.java,`RESTApiClusterManager` attempts to deserialize response using serialization API,NO,"I'm not sure if this class ever worked, or if Gson changed their API behavior and we never noticed. The fix is quite simple, to use the streaming {{JsonParser}} API instead of the higher-level object API. However, testing this means standing up a web service that mocks Cloudera Manager response bodies.","** Comment 1 **
The current stuff gives me this error20/04/27 23:59:08 WARN policies.Policy: Exception performing action: java.lang.IllegalStateException: Not a JSON Object: ""{ ... }""        at org.apache.hbase.thirdparty.com.google.gson.JsonElement.getAsJsonObject([file java]:91)        at org.apache.hadoop.hbase.RESTApiClusterManager.getJsonNodeFromURIGet([file java]:251)        at org.apache.hadoop.hbase.RESTApiClusterManager.getServiceName([file java]:294)        at org.apache.hadoop.hbase.RESTApiClusterManager.isRunning([file java]:147)        at org.apache.hadoop.hbase.DistributedHBaseCluster.waitForServiceToStop([file java]:257)        at org.apache.hadoop.hbase.DistributedHBaseCluster.waitForMasterToStop([file java]:306)        at org.apache.hadoop.hbase.chaos.actions.Action.killMaster([file java]:176)        at org.apache.hadoop.hbase.chaos.actions.RestartActionBaseAction.restartMaster([file java]:53)        at org.apache.hadoop.hbase.chaos.actions.RestartActiveMasterAction.perform([file java]:39)        at org.apache.hadoop.hbase.chaos.policies.PeriodicRandomActionPolicy.runOneIteration([file java]:59)        at org.apache.hadoop.hbase.chaos.policies.PeriodicPolicy.run([file java]:41)        at java.base/java.lang.Thread.run([file java]:834)

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23047,https://issues.apache.org/jira/browse/HBASE-23047,https://github.com/apache/hbase/blob/rel/2.2.5/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/ChecksumUtil.java,"ChecksumUtil.validateChecksum logs an INFO message inside a ""if(LOG.isTraceEnabled())"" block.",YES,"Noticed this while analysing another potential checksum issue. Despite doing a check for TRACE level, we log an INFO message inside the if block:
{noformat}
if (LOG.isTraceEnabled()) {
      LOG.info(""dataLength="" + buf.capacity() + "", sizeWithHeader="" + onDiskDataSizeWithHeader
          + "", checksumType="" + ctype.getName() + "", file="" + pathName + "", offset="" + offset
          + "", headerSize="" + hdrSize + "", bytesPerChecksum="" + bytesPerChecksum);
    }
{noformat}

Uploading a patch that logs a TRACE message and switch to parameterising logging. Since there's no extra computation on the param passing, we shouldn't need the extra if either.

","** Comment 1 **
[Comment excluded]

** Comment 2 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   6m 57s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   9m 53s |  master passed  || +1 |  compile  |   0m 57s |  master passed  || +1 |  checkstyle  |   1m 29s |  master passed  || +1 |  shadedjars  |   5m 31s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 31s |  master passed  || 0 |  spotbugs  |   3m 56s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   3m 53s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 49s |  the patch passed  || +1 |  compile  |   0m 51s |  the patch passed  || +1 |  javac  |   0m 51s |  the patch passed  || +1 |  checkstyle  |   1m 10s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 37s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m  3s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   0m 49s |  the patch passed  || +1 |  findbugs  |   4m 48s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 306m 58s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 24s |  The patch does not generate ASF License warnings.  ||  |   | 378m  0s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.master.procedure.TestSCPWithReplicas ||   | hadoop.hbase.replication.TestMasterReplication ||   | hadoop.hbase.namespace.TestNamespaceAuditor ||   | hadoop.hbase.util.TestFromClientSide3WoUnsafe ||   | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.replication.TestReplicationStatusSourceStartedTargetStoppedWithRecovery ||   | hadoop.hbase.tool.TestSecureBulkLoadHFiles ||   | hadoop.hbase.client.TestSnapshotTemporaryDirectoryWithRegionReplicas ||   | hadoop.hbase.replication.TestReplicationSmallTestsSync ||   | hadoop.hbase.tool.TestBulkLoadHFiles |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.2 Server=19.03.2 base: [link] || JIRA Issue | HBASE-23047 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux 5d83a0e66bb8 4.4.0-137-generic #163-Ubuntu SMP Mon Sep 24 13:14:43 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / 25bcc91dab || Default Java | 1.8.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5154 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   3m 37s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  dupname  |   0m  0s |  No case conflicting files found.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   5m 53s |  master passed  || +1 |  compile  |   1m  1s |  master passed  || +1 |  checkstyle  |   1m 27s |  master passed  || +1 |  shadedjars  |   7m  0s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 37s |  master passed  || 0 |  spotbugs  |   4m 39s |  Used deprecated FindBugs config; considering switching to SpotBugs.  || +1 |  findbugs  |   4m 36s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   5m 39s |  the patch passed  || +1 |  compile  |   0m 59s |  the patch passed  || +1 |  javac  |   0m 59s |  the patch passed  || +1 |  checkstyle  |   1m 27s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   5m 12s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  17m  5s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || +1 |  javadoc  |   0m 33s |  the patch passed  || +1 |  findbugs  |   4m 28s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 243m 41s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 30s |  The patch does not generate ASF License warnings.  ||  |   | 309m 55s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=19.03.2 Server=19.03.2 base: [link] || JIRA Issue | HBASE-23047 || JIRA Patch URL | [link] || Optional Tests | dupname asflicense javac javadoc unit spotbugs findbugs shadedjars hadoopcheck hbaseanti checkstyle compile || uname | Linux 722ab51c79b3 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / 08b82c5c8c || Default Java | 1.8.0_181 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4950 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || versions | git=2.11.0 maven=2018-06-17T18:33:14Z) findbugs=3.1.11 || Powered by | Apache Yetus 0.11.0 [link] |This message was automatically generated.

** Comment 6 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24138,https://issues.apache.org/jira/browse/HBASE-24138,https://github.com/apache/hbase/blob/rel/2.2.5/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,Ensure StochasticLoadBalancer can log details of decision to not run balancer,YES,"Ran into a customer case where the StochasticLoadBalancer was consistently deciding not to balance when bringing new region servers on line. Even setting the class to TRACE logging would only log a summary statement like:

{code}
2020-04-03 00:29:55,133 TRACE org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer: Skipping load balancing because balanced cluster; total cost is 25.24853189705185, sum multiplier is 602.0 min cost which need balance is 0.05
{code}

Without any details about what went into that decision it's really hard to figure out what we need to tune to get the behavior we want.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-1
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk7 checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24524,https://issues.apache.org/jira/browse/HBASE-24524,https://github.com/apache/hbase/blob/rel/2.2.6/hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/SyncTable.java,SyncTable logging improvements,YES,"While troubleshooting mismatches in replication deployment, SyncTable logging can provide some insights on what is diverging between two clusters. One caveat, though, is that it logs diverging row key as hexdecimal values, which is not so useful for operators trying to figure out which rows are mismatching, ideally, this info should be human readable, so that operators could have the exact value they could use for querying the tables with other tools, such as hbase shell.

Another issue is that while rows mismatches are logged as info, cell values mismatches are only logged as debug. In general, any of the mismatches would already be quite verbose, so ideally both should be logged in debug level.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25483,https://issues.apache.org/jira/browse/HBASE-25483,https://github.com/apache/hbase/blob/rel/2.2.7/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java,set the loadMeta log level to debug.,YES,"https://github.com/apache/hbase/blob/2444d268901644d90def3fca39505627ff956b40/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java#L167
test 100w Regions, the log level is info, it takes more than 250 seconds to load metadata. The log is debug. It takes more than 100 seconds to load metadata.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25556,https://issues.apache.org/jira/browse/HBASE-25556,https://github.com/apache/hbase/blob/rel/2.2.7/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,"Frequent replication ""Encountered a malformed edit"" warnings",YES,"A sequence of two log lines are frequently printed at WARN level when replication is active. Can be several times per minute per regionserver when taking writes with replication active. These can appear after a WAL roll or after the log archiver moves a WAL file.  

Is this an off-by one error? (Will have to look at the code.)

If this is expected and harmless, WARN level logging is the wrong thing to do, it will trigger operator concern.

The first:
{noformat}
2021-02-05 16:42:27,269 WARN  [RS_REFRESH_PEER-regionserver/HOST:8120-0.replicationSource,1.replicationSource.wal-reader.HOST%2C8120%2C1612570567906,1]
wal.ProtobufLogReader: Encountered a malformed edit, seeking back to last good position in file, from 134220988 to 134220987
java.io.EOFException: Partial PB while reading WAL, probably an unexpected EOF, ignoring. current offset=134220988
	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext(ProtobufLogReader.java:370)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:97)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:85)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:263)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:176)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:220)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:137)

{noformat}

The second:
{noformat}
2021-02-05 16:42:27,271 WARN  [RS_REFRESH_PEER-regionserver/HOST:8120-0.replicationSource,1.replicationSource.wal-reader.HOST%2C8120%2C1612570567906,1] 
wal.ProtobufLogReader: Encountered a malformed edit, seeking back to last good position in file, from 134220988 to 134220987
java.io.EOFException: Partial PB while reading WAL, probably an unexpected EOF, ignoring. current offset=134220988
	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext(ProtobufLogReader.java:370)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:97)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:85)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:263)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:184)
	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:220)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:137)
{noformat}","** Comment 1 **
Came back to this today. I think this behavior is expected given the stacktrace is a call arc through _tryAdvanceEntry_:{code}readWALEntries() {    hasNext() {*        tryAdvanceEntry() {*             readNextEntryAndRecordReaderPosition() {                 next() {                     readNext(); <--- exception thrown here                 }             }         }     }}{code}A tryXXX method is expected to fail when conditions are not ready by convention, which is the case here too, so we should be suppressing this WARN. 

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 4 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24361,https://issues.apache.org/jira/browse/HBASE-24361,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-it/src/test/java/org/apache/hadoop/hbase/RESTApiClusterManager.java,Make `RESTApiClusterManager` more resilient,NO,"The Cloudera Manager API client in {{RESTApiClusterManager}} appears to assume that API calls sent to CM for process commands block on command completion. However, these commands are ""asynchronous,"" queuing work in the background for execution. Update the client to track command submission and block on completion of that commandId. This allows this {{ClusterManager}} to conform to the expectations of the {{Actions}} that invoke it.","** Comment 1 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 3. . (note that this means we didn't check the Hadoop 3 shaded client)

"
HBASE-23687,https://issues.apache.org/jira/browse/HBASE-23687,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java,DEBUG logging cleanup,YES,"Minor cleanup of annoying loggings. For example, over an hour, we logged this 200k times:

{code}2020-01-14 11:06:00,287 DEBUG org.apache.hadoop.hbase.master.cleaner.LogCleaner: Exiting
{code}

There is no corresponding 'Starting'.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24588,https://issues.apache.org/jira/browse/HBASE-24588,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Normalizer plan execution is not consistent between plan types,NO,"I left a comment on a merged [commit|https://github.com/apache/hbase/commit/5d0e0fc5fd09bddb2d766d1e24e28e472961f454#r39987289] where a little discussion has blossomed. Right now the normalizer produces two types of plans: ""split"" or ""merge"". The master receives the list of plans and executes them in a simple loop. The way it does the actual execution is delegated off to the plan implementation.

The bug I noticed is that the two implementations are subtly different. Both use async APIs to submit procedures, but ""split"" blocks on completion while ""merge"" does not. Furthermore, because ""split"" blocks, it's able to capture any exception that's thrown, while ""merge"" cannot.

These implementations should be made consistent. My thinking at the moment is this {{execute}} method should instead be named {{submit}}, creating and returning the {{Future}} that represents whatever work it submitted, and the calling context should handle the resolution of those futures in a single place.","** Comment 1 **
{quote}the calling context should handle the resolution of those futures in a single place.{quote}HMaster should call future.get() for all tables after plans are submitted for all tables. That might be better right? And if polling throws any Exception, we log it only at one place: HMaster(caller) and we maintain a count say normalizationPlanFailureCount and if it is helpful, maybe expose it in metric? Thought?

** Comment 2 **
[Comment excluded]

** Comment 3 **
Thank you  for the review.I believe we can have this in 2.3, but I am fine with 2.3.1 also, you have already taken so many such last moment Jiras and I don't want to give more headache :)So let me keep this till branch-2 for now?

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-23969,https://issues.apache.org/jira/browse/HBASE-23969,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java,Meta browser should show all `info` columns,YES,"The Meta table browser lists region states. There are other {{info}} columns in the table, which should be displayed. Looking through {{HConstants}}, it seems we need to add the following:
 * {{server}}
 * {{sn}}
 * {{splitA}}
 * {{splitB}}
 * {{merge}}
 * {{mergeA}}
 * {{mergeB}}

Are there others?","** Comment 1 **
[Comment excluded]

** Comment 2 **
 if you've like to take this on, that would be great! I think a wide-scrolling page is fine as a first-pass; I'm not a fan of soft-wrapping tabular data like this. Maybe something fancy that let the user select the columns they want, with a default set... that could be really nice.For context, the use-case that brought this up was browsing meta on a cluster that had inconsistencies reported by HBCK2. There's a handful of those region transition state columns that would be nice to see.

** Comment 3 **
Thanks . Yes the wide-scrolling page seems good for this, and we can add the columns selector as a follow-up effort.For the ""server"" column, I see there is an existing ""ServerName"" column showing in Meta browser. Is that the same information already covered as ""server""?

** Comment 4 **
bq. Yes the wide-scrolling page seems good for this, and we can add the columns selector as a follow-up effort.(y)bq. For the ""server"" column, I see there is an existing ""ServerName"" column showing in Meta browser. Is that the same information already covered as ""server""?This requires some code-reading. {{o.a.h.h.MetaTableAccessor}}, in the {{hbase-client}} module, is the authority of reading meta's schema. It's supported by constants defined in {{HConstants}}. {{MetaTableAccessor}} has a lot going on because (1) region replicas were added in a backward-compatible way, and (2) there are vestiges of code retained for reading schema from older versions of HBase.From :bq. The serverName column qualifier. Its the server where the region is transitioning on, while column server is the server where the region is opened on. They are the same when the region is in state OPEN.

** Comment 5 **
Thanks !I brows the code quickly and think the ""ServerName"" information in table.jsp now is actually  the ""info:server"" column in meta table. We here need to include the ""info:sn"" information. When we show it in table.jsp, can we call it ""TransitioningOnServerName"", or is there a better name? Alternatively, we can simply rename the existing ""ServerName"" column in table.jsp as ""server"" and this new column as ""sn"". This seems not very descriptive though.For the merge/mergeA/mergeB, I see we now support merging multiple regions, and the number can be more than 2. The old ""mergeA"" and ""mergeB"" are now deprecated in favor of ""merge0000"" and ""merge0001. So I'm thinking this meta browser shows the ""merge*"" values as a single string in the ""MergeRegionName"" column of the table in table.jsp. Is this a good idea? This way we don't need dynamic columns in table.jsp. I guess user cares about the parent regions than the column name in ""hbase:meta"" table, be it ""mergeA"" or ""merge0000"".Last, is the sequence number during open required? We can add that as well since it's already in location information.I have a basic patch, and attach the screenshot here. It enables X-scroll and disables the wrap for long text.

** Comment 6 **
bq. I brows the code quickly and think the ""ServerName"" information in table.jsp now is actually using the ""info:server"" column in meta table. We here need to include the ""info:sn"" information...Oh no! I have them backwards then :( I guess we missed that in reviews. How about ""target server name"" or something involving the word ""destination""? It is the target or destination of a current move operation.bq. For the merge/mergeA/mergeB, I see we now support merging multiple regions, and the number can be more than 2...Nice observation. I think the view should support rendering all the column qualifiers that the underlying code knows how to handle. For instance, if this version of HBase can support reading the old meta format column qualifiers and the new, view should be able to render both. Maybe there's a single ""merge targets"" column that has a newline-delimited list of server names? That way the table grows tall with additional merge members, instead of impossibly wide.bq. is the sequence number during open required?I don't know. Do you have any operators around, folk who might be using this to diagnose issues? I'm leaning toward yes, just because it's available and the purpose of the view is to make the content of meta more accessible., , ,  -- any comments here with your operators hats on?

** Comment 7 **
[Comment excluded]

** Comment 8 **
On naming, lets use the names in the base:meta table... the column names? They are not well chosen but this tool is mostly for folks trying to debug. A 'new name' when shown in the UI may surprise.On merge showing all regions, thats good but this is different from how split is done and different from how other columns are treated? Would suggest no interpretation of the base:meta table content.... My worry is the new names will detach us from the raw table content.I think it'd be good to s how all of the meta table content. Helps debugging. Thanks for working on this.

** Comment 9 **
 Good questions on names in table.jsp. I see the existing items in table.jsp are using meaningful names instead of column names in {} table. Specially the current ""ServerName"" in table.jsp is composed of ""info:server"" + ""info:startcode*"" columns in hbase:meta table.{quote}Would suggest no interpretation of the base:meta table content.... {quote}I'm not sure no interpretation makes perfect sense. We can make this new *Target ServerName*  use its name in hbase:meta ""info:sn"". Some concerns are:# Should existing ""ServerName"" use *info:server,info:startcode*? Or we split it into two columns in table.jsp as they are in hbase:meta. Even with that, the column name for startcode could still be *info:startcode* or *info:serverstartcode_<replicaId>*# As I mentioned to , the ""info:merge*"" columns could have more than two, and their names could be *mergeA*/*mergeB* or *merge0000*/*merge0001*. Showing this in table.jsp with a static format is not straightforward to me. If we show raw data in hbase:meta here, we may need all columns ""mergeA/mergeB/merge0000/merge0001/..."" (they are empty most times) in table.jsp. I was assuming the table.jsp viewer cares about the parent regions than the stored column name in hbase:meta, so I merged them together. SplitA/SplitB names and number of columns in hbase:meta are static so we did not merge them.# There might be other hbase:meta columns eventually which have different name across HBase versions. I guess expressing those data without any interpretation is not ideal either.So, for the sake of least ""interpretation"" of the hbase:meta table, my proposal is:# Rename existing *ServerName* to *Server* in table.jsp, which shows the ""info:server""+""info:startcode*"" columns. Keep *Target Server* for column *info:sn* since this is clear and simple.# Still show *info:merge** data together in table.jsp with newline-delimited list. Show *info:splitA* and *info:SplitB* together as well, so they follow the same pattern.# Rename the *Merger ServerName* column in table.jsp *info:merge** which is regex of possible column names in hbase:meta# Name the *SplitA/SplitB* column in table.jsp *info:split** which is regex of column names in hbase:meta# Add  for each column in table head, so it would show the detailed comment what this is about.Thoughts? 

** Comment 10 **
[Comment excluded]

** Comment 11 **
[Comment excluded]

** Comment 12 **
Hi  Yes this would be useful if we can provide that, especially if the table is high (vertically). So users will not go back to the table header to check what this data is about.* Most columns in table.jsp can have static tooltip on data (e.g. ServerName has {{<td title=""info:sn"">...</td>}}).* Composed information like ""Server"" can have {{<td title=""info:server,info:startcode"">...</td>}} as the tooltip. * For ""info:split*"" column, we can add tooltip for each line, so they show as ""info:splitA"" or ""info:splitB"". I'll check how to add tooltip for different lines in the same {{<td/>}}. Honestly I'm far from an HTML expert.* For ""info:merge*"" column in table.jsp, I do not find existing code returning value and the source. I'll add a new method to get this.I'll update the patch and post a screenshot. If I figure the last two items above needs much code change, can I address that in a follow-up item?

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 16 **
[Comment excluded]

** Comment 17 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 18 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 19 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 20 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24474,https://issues.apache.org/jira/browse/HBASE-24474,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java,Rename LocalRegion to MasterRegion,NO,"This is a suggestion by [~ndimiduk] when reviewing the PR for HBASE-24408.

https://github.com/apache/hbase/pull/1753#discussion_r432783115

I think this can make the code less confusing.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Reopened to push minor addendum to fix TestHeapSize failings on branch-2.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24249,https://issues.apache.org/jira/browse/HBASE-24249,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/CreateTableProcedure.java,Move code in FSHDFSUtils to FSUtils and mark related classes as final,NO,"It is a bit strange that a 'util' class can be instantiated.

I think the motivation is to provide multiple recoverFileLease implementation based on different filesystem implementation. But until now, there is still only one implementation for HDFS in HBase, and all the related classes are marked as IA.Private so we do not expect user to extend the class.

Let's just move the code in FSHDFSUtils to FSUtils directly and make FSUtils a true 'util' class.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24478,https://issues.apache.org/jira/browse/HBASE-24478,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler.java,The regionInfo parameter for MasterProcedureScheduler#waitRegions and MasterProcedureScheduler#wakeRegions should be plural ,YES,"MasterProcedureScheduler#waitRegions and MasterProcedureScheduler#wakeRegions deal with a list of regions, so the variable name of region info should be plural","** Comment 1 **
[Comment excluded]

** Comment 2 **
May I recommend RegionsInfo instead of RegionInfos?  

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24574,https://issues.apache.org/jira/browse/HBASE-24574,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Procedure V2 - Distributed WAL Splitting => LOGGING,YES,"The procedure-based distributed WAL splitter uses the old SplitLogManager class. It registers it as a chore even though the chore #run immediately skips out. Meantime we log SLM ran in #0ms frequently. For example...
{code}
...
2020-06-17 17:48:30,567 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:31,567 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:32,570 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:33,567 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:34,569 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:35,569 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
2020-06-17 17:48:36,568 DEBUG [localhost:16000.splitLogManager..Chore.1] hbase.ScheduledChore: SplitLogManager Timeout Monitor execution time: 0 ms.
...
{code}

The new pv2 WAL splitter introduces new procedures that log their class name only w/o detail on log that is being split or the server that is running the split.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24616,https://issues.apache.org/jira/browse/HBASE-24616,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStoreFile.java,Remove BoundedRecoveredHFilesOutputSink  dependency on a TableDescriptor,NO,"BoundedRecoveredHFilesOutputSink wants to read TableDescriptor so it writes the particular hfile format specified by a table's schema. Getting the table schema can be tough at various points of operation especially around startup. HBASE-23739 tried to read from the fs if unable to read TableDescriptor from Master. This approach works generally but fails in standalone mode as in standalone mode we will have given-up our start up attempt BEFORE the request to Master for TableDescriptor times out (the read from fs is never attempted).

The suggested patch here does away w/ reading TableDescriptor and just has BoundedRecoveredHFilesOutputSink write generic hfiles.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-21284,https://issues.apache.org/jira/browse/HBASE-21284,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/throttle/PressureAwareCompactionThroughputController.java,Forward port HBASE-21000 to branch-2,NO,See parent for details.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   5m 25s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 33s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   7m 30s |  master passed  || +1 |  compile  |   1m 10s |  master passed  || +1 |  checkstyle  |   1m 32s |  master passed  || 0 |  refguide  |  16m 21s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 33s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  findbugs  |   3m 25s |  master passed  || +1 |  javadoc  |   0m 47s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 16s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 31s |  the patch passed  || +1 |  compile  |   1m 15s |  the patch passed  || +1 |  javac  |   1m 15s |  the patch passed  || +1 |  checkstyle  |   1m 33s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || 0 |  refguide  |   5m  6s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 20s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 35s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   4m  8s |  the patch passed  || +1 |  javadoc  |   0m 46s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  |   2m 38s |  hbase-common in the patch passed.  || -1 |  unit  | 254m 31s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 45s |  The patch does not generate ASF License warnings.  ||  |   | 330m 28s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestFromClientSideWithCoprocessor ||   | hadoop.hbase.client.TestFromClientSide3 ||   | hadoop.hbase.master.TestSplitWALManager |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce base: [link] || JIRA Issue | HBASE-21284 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  refguide  xml  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux f5fbd849687a 4.4.0-137-generic #163-Ubuntu SMP Mon Sep 24 13:14:43 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / cd61bcc01e || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.11 || refguide | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 4801 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server U: . || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 48s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || -0 |  test4tests  |   0m  0s |  The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch.  ||| || || ||  master Compile Tests  ||| 0 |  mvndep  |   0m 17s |  Maven dependency ordering for branch  || +1 |  mvninstall  |   4m 20s |  master passed  || +1 |  compile  |   2m 52s |  master passed  || +1 |  checkstyle  |   2m 29s |  master passed  || 0 |  refguide  |   8m  5s |  branch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 40s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   3m 27s |  master passed  || +1 |  javadoc  |   3m 42s |  master passed  ||| || || ||  Patch Compile Tests  ||| 0 |  mvndep  |   0m 12s |  Maven dependency ordering for patch  || +1 |  mvninstall  |   4m 20s |  the patch passed  || +1 |  compile  |   2m 51s |  the patch passed  || +1 |  javac  |   2m 51s |  the patch passed  || +1 |  checkstyle  |   2m 24s |  the patch passed  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  xml  |   0m  1s |  The patch has no ill-formed XML file.  || 0 |  refguide  |   7m 55s |  patch has no errors when building the reference guide. See footer for rendered docs, which you should manually inspect.  || +1 |  shadedjars  |   4m 39s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  13m  5s |  Patch does not cause any errors with Hadoop 2.8.5 2.9.2 or 3.1.2.  || 0 |  findbugs  |   0m  0s |  Skipped patched modules with no Java source: .  || +1 |  findbugs  |   4m 15s |  the patch passed  || +1 |  javadoc  |   3m 24s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 273m 38s |  root in the patch failed.  || +1 |  asflicense  |   1m 32s |  The patch does not generate ASF License warnings.  ||  |   | 354m 13s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.replication.TestVerifyReplication ||   | hadoop.hbase.snapshot.TestExportSnapshotNoCluster |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce base: [link] || JIRA Issue | HBASE-21284 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  refguide  xml  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux da90c7e3a442 4.4.0-143-generic #169~14.04.2-Ubuntu SMP Wed Feb 13 15:00:41 UTC 2019 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | master / ab4453158a || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || refguide | [link] || findbugs | v3.1.11 || refguide | [link] || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5244 (vs. ulimit of 10000) || modules | C: hbase-common hbase-server . U: . || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 11 **
Failing tests can pass locally and seem unrelated. Specially, I have filed  for tracking the second test failure.If looks good, ,  or  to commit? Thanks!

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
[Comment excluded]

** Comment 15 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 16 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
[Comment excluded]

** Comment 18 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24120,https://issues.apache.org/jira/browse/HBASE-24120,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,Flakey Test: TestReplicationAdminWithClusters timeout ,NO,"{code:java}
2020-04-05 23:36:53,092 ERROR [RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.shipperasf905.gq1.ygridcore.net%2C42849%2C1586129728118,2] regionserver.ReplicationSource(397): Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.shipperasf905.gq1.ygridcore.net%2C42849%2C1586129728118,2 currentPath=hdfs://localhost:34203/user/jenkins/test-data/03854f9d-2780-eeaa-9645-c341240b62bf/WALs/asf905.gq1.ygridcore.net,42849,1586129728118/asf905.gq1.ygridcore.net%2C42849%2C1586129728118.1586129730509
java.lang.RuntimeException: Thread is interrupted, the replication source may be terminated
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.interruptOrAbortWhenFail(ReplicationSourceManager.java:477)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.logPositionAndCleanOldLogs(ReplicationSourceManager.java:519)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.updateLogPosition(ReplicationSourceShipper.java:264)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.shipEdits(ReplicationSourceShipper.java:160)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.run(ReplicationSourceShipper.java:118) {code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
Root cause analysis:When remove peer happens, it may interrupt ReplicationSourceShipper. interruptOrAbortWhenFail will throw out a RunTimeException which is not handled and will abort Region Server. Once Region Server is aborted, the test will time out.2020-04-03 04:20:47,336 ERROR  regionserver.ReplicationSource(397): Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.shipperasf905.gq1.ygridcore.net%2C38191%2C1585887556682,2 currentPath=hdfs://localhost:39273/user/jenkins/test-data/2c4f98d9-b93f-6b0f-5e2d-7587de42e316/WALs/asf905.gq1.ygridcore.net,38191,1585887556682/asf905.gq1.ygridcore.net%2C38191%2C1585887556682.1585887560249java.lang.RuntimeException: Thread is interrupted, the replication source may be terminated        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.interruptOrAbortWhenFail([file java]:477)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.logPositionAndCleanOldLogs([file java]:519)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.updateLogPosition([file java]:264)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.shipEdits([file java]:160)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.run([file java]:118)2020-04-03 04:20:47,340 ERROR  helpers.MarkerIgnoringBase(159): ***** ABORTING region server asf905.gq1.ygridcore.net,38191,1585887556682: Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.shipperasf905.gq1.ygridcore.net%2C38191%2C1585887556682,2 *****java.lang.RuntimeException: Thread is interrupted, the replication source may be terminated        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.interruptOrAbortWhenFail([file java]:477)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.logPositionAndCleanOldLogs([file java]:519)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.updateLogPosition([file java]:264)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.shipEdits([file java]:160)        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceShipper.run([file java]:118)2020-04-03 04:20:47,341 ERROR  helpers.MarkerIgnoringBase(143): RegionServer abort: loaded coprocessors are: 2020-04-03 04:20:47,349 INFO   regionserver.HRegionServer(2472): Dump of metrics as JSON on abort: { {code}If I read the Jira HBASE-20561 correctly, it tries to avoid abort. The fix is not to throw out RunTimeException, instead, it just needs to log and let it be handled nicely by the main run loop (stop the thread).

** Comment 3 **
Add a new type Exception, which caused the Region Server Abort, add here as a reminder to handle this exception.regionserver.ReplicationSourceWALReader(291): Filtered entry for replication: test/7ccb7437b6e48dd03f6347b5a2e06964/27=2020-04-07 03:30:03,676 DEBUG  regionserver.ReplicationSourceWALReader(171): Edit null or empty for entry test/7ccb7437b6e48dd03f6347b5a2e06964/27= 2020-04-07 03:30:03,677 WARN   impl.BlockReaderFactory(768): I/O error constructing remote block reader.java.nio.channels.ClosedByInterruptException	at java.nio.channels.spi.AbstractInterruptibleChannel.end([file java]:202)	at sun.nio.ch.SocketChannelImpl.connect([file java]:659)	at org.apache.hadoop.net.SocketIOWithTimeout.connect([file java]:192)	at org.apache.hadoop.net.NetUtils.connect([file java]:531)	at org.apache.hadoop.hdfs.DFSClient.newConnectedPeer([file java]:2881)	at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.nextTcpPeer([file java]:825)	at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.getRemoteBlockReaderFromTcp([file java]:750)	at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.build([file java]:387)	at org.apache.hadoop.hdfs.DFSInputStream.getBlockReader([file java]:717)	at org.apache.hadoop.hdfs.DFSInputStream.blockSeekTo([file java]:665)	at org.apache.hadoop.hdfs.DFSInputStream.seekToBlockSource([file java]:1697)	at org.apache.hadoop.hdfs.DFSInputStream.readBuffer([file java]:915)	at org.apache.hadoop.hdfs.DFSInputStream.readWithStrategy([file java]:950)	at org.apache.hadoop.hdfs.DFSInputStream.read([file java]:996)	at java.io.DataInputStream.read([file java]:149)	at java.io.FilterInputStream.read([file java]:133)	at java.io.PushbackInputStream.read([file java]:186)	at org.apache.hadoop.io.IOUtils.readFully([file java]:209)	at org.apache.hadoop.hbase.KeyValueUtil.createKeyValueFromInputStream([file java]:716)	at org.apache.hadoop.hbase.codec.KeyValueCodecWithTags$KeyValueDecoder.parseCell([file java]:81)	at org.apache.hadoop.hbase.codec.BaseDecoder.advance([file java]:68)	at org.apache.hadoop.hbase.wal.WALEdit.readFromCells([file java]:276)	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext([file java]:382)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:98)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:86)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition([file java]:263)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry([file java]:176)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext([file java]:101)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries([file java]:221)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run([file java]:138)2020-04-07 03:30:03,678 ERROR  regionserver.ReplicationSource(397): Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.wal-reader.asf905.gq1.ygridcore.net%2C41391%2C1586230117579,2 currentPath=hdfs://localhost:37359/user/jenkins/test-data/260e1f0f-a3fd-6192-b1d7-6568614aef58/WALs/asf905.gq1.ygridcore.net,41391,1586230117579/asf905.gq1.ygridcore.net%2C41391%2C1586230117579.1586230122806java.lang.NullPointerException	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.extractHiddenEof([file java]:449)	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext([file java]:396)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:98)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:86)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition([file java]:263)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry([file java]:176)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext([file java]:101)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries([file java]:221)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run([file java]:138)2020-04-07 03:30:03,683 ERROR  helpers.MarkerIgnoringBase(159): ***** ABORTING region server asf905.gq1.ygridcore.net,41391,1586230117579: Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.wal-reader.asf905.gq1.ygridcore.net%2C41391%2C1586230117579,2 *****java.lang.NullPointerException	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.extractHiddenEof([file java]:449)	at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext([file java]:396)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:98)	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next([file java]:86)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition([file java]:263)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry([file java]:176)	at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext([file java]:101)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries([file java]:221)	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run([file java]:138)2020-04-07 03:30:03,683 ERROR  helpers.MarkerIgnoringBase(143): RegionServer abort: loaded coprocessors are: 2020-04-07 03:30:03,690 INFO   regionserver.HRegionServer(2472): Dump of metrics as JSON on abort: { {code}

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24359,https://issues.apache.org/jira/browse/HBASE-24359,https://github.com/apache/hbase/blob/rel/2.3.0/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java,Optionally ignore edits for deleted CFs for replication.,NO,"Replication will be stuck after we delete CFs from both the source and the sink, if the source still has outstanding edits that now it could not get rid of. Now all replication is backed up behind these unreplicatable edits.
We should have an option to ignore edits for deleted CFs at the source.

This issue is similar to [HBASE-12091|https://issues.apache.org/jira/browse/HBASE-12091]","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 9 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 10 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25562,https://issues.apache.org/jira/browse/HBASE-25562,https://github.com/apache/hbase/blob/rel/2.3.5/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader.java,ReplicationSourceWALReader log and handle exception immediately without retrying,YES,"In [this piece of code about retrying in ReplicationSourceWALReader#run|https://github.com/apache/hbase/blob/0353909bc268e3ff3def098963d021e973f1f153/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader.java#L151], sleep time increases with the number of retries, if an exception happens that cannot be recovered by itself, error logs will appear after 12 hours (300 retries by default).","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25973,https://issues.apache.org/jira/browse/HBASE-25973,https://github.com/apache/hbase/blob/rel/2.3.6/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,Balancer should explain progress in a better way in log,NO,"In the log, balancer logs at info level at the beginning of run:

 {code}
balancer.StochasticLoadBalancer: start StochasticLoadBalancer.balancer, initCost=277.3479243125063, functionCost=RegionCountSkewCostFunction : (500.0, 0.3749771215224234); ServerLocalityCostFunction : (25.0, 0.5807483226644186); RackLocalityCostFunction : (15.0, 0.0); TableSkewCostFunction : (1000.0, 0.0019704142954972883); StoreFileCostFunction : (200.0, 0.3668512059459341);  computedMaxSteps: 42270438200
{code}
the cost is reported without context, it is hard for operator to understand how unbalanced the cluster is for balancer and how much progress we are making.

For a large cluster, the calculation can take a long time, we also need to let operator understand that it will take up to the max time to complete the calculation. 

At the end of computation:
{code}
balancer.StochasticLoadBalancer: Finished computing new load balance plan. Computation took PT40M0.006S to try 1036409 different iterations. Found a solution that moves 161926 regions; Going from a computed cost of 118.75715593924485 to a new cost of 1.5509126920967042
{code}
The time to compute the plan is also printed in a  format that is not human readable. we also need to let operator understand that balancer is just submitting the plan and it be up to execution to complete the move.  

 ","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2.3
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
[Comment excluded]

** Comment 7 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
-- Something went wrong with this stage, .


** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 10 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25642,https://issues.apache.org/jira/browse/HBASE-25642,https://github.com/apache/hbase/blob/rel/2.3.7/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheUtil.java,Fix or stop warning about already cached block,YES,"Our logs have as a fairly common occurrence:
{noformat}
2021-03-05 22:24:31,034 WARN  [StoreFileOpener-foo-1] hfile.BlockCacheUtil: Caching an already cached block: blah.bub. This is harmless and can happen in rare cases (see HBASE-8547)
{noformat}

If this is really harmless, why do we log? If it's not actually harmless, let's take another pass at fixing this situation.","** Comment 1 **
Just change it to debug?

** Comment 2 **
bq. Just change it to debug?Ok

** Comment 3 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-26189,https://issues.apache.org/jira/browse/HBASE-26189,https://github.com/apache/hbase/blob/rel/2.3.7/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionProgress.java,Reduce log level of CompactionProgress notice to DEBUG,YES,Reduce log level of CompactionProgress notice to DEBUG pending resolution of underlying issue. Avoids noise in the logs at WARN level which can be an issue for operations. Those warnings are not currently actionable.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25002,https://issues.apache.org/jira/browse/HBASE-25002,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-http/src/main/java/org/apache/hadoop/hbase/util/JSONBean.java,Create simple pattern matching query for retrieving metrics matching the pattern,NO,"Currently we allow querying a metric with a specific metric name. But generally say under the MBean sub=Tables under a server we might have 'n' number of tables and we might be interested in a specific metric across all tables. 
So in such cases giving a simple pattern based query will help so that we can retrieve all metrics that follow that pattern.
The other side effect is that we can also reduce the size of the json we pull from the server to the querying client. Which are generally smaller scripts which might not be able to process the big sized response JSON.

Thanks [~anoopsamjohn] for the suggestion. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)

"
HBASE-22422,https://issues.apache.org/jira/browse/HBASE-22422,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheUtil.java,Retain an ByteBuff with refCnt=0 when getBlock from LRUCache,NO,"After runing YCSB scan/get benchmark in our XiaoMi cluster,  we found the get QPS dropped from  25000/s to hunderds per second in a cluster with five nodes.  

After enable the debug log at YCSB client side,  I found the following stacktrace , see https://issues.apache.org/jira/secure/attachment/12968745/image-2019-05-15-12-00-03-641.png. 

After looking into the stractrace, I can ensure that the zero refCnt block is an intermedia index block, see [2] http://hbase.apache.org/images/hfilev2.png

Need a patch to fix this. 


","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Another risk is here, LruBlockCache#evictBlock,  we should move the previous.getBuffer().release() to the last line before return because once the release decrease the refCnt to zero then nobody can access the buf (such as victimHandler).{code}  protected long evictBlock(LruCachedBlock block, boolean evictedByEvictionProcess) {    LruCachedBlock previous = map.remove(block.getCacheKey());    if (previous == null) {      return 0;    }    // Decrease the block's reference count, and if refCount is 0, then it'll auto-deallocate.    previous.getBuffer().release();    updateSizeMetrics(block, true);    long val = elements.decrementAndGet();    if (LOG.isTraceEnabled()) {      long size = map.size();      assertCounterSanity(size, val);    }    if (block.getBuffer().getBlockType().isData()) {       dataBlockElements.decrement();    }    if (evictedByEvictionProcess) {      // When the eviction of the block happened because of invalidation of HFiles, no need to      // update the stats counter.      stats.evicted(block.getCachedTime(), block.getCacheKey().isPrimary());      if (victimHandler != null) {        victimHandler.cacheBlock(block.getCacheKey(), block.getBuffer());      }    }    return block.heapSize();  }{code}

** Comment 4 **
Here we should consider the unpacked block release if any prepareDecoding failure happen:{code}  HFileBlock unpack(HFileContext fileContext, FSReader reader) throws IOException {    if (!fileContext.isCompressedOrEncrypted()) {      // TODO: cannot use our own fileContext here because HFileBlock(ByteBuffer, boolean),      // which is used for block serialization to L2 cache, does not preserve encoding and      // encryption details.      return this;    }    HFileBlock unpacked = new HFileBlock(this);    unpacked.allocateBuffer(); // allocates space for the decompressed block    HFileBlockDecodingContext ctx = blockType == BlockType.ENCODED_DATA        ? reader.getBlockDecodingContext() : reader.getDefaultBlockDecodingContext();    ByteBuff dup = this.buf.duplicate();    dup.position(this.headerSize());    dup = dup.slice();    ctx.prepareDecoding(unpacked.getOnDiskSizeWithoutHeader(),      unpacked.getUncompressedSizeWithoutHeader(), unpacked.getBufferWithoutHeader(true), dup);    return unpacked;  }{code}

** Comment 5 **
[Comment excluded]

** Comment 6 **
I've tried to check all the code and made some patch to ensure the bug, but seems it did not work.  So I write a simple patch to dump all the release caller's stack trace if any IllegalReferenceCountException happen when retain. Let see what it will say. 

** Comment 7 **
After applied the debug.patch, seems it's easy to full gc and restart to the RS now because of the high Get  throughput. 

** Comment 8 **
Update the patch with debug2.patch, which only LOG the non-data HFileblock's release caller. 

** Comment 9 **
I've applied the debug3.patch into my test cluster, still waiting for the IllegalReferenceCountException...

** Comment 10 **
[Comment excluded]

** Comment 11 **
The bug never happened since applied debug3.patch,   it's some frustrating.  Discussed with ,  it's possible that the stack track catcher make the release a bit slow and the concurrent bug disappear. {code}+  @Override                                                                   +  public boolean release() {                                                  +    callerSet.add(debugString(Thread.currentThread().getStackTrace(), this.refCnt()));+    return super.release();                                                   +  }{code}So I plan to pass the caller's  string message as an argument into release, then it won't cost that much time as the strace trace do.... at the same time, will continue to check those code paths. 

** Comment 12 **
Attached the debug4 as said above, let's see what happen in my pressure cluster.

** Comment 13 **
After running some hours,  the bug reproduced in my pressure cluster,  has the following log: {code}2019-05-24,03:43:10,796 INFO org.apache.hadoop.hbase.nio.RefCnt: ===> Start to dump callerSet for #6417839872019-05-24,03:43:10,796 INFO org.apache.hadoop.hbase.nio.RefCnt:   --> #641783987 -> caller: HFileScannerImpl#returnBlocks: return curBlock, refCnt before release is: 22019-05-24,03:43:10,796 INFO org.apache.hadoop.hbase.nio.RefCnt:   --> #641783987 -> caller: RAMCache#remove, refCnt before release is: 12019-05-24,03:43:10,796 INFO org.apache.hadoop.hbase.nio.RefCnt: ===> End to dump callerSet #6417839872019-05-24,03:43:10,801 INFO org.apache.hadoop.hbase.regionserver.HRegion: Encountered an unknown exception in RegionScannerImpl: org.apache.hbase.thirdparty.io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1        at org.apache.hbase.thirdparty.io.netty.util.AbstractReferenceCounted.retain0([file java]:87)        at org.apache.hbase.thirdparty.io.netty.util.AbstractReferenceCounted.retain([file java]:74)        at org.apache.hadoop.hbase.nio.RefCnt.retain([file java]:73)        at org.apache.hadoop.hbase.nio.SingleByteBuff.retain([file java]:398)        at org.apache.hadoop.hbase.nio.SingleByteBuff.retain([file java]:39)        at org.apache.hadoop.hbase.io.hfile.HFileBlock.retain([file java]:457)        at org.apache.hadoop.hbase.io.hfile.HFileBlock.retain([file java]:115)        at org.apache.hadoop.hbase.io.hfile.bucket.BucketCache$RAMCache.get([file java]:1539)        at org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.getBlock([file java]:483)        at org.apache.hadoop.hbase.io.hfile.CombinedBlockCache.getBlock([file java]:85)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.getCachedBlock([file java]:1306)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.readBlock([file java]:1472)        at org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$CellBasedKeyBlockIndexReader.loadDataBlockWithScanInfo([file java]:339)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$HFileScannerImpl.seekTo([file java]:843)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$HFileScannerImpl.seekTo([file java]:794)        at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seekAtOrAfter([file java]:315)        at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seek([file java]:216)        at org.apache.hadoop.hbase.regionserver.StoreScanner.seekScanners([file java]:394)        at org.apache.hadoop.hbase.regionserver.StoreScanner.<init>([file java]:249)        at org.apache.hadoop.hbase.regionserver.HStore.createScanner([file java]:2063)        at org.apache.hadoop.hbase.regionserver.HStore.getScanner([file java]:2054)        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.initializeScanners([file java]:6493)        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.<init>([file java]:6473)        at org.apache.hadoop.hbase.regionserver.HRegion.instantiateRegionScanner([file java]:2999)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2979)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2961)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2955)        at org.apache.hadoop.hbase.regionserver.RSRpcServices.get([file java]:2621)        at org.apache.hadoop.hbase.regionserver.RSRpcServices.get([file java]:2548)        at org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod([file java]:41998)        at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:374)        at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:132)        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:324)        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:304)2019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.nio.RefCnt: ===> Start to dump callerSet for #3125661132019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.nio.RefCnt:   --> #312566113 -> caller: CellBasedKeyBlockIndexReader#loadDataBlockWithScanInfo, refCnt before release is: 12019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.nio.RefCnt:   --> #312566113 -> caller: CellBasedKeyBlockIndexReader#loadDataBlockWithScanInfo, refCnt before release is: 22019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.nio.RefCnt:   --> #312566113 -> caller: CellBasedKeyBlockIndexReader#loadDataBlockWithScanInfo, refCnt before release is: 32019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.nio.RefCnt: ===> End to dump callerSet #3125661132019-05-24,03:43:10,813 INFO org.apache.hadoop.hbase.regionserver.HRegion: Encountered an unknown exception in RegionScannerImpl: org.apache.hbase.thirdparty.io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1        at org.apache.hbase.thirdparty.io.netty.util.AbstractReferenceCounted.retain0([file java]:87)        at org.apache.hbase.thirdparty.io.netty.util.AbstractReferenceCounted.retain([file java]:74)        at org.apache.hadoop.hbase.nio.RefCnt.retain([file java]:73)        at org.apache.hadoop.hbase.nio.SingleByteBuff.retain([file java]:398)        at org.apache.hadoop.hbase.nio.SingleByteBuff.retain([file java]:39)        at org.apache.hadoop.hbase.io.hfile.HFileBlock.retain([file java]:457)        at org.apache.hadoop.hbase.io.hfile.HFileBlock.retain([file java]:115)        at org.apache.hadoop.hbase.io.hfile.LruBlockCache.lambda$getBlock$0([file java]:512)        at java.util.concurrent.ConcurrentHashMap.computeIfPresent([file java]:1769)        at org.apache.hadoop.hbase.io.hfile.LruBlockCache.getBlock([file java]:507)        at org.apache.hadoop.hbase.io.hfile.CombinedBlockCache.getBlock([file java]:84)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.getCachedBlock([file java]:1306)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl.readBlock([file java]:1472)        at org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$CellBasedKeyBlockIndexReader.loadDataBlockWithScanInfo([file java]:339)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$HFileScannerImpl.seekTo([file java]:843)        at org.apache.hadoop.hbase.io.hfile.HFileReaderImpl$HFileScannerImpl.seekTo([file java]:794)        at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seekAtOrAfter([file java]:315)        at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seek([file java]:216)        at org.apache.hadoop.hbase.regionserver.StoreScanner.seekScanners([file java]:394)        at org.apache.hadoop.hbase.regionserver.StoreScanner.<init>([file java]:249)        at org.apache.hadoop.hbase.regionserver.HStore.createScanner([file java]:2063)        at org.apache.hadoop.hbase.regionserver.HStore.getScanner([file java]:2054)        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.initializeScanners([file java]:6493)        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.<init>([file java]:6473)        at org.apache.hadoop.hbase.regionserver.HRegion.instantiateRegionScanner([file java]:2999)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2979)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2961)        at org.apache.hadoop.hbase.regionserver.HRegion.getScanner([file java]:2955)        at org.apache.hadoop.hbase.regionserver.RSRpcServices.get([file java]:2621)        at org.apache.hadoop.hbase.regionserver.RSRpcServices.get([file java]:2548)        at org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod([file java]:41998)        at org.apache.hadoop.hbase.ipc.RpcServer.call([file java]:374)        at org.apache.hadoop.hbase.ipc.CallRunner.run([file java]:132)        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:324)        at org.apache.hadoop.hbase.ipc.RpcExecutor$Handler.run([file java]:304){code}

** Comment 14 **
[Comment excluded]

** Comment 15 **
Data block reading failure will lead to an extra index-block release, that's to say: there will be a index block in LruBlockCache with refCnt=0, then all the following RPC requesting to this zero refCnt index-block will get a IllegalReferenceCountException, which make the QPS dropped from 25000/s to hunderds per second. Let me explain the detail, see the method HFileBlockIndex#loadDataBlockWithScanInfo: {code}HFileBlock block = null;boolean dataBlock = false;KeyOnlyKeyValue tmpNextIndexKV = new KeyValue.KeyOnlyKeyValue();while (true) {try {    //.....    block =        cachingBlockReader.readBlock(currentOffset, currentOnDiskSize, shouldCache, pread,          isCompaction, true, expectedBlockType, expectedDataBlockEncoding);    //.... Loop until we got a DataBlock;   }} finally {  if (= null) {    // Release the block immediately if it is not the data block    block.release();  }}{code}The first time in while loop, the block is a index block and read successfully from the LRuBlockCache; The second time in while loop,  need to read a data block in CombinedBLockcache, while read failure because of the above RAMCache concurrent issue. then an exception thrown when cachingBlockReader#readBlock. But the block variable still reference to a index block, then we did an extra release in the finally block.

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 41s |  Docker mode activated.  ||| || || ||  Prechecks  ||| +1 |  hbaseanti  |   0m  1s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 3 new or modified test files.  ||| || || ||  HBASE-21879 Compile Tests  ||| +1 |  mvninstall  |   4m 26s |  HBASE-21879 passed  || +1 |  compile  |   0m 51s |  HBASE-21879 passed  || +1 |  checkstyle  |   1m 11s |  HBASE-21879 passed  || +1 |  shadedjars  |   4m 23s |  branch has no errors when building our shaded downstream artifacts.  || 0 |  findbugs  |   2m 47s |  hbase-server in HBASE-21879 has 11 extant Findbugs warnings.  || +1 |  javadoc  |   0m 32s |  HBASE-21879 passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m  2s |  the patch passed  || +1 |  compile  |   0m 50s |  the patch passed  || +1 |  javac  |   0m 50s |  the patch passed  || -1 |  checkstyle  |   1m 12s |  hbase-server: The patch generated 1 new + 130 unchanged - 2 fixed = 131 total (was 132)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 24s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |   8m 25s |  Patch does not cause any errors with Hadoop 2.7.4 or 3.0.0.  || +1 |  findbugs  |   3m  1s |  the patch passed  || +1 |  javadoc  |   0m 32s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 130m 17s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 29s |  The patch does not generate ASF License warnings.  ||  |   | 170m 49s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce base: [link] || JIRA Issue | HBASE-22422 || JIRA Patch URL | [link] || Optional Tests |  dupname  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux a8b269ea44a8 4.4.0-138-generic #164-Ubuntu SMP Tue Oct 2 17:16:02 UTC 2018 x86_64 GNU/Linux || Build tool | maven || Personality | dev-support/hbase-personality.sh || git revision | HBASE-21879 / 111c95c11c || maven | version: Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z) || Default Java | 1.8.0_181 || findbugs | v3.1.11 || checkstyle | [link] ||  Test Results | [link] || Max. process+thread count | 4895 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.9.0 [link] |This message was automatically generated.

** Comment 19 **
[Comment excluded]

** Comment 20 **
[Comment excluded]

** Comment 21 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 22 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25164,https://issues.apache.org/jira/browse/HBASE-25164,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java,Make ModifyTableProcedure support changing meta replica count,NO,And also make it compatible with the old way where we use a Configuration to set the replica number.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24640,https://issues.apache.org/jira/browse/HBASE-24640,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,Purge use of VisibleForTesting,NO,"From the dev-list thread [""[DISCUSS] VisibleForTesting annotation as it pertains to our API compatibility guidelines""|https://lists.apache.org/thread.html/rc7c7c66f134fe135d0a4454a883215e26ff3d20e5a31ecd6a2d1db77%40%3Cdev.hbase.apache.org%3E], when used in classes annotated with interface audience other than IA.Private, the VisibleForTesting annotation is confusing and considered harmful. The consensus is that we do not want to use this annotation as part of the definition of our public APIs, and we need to remove the point of confusion.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
I would say that on a IA.Private class it is fine to add VisibleForTesting annotation? It is not about API, it is just a hint to developers. Of course a javadoc would almost archive the same goal but I do not see the necessarity to disable the usage of a common usage in the java world where it is not so critical.Anyway, I'm fine with the current patch as it is difficult to filter out IA.Public and IA.LimitedPrivate class and only remove the VisibleForTesting on these classes.I will try to see if we could have some ways to disable the usage of this annotation on IA.Public classes as well as IA.LimitedPrivate classes. If this could be done, then I think it is OK for us to use it for IA.Private class then. If not, maybe we could just add a strict rule to disable all the usage of VisibleForTesting, and tell developers the reason is because we want to prevent this usage from our public API but there is no simple way to this check automatically so we decide to disable the usage through the whole code base.Thanks.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Results for branch branch-1
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk7 checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.


** Comment 11 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 12 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
Just a note here, that please use {{com.google.errorprone.annotations.RestrictedApi}} instead when you need to expose some methods for testing purpose in {{IA.Private}} classes. More details please refer to HBASE-25333.
"
HBASE-25207,https://issues.apache.org/jira/browse/HBASE-25207,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/EnableTableProcedure.java,Revisit the implementation and usage of RegionStates.include,NO,"After several round of refactoring and fixing, the method has been used in lots of places and the implementation looks really confusing.

As in the first if condition for testing RegionStateNode and RegionInfo state, we will always return false when split is true, which means we will always filter out split parent, as a split parent, is split = true and also offline = true.

I think the reason why there is no problem is that, only in EnableTableProcedure we call this method with offline = true, and EnableTableProcedure does not need to deal with split parent...

And now since we found a problem in HBASE-25206, where we need to get split parent when deleting a table, I think it is time to revisit this method and make logic less confusing.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25216,https://issues.apache.org/jira/browse/HBASE-25216,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/zksyncer/ClientZKSyncer.java,The client zk syncer should deal with meta replica count change,NO,"The failure of TestSeparateClientZKCluster is because that, we start the zk syncer before we initialize meta region, and after HBASE-25099, we will scan zookeeper to get the meta znodes directly instead of checking the config, so we will get an empty list since there is no meta location on zk yet, thus we will sync nothing.

But changing the order can not solve everything, as after HBASE-25099, we can change the meta replica count without restartinig master, so the zk syncer should have the ability to know the change and start to sync the location for the new replicas.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
TestSeparateClientZKCluster is fine now.Resolve.
"
HBASE-25242,https://issues.apache.org/jira/browse/HBASE-25242,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java,Add Increment/Append support to RowMutations,NO,"Currently, RowMutations supports only Put and Delete. Supporting Increment/Append in RowMutations would be helpful for some use cases.","** Comment 1 **
[Comment excluded]

** Comment 2 **
Not required for 2.4.0. Moving out. Please dont' make a blocker something that is not actually a blocker. This is an nice to have. Even on the meta replica issue where we decided to hold up the RC to wait for it, when Stack tried to make it Blocker priority I made the same objection there too. Only true blockers should be filed at Blocker status. A true release blocker is a critical performance regression, or compatibility break, or compilation break, or something that causes widespread test failures, or a violation of Apache Foundation release policy (like RAT audit failure). 

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
[Comment excluded]

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 11 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-19767,https://issues.apache.org/jira/browse/HBASE-19767,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionProgress.java,Master web UI shows negative values for Remaining KVs,NO,"In the Master Web UI, under the compaction tab, the Remaining KVs sometimes shows negative values.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Here are my findings: # There are no fixed steps to reproduce the problem and it shows up intermittently (if thats not the case please update the Jira with steps for repro). # I verified all the calculations from UI code to backend and it looks okay to me. No int overflows, 'long' is used all along. RS aggregates all compaction progress numbers across all regions. # totalCompactingKVs are not accurate but over estimated. Considering this, I am not quite sure how totalCompactingKVs can be less than currentCompactedKVs. # I tried combinations or operations with different store files through UT to get negative remaining KVs but didn't succeed. # One possibility is error while writing trailer and because of this totalCompactingKVs are stored as 0 (speculation).Based on this I have uploaded the patch to print warning when totalCompactingKVs are less than currentCompactedKVs. This will help with further debugging. When total is less than current, current is returned. This should take care of displaying incorrect percentage and remaining KVs in UI.

** Comment 5 **
[Comment excluded]

** Comment 6 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   2m 22s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 50s |  master passed  || +1 |  compile  |   0m 45s |  master passed  || +1 |  checkstyle  |   1m 10s |  master passed  || +1 |  shadedjars  |   5m 53s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 30s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   4m 28s |  the patch passed  || +1 |  compile  |   0m 43s |  the patch passed  || +1 |  javac  |   0m 43s |  the patch passed  || +1 |  checkstyle  |   1m  9s |  hbase-server: The patch generated 0 new + 178 unchanged - 1 fixed = 178 total (was 179)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m 44s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  23m 28s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 52s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 132m 45s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 33s |  The patch does not generate ASF License warnings.  ||  |   | 178m 33s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.client.TestAsyncTableBatch |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19767 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux d922eab9ea09 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 3f82098d4b || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5102 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4627 (See )
HBASE-19767 Fix for Master web UI shows negative values for Remaining (stack: rev 61b55166bf7fe9edc4e8105f217463ed6e693d17)


** Comment 10 **
| (x) *-1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 30s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   4m 37s |  master passed  || +1 |  compile  |   0m 45s |  master passed  || +1 |  checkstyle  |   1m  4s |  master passed  || +1 |  shadedjars  |   5m 32s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   0m 26s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   3m 57s |  the patch passed  || +1 |  compile  |   0m 39s |  the patch passed  || +1 |  javac  |   0m 39s |  the patch passed  || +1 |  checkstyle  |   0m 58s |  hbase-server: The patch generated 0 new + 178 unchanged - 1 fixed = 178 total (was 179)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   4m  9s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  16m 27s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   0m 27s |  the patch passed  ||| || || ||  Other Tests  ||| -1 |  unit  | 105m 52s |  hbase-server in the patch failed.  || +1 |  asflicense  |   0m 22s |  The patch does not generate ASF License warnings.  ||  |   | 140m 44s |   |\\\\|| Reason || Tests ||| Failed junit tests | hadoop.hbase.regionserver.TestRegionOpen |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19767 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux 6c3fe71f3cd9 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2440f807bf || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 || unit | [link] ||  Test Results | [link] || Max. process+thread count | 5222 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 11 **
INFRA doesn't like your patches  Does the random fail on them.

** Comment 12 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4628 (See )
Revert ""HBASE-19767 Fix for Master web UI shows negative values for (stack: rev 2440f807bf7d077def819c616d4afa97a4e2539e)


** Comment 13 **
| (/) *+1 overall* |\\\\|| Vote || Subsystem || Runtime || Comment ||| 0 |  reexec  |   0m 13s |  Docker mode activated.  ||| || || ||  Prechecks  ||| 0 |  findbugs  |   0m  0s |  Findbugs executables are not available.  || +1 |  hbaseanti  |   0m  0s |  Patch does not have any anti-patterns.  || +1 |  @author  |   0m  0s |  The patch does not contain any @author tags.  || +1 |  test4tests  |   0m  0s |  The patch appears to include 1 new or modified test files.  ||| || || ||  master Compile Tests  ||| +1 |  mvninstall  |   7m 41s |  master passed  || +1 |  compile  |   1m 24s |  master passed  || +1 |  checkstyle  |   1m 53s |  master passed  || +1 |  shadedjars  |   9m  3s |  branch has no errors when building our shaded downstream artifacts.  || +1 |  javadoc  |   1m  5s |  master passed  ||| || || ||  Patch Compile Tests  ||| +1 |  mvninstall  |   7m 45s |  the patch passed  || +1 |  compile  |   1m 36s |  the patch passed  || +1 |  javac  |   1m 36s |  the patch passed  || +1 |  checkstyle  |   2m  1s |  hbase-server: The patch generated 0 new + 178 unchanged - 1 fixed = 178 total (was 179)  || +1 |  whitespace  |   0m  0s |  The patch has no whitespace issues.  || +1 |  shadedjars  |   7m 25s |  patch has no errors when building our shaded downstream artifacts.  || +1 |  hadoopcheck  |  32m 46s |  Patch does not cause any errors with Hadoop 2.6.5 2.7.4 or 3.0.0.  || +1 |  javadoc  |   1m 11s |  the patch passed  ||| || || ||  Other Tests  ||| +1 |  unit  | 111m 26s |  hbase-server in the patch passed.  || +1 |  asflicense  |   0m 17s |  The patch does not generate ASF License warnings.  ||  |   | 176m 51s |   |\\\\|| Subsystem || Report/Notes ||| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hbase:eee3b01 || JIRA Issue | HBASE-19767 || JIRA Patch URL | [link] || Optional Tests |  asflicense  javac  javadoc  unit  findbugs  shadedjars  hadoopcheck  hbaseanti  checkstyle  compile  || uname | Linux dfbc2257c55f 3.13.0-133-generic #182-Ubuntu SMP Tue Sep 19 15:49:21 UTC 2017 x86_64 GNU/Linux || Build tool | maven || Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh || git revision | master / 2440f807bf || maven | version: Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z) || Default Java | 1.8.0_151 ||  Test Results | [link] || Max. process+thread count | 5129 (vs. ulimit of 10000) || modules | C: hbase-server U: hbase-server || Console output | [link] || Powered by | Apache Yetus 0.7.0   [link] |This message was automatically generated.

** Comment 14 **
[Comment excluded]

** Comment 15 **
[Comment excluded]

** Comment 16 **
FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #4632 (See )
HBASE-19767 Fix for Master web UI shows negative values for Remaining (stack: rev 8afa49f5d0e28e96c6e1b6c88c6ac976ac0da2b2)

"
HBASE-25067,https://issues.apache.org/jira/browse/HBASE-25067,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,Edit of log messages around async WAL Replication; checkstyle fixes; and a bugfix,YES,"Edit of  logging around region replicas: shortening and adding context.

Checkstyle fixes in edited files while I was in there.

Bug fix in AssignRegionHandler – was using M_RS_CLOSE_META to open
 a Region instead of a M_RS_OPEN_META.

 

Main reason for this issue is making the substantial adjacent  issue HBASE-25055 smaller in size/easier to review.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-24813,https://issues.apache.org/jira/browse/HBASE-24813,https://github.com/apache/hbase/blob/rel/2.4.0/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader.java,ReplicationSource should clear buffer usage on ReplicationSourceManager upon termination,NO,"Following investigations on the issue described by [~elserj] on HBASE-24779, we found out that once a peer is removed, thus killing peers related *ReplicationSource* instance, it may leave *ReplicationSourceManager.totalBufferUsed* inconsistent. This can happen if *ReplicationSourceWALReader* had put some entries on its queue to be processed by *ReplicationSourceShipper,* but the peer removal killed the shipper before it could process the pending entries. When *ReplicationSourceWALReader* thread add entries to the queue, it increments *ReplicationSourceManager.totalBufferUsed* with the sum of the entries sizes. When those entries are read by *ReplicationSourceShipper,* *ReplicationSourceManager.totalBufferUsed* is then decreased. We should also decrease *ReplicationSourceManager.totalBufferUsed* when *ReplicationSource* is terminated, otherwise those unprocessed entries size would be consuming *ReplicationSourceManager.totalBufferUsed __*indefinitely, unless the RS gets restarted. This may be a problem for deployments with multiple peers, or if new peers are added.**","** Comment 1 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- Something went wrong running this stage, please .
(x) -1 source release artifact
-- See build output for details.
(x) -1 client integration test
-- Something went wrong with this stage, .


** Comment 3 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 4 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 5 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.
(x) -1 client integration test
-- Something went wrong with this stage, .


** Comment 6 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 source release artifact
-- See build output for details.
(x) -1 client integration test
-- Something went wrong with this stage, .


** Comment 7 **
This cause very serious problem since the ReplicationSource thread can not quit and then we flood the our log in UT withInterrupting source thread for peer xxx without cleaning buffer usageAnd then blow up the /tmp spaces, as one single std*deferred file(which is used to buffer stdout and stderr for surefire xml report) can be several tens of GBs.This is a very critical problem that cause the jenkins node unavailable so let me revert it first.Please consider fixing the problem before committing again.Thanks a lot.

** Comment 8 **
[Comment excluded]

** Comment 9 **
[Comment excluded]

** Comment 10 **
[Comment excluded]

** Comment 11 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 12 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 13 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- Something went wrong running this stage, please .
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 14 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- Something went wrong running this stage, please .
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 15 **
[Comment excluded]

** Comment 16 **
[Comment excluded]

** Comment 17 **
[Comment excluded]

** Comment 18 **
[Comment excluded]

** Comment 19 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 20 **
[Comment excluded]

** Comment 21 **
[Comment excluded]

** Comment 22 **
[Comment excluded]

** Comment 23 **
[Comment excluded]

** Comment 24 **
[Comment excluded]

** Comment 25 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 26 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 27 **
Results for branch branch-2.2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)

"
HBASE-25293,https://issues.apache.org/jira/browse/HBASE-25293,https://github.com/apache/hbase/blob/rel/2.4.1/hbase-client/src/main/java/org/apache/hadoop/hbase/client/CatalogReplicaLoadBalanceSimpleSelector.java,Followup jira to address the client handling issue when chaning from meta replica to non-meta-replica at the server side.,NO,"[https://github.com/apache/hbase/pull/2643]

 

{quote}

With my operator hat on, I'd assume that LOAD_BALANCE with 1 replica count works like no read replicas configured (logic wise at-least, even though the code paths are different).
{quote}If the server side does not support meta replica, the client side cannot be configured to support this mode
{quote}
Since clients are usually long running (meaning we may not be able to restart client or they using cached HBase connection) and meta replica count can be altered on the service side on the fly, I'd expect client to work across these changes without any configuration changes. WDYT?

{quote}","** Comment 1 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25509,https://issues.apache.org/jira/browse/HBASE-25509,https://github.com/apache/hbase/blob/rel/2.4.2/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java,ChoreService.cancelChore will not call ScheduledChore.cleanup which may lead to resource leak,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25836,https://issues.apache.org/jira/browse/HBASE-25836,https://github.com/apache/hbase/blob/rel/2.4.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java,RegionStates#getAssignmentsForBalancer should only care about OPEN or OPENING regions,NO,"RegionStates#getAssignmentsForBalancer is used by the HMaster to collect all regions of interest to the balancer for the next chore iteration. We check if a table is in disabled state to exclude regions that will not be of interest (because disabled regions are or will be offline) or are in a state where they shouldn't be mutated (like SPLITTING ). The current checks do not get to the point so are not comprehensive. 

We should filter out all regions that are not in OPEN or OPENING state when building the set of interesting regions for the balancer to consider. Only regions open (or opening) on the cluster are of interest to balancing calculations. Regions in all other states can be expected to not be of interest -- either offline (OFFLINE, or FAILED_*), not subject to balancer decisions now (SPLITTING, SPLITTING_NEW, MERGING, MERGING_NEW), or will be offline shortly (CLOSING) -- until at least the next chore iteration. ","** Comment 1 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25657,https://issues.apache.org/jira/browse/HBASE-25657,https://github.com/apache/hbase/blob/rel/2.4.3/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,Fix spotbugs warnings after upgrading spotbugs to 4.x,YES,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.3
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-25932,https://issues.apache.org/jira/browse/HBASE-25932,https://github.com/apache/hbase/blob/rel/2.4.4/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/WALEntryStream.java,TestWALEntryStream#testCleanClosedWALs test is failing.,YES,"We are seeing the following test failure. TestWALEntryStream#testCleanClosedWALs
 This test was added in HBASE-25924. I don't think the test failure has anything to do with the patch in HBASE-25924.
 Before HBASE-25924, we were *not* monitoring _uncleanlyClosedWAL_ metric. In all the branches, we were not parsing the wal trailer when we close the wal reader inside ReplicationSourceWALReader thread. The root cause was when we add active WAL to ReplicationSourceWALReader, we cache the file size when the wal was being actively written and once the wal was closed and replicated and removed from WALEntryStream, we did reset the ProtobufLogReader object but we didn't update the length of the wal and that was causing EOF errors since it can't find the WALTrailer with the stale wal file length.

The fix applied nicely to branch-1 since we use FSHlog implementation which closes the WAL file sychronously.

But in branch-2 and master, we use _AsyncFSWAL_ implementation and the closing of wal file is done asynchronously (as the name suggests). This is causing the test to fail. Below is the test.
{code:java}
  @Test
  public void testCleanClosedWALs() throws Exception {
    try (WALEntryStream entryStream = new WALEntryStream(
      logQueue, CONF, 0, log, null, logQueue.getMetrics(), fakeWalGroupId)) {
      assertEquals(0, logQueue.getMetrics().getUncleanlyClosedWALs());
      appendToLogAndSync();
      assertNotNull(entryStream.next());
      log.rollWriter();  =======> This does an asynchronous close of wal.
      appendToLogAndSync();
      assertNotNull(entryStream.next());
      assertEquals(0, logQueue.getMetrics().getUncleanlyClosedWALs());
    }
  }
{code}
In the above code, when we roll writer, we don't close the old wal file immediately so the ReplicationReader thread is not able to get the updated wal file size and that is throwing EOF errors.
 If I add a sleep of few milliseconds (1 ms in my local env) between rollWriter and appendToLogAndSync statement then the test passes but this is *not* a proper fix since we are working around the race between ReplicationSourceWALReaderThread and closing of WAL file.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
Hmm, let me take a detailed look tomorrow. Btw if you revert reading wal size in ProtobufLogReader, test case in branch-2+ would fail 100% of time, and by keeping the changes, test becomes flaky, correct?

** Comment 7 **
> Btw if you revert reading wal size in ProtobufLogReader, test case in branch-2+ would fail 100% of time, and by keeping the changes, test becomes flaky, correct?It fails 100% of the time even without ProtobufLogReader related changes.

** Comment 8 **
if (!isFirst) {  // Re-compute the file length.  this.fileLength = fs.getFileStatus(path).getLen();}{code}When I tried locally with above changes in place on master branch, the test has not yet failed for me. Only when I remove above change (i.e make change to yesterday's committed code), it fails, which is expected.Were you able to repro premature EOF with yesterday's committed change on master branch in your local?When I looked at nightlies, I could find test failure 

** Comment 9 **
> When I tried locally with above changes in place on master branch, the test has not yet failed for me. My bad. I should have been more clear earlier. This test fails as a part of whole test class TestWALEntryStream. It succeeds if you run individually.

** Comment 10 **
I have reopened HBASE-25924. We shouldn't have a consistently failing test checked in for long. If it's going to take a while to resolve this, better to revert HBASE-25924 until its ready. If it can be solved in a day or two, that's fine. 

** Comment 11 **
[Comment excluded]

** Comment 12 **
[Comment excluded]

** Comment 13 **
[Comment excluded]

** Comment 14 **
While closing WAL, AbstractProtobufLogWriter#writeWALTrailer uses writeWALTrailerAndMagic which would internally go to AsyncProtobufLogWriter#writeWALTrailerAndMagic and it is an async writer. For a while, got confused as it uses addListener from our FutureUtils on *_output.flush(false)_*, just realized that it is actually blocking on flush's CompletableFuture to retrieve acked length after flushing.private long write(Consumer<CompletableFuture<Long>> action) throws IOException {  CompletableFuture<Long> future = new CompletableFuture<>();  action.accept(future);  try {    return future.get().longValue();  <=== blocking   } catch (InterruptedException e) {    InterruptedIOException ioe = new InterruptedIOException();    ioe.initCause(e);    throw ioe;  } catch (ExecutionException e) {    Throwables.propagateIfPossible(e.getCause(), IOException.class);    throw new RuntimeException(e.getCause());  }}{code}I just wanted to ensure that at least _*writer.close()*_ is synchronous which is executed by closeExecutor.Looks safe to use inflightWALClosures map.However, with the patch, few test case might fail. For instance, testLogrollWhileStreaming() is consistently failing. It passes only when we wait on entryStream.next() to be non-null.Rough patch in local to resolve test failure:diff --git [file java] [file java]index 5507972ab4..c67f5f143d 100644--- [file java]+++ [file java]@@ -266,7 +266,14 @@ public class TestWALEntryStream {       assertEquals(""2"", getRow(entryStream.next()));       assertEquals(2, getQueue().size()); // we should not have dequeued yet since there's still an                                         // entry in first log-      assertEquals(""3"", getRow(entryStream.next())); // if implemented improperly, this would be 4+      Entry entry;+      while (true){+        entry=entryStream.next();+        if(entry!=null){+          break;+        }+      }+      assertEquals(""3"", getRow(entry)); // if implemented improperly, this would be 4                                                      // and 3 would be skipped       assertEquals(""4"", getRow(entryStream.next())); // 4{code}And it seems for test, it should be safe to wait on entryStream.next() to be non-null. Ultimately, same is followed by Replication source shipper. 

** Comment 15 **
[Comment excluded]

** Comment 16 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 17 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 18 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-26093,https://issues.apache.org/jira/browse/HBASE-26093,https://github.com/apache/hbase/blob/rel/2.4.5/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader.java,Replication is stuck due to zero length wal file in oldWALs directory [master/branch-2],NO,Clone of the parent issue for branch-2/master. Resolving the parent as the issue is fixed in 1.7.1 and the jira needs to be in a resolved state for release notes curation.,"** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
-- Something went wrong with this stage, .

"
HBASE-26443,https://issues.apache.org/jira/browse/HBASE-26443,https://github.com/apache/hbase/blob/rel/2.4.9/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Some BaseLoadBalancer log lines should be at DEBUG level,YES,"These are printed per chore run, per host:
{noformat}
[00]2021-11-10 22:07:32,998 INFO  [master/ip-172-31-58-47:8100.Chore.1] balancer.BaseLoadBalancer: server <N> is on rack <R>
{noformat}

One log line per server. On a large cluster, this is a lot of unnecessary logging. The 'server <N> is on rack <R>' log line arguably should be at TRACE. It is not interesting unless you are debugging the balancer.

This 'Start Generate Balance plan for cluster.' log line should be at DEBUG:
{noformat}
[00]2021-11-10 22:07:32,984 INFO  [master/ip-172-31-58-47:8100.Chore.1] balancer.BaseLoadBalancer: Start Generate Balance plan for cluster.
{noformat}

While we are in here, this should also be logged at DEBUG level:
{noformat}
[00]2021-11-10 22:14:33,005 INFO  [master/ip-172-31-58-47:8100.Chore.1] master.HMaster: Balancer is going into sleep until next period in 60000ms
{noformat}
","** Comment 1 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-26718,https://issues.apache.org/jira/browse/HBASE-26718,https://github.com/apache/hbase/blob/rel/2.4.12/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java,HFileArchiver can remove referenced StoreFiles from the archive,NO,"There is a comment in {{HFileArchiver#resolveAndArchiveFile}}:
{code:java}
// if the file already exists in the archive, move that one to a timestamped backup. This is a
// really, really unlikely situtation, where we get the same name for the existing file, but
// is included just for that 1 in trillion chance.
{code}

In reality, we did encounter this frequently enough to cause problems. More details will be included and linked in a separate issue.

But regardless of how we get into this situation, we can consider a different approach to solving it. If we assume store files are immutable, and a store file with the same name and location already exists in the archive, then it can be safer to assume the file was already archived successfully, and react accordingly.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27079,https://issues.apache.org/jira/browse/HBASE-27079,https://github.com/apache/hbase/blob/rel/2.4.13/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader.java,Lower some DEBUG level logs in ReplicationSourceWALReader to TRACE,YES,"See https://issues.apache.org/jira/browse/HBASE-21505?focusedCommentId=17544085&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17544085

{quote}
For ReplicationSourceWALReader#addEntryToBatch, empty Edit entry log was changed from TRACE/DEBUG as part of this Jira to improve the visibility apparently:
...
One of the clusters where I am running heavy workload, I keep seeing these logs with very high frequency
{quote}","** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27225,https://issues.apache.org/jira/browse/HBASE-27225,https://github.com/apache/hbase/blob/rel/2.4.14/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator.java,Add BucketAllocator bucket size statistic logging,YES,"BucketCache places blocks into configurably sized buckets based on the block size. The default sizes aim to provide broad coverage for common block sizes, but should probably be tuned for certain use-cases. However, we provide no way for operators to gain insight into the distribution of buckets.

There already exists a BucketAllocator#logStatistics method, but it is not called anywhere. I suggest that we hook that up in BucketCache#logStats (which is called periodically by a stats thread). We can go from there.

Looking at the IndexStatistics used in that method, it looks like a good start. One thing I'd like to add is a count of freeBuckets and completelyFreeBuckets per index. I think this will be useful for indicating how much more wiggle room we have for redistributing buckets among the various block sizes.","** Comment 1 **
This new output is very helpful for getting a glimpse into the block size distribution for a cluster, as well as how many buckets are left for redistributing to new buckets.One interesting addition is the {{waistedBytes}} – I realized that if you choose block sizes that don't nicely divide the bucketCapacity you end up with left over space in each bucket which can add up to a lot in aggregate. One can use this information to try to choose bucket sizes which better divide into the bucketCapacity to reduce waste.

** Comment 2 **
{quote}One interesting addition is the waistedBytes – I realized that if you choose block sizes that don't nicely divide the bucketCapacity you end up with left over space in each bucket which can add up to a lot in aggregate. One can use this information to try to choose bucket sizes which better divide into the bucketCapacity to reduce waste.{quote}I think this may be worsened by encoding/compression, when then block sizes can vary a lot according to the compression efficiency. This could then be better controlled by the ""hbase.writer.unified.encoded.blocksize.ratio"" property originally proposed on HBASE-17757.

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 8 **
[Comment excluded]
"
HBASE-27220,https://issues.apache.org/jira/browse/HBASE-27220,https://github.com/apache/hbase/blob/rel/2.4.14/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java,Apply the spotless format change in HBASE-27208 to our code base,NO,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27391,https://issues.apache.org/jira/browse/HBASE-27391,https://github.com/apache/hbase/blob/rel/2.4.15/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionUtils.java,Downgrade ERROR log to DEBUG in ConnectionUtils.updateStats,YES,"This method logs with ERROR level if the MultiResponse does not include RegionLoadStats. These stats may be disabled on the server side, and really this doesn't seem like an error state. We should downgrade to DEBUG since it's an optional feature that is not enabled by default.","** Comment 1 **
This created a massive amount of log spam in our environment, when running the default state of having client pushback disabled. The spam was enough to show up as a non-trivial amount of time on flamegraphs. This PR eliminates the log spam and time spent.

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
(x) -1 jdk8 hadoop2 checks
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27684,https://issues.apache.org/jira/browse/HBASE-27684,https://github.com/apache/hbase/blob/rel/2.4.17/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java,Client metrics for user region lock related behaviors.,NO,,"** Comment 1 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27668,https://issues.apache.org/jira/browse/HBASE-27668,https://github.com/apache/hbase/blob/rel/2.4.17/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java,PB's parseDelimitedFrom can successfully return when there are not enough bytes,NO,"Found this when writing some UTs for parsing partial header and trailer, WALHeader.parseDelimitedFrom can return successfully when there are only two bytes in the stream(only the length, actually).

So I know why in the past we have a followingKvCount == 0 check in ProtobufLogReader, as we just want to prevent the partial PB message.

This is a very critial problem, for me I think we should provide our own implementation of parseDelimitedFrom for some critical usages, for example, when reading WAL entries. If there are not enough data, we just throw exception out instead of returning a partial PB message.","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27203,https://issues.apache.org/jira/browse/HBASE-27203,https://github.com/apache/hbase/blob/rel/2.5.0/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionUtils.java,Clean up error-prone findings in hbase-client,YES,,"** Comment 1 **
[Comment excluded]

** Comment 2 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(x) -1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-26899,https://issues.apache.org/jira/browse/HBASE-26899,https://github.com/apache/hbase/blob/rel/2.5.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java,Run spotless:apply,NO,"Given we will ask and encourage contributors to run spotless:apply before completing contributions, we should apply spotless:apply to all live branches, to establish a clean baseline. In particular branch-2.4 has issues. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
[Comment excluded]

** Comment 5 **
[Comment excluded]

** Comment 6 **
I found an interesting gradle spotless config:[link]It uses the regex replace to remove the useless javadoc stuff.    custom 'Remove unhelpful javadoc stubs', {      // e.g., remove the following lines:      // ""* @param paramName""      // ""* @throws ExceptionType""      // ""* @return returnType""'      // Multiline to allow anchors on newlines      it.replaceAll(/(?m)^ *\* *@(?:param|throws|return) *\w* *\n/, '')    }    custom 'Remove any empty Javadocs and block comments', {      // Matches any /**  */ or /*  */ that contains:      // (a) only whitespace      // (b) trivial information, such as ""@param paramName"" or @throws ExceptionType      //     without any additional information.  This information is implicit in the signature.      it.replaceAll(/\/\*+\s*\n(\s*\*\s*\n)*\s*\*+\/\s*\n/, '')    }We could try to see if it could work under maven.

** Comment 7 **
[Comment excluded]

** Comment 8 **
[Comment excluded]

** Comment 9 **
Results for branch branch-2.4
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 10 **
Results for branch branch-2
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(x) -1 client integration test
--Failed when running client tests on top of Hadoop 2. . (note that this means we didn't run on Hadoop 3)


** Comment 11 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 12 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27001,https://issues.apache.org/jira/browse/HBASE-27001,https://github.com/apache/hbase/blob/rel/2.5.0/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java,The deleted variable cannot be printed out,NO,"In the deleteAction method of CleanerChore class, the delete variable cannot be printed out
{code:java}
LOG.trace(""Finish deleting {} under {}, deleted="", type, dir, deleted); {code}","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
[Comment excluded]

** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 6 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 7 **
[Comment excluded]

** Comment 8 **
Results for branch branch-2.4
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27588,https://issues.apache.org/jira/browse/HBASE-27588,https://github.com/apache/hbase/blob/rel/2.5.3/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory.java,"""Instantiating StoreFileTracker impl"" INFO level logging is too chatty",YES,"<datetime> INFO  [<threadname>] storefiletracker.StoreFileTrackerFactory: instantiating StoreFileTracker impl  .... 

This should be logged at DEBUG level as it is debug information. It is frequently printed in the logs and because it's the same impl every time (although in theory could be varied in table schema) there is no value for operators, it just consumes logging resources.","** Comment 1 **
Results for branch master
	: (x) *-1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(x) -1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 2 **
Results for branch branch-2.5
	: (x) *-1 overall*
----
details (if available):
(x) -1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 3 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
HBASE-27250,https://issues.apache.org/jira/browse/HBASE-27250,https://github.com/apache/hbase/blob/rel/2.5.4/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java,MasterRpcService#setRegionStateInMeta does not support replica region encodedNames or region names,NO,"MasterRpcServices#setRegionStateInMeta does not support replica region names, it assumes the primary region only. This makes HBCK2's setRegionState for replica region fails. ","** Comment 1 **
[Comment excluded]

** Comment 2 **
[Comment excluded]

** Comment 3 **
Results for branch master
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 4 **
Results for branch branch-2
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test


** Comment 5 **
Results for branch branch-2.5
	: (/) *+1 overall*
----
details (if available):
(/) +1 general checks
-- For more information 
(/) +1 jdk8 hadoop2 checks
-- For more information 
(/) +1 jdk8 hadoop3 checks
-- For more information 
(/) +1 jdk11 hadoop3 checks
-- For more information 
(/) +1 source release artifact
-- See build output for details.
(/) +1 client integration test

"
